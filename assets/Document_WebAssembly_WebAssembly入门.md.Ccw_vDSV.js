import{_ as n,c as a,o as l,ah as p}from"./chunks/framework.DqD713j2.js";const e="/FrontEndLearnNotes/assets/640.CAWe8lOl.webp",u=JSON.parse('{"title":"WebAssembly 入门","description":"","frontmatter":{},"headers":[],"relativePath":"Document/WebAssembly/WebAssembly入门.md","filePath":"Document/WebAssembly/WebAssembly入门.md","lastUpdated":1750954157000}'),o={name:"Document/WebAssembly/WebAssembly入门.md"};function t(r,s,c,B,y,i){return l(),a("div",null,s[0]||(s[0]=[p(`<h1 id="webassembly-入门" tabindex="-1">WebAssembly 入门 <a class="header-anchor" href="#webassembly-入门" aria-label="Permalink to &quot;WebAssembly 入门&quot;">​</a></h1><p><a href="https://juejin.cn/post/7219613068275449893" target="_blank" rel="noreferrer">【WASM 入门与实战】使用 Rust 封装一个 WASM NPM 包 - 掘金 (juejin.cn)</a></p><p><a href="https://juejin.cn/post/7212074532341104699" target="_blank" rel="noreferrer">浏览器第四种语言-WebAssembly - 掘金 (juejin.cn)</a></p><p><a href="https://juejin.cn/post/7242614671001288759" target="_blank" rel="noreferrer">WebAssembly：开启新时代的跨平台 - 掘金 (juejin.cn)</a></p><p><a href="https://juejin.cn/column/7210666370487681082" target="_blank" rel="noreferrer">走进 WebAssembly 的世界 - 字节前端的专栏 - 掘金 (juejin.cn)</a></p><p><a href="https://juejin.cn/post/7229899593260154935" target="_blank" rel="noreferrer">WebAssembly：未来前端开发的必备技能 - 掘金 (juejin.cn)</a></p><p><a href="https://juejin.cn/post/7103155873740455944" target="_blank" rel="noreferrer">使用 WebAssembly 来增强你的前端应用 - 掘金 (juejin.cn)</a></p><p><a href="https://juejin.cn/post/6854573219454844935" target="_blank" rel="noreferrer">前端视频帧提取 ffmpeg + Webassembly - 掘金 (juejin.cn)</a></p><h2 id="如何在应用里使用-webassembly" tabindex="-1">如何在应用里使用 WebAssembly？ <a class="header-anchor" href="#如何在应用里使用-webassembly" aria-label="Permalink to &quot;如何在应用里使用 WebAssembly？&quot;">​</a></h2><p>WebAssembly 给 Web 平台添加了两块内容：一种二进制格式代码，以及一系列可用于加载和执行二进制代码的 API。</p><p>WebAssembly 目前处于一个萌芽的节点，之后肯定会涌现出很多工具，而目前有四个主要的入口：</p><ul><li>使用 EMScripten 来移植 C/C++ 应用</li><li>在汇编层面直接编写和生成 WebAssembly 代码</li><li>编写 Rust 应用，然后将 WebAssembly 作为它的输出</li><li>使用 AssemblyScript，它是一门类似 TypeScript 的语言，能够编译成 WebAssembly 二进制</li></ul><p><a href="https://juejin.cn/post/7013286944553566215#heading-5" target="_blank" rel="noreferrer"> WebAssembly，移植 C/C++ 应用（后面的教程都可以）</a></p><h2 id="rust-和-webassembly-书籍" tabindex="-1">Rust 和 WebAssembly 书籍 <a class="header-anchor" href="#rust-和-webassembly-书籍" aria-label="Permalink to &quot;Rust 和 WebAssembly 书籍&quot;">​</a></h2><p><a href="https://llever.com/rustwasm-book/introduction.zh.html#rust--%E5%92%8C-webassembly-" target="_blank" rel="noreferrer">介绍 - Rust 和 WebAssembly (llever.com)</a></p><p><a href="https://juejin.cn/post/7340307383505862696" target="_blank" rel="noreferrer">Rust WebAssembly 实现视频实时滤镜效果 - 掘金 (juejin.cn)</a></p><p><a href="https://juejin.cn/post/7321410906426998810" target="_blank" rel="noreferrer">解锁前端新潜能：如何使用 Rust 锈化前端工具链 - 掘金 (juejin.cn)</a></p><p><a href="https://mp.weixin.qq.com/s/6CI44wULfQbj-4ez4yPtiQ" target="_blank" rel="noreferrer">WASM-BINDGEN 搭起 Rust 与 JavaScript 的桥梁 (qq.com)</a></p><p><a href="https://juejin.cn/post/7322288075850039359" target="_blank" rel="noreferrer">前端Rust生态的背后，napi-rs如何让Rust与JavaScript可以相互调用 - 掘金 (juejin.cn)</a></p><p><strong>MDN 教程文档(包括 C/C++和 Rust 语言编写 WebAssembly 的教程)</strong>：<a href="https://developer.mozilla.org/zh-CN/docs/WebAssembly" target="_blank" rel="noreferrer">WebAssembly | MDN (mozilla.org)</a></p><p><a href="https://github.com/i5ting/learn-rust-for-fe" target="_blank" rel="noreferrer">i5ting/learn-rust-for-fe: Rust 是未来前端基础设施 (github.com)</a></p><p><a href="https://mp.weixin.qq.com/s/QsiYZxCoweelaeEb6vFaog" target="_blank" rel="noreferrer">揭秘 Rust Sycamore 如何革新前端开发，打造极速响应式 SPA【耗血整理】 (qq.com)</a></p><p><a href="https://juejin.cn/post/7244436632439013413" target="_blank" rel="noreferrer">使用Rust和WebAssembly整花活儿(一)——快速开始 - 掘金 (juejin.cn)</a></p><p><a href="https://juejin.cn/post/7245610463899025468" target="_blank" rel="noreferrer">使用Rust和WebAssembly整花活儿(二)——DOM和类型转换 - 掘金 (juejin.cn)</a></p><p><a href="https://juejin.cn/post/7248951438743420983" target="_blank" rel="noreferrer">使用Rust和WebAssembly整花活儿(三)——Rust与JS交互 - 掘金 (juejin.cn)</a></p><p><a href="https://juejin.cn/post/7294476268505448475" target="_blank" rel="noreferrer">使用Rust和WebAssembly整花活儿(四)——更小更小的wasm文件体积 - 掘金 (juejin.cn)</a></p><h2 id="webassembly-官网" tabindex="-1">WebAssembly 官网 <a class="header-anchor" href="#webassembly-官网" aria-label="Permalink to &quot;WebAssembly 官网&quot;">​</a></h2><p>网址：<a href="https://webassembly.org/" target="_blank" rel="noreferrer">WebAssembly</a></p><p>资源社区：<a href="https://webassembly.org/community/resources/" target="_blank" rel="noreferrer">资源 - WebAssembly</a></p><p>中文网：<a href="https://wasmdev.cn/" target="_blank" rel="noreferrer">WebAssembly中文网 | WebAssembly中文网 (wasmdev.cn)</a></p><h2 id="视频学习" tabindex="-1">视频学习 <a class="header-anchor" href="#视频学习" aria-label="Permalink to &quot;视频学习&quot;">​</a></h2><p><a href="https://zerotomastery.io/courses/learn-webassembly/" target="_blank" rel="noreferrer">学习 WebAssembly：实用指南 |从零到精通 (zerotomastery.io)</a></p><h2 id="探索进阶主题" tabindex="-1">探索进阶主题 <a class="header-anchor" href="#探索进阶主题" aria-label="Permalink to &quot;探索进阶主题&quot;">​</a></h2><p>当掌握了 WebAssembly 的基础知识后，可以进一步探索一些进阶主题。例如，如何在 JavaScript 中使用 WebAssembly、如何优化 WebAssembly 代码的性能等。</p><h2 id="支持webassembly的语言" tabindex="-1">支持WebAssembly的语言 <a class="header-anchor" href="#支持webassembly的语言" aria-label="Permalink to &quot;支持WebAssembly的语言&quot;">​</a></h2><p><a href="https://wasmdev.cn/guide/introduction/lang-wasm.html#wasm%E6%94%AF%E6%8C%81%E7%9A%84%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80" target="_blank" rel="noreferrer">Webassembly支持哪些语言？ | WebAssembly中文网 (wasmdev.cn)</a></p><p>WebAssembly作为一项新兴的技术，已经发展至2.0版本。它具有跨平台、高效、安全的优点，可以在各种计算机架构上运行，并且具有接近原生代码的性能。目前，许多语言已经支持了WebAssembly，让开发者能够更方便地将不同语言编写的代码部署到Web端。以下是一些常用的WebAssembly开发语言：</p><ol><li><strong>C/C++</strong>: C/C++是WebAssembly的先行者，拥有庞大的用户群体和完备的工具链。LLVM已经将WebAssembly添加为受支持的后端，同时WebAssembly System Interface标准（WASI）使得WebAssembly的能力从Web端拓展到了非Web端，服务端成为了WebAssembly下一个热门的发展方向。</li><li><strong>Rust</strong>: Rust是WebAssembly的目标语言之一，通过LLVM生成WebAssembly产物。Rust兼容C/C++的内存模型，无GC，因此生成的WebAssembly产物体积小巧性能良好。Rust同样支持WASI标准，非Web端应用也成了Rust WebAssembly生态发展的热门方向。</li><li><strong>Go</strong>: Go从1.11版本开始正式支持WebAssembly，但存在一些局限性，如不支持WASI和体积膨胀。尽管如此，Go作为服务端领域的主流语言，仍在WebAssembly社区中有一定影响力。</li><li><strong>AssemblyScript</strong>: AssemblyScript是专为WebAssembly服务的语言，使用类似TypeScript的语法。它方便前端开发者编写WebAssembly项目，但生成的WebAssembly产物相对臃肿。</li><li><strong>JavaScript</strong>: JavaScript作为前端领域必不可少的语言，与WebAssembly可以无缝交互。通过WebAssembly的JavaScript API，你可以在同一个应用中利用WebAssembly的性能和能力以及JavaScript的表达力和灵活性。</li></ol><p>除了上述语言，还有其他一些主流语言以各种方式支持了WebAssembly，例如Lua、C#、Kotlin等。WebAssembly的发展潜力巨大，未来还有许多值得期待的方向，如多线程支持、AI模型的推理和训练，以及在区块链领域的智能合约编写和执行</p><h1 id="运行时执行" tabindex="-1">运行时执行 <a class="header-anchor" href="#运行时执行" aria-label="Permalink to &quot;运行时执行&quot;">​</a></h1><p>就像编译 wasm 的方式有很多种一样，执行它的方法也有很多种。</p><h2 id="在浏览器中使用webassembly" tabindex="-1">在浏览器中使用WebAssembly <a class="header-anchor" href="#在浏览器中使用webassembly" aria-label="Permalink to &quot;在浏览器中使用WebAssembly&quot;">​</a></h2><p>要在浏览器中使用WebAssembly API，首先加载WebAssembly模块：</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// fetch .wasm file</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> response</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> fetch</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;/path/to/some.wasm&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// instantiate module with streaming</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> module</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> WebAssembly</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">instantiateStreaming</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">response</span><span style="color:#ABB2BF;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>然后，调用导出的<code>add</code>的函数：</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E06C75;"> result </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">instance</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>还可以向模块传递其他方法，例如可以共享 <code>console.log</code> 方法：</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// fetch .wasm file</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> response</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> fetch</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;/path/to/some.wasm&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// instantiate module and pass an api</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> module</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> WebAssembly</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">instantiateStreaming</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">response</span><span style="color:#ABB2BF;">, {</span></span>
<span class="line"><span style="color:#E06C75;">  imports</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // share console.log</span></span>
<span class="line"><span style="color:#E06C75;">    log</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">log</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="在服务器上使用-webassembly" tabindex="-1">在服务器上使用 WebAssembly <a class="header-anchor" href="#在服务器上使用-webassembly" aria-label="Permalink to &quot;在服务器上使用 WebAssembly&quot;">​</a></h2><p>WebAssembly也可以在服务器上执行，使用的方法与在浏览器中的几乎相同。</p><p>唯一不同的是，不使用URL从服务器获取.wasm文件，而是使用 <code>fs.readFile()</code> 从磁盘上读取它：</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> fs</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &#39;fs&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// read .wasm file</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> bytes</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> await</span><span style="color:#E5C07B;"> fs</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">promises</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">readFile</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;/path/to/some.wasm&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// instantiate the module</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> module</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> WebAssembly</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">instantiate</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">bytes</span><span style="color:#ABB2BF;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>然后，调用 <code>add</code> 函数：</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E06C75;"> result </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">instance</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>还可以从许多其他编程语言中执行此操作，例如 <strong>rust[5] *<em>、*</em> ruby[6]</strong>、 <strong>python[7]</strong> 或来自 <strong>CLI[8]</strong> 。</p><h2 id="在云端使用-webassembly" tabindex="-1">在云端使用 WebAssembly <a class="header-anchor" href="#在云端使用-webassembly" aria-label="Permalink to &quot;在云端使用 WebAssembly&quot;">​</a></h2><p>WebAssembly在云端也有一些重要的应用场景。</p><p>与JavaScript云函数相比，它具备一些明显的优势：</p><ol><li>无冷启动：主机只需加载一个.wasm文件，而不是整个应用程序；典型的JavaScript应用包含许多需要加载的文件，这会耗费较长的时间。</li><li>更快的部署：需要上传的仅仅是一个简单的二进制文件。</li><li>多语言托管：所有可以编译为WebAssembly的编程语言都可以在云中部署，无需特殊的运行时环境。</li><li>快照：执行状态可以进行快照；例如，一个在初始化期间执行大量计算的应用程序可以创建快照。随后的请求可以从快照状态开始，从而避免浪费大量的启动时间。</li></ol><h1 id="_120-行代码实现纯-web-剪辑视频" tabindex="-1">120 行代码实现纯 Web 剪辑视频 <a class="header-anchor" href="#_120-行代码实现纯-web-剪辑视频" aria-label="Permalink to &quot;120 行代码实现纯 Web 剪辑视频&quot;">​</a></h1><h3 id="什么是-webasembly" tabindex="-1">什么是 webasembly? <a class="header-anchor" href="#什么是-webasembly" aria-label="Permalink to &quot;什么是 webasembly?&quot;">​</a></h3><p>WebAssembly（wasm）就是一个可移植、体积小、加载快并且兼容 Web 的全新格式。可以将 C,C++等语言编写的模块通过编译器来创建 wasm 格式的文件，此模块通过二进制的方式发给浏览器，然后 js 可以通过 wasm 调用其中的方法功能。</p><h3 id="webassembly-的优势" tabindex="-1">WebAssembly 的优势 <a class="header-anchor" href="#webassembly-的优势" aria-label="Permalink to &quot;WebAssembly 的优势&quot;">​</a></h3><p>网上对于这个相关的介绍应该有很多了，WebAssembly 优势性能好，运行速度远高于 Js,对于需要高计算量、对性能要求高的应用场景如图像/视频解码、图像处理、3D/WebVR/AR 等，优势非常明显，们可以将现有的用 C、C++等语言编写的库直接编译成 WebAssembly 运行到浏览器上，并且可以作为库被 JavaScript 引用。那就意味着我们可以将很多后端的工作转移到前端，减轻服务器的压力。.........</p><h3 id="webassembly-最简单的实践调用" tabindex="-1">WebAssembly 最简单的实践调用 <a class="header-anchor" href="#webassembly-最简单的实践调用" aria-label="Permalink to &quot;WebAssembly 最简单的实践调用&quot;">​</a></h3><p>我们编写一个最简单的 c 文件</p><div class="language-c line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">int</span><span style="color:#61AFEF;"> add</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">int</span><span style="color:#E06C75;font-style:italic;"> a</span><span style="color:#ABB2BF;">,</span><span style="color:#C678DD;">int</span><span style="color:#E06C75;font-style:italic;"> b</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">  return</span><span style="color:#ABB2BF;"> a </span><span style="color:#C678DD;">+</span><span style="color:#ABB2BF;"> b;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>然后安装对于的 Emscripten 编译器 Emscripten 安装指南</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">emcc</span><span style="color:#98C379;"> test.c</span><span style="color:#D19A66;"> -Os</span><span style="color:#D19A66;"> -s</span><span style="color:#98C379;"> WASM=</span><span style="color:#D19A66;">1</span><span style="color:#D19A66;"> -s</span><span style="color:#98C379;"> SIDE_MODULE=</span><span style="color:#D19A66;">1</span><span style="color:#D19A66;"> -o</span><span style="color:#98C379;"> test.wasm</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>然后我们在 html 中引入使用即可</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">fetch</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;./test.wasm&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">	.</span><span style="color:#61AFEF;">then</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">response</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#E5C07B;"> response</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">arrayBuffer</span><span style="color:#ABB2BF;">())</span></span>
<span class="line"><span style="color:#ABB2BF;">	.</span><span style="color:#61AFEF;">then</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">bytes</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#E5C07B;"> WebAssembly</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">instantiate</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">bytes</span><span style="color:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#ABB2BF;">	.</span><span style="color:#61AFEF;">then</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">results</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">		const</span><span style="color:#E5C07B;"> add</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> results</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">instance</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">add</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">		console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">11</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">33</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#ABB2BF;">	});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>这时我们即可在控制台看到对应的打印日志,成功调用我们编译的代码啦</p><h3 id="正式开动" tabindex="-1">正式开动 <a class="header-anchor" href="#正式开动" aria-label="Permalink to &quot;正式开动&quot;">​</a></h3><p>既然我们已经知道如何能快速的调用到一些已经成熟的 C,C++的类库，那我们离在线剪辑视频预期目标更进一步了。</p><h3 id="最终-demo-演示" tabindex="-1">最终 demo 演示 <a class="header-anchor" href="#最终-demo-演示" aria-label="Permalink to &quot;最终 demo 演示&quot;">​</a></h3><p>由于录制操作的电脑 cpu 不太行，所以可能耗时比较久，但整体的效果还是能看的到滴</p><p>demo 仓库地址：<a href="https://github.com/Dseekers/clip-video-by-webassembly" target="_blank" rel="noreferrer">https://github.com/Dseekers/clip-video-by-webassembly</a></p><p><img src="`+e+`" alt="图片"></p><h3 id="ffmpeg" tabindex="-1">FFmpeg <a class="header-anchor" href="#ffmpeg" aria-label="Permalink to &quot;FFmpeg&quot;">​</a></h3><p>在这个之前你得稍微的了解下啥是 FFmpeg? 以下根据维基百科的目录解释</p><blockquote><p>FFmpeg 是一个开放源代码的自由软件，可以运行音频和视频多种格式的录影、转换、流功能[1]，包含了 libavcodec——这是一个用于多个项目中音频和视频的解码器库，以及 libavformat——一个音频与视频格式转换库。</p></blockquote><p>简单的说这个就是由 C 语言编写的视频处理软件，它的用法也是相当滴简单</p><p>我主要将这次需要用到的命令给调了出来，如果你还可能用到别的命令，可以根据他的官方文档查看 ，还可以了解下阮一峰大佬的文章 (<a href="https://www.ruanyifeng.com/blog/2020/01/ffmpeg.html" target="_blank" rel="noreferrer">https://www.ruanyifeng.com/blog/2020/01/ffmpeg.html</a>)</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">ffmpeg</span><span style="color:#D19A66;"> -ss</span><span style="color:#ABB2BF;"> [start] -i [input] -to [end] -c copy [output]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>start 为开始时间 end 为结束时间 input 为需要操作的视频源文件 output 为输出文件的位置名称</p><p>这一行代码就是我们需要用到的剪辑视频的命令了</p><h3 id="获取相关的-ffmpeg-的-wasm" tabindex="-1">获取相关的 FFmpeg 的 wasm <a class="header-anchor" href="#获取相关的-ffmpeg-的-wasm" aria-label="Permalink to &quot;获取相关的 FFmpeg 的 wasm&quot;">​</a></h3><p>由于通过 Emscripten 编译 ffmpeg 成 wasm 存在较多的环境问题，所以我们这次直接使用在线已经编译好的 CDN 资源</p><p>这边就直接使用了这个比较成熟的库 <a href="https://github.com/ffmpegwasm/ffmpeg.wasm" target="_blank" rel="noreferrer">https://github.com/ffmpegwasm/ffmpeg.wasm</a></p><p>为了本地调试方便，我把其相关的资源都下了下来 一共 4 个资源文件</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">ffmpeg</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">min</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">js</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">ffmpeg</span><span style="color:#56B6C2;"> -</span><span style="color:#E5C07B;"> core</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">js</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">ffmpeg</span><span style="color:#56B6C2;"> -</span><span style="color:#E5C07B;"> core</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">wasm</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">ffmpeg</span><span style="color:#56B6C2;"> -</span><span style="color:#E5C07B;"> core</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">worker</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">js</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>我们使用的时候只需引入第一个文件即可，其它文件会在调用时通过 fetch 方式去拉取资源</p><h3 id="最小的功能实现" tabindex="-1">最小的功能实现 <a class="header-anchor" href="#最小的功能实现" aria-label="Permalink to &quot;最小的功能实现&quot;">​</a></h3><p>前置功能实现: 在我们本地需要实现一个 node 服务，因为使用 ffmpeg 这个模块会出现如果没在服务器端设置响应头， 会报错 <code>SharedArrayBuffer is not defined</code>，这个是因为系统的安全漏洞，浏览器默认禁用了该 api，若要启用则需要在 header 头上设置</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">Cross-Origin-Opener-Policy:</span><span style="color:#98C379;"> same-origin</span></span>
<span class="line"><span style="color:#61AFEF;">Cross-Origin-Embedder-Policy:</span><span style="color:#98C379;"> require-corp</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>我们启动一个简易的 node 服务</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> Koa</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;koa&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> path</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;path&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> fs</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;fs&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> router</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;koa-router&quot;</span><span style="color:#ABB2BF;">)();</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> static</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;koa-static&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> staticPath</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;./static&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> app</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Koa</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">use</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">static</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">join</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">__dirname</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">staticPath</span><span style="color:#ABB2BF;">)));</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// log request URL:</span></span>
<span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">use</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">async</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">ctx</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">next</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">\`Process </span><span style="color:#C678DD;">\${</span><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">request</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">method</span><span style="color:#C678DD;">}</span><span style="color:#C678DD;"> \${</span><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">request</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">url</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">...\`</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">	ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">set</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;Cross-Origin-Opener-Policy&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;same-origin&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">	ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">set</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;Cross-Origin-Embedder-Policy&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;require-corp&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">	await</span><span style="color:#61AFEF;"> next</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">router</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">get</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;/&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">async</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">ctx</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">next</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">	ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">response</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">body</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;&lt;h1&gt;Index&lt;/h1&gt;&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"><span style="color:#E5C07B;">router</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">get</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;/:filename&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">async</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">ctx</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">next</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">request</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">url</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">	const</span><span style="color:#E5C07B;"> filePath</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">join</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">__dirname</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">request</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">url</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">filePath</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">	const</span><span style="color:#E5C07B;"> htmlContent</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> fs</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">readFileSync</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">filePath</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">	ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">type</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;html&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">	ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">body</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> htmlContent</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">use</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">router</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">routes</span><span style="color:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">listen</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">3000</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;app started at port 3000...&quot;</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><p>我们做一个最小化的 demo 来实现下这个剪辑功能,剪辑视频的前一秒钟 新建一个 demo.html 文件，引入相关资源</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">script</span><span style="color:#D19A66;"> src</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;https://cdn.jsdelivr.net/npm/jquery@3.6.0/dist/jquery.min.js&quot;</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">script</span><span style="color:#D19A66;"> src</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;./assets/ffmpeg.min.js&quot;</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">div</span><span style="color:#D19A66;"> class</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;container&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">div</span><span style="color:#D19A66;"> class</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;operate&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		选择原始视频文件:</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">input</span><span style="color:#D19A66;"> type</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;file&quot;</span><span style="color:#D19A66;"> id</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;select_origin_file&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">button</span><span style="color:#D19A66;"> id</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;start_clip&quot;</span><span style="color:#ABB2BF;">&gt;开始剪辑视频&lt;/</span><span style="color:#E06C75;">button</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">div</span><span style="color:#D19A66;"> class</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;video-container&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">div</span><span style="color:#D19A66;"> class</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;label&quot;</span><span style="color:#ABB2BF;">&gt;原视频&lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">video</span><span style="color:#D19A66;"> class</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;my-video&quot;</span><span style="color:#D19A66;"> id</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;origin-video&quot;</span><span style="color:#D19A66;"> controls</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">video</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">div</span><span style="color:#D19A66;"> class</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;video-container&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">div</span><span style="color:#D19A66;"> class</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;label&quot;</span><span style="color:#ABB2BF;">&gt;处理后的视频&lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">video</span><span style="color:#D19A66;"> class</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;my-video&quot;</span><span style="color:#D19A66;"> id</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;handle-video&quot;</span><span style="color:#D19A66;"> controls</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">video</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">let originFile $(document).ready(function () {</span></span>
<span class="line"><span style="color:#ABB2BF;">$(&#39;#select_origin_file&#39;).on(&#39;change&#39;, (e) =&gt; { const file = e.target.files[0]</span></span>
<span class="line"><span style="color:#ABB2BF;">originFile = file const url = window.webkitURL.createObjectURL(file)</span></span>
<span class="line"><span style="color:#ABB2BF;">$(&#39;#origin-video&#39;).attr(&#39;src&#39;, url) }) $(&#39;#start_clip&#39;).on(&#39;click&#39;, async</span></span>
<span class="line"><span style="color:#ABB2BF;">function () { const { fetchFile, createFFmpeg } = FFmpeg; ffmpeg =</span></span>
<span class="line"><span style="color:#ABB2BF;">createFFmpeg({ log: true, corePath: &#39;./assets/ffmpeg-core.js&#39;, }); const file =</span></span>
<span class="line"><span style="color:#ABB2BF;">originFile const { name } = file; if (!ffmpeg.isLoaded()) { await ffmpeg.load();</span></span>
<span class="line"><span style="color:#ABB2BF;">} ffmpeg.FS(&#39;writeFile&#39;, name, await fetchFile(file)); await ffmpeg.run(&#39;-i&#39;,</span></span>
<span class="line"><span style="color:#ABB2BF;">name, &#39;-ss&#39;, &#39;00:00:00&#39;, &#39;-to&#39;, &#39;00:00:01&#39;, &#39;output.mp4&#39;); const data =</span></span>
<span class="line"><span style="color:#ABB2BF;">ffmpeg.FS(&#39;readFile&#39;, &#39;output.mp4&#39;); const tempURL = URL.createObjectURL(new</span></span>
<span class="line"><span style="color:#ABB2BF;">Blob([data.buffer], { type: &#39;video/mp4&#39; })); $(&#39;#handle-video&#39;).attr(&#39;src&#39;,</span></span>
<span class="line"><span style="color:#ABB2BF;">tempURL) }) });</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><p>其代码的含义也是相当简单，通过引入的 FFmpeg 去创建一个实例，然后通过 ffmpeg.load()方法去加载对应的 wasm 和 worker 资源 没有进行优化的 wasm 的资源是相当滴大，本地文件竟有 23MB，这个若是需要投入生产的可是必须通过 emcc 调节打包参数的方式去掉无用模块。然后通 fetchFile 方法将选中的 input file 加载到内存中去，接下来就可以通过 ffmpeg.run 运行和 本地命令行一样的 ffmpeg 命令行参数了参数基本一致</p><p>这时我们的核心功能已经实现完毕了。</p><h3 id="做一点小小的优化" tabindex="-1">做一点小小的优化 <a class="header-anchor" href="#做一点小小的优化" aria-label="Permalink to &quot;做一点小小的优化&quot;">​</a></h3><p>剪辑的话最好是可以选择时间段，我这为了方便直接把 element 的以 cdn 方式引入使用 通过 slider 来截取视频区间,我这边就只贴 js 相关的代码了，具体代码可以去 github 仓库里面仔细看下</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">class</span><span style="color:#E5C07B;"> ClipVideo</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">	constructor</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E5C07B;">		this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">ffmpeg</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> null</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">		this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">originFile</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> null</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">		this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">handleFile</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> null</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">		this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">vueInstance</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> null</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">		this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">currentSliderValue</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> [</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">];</span></span>
<span class="line"><span style="color:#E5C07B;">		this</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">init</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#61AFEF;">	init</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E5C07B;">		console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;init&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">		this</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">initFfmpeg</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">		this</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">bindSelectOriginFile</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">		this</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">bindOriginVideoLoad</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">		this</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">bindClipBtn</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">		this</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">initVueSlider</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#61AFEF;">	initVueSlider</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">maxSliderValue</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 100</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">		console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">\`maxSliderValue </span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">maxSliderValue</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">\`</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">		if</span><span style="color:#ABB2BF;"> (</span><span style="color:#56B6C2;">!</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">vueInstance</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">			const</span><span style="color:#E5C07B;"> _this</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">			const</span><span style="color:#E5C07B;"> Main</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#61AFEF;">				data</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">					return</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">						value</span><span style="color:#ABB2BF;">: [</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#E06C75;">						maxSliderValue</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">maxSliderValue</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">					};</span></span>
<span class="line"><span style="color:#ABB2BF;">				},</span></span>
<span class="line"><span style="color:#E06C75;">				watch</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#61AFEF;">					value</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E5C07B;">						_this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">currentSliderValue</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">					},</span></span>
<span class="line"><span style="color:#ABB2BF;">				},</span></span>
<span class="line"><span style="color:#E06C75;">				methods</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#61AFEF;">					formatTooltip</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">val</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">						return</span><span style="color:#E5C07B;"> _this</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">transformSecondToVideoFormat</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">val</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">					},</span></span>
<span class="line"><span style="color:#ABB2BF;">				},</span></span>
<span class="line"><span style="color:#ABB2BF;">			};</span></span>
<span class="line"><span style="color:#C678DD;">			const</span><span style="color:#E5C07B;"> Ctor</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">extend</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">Main</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">			this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">vueInstance</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Ctor</span><span style="color:#ABB2BF;">().</span><span style="color:#61AFEF;">$mount</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;#app&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">		} </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">			this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">vueInstance</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">maxSliderValue</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> maxSliderValue</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">			this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">vueInstance</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">value</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> [</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">];</span></span>
<span class="line"><span style="color:#ABB2BF;">		}</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#61AFEF;">	transformSecondToVideoFormat</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">value</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">		const</span><span style="color:#E5C07B;"> totalSecond</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> Number</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">		let</span><span style="color:#E06C75;"> hours</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> Math</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">floor</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">totalSecond</span><span style="color:#56B6C2;"> /</span><span style="color:#ABB2BF;"> (</span><span style="color:#D19A66;">60</span><span style="color:#56B6C2;"> *</span><span style="color:#D19A66;"> 60</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#C678DD;">		let</span><span style="color:#E06C75;"> minutes</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> Math</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">floor</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">totalSecond</span><span style="color:#56B6C2;"> /</span><span style="color:#D19A66;"> 60</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">%</span><span style="color:#D19A66;"> 60</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">		let</span><span style="color:#E06C75;"> second</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> totalSecond</span><span style="color:#56B6C2;"> %</span><span style="color:#D19A66;"> 60</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">		let</span><span style="color:#E06C75;"> hoursText</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">		let</span><span style="color:#E06C75;"> minutesText</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">		let</span><span style="color:#E06C75;"> secondText</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">		if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">hours</span><span style="color:#56B6C2;"> &lt;</span><span style="color:#D19A66;"> 10</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E06C75;">			hoursText</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> \`0</span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">hours</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">\`</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">		} </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">			hoursText</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> \`</span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">hours</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">\`</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">		}</span></span>
<span class="line"><span style="color:#C678DD;">		if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">minutes</span><span style="color:#56B6C2;"> &lt;</span><span style="color:#D19A66;"> 10</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E06C75;">			minutesText</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> \`0</span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">minutes</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">\`</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">		} </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">			minutesText</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> \`</span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">minutes</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">\`</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">		}</span></span>
<span class="line"><span style="color:#C678DD;">		if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">second</span><span style="color:#56B6C2;"> &lt;</span><span style="color:#D19A66;"> 10</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E06C75;">			secondText</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> \`0</span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">second</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">\`</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">		} </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">			secondText</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> \`</span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">second</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">\`</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">		}</span></span>
<span class="line"><span style="color:#C678DD;">		return</span><span style="color:#98C379;"> \`</span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">hoursText</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">:</span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">minutesText</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">:</span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">secondText</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">\`</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#61AFEF;">	initFfmpeg</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">		const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">createFFmpeg</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> FFmpeg</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">		this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">ffmpeg</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> createFFmpeg</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">			log</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">			corePath</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;./assets/ffmpeg-core.js&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">		});</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#61AFEF;">	bindSelectOriginFile</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#61AFEF;">		$</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;#select_origin_file&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;change&quot;</span><span style="color:#ABB2BF;">, (</span><span style="color:#E06C75;font-style:italic;">e</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">			const</span><span style="color:#E5C07B;"> file</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> e</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">target</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">files</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">];</span></span>
<span class="line"><span style="color:#E5C07B;">			this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">originFile</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> file</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">			const</span><span style="color:#E5C07B;"> url</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> window</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">webkitURL</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">createObjectURL</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">file</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#61AFEF;">			$</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;#origin-video&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">attr</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;src&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">url</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">		});</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#61AFEF;">	bindOriginVideoLoad</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#61AFEF;">		$</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;#origin-video&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;loadedmetadata&quot;</span><span style="color:#ABB2BF;">, (</span><span style="color:#E06C75;font-style:italic;">e</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">			const</span><span style="color:#E5C07B;"> duration</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> Math</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">floor</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">e</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">target</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">duration</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">			this</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">initVueSlider</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">duration</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">		});</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#61AFEF;">	bindClipBtn</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#61AFEF;">		$</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;#start_clip&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;click&quot;</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">			console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;start clip&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">			this</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">clipFile</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">originFile</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">		});</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#C678DD;">	async</span><span style="color:#61AFEF;"> clipFile</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">file</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">		const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">ffmpeg</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">currentSliderValue</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">		const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">fetchFile</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> FFmpeg</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">		const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">name</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> file</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">		const</span><span style="color:#E5C07B;"> startTime</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">transformSecondToVideoFormat</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">currentSliderValue</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">]);</span></span>
<span class="line"><span style="color:#C678DD;">		const</span><span style="color:#E5C07B;"> endTime</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">transformSecondToVideoFormat</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">currentSliderValue</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">]);</span></span>
<span class="line"><span style="color:#E5C07B;">		console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;clipRange&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">startTime</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">endTime</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">		if</span><span style="color:#ABB2BF;"> (</span><span style="color:#56B6C2;">!</span><span style="color:#E5C07B;">ffmpeg</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">isLoaded</span><span style="color:#ABB2BF;">()) {</span></span>
<span class="line"><span style="color:#C678DD;">			await</span><span style="color:#E5C07B;"> ffmpeg</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">load</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">		}</span></span>
<span class="line"><span style="color:#E5C07B;">		ffmpeg</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">FS</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;writeFile&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">await</span><span style="color:#61AFEF;"> fetchFile</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">file</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#C678DD;">		await</span><span style="color:#E5C07B;"> ffmpeg</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">run</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#98C379;">			&quot;-i&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">			name</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">			&quot;-ss&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">			startTime</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">			&quot;-to&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">			endTime</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">			&quot;output.mp4&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">		);</span></span>
<span class="line"><span style="color:#C678DD;">		const</span><span style="color:#E5C07B;"> data</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> ffmpeg</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">FS</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;readFile&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;output.mp4&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">		const</span><span style="color:#E5C07B;"> tempURL</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> URL</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">createObjectURL</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#C678DD;">			new</span><span style="color:#61AFEF;"> Blob</span><span style="color:#ABB2BF;">([</span><span style="color:#E5C07B;">data</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">buffer</span><span style="color:#ABB2BF;">], { </span><span style="color:#E06C75;">type</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;video/mp4&quot;</span><span style="color:#ABB2BF;"> })</span></span>
<span class="line"><span style="color:#ABB2BF;">		);</span></span>
<span class="line"><span style="color:#61AFEF;">		$</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;#handle-video&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">attr</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;src&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">tempURL</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#61AFEF;">$</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">document</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">ready</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#C678DD;">	const</span><span style="color:#E5C07B;"> instance</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> ClipVideo</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br></div></div><p>这样文章开头的效果就这样实现啦</p><h1 id="rust-利用-wasm-bindgen-做一个简化-web-计算器" tabindex="-1">Rust 利用 wasm-bindgen 做一个简化 web 计算器 <a class="header-anchor" href="#rust-利用-wasm-bindgen-做一个简化-web-计算器" aria-label="Permalink to &quot;Rust 利用 wasm-bindgen 做一个简化 web 计算器&quot;">​</a></h1><h2 id="入门" tabindex="-1">入门 <a class="header-anchor" href="#入门" aria-label="Permalink to &quot;入门&quot;">​</a></h2><p><code>wasm-bindgen</code>是一个 Rust 库和工具，旨在促进 WebAssembly 模块与 JavaScript 之间的高级交互。它允许开发者在 Rust 中定义 JavaScript 类，或者从 JavaScript 获取和返回复杂的类型，如字符串、对象等。本教程将指导你如何使用<code>wasm-bindgen</code>来创建和部署一个 Rust 编写的 WebAssembly 应用。</p><h3 id="步骤-1-设置-rust-环境" tabindex="-1">步骤 1: 设置 Rust 环境 <a class="header-anchor" href="#步骤-1-设置-rust-环境" aria-label="Permalink to &quot;步骤 1: 设置 Rust 环境&quot;">​</a></h3><p>确保你已经安装了 Rust 和 Cargo。如果没有，请访问 <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noreferrer">Rust 官网</a> 进行安装。</p><h3 id="步骤-2-创建新的-rust-项目" tabindex="-1">步骤 2: 创建新的 Rust 项目 <a class="header-anchor" href="#步骤-2-创建新的-rust-项目" aria-label="Permalink to &quot;步骤 2: 创建新的 Rust 项目&quot;">​</a></h3><p>在命令行中创建一个新的 Rust 库项目，并将其指定为 WebAssembly 目标：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">cargo</span><span style="color:#98C379;"> new</span><span style="color:#98C379;"> my_project</span><span style="color:#D19A66;"> --lib</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>将<code>my_project</code>替换为你的项目名称。</p><h3 id="步骤-3-编辑-cargo-toml" tabindex="-1">步骤 3: 编辑 <code>Cargo.toml</code> <a class="header-anchor" href="#步骤-3-编辑-cargo-toml" aria-label="Permalink to &quot;步骤 3: 编辑 \`Cargo.toml\`&quot;">​</a></h3><p>在你的<code>Cargo.toml</code>文件中，添加<code>wasm-bindgen</code>依赖项：</p><div class="language-toml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">[</span><span style="color:#61AFEF;">dependencies</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#E06C75;">wasm-bindgen</span><span style="color:#ABB2BF;"> = </span><span style="color:#98C379;">&quot;0.2&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="步骤-4-编写-rust-代码" tabindex="-1">步骤 4: 编写 Rust 代码 <a class="header-anchor" href="#步骤-4-编写-rust-代码" aria-label="Permalink to &quot;步骤 4: 编写 Rust 代码&quot;">​</a></h3><p>在你的<code>src/lib.rs</code>文件中，使用<code>wasm-bindgen</code>宏定义 Rust 函数和 JavaScript 交互：</p><div class="language-rust line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">use</span><span style="color:#E5C07B;"> wasm_bindgen</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">prelude</span><span style="color:#ABB2BF;">::*;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">#[wasm_bindgen]</span></span>
<span class="line"><span style="color:#C678DD;">pub</span><span style="color:#C678DD;"> fn</span><span style="color:#61AFEF;"> say_hello</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: &amp;</span><span style="color:#E5C07B;">str</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">	web_sys</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">log_1</span><span style="color:#ABB2BF;">(&amp;</span><span style="color:#E5C07B;">wasm_bindgen</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">JsValue</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">from_str</span><span style="color:#ABB2BF;">(&amp;</span><span style="color:#61AFEF;">format!</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;Hello, {}!&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">)));</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>这里我们定义了一个<code>say_hello</code>函数，它接受一个字符串参数<code>name</code>，并使用<code>web_sys</code>的<code>console::log</code>函数在浏览器控制台输出一条问候信息。</p><h3 id="步骤-5-编译-rust-代码为-webassembly" tabindex="-1">步骤 5: 编译 Rust 代码为 WebAssembly <a class="header-anchor" href="#步骤-5-编译-rust-代码为-webassembly" aria-label="Permalink to &quot;步骤 5: 编译 Rust 代码为 WebAssembly&quot;">​</a></h3><p>使用以下命令编译你的 Rust 项目为 WebAssembly 模块：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">cargo</span><span style="color:#98C379;"> build</span><span style="color:#D19A66;"> --target</span><span style="color:#98C379;"> wasm32-unknown-unknown</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>编译完成后，你会在<code>target/wasm32-unknown-unknown/debug/my_project.wasm</code>找到编译后的文件。</p><h3 id="步骤-6-使用-wasm-bindgen-生成-javascript-绑定" tabindex="-1">步骤 6: 使用 <code>wasm-bindgen</code> 生成 JavaScript 绑定 <a class="header-anchor" href="#步骤-6-使用-wasm-bindgen-生成-javascript-绑定" aria-label="Permalink to &quot;步骤 6: 使用 \`wasm-bindgen\` 生成 JavaScript 绑定&quot;">​</a></h3><p>安装<code>wasm-bindgen-cli</code>工具，并使用它来生成 JavaScript 绑定：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">cargo</span><span style="color:#98C379;"> install</span><span style="color:#98C379;"> wasm-bindgen-cli</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">wasm-bindgen</span><span style="color:#98C379;"> target/wasm32-unknown-unknown/debug/my_project.wasm</span><span style="color:#D19A66;"> --out-dir</span><span style="color:#98C379;"> ./pkg</span><span style="color:#D19A66;"> --target</span><span style="color:#98C379;"> web</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>这将生成一个<code>pkg</code>目录，其中包含与你的 WebAssembly 模块交互所需的 JavaScript 文件。</p><h3 id="步骤-7-在-web-应用中使用-webassembly-模块" tabindex="-1">步骤 7: 在 Web 应用中使用 WebAssembly 模块 <a class="header-anchor" href="#步骤-7-在-web-应用中使用-webassembly-模块" aria-label="Permalink to &quot;步骤 7: 在 Web 应用中使用 WebAssembly 模块&quot;">​</a></h3><p>在你的 HTML 文件中，添加一个脚本标签来加载编译后的 WebAssembly 模块：</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;!</span><span style="color:#E06C75;">DOCTYPE</span><span style="color:#D19A66;"> html</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">html</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">meta</span><span style="color:#D19A66;"> charset</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;utf-8&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;My Rust Wasm App&lt;/</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">script</span><span style="color:#D19A66;"> src</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;pkg/my_project.js&quot;</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;/</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#E5C07B;">			my_project</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">say_hello</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;World&quot;</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// 调用 Rust 函数</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;/</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">html</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>现在，当你在浏览器中打开这个 HTML 文件时，你应该会在控制台看到输出的问候信息。</p><h3 id="额外资源" tabindex="-1">额外资源 <a class="header-anchor" href="#额外资源" aria-label="Permalink to &quot;额外资源&quot;">​</a></h3><ul><li><p><a href="https://rustwasm.github.io/docs/wasm-bindgen/" target="_blank" rel="noreferrer">wasm-bindgen 官方文档</a></p></li><li><p><a href="https://www.bookstack.cn/read/yew-0.18-zh" target="_blank" rel="noreferrer">Yew v0.18 中文文档</a> - 包含了关于<code>wasm-bindgen</code>的更多高级用法。</p></li><li><p><a href="https://developer.mozilla.org/zh-CN/docs/WebAssembly" target="_blank" rel="noreferrer">MDN WebAssembly 文档</a> - 提供了关于 WebAssembly 和相关技术的详细信息。</p></li></ul><p>通过以上步骤，你已经成功地创建并运行了一个使用<code>wasm-bindgen</code>的 Rust WebAssembly 应用。你可以继续探索<code>wasm-bindgen</code>的更多功能，如使用<code>JsCast</code>进行类型转换、<code>wasm-bindgen-futures</code>处理异步操作等，以增强你的应用功能。</p><h2 id="简单版计算器" tabindex="-1">简单版计算器 <a class="header-anchor" href="#简单版计算器" aria-label="Permalink to &quot;简单版计算器&quot;">​</a></h2><p>我们可以设计并实现一个复杂的 Web 计算器项目，它不仅支持基本的加减乘除运算，还包括更高级的数学功能，如指数、对数、三角函数等。这个项目将使用 WebAssembly (Wasm) 和 JavaScript 结合来实现。</p><h3 id="项目概述" tabindex="-1">项目概述 <a class="header-anchor" href="#项目概述" aria-label="Permalink to &quot;项目概述&quot;">​</a></h3><p>计算器项目将包含以下特性：</p><ul><li><p>基本运算：加法、减法、乘法、除法。</p></li><li><p>高级运算：指数、对数、平方根、三角函数等。</p></li><li><p>用户界面：清晰的输入输出显示，操作按钮。</p></li><li><p>错误处理：处理除以零等错误情况。</p></li><li><p>历史记录：保存用户的计算历史。</p></li></ul><h3 id="技术栈" tabindex="-1">技术栈 <a class="header-anchor" href="#技术栈" aria-label="Permalink to &quot;技术栈&quot;">​</a></h3><ul><li><p><strong>Rust</strong>：作为 WebAssembly 的编写语言，因为它提供了性能和安全性。</p></li><li><p><strong>wasm-bindgen</strong>：将 Rust 代码与 JavaScript 互操作。</p></li><li><p><strong>JavaScript</strong>：用于创建用户界面和处理用户交互。</p></li><li><p><strong>HTML/CSS/Vue</strong>：构建前端页面和样式。</p></li></ul><h3 id="实现步骤" tabindex="-1">实现步骤 <a class="header-anchor" href="#实现步骤" aria-label="Permalink to &quot;实现步骤&quot;">​</a></h3><h4 id="_1-rust-计算器库" tabindex="-1">1. Rust 计算器库 <a class="header-anchor" href="#_1-rust-计算器库" aria-label="Permalink to &quot;1. Rust 计算器库&quot;">​</a></h4><p>创建一个 Rust 库，实现计算器的核心功能。使用<code>wasm-bindgen</code>来暴露 Rust 函数给 JavaScript。</p><div class="language-rust line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// calculator.rs</span></span>
<span class="line"><span style="color:#C678DD;">use</span><span style="color:#E5C07B;"> wasm_bindgen</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">prelude</span><span style="color:#ABB2BF;">::*;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">#[wasm_bindgen]</span></span>
<span class="line"><span style="color:#C678DD;">pub</span><span style="color:#C678DD;"> struct</span><span style="color:#E5C07B;"> Calculator</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">#[wasm_bindgen]</span></span>
<span class="line"><span style="color:#C678DD;">impl</span><span style="color:#E5C07B;"> Calculator</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">pub</span><span style="color:#C678DD;"> fn</span><span style="color:#61AFEF;"> new</span><span style="color:#ABB2BF;">() -&gt; </span><span style="color:#E5C07B;">Calculator</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">Calculator</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 基本运算</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">pub</span><span style="color:#C678DD;"> fn</span><span style="color:#61AFEF;"> add</span><span style="color:#ABB2BF;">(&amp;</span><span style="color:#E5C07B;">self</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">f64</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">f64</span><span style="color:#ABB2BF;">) -&gt; </span><span style="color:#E5C07B;">f64</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;"> a</span><span style="color:#ABB2BF;"> + </span><span style="color:#E06C75;">b</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">pub</span><span style="color:#C678DD;"> fn</span><span style="color:#61AFEF;"> subtract</span><span style="color:#ABB2BF;">(&amp;</span><span style="color:#E5C07B;">self</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">f64</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">f64</span><span style="color:#ABB2BF;">) -&gt; </span><span style="color:#E5C07B;">f64</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;"> a</span><span style="color:#ABB2BF;"> - </span><span style="color:#E06C75;">b</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">pub</span><span style="color:#C678DD;"> fn</span><span style="color:#61AFEF;"> multiply</span><span style="color:#ABB2BF;">(&amp;</span><span style="color:#E5C07B;">self</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">f64</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">f64</span><span style="color:#ABB2BF;">) -&gt; </span><span style="color:#E5C07B;">f64</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;"> a</span><span style="color:#ABB2BF;"> * </span><span style="color:#E06C75;">b</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">pub</span><span style="color:#C678DD;"> fn</span><span style="color:#61AFEF;"> divide</span><span style="color:#ABB2BF;">(&amp;</span><span style="color:#E5C07B;">self</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">f64</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">f64</span><span style="color:#ABB2BF;">) -&gt; </span><span style="color:#E5C07B;">Result</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">f64</span><span style="color:#ABB2BF;">, &amp;&#39;</span><span style="color:#E5C07B;">static</span><span style="color:#E5C07B;"> str</span><span style="color:#ABB2BF;">&gt; {</span></span>
<span class="line"><span style="color:#C678DD;"> if</span><span style="color:#E06C75;"> b</span><span style="color:#56B6C2;"> ==</span><span style="color:#D19A66;"> 0.0</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;"> Err</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;Cannot divide by zero&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;"> Ok</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;"> / </span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;"> }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 高级运算</span></span>
<span class="line"><span style="color:#C678DD;">pub</span><span style="color:#C678DD;"> fn</span><span style="color:#61AFEF;"> sqrt</span><span style="color:#ABB2BF;">(&amp;</span><span style="color:#E5C07B;">self</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">f64</span><span style="color:#ABB2BF;">) -&gt; </span><span style="color:#E5C07B;">f64</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">sqrt</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">pub</span><span style="color:#C678DD;"> fn</span><span style="color:#61AFEF;"> pow</span><span style="color:#ABB2BF;">(&amp;</span><span style="color:#E5C07B;">self</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">base</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">f64</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">exp</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">f64</span><span style="color:#ABB2BF;">) -&gt; </span><span style="color:#E5C07B;">f64</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;"> base</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">powf</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">exp</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 更多高级运算可以按需添加...</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br></div></div><h4 id="_2-编译为-webassembly" tabindex="-1">2. 编译为 WebAssembly <a class="header-anchor" href="#_2-编译为-webassembly" aria-label="Permalink to &quot;2. 编译为 WebAssembly&quot;">​</a></h4><p>使用 Cargo 和 wasm-pack 将 Rust 库编译为 WebAssembly 模块。</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">wasm-pack</span><span style="color:#98C379;"> build</span><span style="color:#D19A66;"> --target</span><span style="color:#98C379;"> web</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="_3-javascript-接口" tabindex="-1">3. JavaScript 接口 <a class="header-anchor" href="#_3-javascript-接口" aria-label="Permalink to &quot;3. JavaScript 接口&quot;">​</a></h4><p>创建 JavaScript 文件来加载和使用 Wasm 模块，并提供与 HTML 界面交互的函数。</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// calculator.js</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#D19A66;"> *</span><span style="color:#C678DD;"> as</span><span style="color:#E06C75;"> wasm</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &quot;path/to/calculator.js&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">async</span><span style="color:#C678DD;"> function</span><span style="color:#61AFEF;"> loadCalculator</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">	return</span><span style="color:#61AFEF;"> wasmCalculator</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> performOperation</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">calculator</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">operation</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">a</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">b</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 根据操作调用相应的计算器函数</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 例如：calculator.add(a, b)</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 更多 JavaScript 函数来处理用户界面交互...</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h4 id="_4-html-和-css-最简单化地版本" tabindex="-1">4. HTML 和 CSS 最简单化地版本 <a class="header-anchor" href="#_4-html-和-css-最简单化地版本" aria-label="Permalink to &quot;4. HTML 和 CSS 最简单化地版本&quot;">​</a></h4><p>创建 HTML 页面和 CSS 样式，构建用户界面。</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">&lt;!-- index.html --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;!</span><span style="color:#E06C75;">DOCTYPE</span><span style="color:#D19A66;"> html</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">html</span><span style="color:#D19A66;"> lang</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;en&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">meta</span><span style="color:#D19A66;"> charset</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;UTF-8&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;Complex Calculator&lt;/</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">link</span><span style="color:#D19A66;"> rel</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;stylesheet&quot;</span><span style="color:#D19A66;"> href</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;styles.css&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;/</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">div</span><span style="color:#D19A66;"> id</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;calculator&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			&lt;!-- 输入显示和按钮 --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">script</span><span style="color:#D19A66;"> src</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;calculator.js&quot;</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// JavaScript 逻辑</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;/</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">html</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h4 id="_5-用户界面实现" tabindex="-1">5. 用户界面实现 <a class="header-anchor" href="#_5-用户界面实现" aria-label="Permalink to &quot;5. 用户界面实现&quot;">​</a></h4><p>在 HTML 中添加输入框、显示结果的元素和操作按钮。使用 JavaScript 来处理用户的点击事件，调用相应的计算函数，并显示结果。</p><div class="language-vue line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">template</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">div</span><span style="color:#D19A66;"> class</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;calculator&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">input</span><span style="color:#D19A66;"> class</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;input-number&quot;</span><span style="color:#D19A66;"> type</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;number&quot;</span><span style="color:#D19A66;"> v-model</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;inputValue&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">div</span><span style="color:#D19A66;"> class</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;display&quot;</span><span style="color:#ABB2BF;">&gt;{{ result }}&lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">button</span><span style="color:#D19A66;"> @click</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;performOperation(&#39;add&#39;)&quot;</span><span style="color:#ABB2BF;">&gt;+&lt;/</span><span style="color:#E06C75;">button</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">button</span><span style="color:#D19A66;"> @click</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;performOperation(&#39;subtract&#39;)&quot;</span><span style="color:#ABB2BF;">&gt;-&lt;/</span><span style="color:#E06C75;">button</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">button</span><span style="color:#D19A66;"> @click</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;performOperation(&#39;multiply&#39;)&quot;</span><span style="color:#ABB2BF;">&gt;*&lt;/</span><span style="color:#E06C75;">button</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">button</span><span style="color:#D19A66;"> @click</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;performOperation(&#39;divide&#39;)&quot;</span><span style="color:#ABB2BF;">&gt;/&lt;/</span><span style="color:#E06C75;">button</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">button</span><span style="color:#D19A66;"> @click</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;performOperation(&#39;sqrt&#39;)&quot;</span><span style="color:#ABB2BF;">&gt;√&lt;/</span><span style="color:#E06C75;">button</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">button</span><span style="color:#D19A66;"> @click</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;performOperation(&#39;pow&#39;, 2)&quot;</span><span style="color:#ABB2BF;">&gt;x²&lt;/</span><span style="color:#E06C75;">button</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">button</span><span style="color:#D19A66;"> @click</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;performOperation(&#39;pow&#39;, 3)&quot;</span><span style="color:#ABB2BF;">&gt;x³&lt;/</span><span style="color:#E06C75;">button</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		&lt;!-- 更多操作按钮 --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">template</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">script</span><span style="color:#D19A66;"> setup</span><span style="color:#D19A66;"> lang</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;ts&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">ref</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &quot;vue&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> inputValue</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> ref</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> result</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> ref</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#61AFEF;"> performOperation</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">operation</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">exponent</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">	try</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">		const</span><span style="color:#E5C07B;"> value</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> parseFloat</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">inputValue</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">		if</span><span style="color:#ABB2BF;"> (</span><span style="color:#61AFEF;">isNaN</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#C678DD;">			throw</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Error</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;Invalid input&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">		}</span></span>
<span class="line"><span style="color:#C678DD;">		let</span><span style="color:#E06C75;"> newValue</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">		switch</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">operation</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">			case</span><span style="color:#98C379;"> &quot;add&quot;</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;">				newValue</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> value</span><span style="color:#56B6C2;"> +</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">				break</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">			case</span><span style="color:#98C379;"> &quot;subtract&quot;</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;">				newValue</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> value</span><span style="color:#56B6C2;"> -</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">				break</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">			case</span><span style="color:#98C379;"> &quot;multiply&quot;</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;">				newValue</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> value</span><span style="color:#56B6C2;"> *</span><span style="color:#D19A66;"> 2</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">				break</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">			case</span><span style="color:#98C379;"> &quot;divide&quot;</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#C678DD;">				if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">value</span><span style="color:#56B6C2;"> ===</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">throw</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Error</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;Cannot divide by zero&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E06C75;">				newValue</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> value</span><span style="color:#56B6C2;"> /</span><span style="color:#D19A66;"> 2</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">				break</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">			case</span><span style="color:#98C379;"> &quot;sqrt&quot;</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;">				newValue</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> Math</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">sqrt</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">				break</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">			case</span><span style="color:#98C379;"> &quot;pow&quot;</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;">				newValue</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> Math</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">pow</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">exponent</span><span style="color:#56B6C2;">!</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">				break</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">			default</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;">				newValue</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> value</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">		}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">		result</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">value</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> newValue</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">toString</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">	} </span><span style="color:#C678DD;">catch</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">error</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">		result</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">value</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;Error&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">style</span><span style="color:#D19A66;"> scoped</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#D19A66;">.calculator</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">	display: </span><span style="color:#D19A66;">flex</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">	flex-direction: </span><span style="color:#D19A66;">column</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">	align-items: </span><span style="color:#D19A66;">center</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">	gap: </span><span style="color:#D19A66;">10</span><span style="color:#E06C75;">px</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#D19A66;">.input-number</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">	margin-bottom: </span><span style="color:#D19A66;">10</span><span style="color:#E06C75;">px</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">	padding: </span><span style="color:#D19A66;">5</span><span style="color:#E06C75;">px</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">	font-size: </span><span style="color:#D19A66;">1</span><span style="color:#E06C75;">rem</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#D19A66;">.display</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">	font-size: </span><span style="color:#D19A66;">2</span><span style="color:#E06C75;">rem</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">	font-weight: </span><span style="color:#D19A66;">bold</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#E06C75;">button</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">	padding: </span><span style="color:#D19A66;">5</span><span style="color:#E06C75;">px</span><span style="color:#D19A66;"> 10</span><span style="color:#E06C75;">px</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">	font-size: </span><span style="color:#D19A66;">1</span><span style="color:#E06C75;">rem</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">	margin: </span><span style="color:#D19A66;">5</span><span style="color:#E06C75;">px</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">style</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br></div></div><p>我们使用<code>v-model</code>指令将<code>inputValue</code>与用户输入绑定，这样我们就可以在<code>performOperation</code>函数中使用这个值来进行计算。</p><p>请注意，我们还在<code>performOperation</code>函数中添加了错误处理逻辑，以确保用户输入的是有效的数字，并且在执行除法操作时避免除以零的错误。如果发生错误，结果将显示为&quot;Error&quot;。</p><h3 id="部署" tabindex="-1">部署 <a class="header-anchor" href="#部署" aria-label="Permalink to &quot;部署&quot;">​</a></h3><p>将项目文件部署到 Web 服务器或使用静态页面托管服务，如 GitHub Pages。</p><h3 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h3><p>通过以上步骤，你可以创建一个功能简洁的 Web 计算器应用，它利用了 WebAssembly 的性能优势和 JavaScript 的灵活性。这个项目可以根据需求进一步扩展，增加更多的数学运算和高级功能。</p>`,165)]))}const A=n(o,[["render",t]]);export{u as __pageData,A as default};
