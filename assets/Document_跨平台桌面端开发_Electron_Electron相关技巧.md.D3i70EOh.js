import{_ as n,c as a,o as l,ah as p}from"./chunks/framework.DqD713j2.js";const u=JSON.parse('{"title":"Electron 相关技巧","description":"","frontmatter":{},"headers":[],"relativePath":"Document/跨平台桌面端开发/Electron/Electron相关技巧.md","filePath":"Document/跨平台桌面端开发/Electron/Electron相关技巧.md","lastUpdated":1750954157000}'),e={name:"Document/跨平台桌面端开发/Electron/Electron相关技巧.md"};function o(t,s,r,c,B,i){return l(),a("div",null,s[0]||(s[0]=[p(`<h1 id="electron-相关技巧" tabindex="-1">Electron 相关技巧 <a class="header-anchor" href="#electron-相关技巧" aria-label="Permalink to &quot;Electron 相关技巧&quot;">​</a></h1><p>功能开发教程：<a href="https://juejin.cn/post/7103749039677505566" target="_blank" rel="noreferrer">https://juejin.cn/post/7103749039677505566</a></p><p><strong>electron 小技巧整理</strong>：</p><p><a href="https://zhuanlan.zhihu.com/p/503375804" target="_blank" rel="noreferrer">笔记｜ electron 小技巧整理，总有一款适合你 - 知乎 (zhihu.com)</a></p><p><a href="https://zhuanlan.zhihu.com/p/549734690" target="_blank" rel="noreferrer">electron 应用开发优秀实践 - 知乎 (zhihu.com)</a></p><h2 id="一、开发环境-热更新" tabindex="-1">一、开发环境：热更新 <a class="header-anchor" href="#一、开发环境-热更新" aria-label="Permalink to &quot;一、开发环境：热更新&quot;">​</a></h2><p>这里在开发环境中有一个问题就是，咱们这里的渲染进程是打包好的 dist 文件，无法每次修改后热更新。只有重新打包生成新的 dist 后页面才会更新。</p><p>两个依赖包：<code>concurrently</code> 和<code>wait-on</code></p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> i</span><span style="color:#98C379;"> concurrently</span><span style="color:#D19A66;"> -D</span></span>
<span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> i</span><span style="color:#98C379;"> wait-on</span><span style="color:#D19A66;"> -D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li>concurrently：方便 script 同时启动多个命令</li><li>wait-on：它可以等待文件、端口、套接字和 http(s) 资源可用后触发。</li></ul><p>开发时热更新，我们就要放弃 build 一个 dist 文件来作为渲染进程的做法了。 简单来说，我们正常执行 npm run dev 生成一个页面服务，这样的环境是有热更新的。</p><p>所以我们只需要在主进程中加载 dev 服务中的页面作为渲染进程就可以了。 修改一下主进程 main.js</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line highlighted"><span style="color:#ABB2BF;">    ...</span></span>
<span class="line"><span style="color:#C678DD;">    const</span><span style="color:#61AFEF;"> createWindow</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      // Create the browser window.</span></span>
<span class="line highlighted"><span style="color:#C678DD;">      const</span><span style="color:#E5C07B;"> mainWindow</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> BrowserWindow</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">        width</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">800</span><span style="color:#ABB2BF;">,</span></span>
<span class="line highlighted"><span style="color:#E06C75;">        height</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">600</span><span style="color:#ABB2BF;">,</span></span>
<span class="line highlighted"><span style="color:#E06C75;">        webPreferences</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line highlighted"><span style="color:#E06C75;">          preload</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">join</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">__dirname</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;/preload.js&quot;</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">        },</span></span>
<span class="line"><span style="color:#ABB2BF;">      });</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      // 加载 index.html</span></span>
<span class="line"><span style="color:#E5C07B;">      mainWindow</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">loadURL</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;http://localhost:3333/&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      // 打开开发工具</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      // mainWindow.webContents.openDevTools()</span></span>
<span class="line"><span style="color:#ABB2BF;">    };</span></span>
<span class="line"><span style="color:#ABB2BF;">    ...</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>然后打开两个终端，第一个先执行 npm run dev，等待服务启动后在另外一个里执行 npm run start 即可。</p><p>当然我们也可以一个命令完成这些。在 package.json 中添加命令：</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">    ...</span></span>
<span class="line"><span style="color:#98C379;">    &quot;scripts&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">        &quot;dev&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;vite --host&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        &quot;build&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;vite build&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        &quot;preview&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;vite preview&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        &quot;start&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;electron .&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        &quot;electron&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;wait-on tcp:3333 &amp;&amp; electron .&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        &quot;exe-dev&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;concurrently -k </span><span style="color:#56B6C2;">\\&quot;</span><span style="color:#98C379;">npm run dev</span><span style="color:#56B6C2;">\\&quot;</span><span style="color:#56B6C2;"> \\&quot;</span><span style="color:#98C379;">npm run electron</span><span style="color:#56B6C2;">\\&quot;</span><span style="color:#98C379;">&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">      },</span></span>
<span class="line"><span style="color:#ABB2BF;">    ...</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>开发时执行 exe-dev 即可。</p><h2 id="二、electron12-以上版本-在渲染进程中使用-remote-模块" tabindex="-1">二、electron12+以上版本，在渲染进程中使用 remote 模块 <a class="header-anchor" href="#二、electron12-以上版本-在渲染进程中使用-remote-模块" aria-label="Permalink to &quot;二、electron12+以上版本，在渲染进程中使用 remote 模块&quot;">​</a></h2><p>在 electron 12 及以下版本中的 electron</p><p>在主进程中设置<code>enableRemoteModule: true</code>后，只需要从<code>electron</code>中引入<code>remote</code>即可</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> remote</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;electron&quot;</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>12+版本废弃，而 14+以上版本移除，替代需要安装模块：<code>@electron/remote</code></p><p>文档说明：<a href="https://www.electronjs.org/zh/docs/latest/breaking-changes#removed-remote-module" target="_blank" rel="noreferrer">重大更改 | Removed: <code>remote</code> module</a></p><p><strong>以 electron v21.4.1 版本为例，使用@electron/remote 库来使用 remote 模块</strong>：</p><p>1、先安装模块 <code>@electron/remote</code></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E06C75;">npm</span><span style="color:#E06C75;"> install</span><span style="color:#56B6C2;"> --</span><span style="color:#E06C75;">save</span><span style="color:#ABB2BF;"> @</span><span style="color:#E06C75;">electron</span><span style="color:#56B6C2;">/</span><span style="color:#E06C75;">remote</span></span>
<span class="line"><span style="color:#ABB2BF;"># </span><span style="color:#E06C75;">或者</span></span>
<span class="line"><span style="color:#E06C75;">yarn</span><span style="color:#E06C75;"> add</span><span style="color:#ABB2BF;"> @</span><span style="color:#E06C75;">electron</span><span style="color:#56B6C2;">/</span><span style="color:#E06C75;">remote</span><span style="color:#56B6C2;"> -</span><span style="color:#E5C07B;">D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>2、主进程中<code>new BrowserWindow({})</code>的 webPreferences 设置<code>enableRemoteModule:true</code></p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E06C75;">webPreferences</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">	enableRemoteModule</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// 是否允许渲染进程使用Remote远程模块</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>同时在创建窗口实例之后引入模块</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;@electron/remote/main&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">initialize</span><span style="color:#ABB2BF;">(); </span><span style="color:#7F848E;font-style:italic;">//</span></span>
<span class="line"><span style="color:#61AFEF;">require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;@electron/remote/main&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">enable</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">mainWin</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">webContents</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// electron报错：Uncaught Error: @electron/remote is disabled for this WebContents</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>main.js</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">app</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">shell</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">BrowserWindow</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &quot;electron&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> createWindow</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 创建主窗口</span></span>
<span class="line"><span style="color:#C678DD;">	let</span><span style="color:#E06C75;"> mainWindow</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> BrowserWindow</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">		width</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">900</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		height</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">670</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		show</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		autoHideMenuBar</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">		...(</span><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">platform</span><span style="color:#56B6C2;"> ===</span><span style="color:#98C379;"> &quot;linux&quot;</span><span style="color:#C678DD;"> ?</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">icon</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> {}),</span></span>
<span class="line"><span style="color:#E06C75;">		webPreferences</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">			preload</span><span style="color:#ABB2BF;">: </span><span style="color:#61AFEF;">join</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">__dirname</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;../preload/index.js&quot;</span><span style="color:#ABB2BF;">), </span><span style="color:#7F848E;font-style:italic;">// 注入脚本</span></span>
<span class="line"><span style="color:#E06C75;">			sandbox</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// 警告：在生产环境中启用nodeIntegration和禁用contextsolation是不安全的</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// 考虑在preload预加载中使用 contextBridge.exposeInMainWorld 上下文隔离</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// 更多信息请访问：https://www.electronjs.org/zh/docs/latest/tutorial/context-isolation</span></span>
<span class="line"><span style="color:#E06C75;">			nodeIntegration</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 渲染进程使用Node API，不安全</span></span>
<span class="line"><span style="color:#E06C75;">			contextIsolation</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 上下文隔离开启，解决require报错，不安全</span></span>
<span class="line"><span style="color:#E06C75;">			webSecurity</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 关闭Electron的跨域同源安全策略保护，配合ELECTRON_DISABLE_SECURITY_WARNINGS使用去掉警告，不安全</span></span>
<span class="line"><span style="color:#E06C75;">			enableRemoteModule</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 是否允许渲染进程使用Remote远程模块</span></span>
<span class="line"><span style="color:#ABB2BF;">		},</span></span>
<span class="line"><span style="color:#ABB2BF;">	});</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	//</span></span>
<span class="line"><span style="color:#61AFEF;">	require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;@electron/remote/main&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">initialize</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#61AFEF;">	require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;@electron/remote/main&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">enable</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">mainWindow</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">webContents</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 加载时显示</span></span>
<span class="line"><span style="color:#E5C07B;">	mainWindow</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;ready-to-show&quot;</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">		mainWindow</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">show</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">	});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">	mainWindow</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">webContents</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setWindowOpenHandler</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">details</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">		shell</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">openExternal</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">details</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">url</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">		return</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">action</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;deny&quot;</span><span style="color:#ABB2BF;"> };</span></span>
<span class="line"><span style="color:#ABB2BF;">	});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 为了在渲染器中使用模块热替换（HMR）功能，需要使用 环境变量 来确定窗口浏览器是加载本地 html 文件还是本地 URL</span></span>
<span class="line"><span style="color:#C678DD;">	if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">is</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">dev</span><span style="color:#56B6C2;"> &amp;&amp;</span><span style="color:#E5C07B;"> process</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">env</span><span style="color:#ABB2BF;">[</span><span style="color:#98C379;">&quot;ELECTRON_RENDERER_URL&quot;</span><span style="color:#ABB2BF;">]) {</span></span>
<span class="line"><span style="color:#E5C07B;">		mainWindow</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">loadURL</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">env</span><span style="color:#ABB2BF;">[</span><span style="color:#98C379;">&quot;ELECTRON_RENDERER_URL&quot;</span><span style="color:#ABB2BF;">]);</span></span>
<span class="line"><span style="color:#ABB2BF;">	} </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">		mainWindow</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">loadFile</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">join</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">__dirname</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;../renderer/index.html&quot;</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">	mainWindow</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;close&quot;</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">		console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;mainWindow is closed&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E06C75;">		mainWindow</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> null</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">	});</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br></div></div><p>3.在 vue|react|html 页面中（渲染进程中）导入<code>remote</code>模块</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> remote</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;@electron/remote&quot;</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>完成后即可在渲染进程中使用<code>remote</code>模块，例如</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> remote</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;@electron/remote&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">window</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">addEventListener</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;DOMContentLoaded&quot;</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 点击按钮打开一个新窗口</span></span>
<span class="line"><span style="color:#C678DD;">	const</span><span style="color:#E5C07B;"> oBtn</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getElementById</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;btn&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">	oBtn</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">addEventListener</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;click&quot;</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// 如何创建新窗口</span></span>
<span class="line"><span style="color:#C678DD;">		let</span><span style="color:#E06C75;"> indexMin</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#E5C07B;"> remote</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">BrowserWindow</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">			width</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">200</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">			height</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">200</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">		});</span></span>
<span class="line"><span style="color:#E5C07B;">		indexMin</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">loadFile</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;list.html&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">		indexMin</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;close&quot;</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">			indexMin</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> null</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">		});</span></span>
<span class="line"><span style="color:#ABB2BF;">	});</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="如何在-electron-中采集桌面共享和系统音频" tabindex="-1">如何在 Electron 中采集桌面共享和系统音频 <a class="header-anchor" href="#如何在-electron-中采集桌面共享和系统音频" aria-label="Permalink to &quot;如何在 Electron 中采集桌面共享和系统音频&quot;">​</a></h2><p>在使用 Electron 开发音视频项目的时候，我们不可避免会 遇到桌面共享这种场景。</p><p>webRTC 提供了， getUserMedia 方法用于采集 用户媒体数据。比如摄像头，麦克风。</p><h3 id="设置主进程信息" tabindex="-1">设置主进程信息 <a class="header-anchor" href="#设置主进程信息" aria-label="Permalink to &quot;设置主进程信息&quot;">​</a></h3><p>我们需要先在 Electron 中，先创建窗体并载入入口 index 文件。</p><p>代码如下：</p><div class="language-jsx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">BrowserWindow</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">desktopCapturer</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">ipcMain</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;electron&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> path</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;path&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> win</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> null</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> createWindow</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E06C75;">	win</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> BrowserWindow</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">		width</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">800</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		height</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">600</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		webPreferences</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">			preload</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">join</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">__dirname</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;preload.js&quot;</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">		},</span></span>
<span class="line"><span style="color:#ABB2BF;">	});</span></span>
<span class="line"><span style="color:#E5C07B;">	win</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">loadFile</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;index.html&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">whenReady</span><span style="color:#ABB2BF;">().</span><span style="color:#61AFEF;">then</span><span style="color:#ABB2BF;">(() </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#61AFEF;">	createWindow</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">	app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;activate&quot;</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">		if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">BrowserWindow</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getAllWindows</span><span style="color:#ABB2BF;">().</span><span style="color:#E06C75;">length</span><span style="color:#56B6C2;"> ===</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#61AFEF;">			createWindow</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">		}</span></span>
<span class="line"><span style="color:#ABB2BF;">	});</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;window-all-closed&quot;</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">	if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">platform</span><span style="color:#56B6C2;"> !==</span><span style="color:#98C379;"> &quot;darwin&quot;</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">		app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">quit</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><h3 id="使用-desktopcapturer-模块" tabindex="-1">使用 desktopCapturer 模块 <a class="header-anchor" href="#使用-desktopcapturer-模块" aria-label="Permalink to &quot;使用 desktopCapturer 模块&quot;">​</a></h3><p>desktopCapturer 模块是 Electron 提供的官方模块用于捕获系统桌面。 desktopCapture 支持捕获，应用窗口 和 桌面两种媒体源。</p><p>但是，此模块有使用限制，需要在主进程进行调用。 所以我们需要用到 Electron 中进行间通信的方式。</p><p>所以我们需要通过， IPC 通讯的形式，让我们，在渲染进程中进行调用。</p><p>首先，我们在 main.js 中，通过 ipcMain 注册一个方法，getSources</p><div class="language-jsx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// .... other code</span></span>
<span class="line"><span style="color:#E5C07B;">ipcMain</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">handle</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;getSources&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">async</span><span style="color:#ABB2BF;"> () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">	return</span><span style="color:#C678DD;"> await</span><span style="color:#E5C07B;"> desktopCapturer</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getSources</span><span style="color:#ABB2BF;">({ </span><span style="color:#E06C75;">types</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;window&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;screen&quot;</span><span style="color:#ABB2BF;">] });</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>接着，我们在渲染进程中，通过 <strong>ipcRenderer</strong> 去 invoke 调用此方法便实现了，这个调用过程。</p><div class="language-jsx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// .... other codes</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> inputSources</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> await</span><span style="color:#E5C07B;"> ipcRenderer</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">invoke</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;getSources&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// ... other codes</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>获得 source 列表后， 我们在渲染进程中，通过 HTML5 的 getUserMedia 进行捕获具体窗口或者桌面。</p><p>示例代码：</p><div class="language-jsx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// other Code</span></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> constraints</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">	audio</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">		mandatory</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">			chromeMediaSource</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;desktop&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">		},</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#E06C75;">	video</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">		mandatory</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">			chromeMediaSource</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;desktop&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">			chromeMediaSourceId</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">sourceId</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">		},</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> stream</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> await</span><span style="color:#E5C07B;"> navigator</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">mediaDevices</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getUserMedia</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">constraints</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">handleStream</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">stream</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> handleStream</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">stream</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">	const</span><span style="color:#E5C07B;"> video</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">querySelector</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;video&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">	video</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">srcObject</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> stream</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">	video</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">onloadedmetadata</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">e</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#E5C07B;"> video</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">play</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// other code</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><p>至此我们就完成了， 桌面视频数据采集了。</p><p>后续我们，可以对采集到的数据进行 ，本地录制或者 通过 webrtc 推到远端等一系列操作。</p><h3 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h3><p>在 electron 中实现桌面共享 和 chrome web 中差异还是蛮大的， 在 chrome 中我们只需要调用 <code>getDisplayMedia</code> 方法就能唤起桌面选择和画面采集。</p><p>但在 electron 中，我们需要使用到， 进程间通信模块 ipc 、 桌面采集模块 <code>desktopCapturer</code> 、以及 HTML5 的 getUserMedia 方法才能完成整个桌面采集的过程。</p><p>DEMO 代码：<a href="https://github.com/shitouzxy/Electron-screenCapturerer-demo" target="_blank" rel="noreferrer">shitouzxy/Electron-screenCapturerer-demo: a short demo capturerer screen in Electron . (github.com)</a></p>`,60)]))}const b=n(e,[["render",o]]);export{u as __pageData,b as default};
