import{_ as n,c as a,o as l,ah as p}from"./chunks/framework.DqD713j2.js";const b=JSON.parse('{"title":"JavaScript 正则表达式","description":"","frontmatter":{},"headers":[],"relativePath":"Document/JavaScript笔记/JavaScript高级/JavaScript正则表达式.md","filePath":"Document/JavaScript笔记/JavaScript高级/JavaScript正则表达式.md","lastUpdated":1750954157000}'),o={name:"Document/JavaScript笔记/JavaScript高级/JavaScript正则表达式.md"};function e(t,s,r,c,B,y){return l(),a("div",null,s[0]||(s[0]=[p(`<h1 id="javascript-正则表达式" tabindex="-1">JavaScript 正则表达式 <a class="header-anchor" href="#javascript-正则表达式" aria-label="Permalink to &quot;JavaScript 正则表达式&quot;">​</a></h1><p>练习正则的网站：<a href="https://codejiaonang.com/#/course/regex_chapter1/0/0" target="_blank" rel="noreferrer">编程胶囊-打造学习编程的最好系统 (codejiaonang.com)</a></p><p>编程胶囊是一个在线学习正则表达式的平台，通过丰富的案例手把手教你正则匹配规则，由浅入深，循序渐进。非常适合新手入门，两小时就能让你学会 JS 正则表达式，没开玩笑！跟着课程走就能在两小时内完全掌握，我当时也就花了两三个小时，有经验的可能也就个把小时。</p><p>正则表达式可视化网站：<a href="https://regex-vis.com/" target="_blank" rel="noreferrer">https://regex-vis.com/</a></p><p>正则表达式可视化开源地址：<a href="https://github.com/Bowen7/regex-vis" target="_blank" rel="noreferrer">https://github.com/Bowen7/regex-vis</a></p><p>正则可视化网站：<a href="https://jex.im/regulex/#!flags=&amp;re=%5E(a%7Cb)*%3F%24" target="_blank" rel="noreferrer">Regulex：JavaScript Regular Expression Visualizer (jex.im)</a></p><p>一个 JavaScript 正则表达式可视化工具，由纯 JavaScript 实现，源码托管在 Github 上。它可以帮助开发者更直观地理解和分析正则表达式，通过图形化的方式展示正则表达式的匹配过程和结构。</p><p><a href="https://juejin.cn/post/7150945473765834760" target="_blank" rel="noreferrer">两小时学会 JS 正则表达式，终身不忘 - 掘金 (juejin.cn)</a></p><p>—————</p><p>验证自己的正则是否正确：<a href="https://regexr-cn.com/" target="_blank" rel="noreferrer">RegExr: 学习、构建 和 测试 正则表达式 Test RegEx (regexr-cn.com)</a></p><p>如果你想验证自己的正则是否正确时就可以打开这个网站，他允许你编写正则表达式并进行用例测试。</p><h2 id="正则表达式文档" tabindex="-1">正则表达式文档 <a class="header-anchor" href="#正则表达式文档" aria-label="Permalink to &quot;正则表达式文档&quot;">​</a></h2><ul><li><p><strong>MDN 文档</strong>：</p><ul><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expressions" target="_blank" rel="noreferrer">正则表达式 - JavaScript | MDN (mozilla.org)</a></p></li><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/RegExp" target="_blank" rel="noreferrer">RegExp(正则表达式) - JavaScript | MDN (mozilla.org)</a></p></li></ul></li><li><p>菜鸟教程：<a href="https://www.runoob.com/js/js-regexp.html" target="_blank" rel="noreferrer">JavaScript 正则表达式 | 菜鸟教程 (runoob.com)</a></p></li><li><p>w3school 文档：<a href="https://www.w3school.com.cn/js/js_regexp.asp" target="_blank" rel="noreferrer">JavaScript 正则表达式 (w3school.com.cn)</a></p></li><li><p>新的 JavaScript 正则特性：<a href="https://es6.ruanyifeng.com/#docs/regex" target="_blank" rel="noreferrer">正则的扩展 - ECMAScript 6 入门 (ruanyifeng.com)</a></p><ul><li>ECMAScript 2018 内新增正则扩展</li></ul></li></ul><h2 id="正则表达式简介" tabindex="-1">正则表达式简介 <a class="header-anchor" href="#正则表达式简介" aria-label="Permalink to &quot;正则表达式简介&quot;">​</a></h2><h3 id="什么是正则表达式" tabindex="-1">什么是正则表达式 <a class="header-anchor" href="#什么是正则表达式" aria-label="Permalink to &quot;什么是正则表达式&quot;">​</a></h3><p>正则表达式：用于匹配规律规则的表达式，正则表达式最初是科学家对人类神经系统的工作原理的早期研究，现在在编程语言中有广泛的应用。</p><p>正则表通常被用来检索、替换那些符合某个模式(规则)的文本。 正则表达式是对字符串操作的一种逻辑公式，就是用事先定义好的一些特定字符、及这些特定字符的组合，组成一个“规则字符串”，这个“规则字符串”用来表达对字符串的一种过滤逻辑。</p><h3 id="正则表达式的作用" tabindex="-1">正则表达式的作用 <a class="header-anchor" href="#正则表达式的作用" aria-label="Permalink to &quot;正则表达式的作用&quot;">​</a></h3><ol><li>给定的字符串是否符合正则表达式的过滤逻辑(匹配)</li><li>可以通过正则表达式，从字符串中获取我们想要的特定部分(提取)</li><li>强大的字符串替换能力(替换)</li></ol><h3 id="正则表达式的特点" tabindex="-1">正则表达式的特点 <a class="header-anchor" href="#正则表达式的特点" aria-label="Permalink to &quot;正则表达式的特点&quot;">​</a></h3><ol><li>灵活性、逻辑性和功能性非常的强</li><li>可以迅速地用极简单的方式达到字符串的复杂控制</li><li>对于刚接触的人来说，比较晦涩难懂</li></ol><h2 id="正则表达式的测试" tabindex="-1">正则表达式的测试 <a class="header-anchor" href="#正则表达式的测试" aria-label="Permalink to &quot;正则表达式的测试&quot;">​</a></h2><ul><li>在线正则工具：<a href="https://c.runoob.com/front-end/854" target="_blank" rel="noreferrer">在线测试正则</a></li><li>工具中使用正则表达式 <ul><li>sublime/vscode/word</li><li>演示替换所有的数字</li></ul></li></ul><h2 id="正则表达式的组成-✨" tabindex="-1">正则表达式的组成 ✨ <a class="header-anchor" href="#正则表达式的组成-✨" aria-label="Permalink to &quot;正则表达式的组成 ✨&quot;">​</a></h2><ul><li>普通字符</li><li>特殊字符(元字符)：正则表达式中有特殊意义的字符</li></ul><p>示例演示：</p><ul><li><code>\\d</code> 匹配数字</li><li><code>ab\\d</code> 匹配 ab1、ab2</li></ul><h3 id="元字符串" tabindex="-1">元字符串 <a class="header-anchor" href="#元字符串" aria-label="Permalink to &quot;元字符串&quot;">​</a></h3><p>元字符就是拥有特动功能的特殊字符，大部分需要加反斜杠进行标识，以便于普通字符进行区别，而少数元字符，需要加反斜杠，以便转译为普通字符使用。</p><p>JavaScript 正则表达式支持的元字符如表所示。</p><h4 id="元字符" tabindex="-1">元字符 <a class="header-anchor" href="#元字符" aria-label="Permalink to &quot;元字符&quot;">​</a></h4><p>带<code>标注</code>表示的<strong>常用元字符串</strong></p><p>预定义类：某些常见模式的简写方式</p><table tabindex="0"><thead><tr><th>元字符</th><th>描述</th></tr></thead><tbody><tr><td><code>.</code></td><td>匹配单个字符，除了换行和行结束符</td></tr><tr><td><code>\\w</code></td><td>匹配任意的字母、数字和下划线，相当于[A-Za-z0-9_]</td></tr><tr><td><code>\\W</code></td><td>匹配除所有字母、数字和下划线以外的字符，相当于 [^A-Za-z0-9_]</td></tr><tr><td><code>\\d</code></td><td>匹配 0-9 之间的任一数字，相当于[0-9]</td></tr><tr><td><code>\\D</code></td><td>匹配所有 0-9 以外的字符，相当于 [^0-9]</td></tr><tr><td><code>\\s</code></td><td>匹配空格 (包括换行符、制表符、空格符等)，相等于[\\t\\r\\n\\v\\f]</td></tr><tr><td><code>\\S</code></td><td>匹配非空格的字符，相当于 [^ \\t\\r\\n\\v\\f]</td></tr><tr><td><code>^</code></td><td>表示匹配行首的文本(以谁开始)</td></tr><tr><td><code>$</code></td><td>表示匹配行尾的文本(以谁结束)</td></tr><tr><td>\\b</td><td>匹配单词边界</td></tr><tr><td>\\B</td><td>匹配非单词边界</td></tr><tr><td>\\0</td><td>匹配 NUL 字符</td></tr><tr><td>\\n</td><td>匹配换行符</td></tr><tr><td>\\f</td><td>匹配换页符</td></tr><tr><td>\\r</td><td>匹配回车符</td></tr><tr><td>\\t</td><td>匹配制表符</td></tr><tr><td>\\v</td><td>匹配垂直制表符</td></tr><tr><td>\\xxx</td><td>匹配以八进制数  xxxx  规定的字符</td></tr><tr><td>\\xdd</td><td>匹配以十六进制数  dd  规定的字符</td></tr><tr><td>\\uxxxx</td><td>匹配以十六进制  xxxx 规定的 Unicode  字符</td></tr></tbody></table><h3 id="重复-限定符" tabindex="-1">(重复)限定符 <a class="header-anchor" href="#重复-限定符" aria-label="Permalink to &quot;(重复)限定符&quot;">​</a></h3><table tabindex="0"><thead><tr><th>限定符</th><th>说明</th></tr></thead><tbody><tr><td>*</td><td>重复零次或更多次</td></tr><tr><td>+</td><td>重复一次或更多次</td></tr><tr><td>?</td><td>重复零次或一次</td></tr><tr><td><code>{n}</code></td><td>重复 n 次</td></tr><tr><td><code>{n,}</code></td><td>重复 n 次或更多次</td></tr><tr><td><code>{n,m}</code></td><td>重复 n 到 m 次</td></tr></tbody></table><h3 id="其它" tabindex="-1">其它 <a class="header-anchor" href="#其它" aria-label="Permalink to &quot;其它&quot;">​</a></h3><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">[] 字符串用中括号括起来，表示匹配其中的任一字符，相当于或的意思</span></span>
<span class="line"><span style="color:#ABB2BF;">[^]  匹配除中括号以内的内容</span></span>
<span class="line"><span style="color:#61AFEF;">\\</span><span style="color:#98C379;"> 转义符</span></span>
<span class="line"><span style="color:#ABB2BF;">| </span><span style="color:#61AFEF;">或者，选择两者中的一个。注意</span><span style="color:#ABB2BF;">|</span><span style="color:#61AFEF;">将左右两边分为两部分，而不管左右两边有多长多乱</span></span>
<span class="line"><span style="color:#ABB2BF;">() </span><span style="color:#61AFEF;">从两个直接量中选择一个，分组</span></span>
<span class="line"><span style="color:#61AFEF;">   eg：gr(a</span><span style="color:#ABB2BF;">|</span><span style="color:#61AFEF;">e</span><span style="color:#ABB2BF;">)y匹配gray和grey</span></span>
<span class="line"><span style="color:#ABB2BF;">[</span><span style="color:#56B6C2;">\\u</span><span style="color:#ABB2BF;">4e00-</span><span style="color:#56B6C2;">\\u</span><span style="color:#ABB2BF;">9fa5]  匹配汉字</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="正则案例" tabindex="-1">正则案例 <a class="header-anchor" href="#正则案例" aria-label="Permalink to &quot;正则案例&quot;">​</a></h2><p>验证手机号：</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#56B6C2;">^</span><span style="color:#ABB2BF;">\\</span><span style="color:#E06C75;">d</span><span style="color:#ABB2BF;">{</span><span style="color:#D19A66;">11</span><span style="color:#ABB2BF;">}</span><span style="color:#E06C75;">$</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>验证邮编：</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#56B6C2;">^</span><span style="color:#ABB2BF;">\\</span><span style="color:#E06C75;">d</span><span style="color:#ABB2BF;">{</span><span style="color:#D19A66;">6</span><span style="color:#ABB2BF;">}</span><span style="color:#E06C75;">$</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>验证日期 2022-5-01</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#56B6C2;">^</span><span style="color:#ABB2BF;">\\</span><span style="color:#E06C75;">d</span><span style="color:#ABB2BF;">{</span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">}</span><span style="color:#56B6C2;">-</span><span style="color:#ABB2BF;">\\</span><span style="color:#E06C75;">d</span><span style="color:#ABB2BF;">{</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">}</span><span style="color:#56B6C2;">-</span><span style="color:#ABB2BF;">\\</span><span style="color:#E06C75;">d</span><span style="color:#ABB2BF;">{</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">}</span><span style="color:#E06C75;">$</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>验证邮箱 <a href="mailto:xxx@itcast.cn" target="_blank" rel="noreferrer">xxx@itcast.cn</a>：</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#56B6C2;">^</span><span style="color:#ABB2BF;">\\</span><span style="color:#E06C75;">w</span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;">@\\</span><span style="color:#E06C75;">w</span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;">\\.\\</span><span style="color:#E06C75;">w</span><span style="color:#56B6C2;">+</span><span style="color:#E06C75;">$</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>验证 IP 地址 192.168.1.10</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#56B6C2;">^</span><span style="color:#ABB2BF;">\\</span><span style="color:#E06C75;">d</span><span style="color:#ABB2BF;">{</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">}\\(.\\</span><span style="color:#E06C75;">d</span><span style="color:#ABB2BF;">{</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">}){</span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">}</span><span style="color:#E06C75;">$</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="javascript-中使用正则表达式" tabindex="-1">JavaScript 中使用正则表达式 <a class="header-anchor" href="#javascript-中使用正则表达式" aria-label="Permalink to &quot;JavaScript 中使用正则表达式&quot;">​</a></h2><h3 id="_1、创建正则表达式对象" tabindex="-1">1、创建正则表达式对象 <a class="header-anchor" href="#_1、创建正则表达式对象" aria-label="Permalink to &quot;1、创建正则表达式对象&quot;">​</a></h3><h4 id="_1-通过调用-regexp-对象的构造函数创建" tabindex="-1">1.通过调用 RegExp 对象的构造函数创建 <a class="header-anchor" href="#_1-通过调用-regexp-对象的构造函数创建" aria-label="Permalink to &quot;1.通过调用 RegExp 对象的构造函数创建&quot;">​</a></h4><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> reg</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Regex</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;d&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;i&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> reg</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Regex</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;d&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;gi&quot;</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="_2-通过字面量创建" tabindex="-1">2.通过字面量创建 <a class="header-anchor" href="#_2-通过字面量创建" aria-label="Permalink to &quot;2.通过字面量创建&quot;">​</a></h4><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> reg</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /\\d/</span><span style="color:#C678DD;">i</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> reg</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /\\d/</span><span style="color:#C678DD;">gi</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="正则对象的参数说明-💫" tabindex="-1">正则对象的参数说明 💫 <a class="header-anchor" href="#正则对象的参数说明-💫" aria-label="Permalink to &quot;正则对象的参数说明 💫&quot;">​</a></h4><table tabindex="0"><thead><tr><th>标志</th><th>说明</th></tr></thead><tbody><tr><td>i</td><td>忽略大小写</td></tr><tr><td>g</td><td>全局匹配</td></tr><tr><td>gi</td><td>全局匹配+忽略大小写</td></tr></tbody></table><hr><h3 id="_2、javascript-正则表达式的方法-🌟" tabindex="-1">2、JavaScript 正则表达式的方法 🌟 <a class="header-anchor" href="#_2、javascript-正则表达式的方法-🌟" aria-label="Permalink to &quot;2、JavaScript 正则表达式的方法 🌟&quot;">​</a></h3><p><strong>MDN 的正则方法文档</strong>：<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/RegExp/@@match" target="_blank" rel="noreferrer">RegExp.prototype 方法() - JavaScript | MDN (mozilla.org)</a></p><h4 id="_1-字符串的三种方法" tabindex="-1">1.字符串的三种方法 <a class="header-anchor" href="#_1-字符串的三种方法" aria-label="Permalink to &quot;1.字符串的三种方法&quot;">​</a></h4><h5 id="search-方法-返回匹配字符串的起始位置或者索引" tabindex="-1">search()  方法-返回匹配字符串的起始位置或者索引 <a class="header-anchor" href="#search-方法-返回匹配字符串的起始位置或者索引" aria-label="Permalink to &quot;search()  方法-返回匹配字符串的起始位置或者索引&quot;">​</a></h5><p>用于检索字符串中指定的子字符串，或检索与正则表达式相匹配的子字符串，并返回子串的起始位置。</p><ul><li><p>方法返回第一个匹配项在整个字符串中的位置（索引），如果没有匹配项，则返回  -1。</p></li><li><p>匹配的实例：</p></li><li><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> strText</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;hello china，i love china&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> regex</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /china/</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">strText</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">search</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">regex</span><span style="color:#ABB2BF;">)); </span><span style="color:#7F848E;font-style:italic;">// 6</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li><li><p>没有匹配的实例：</p></li><li><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> strText</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;hello china，i love china&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> regex</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /devpoint/</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">strText</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">search</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">regex</span><span style="color:#ABB2BF;">)); </span><span style="color:#7F848E;font-style:italic;">// -1</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li></ul><h5 id="replace-方法-替换匹配到的字符串" tabindex="-1">replace()  方法-替换匹配到的字符串 <a class="header-anchor" href="#replace-方法-替换匹配到的字符串" aria-label="Permalink to &quot;replace()  方法-替换匹配到的字符串&quot;">​</a></h5><p>用于在字符串中用一些字符串替换另一些字符串，或替换一个与正则表达式匹配的子串。</p><ul><li><p>方法接受两个参数：</p><ul><li><p>1.要搜索的值</p></li><li><p>2.要替换的新值</p></li></ul></li><li><p>方法返回一个包含被替换后的新字符串，需要注意的是，它不会改变原始字符串，并且只会替换搜索到的第一个值。</p></li><li><p>实例代码：</p></li><li><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> strText</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;hello world,i love world&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> regex</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /world/</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// hello china,i love world</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">strText</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">replace</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">regex</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;china&quot;</span><span style="color:#ABB2BF;">));</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li></ul><h5 id="replaceall-方法-替换所有匹配到的值" tabindex="-1">replaceAll() 方法-替换所有匹配到的值 <a class="header-anchor" href="#replaceall-方法-替换所有匹配到的值" aria-label="Permalink to &quot;replaceAll() 方法-替换所有匹配到的值&quot;">​</a></h5><p>类似于方法 <strong>replace()</strong> ，但它允许替换字符串中所有匹配的值或正则表达式</p><ul><li><p>接受两个参数：</p><ul><li><p>1.要搜索的值，如果是正则，则必须带上全局标记  g</p></li><li><p>2.要替换的新值</p></li></ul></li><li><p>它返回一个包含所有新值的新字符串，同样也不会更改原始字符串</p></li><li><p>实例代码：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> strText</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;hello world,i love world&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> regex</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /world/</span><span style="color:#C678DD;">g</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">strText</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">replaceAll</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">regex</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;china&quot;</span><span style="color:#ABB2BF;">)); </span><span style="color:#7F848E;font-style:italic;">// hello china,i love china</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>等效于如下代码：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> strText</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;hello world,i love world&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">strText</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">replaceAll</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;world&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;china&quot;</span><span style="color:#ABB2BF;">)); </span><span style="color:#7F848E;font-style:italic;">// hello china,i love china</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><blockquote><p>通过正则查找替换，在正则表达式中加上全局标记 g , 同样可以替换所有符合正则条件的字符串，如下代码：</p></blockquote><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> strText</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;hello world,i love world&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> regex</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /world/</span><span style="color:#C678DD;">g</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">strText</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">replace</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">regex</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;china&quot;</span><span style="color:#ABB2BF;">)); </span><span style="color:#7F848E;font-style:italic;">// hello china,i love china</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li></ul><h4 id="_2-regexp-对象的方法" tabindex="-1">2.RegExp 对象的方法 <a class="header-anchor" href="#_2-regexp-对象的方法" aria-label="Permalink to &quot;2.RegExp 对象的方法&quot;">​</a></h4><blockquote><p>在 JavaScript 中，RegExp 对象是一个预定义了属性和方法的正则表达式对象。</p></blockquote><h5 id="test-方法-测试是否匹配-返回布尔值" tabindex="-1">test() 方法-测试是否匹配，返回布尔值 <a class="header-anchor" href="#test-方法-测试是否匹配-返回布尔值" aria-label="Permalink to &quot;test() 方法-测试是否匹配，返回布尔值&quot;">​</a></h5><p>文档：<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/RegExp/test" target="_blank" rel="noreferrer">RegExp.prototype.test() - JavaScript | MDN (mozilla.org)</a></p><blockquote><p>test() 方法：用于测试指定字符串和正则表达式之间是否匹配，接受一个字符串作为其参数，并根据是否匹配返回 true 或 false 。</p></blockquote><p>假设在下面的字符串 strText 中检测单词 china 是否存在。可以为查找单词创建一个正则表达式并测试该正则表达式和字符串 strText 之间是否匹配。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> strText</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;hello china&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> regex</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /china/</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">regex</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">test</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">strText</span><span style="color:#ABB2BF;">)); </span><span style="color:#7F848E;font-style:italic;">// true</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>下面是没有匹配的实例代码：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> strText</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;hello China&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> regex</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /china/</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">regex</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">test</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">strText</span><span style="color:#ABB2BF;">)); </span><span style="color:#7F848E;font-style:italic;">// false</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>从上面代码可以看到，大小写是会影响匹配的结果，如果需要忽略大小写，则需要使用标记 i，如下代码：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> strText</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;hello China&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> regex</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /china/</span><span style="color:#C678DD;">i</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">regex</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">test</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">strText</span><span style="color:#ABB2BF;">)); </span><span style="color:#7F848E;font-style:italic;">// true</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><blockquote><p>请注意，在语法上  .match()  与  .test()  在使用上是 “相反” 的</p></blockquote><h5 id="exec-方法-生成新数组-检索出正则的匹配结果" tabindex="-1">exec() 方法-生成新数组，检索出正则的匹配结果 <a class="header-anchor" href="#exec-方法-生成新数组-检索出正则的匹配结果" aria-label="Permalink to &quot;exec() 方法-生成新数组，检索出正则的匹配结果&quot;">​</a></h5><p>文档：<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/RegExp/exec#%E8%AF%AD%E6%B3%95" target="_blank" rel="noreferrer">RegExp.prototype.exec() - JavaScript | MDN (mozilla.org)</a></p><blockquote><p>exec() 方法用于检索字符串中的正则表达式的匹配。</p><p>该函数返回一个数组，其中存放匹配的结果。如果未找到匹配，则返回值为 null。</p></blockquote><h6 id="语法" tabindex="-1">语法 <a class="header-anchor" href="#语法" aria-label="Permalink to &quot;语法&quot;">​</a></h6><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> regex1</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> RegExp</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;foo*&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;g&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> str</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;table football, foosball&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> array1</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> regex1</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">exec</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">str</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h6 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h6><p><code>str</code>：要匹配正则表达式的字符串</p><h6 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-label="Permalink to &quot;返回值&quot;">​</a></h6><p>如果匹配失败，<code>exec()</code>  方法返回  <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/null" target="_blank" rel="noreferrer"><code>null</code></a>，并将正则表达式的  <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/RegExp/lastIndex" target="_blank" rel="noreferrer"><code>lastIndex</code></a>  重置为 0。</p><p>如果匹配成功，<code>exec()</code>  方法返回一个数组，并更新正则表达式对象的  <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/RegExp/lastIndex" target="_blank" rel="noreferrer"><code>lastIndex</code></a>  属性。</p><p>完全匹配成功的文本将作为返回数组的第一项，从第二项起，后续每项都对应一个匹配的捕获组。数组还具有以下额外的属性：</p><p><code>index</code>：</p><p>匹配到的字符位于原始字符串的基于 0 的索引值。</p><p><code>input</code>：</p><p>匹配的原始字符串。</p><p><code>groups</code>：</p><p>一个命名捕获组对象，其键是名称，值是捕获组。若没有定义命名捕获组，则  <code>groups</code>  的值为  <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/undefined" target="_blank" rel="noreferrer"><code>undefined</code></a>。参阅<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expressions/Groups_and_Backreferences" target="_blank" rel="noreferrer">捕获组</a>以了解更多信息。</p><p><code>indices</code>  可选</p><p>此属性仅在设置了  <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/RegExp/hasIndices" target="_blank" rel="noreferrer"><code>d</code></a>  标志位时存在。它是一个数组，其中每一个元素表示一个子字符串的边界。每个子字符串匹配本身就是一个数组，其中第一个元素表示起始索引，第二个元素表示结束索引。</p><h5 id="match-方法-提取匹配项" tabindex="-1">match() 方法-提取匹配项 <a class="header-anchor" href="#match-方法-提取匹配项" aria-label="Permalink to &quot;match() 方法-提取匹配项&quot;">​</a></h5><p>文档：[RegExp.prototype<a href="./">@@match</a> - JavaScript | MDN (mozilla.org)](<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/RegExp/@@match" target="_blank" rel="noreferrer">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/RegExp/@@match</a>)</p><blockquote><p>match()  与字符串一起使用以检查字符串和正则表达式 regex 之间的匹配，用来提取匹配项，以正则表达式为参数</p></blockquote><p><strong>语法</strong>：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">str</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">match</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">regex</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>方法返回 3 个可能的值：</p><ul><li><p>如果正则表达式包含一个 g 标记，即为全局匹配，它将返回一个包含所有匹配项的数组，没捕获组信息；</p></li><li><p>如果正则表达式没有 g 标记，它将返回一个包含第一个匹配项和其相关的捕获组的数组；</p></li><li><p>如果根本没有匹配项，则返回 null 。</p></li></ul><blockquote><p>groups：一个命名捕获组的对象，其键是名称，值为捕获组，如果未定义命名捕获组，则为 undefined。</p></blockquote><p>带有标记 g 的实例代码：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> strText</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;Hello China&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> regex</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /</span><span style="color:#D19A66;">[A-Z]</span><span style="color:#E06C75;">/</span><span style="color:#C678DD;">g</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// 大写字母正则表达式</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">strText</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">match</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">regex</span><span style="color:#ABB2BF;">)); </span><span style="color:#7F848E;font-style:italic;">// [ &#39;H&#39;, &#39;C&#39; ]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>没有标记 g 的实例代码：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> text</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;Hello World&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> regex</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /</span><span style="color:#D19A66;">[A-Z]</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">//Capital letters regex.</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">text</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">match</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">regex</span><span style="color:#ABB2BF;">)); </span><span style="color:#7F848E;font-style:italic;">// [ &#39;H&#39;, index: 0, input: &#39;Hello China&#39;, groups: undefined ]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>当没有匹配的实例代码：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> strText</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;hello china&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> regex</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /</span><span style="color:#D19A66;">[A-Z]</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// 大写字母正则表达式</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">strText</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">match</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">regex</span><span style="color:#ABB2BF;">)); </span><span style="color:#7F848E;font-style:italic;">// null</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><hr><h3 id="正则匹配" tabindex="-1">正则匹配 <a class="header-anchor" href="#正则匹配" aria-label="Permalink to &quot;正则匹配&quot;">​</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 匹配日期</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> dateStr</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;2015-10-10&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> reg</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /</span><span style="color:#C678DD;">^</span><span style="color:#E06C75;">\\d</span><span style="color:#D19A66;">{4}</span><span style="color:#E06C75;">-\\d</span><span style="color:#D19A66;">{1,2}</span><span style="color:#E06C75;">-\\d</span><span style="color:#D19A66;">{1,2}</span><span style="color:#C678DD;">$</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">reg</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">test</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">dateStr</span><span style="color:#ABB2BF;">));</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="匹配正则表达式" tabindex="-1">匹配正则表达式 <a class="header-anchor" href="#匹配正则表达式" aria-label="Permalink to &quot;匹配正则表达式&quot;">​</a></h3><h4 id="描述字符范围" tabindex="-1">描述字符范围 <a class="header-anchor" href="#描述字符范围" aria-label="Permalink to &quot;描述字符范围&quot;">​</a></h4><p>在正则表达式语法中，放括号表示字符范围。在方括号中可以包含多个字符，表示匹配其中任意一个字符。如果多个字符的编码顺序是连续的，可以仅指定开头和结尾字符，省略中间字符，仅使用连字符<code>~</code>表示。如果在方括号内添加脱字符<code>^</code>前缀，还可以表示范围之外的字符。例如：</p><ul><li>[abc]：查找方括号内任意一个字符。</li><li>[^abc]：查找不在方括号内的字符。</li><li>[0-9]：查找从 0  至 9  范围内的数字，即查找数字。</li><li>[a-z]：查找从小写  a  到小写  z  范围内的字符，即查找小写字母。</li><li>[A-Z]：查找从大写  A  到大写  Z  范围内的字符，即查找大写字母。</li><li>[A-z]：查找从大写  A  到小写  z  范围内的字符，即所有大小写的字母。</li></ul><p>匹配任意 ASCII  字符：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> r</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /</span><span style="color:#D19A66;">[\\u0000-\\u00ff]</span><span style="color:#E06C75;">/</span><span style="color:#C678DD;">g</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>匹配任意双字节的汉字：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> r</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /</span><span style="color:#D19A66;">[</span><span style="color:#ABB2BF;">^</span><span style="color:#D19A66;">\\u0000-\\u00ff]</span><span style="color:#E06C75;">/</span><span style="color:#C678DD;">g</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>匹配任意大小写字母和数字：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> r</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /</span><span style="color:#D19A66;">[a-zA-Z0-9]</span><span style="color:#E06C75;">/</span><span style="color:#C678DD;">g</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>使用 Unicode  编码设计，匹配数字：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> r</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /</span><span style="color:#D19A66;">[\\u0030-\\u0039]</span><span style="color:#E06C75;">/</span><span style="color:#C678DD;">g</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>匹配任意大写字母：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> r</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /</span><span style="color:#D19A66;">[\\u0041-\\u004A]</span><span style="color:#E06C75;">/</span><span style="color:#C678DD;">g</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>匹配任意小写字母：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> r</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /</span><span style="color:#D19A66;">[\\u0061-\\u007A]</span><span style="color:#E06C75;">/</span><span style="color:#C678DD;">g</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>在字符范围内可以混用各种字符模式：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> s</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;abcdez&quot;</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">//字符串直接量</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> r</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /</span><span style="color:#D19A66;">[abce-z]</span><span style="color:#E06C75;">/</span><span style="color:#C678DD;">g</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">//字符a、b、c，以及从e~z之间的任意字符</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> s</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">match</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">r</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">//返回数组[&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;e&quot;,&quot;z&quot;]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>在中括号内不要有空格，否则会误解为还要匹配空格:</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> r</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /</span><span style="color:#D19A66;">[0-9]</span><span style="color:#E06C75;">/</span><span style="color:#C678DD;">g</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>字符范围可以组合使用，以便设计更灵活的匹配模式：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 字符串直接量</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> s</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;abc4 abd6 abe3 abf1 abg7&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 前两个字符为ab，第三个字符为从c到g，第四个字符为1~7的任意数字</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> r</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /ab</span><span style="color:#D19A66;">[c-g][1-7]</span><span style="color:#E06C75;">/</span><span style="color:#C678DD;">g</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 返回数组[&quot;abc4&quot;,&quot;abd6&quot;,&quot;abe3&quot;,&quot;abf1&quot;,&quot;abg7&quot;]</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> s</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">match</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">r</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>使用反义字符范围可以匹配很多无法直接描述的字符，达到以少应多的目的：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> r</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /</span><span style="color:#D19A66;">[</span><span style="color:#ABB2BF;">^</span><span style="color:#D19A66;">0123456789]</span><span style="color:#E06C75;">/</span><span style="color:#C678DD;">g</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><hr><p>示例 1：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">/./</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">test</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;除了回车换行以为的任意字符&quot;</span><span style="color:#ABB2BF;">)); </span><span style="color:#7F848E;font-style:italic;">//true</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">/.</span><span style="color:#D19A66;">*</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">test</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;0个到多个&quot;</span><span style="color:#ABB2BF;">)); </span><span style="color:#7F848E;font-style:italic;">//true</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">/.</span><span style="color:#D19A66;">+</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">test</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;1个到多个&quot;</span><span style="color:#ABB2BF;">)); </span><span style="color:#7F848E;font-style:italic;">//true</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">/.</span><span style="color:#D19A66;">?</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">test</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;哈哈&quot;</span><span style="color:#ABB2BF;">)); </span><span style="color:#7F848E;font-style:italic;">//true</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">/</span><span style="color:#D19A66;">[0-9]</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">test</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;9527&quot;</span><span style="color:#ABB2BF;">)); </span><span style="color:#7F848E;font-style:italic;">//true</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">/</span><span style="color:#D19A66;">[a-z]</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">test</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;what&quot;</span><span style="color:#ABB2BF;">)); </span><span style="color:#7F848E;font-style:italic;">//true</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">/</span><span style="color:#D19A66;">[A-Z]</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">test</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;Are&quot;</span><span style="color:#ABB2BF;">)); </span><span style="color:#7F848E;font-style:italic;">//true</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">/</span><span style="color:#D19A66;">[a-zA-Z]</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">test</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;干啥子&quot;</span><span style="color:#ABB2BF;">)); </span><span style="color:#7F848E;font-style:italic;">//false</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">/</span><span style="color:#D19A66;">[0-9a-zA-Z]</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">test</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;9ebg&quot;</span><span style="color:#ABB2BF;">)); </span><span style="color:#7F848E;font-style:italic;">//true</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">/b</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">(ara)/</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">test</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;abra&quot;</span><span style="color:#ABB2BF;">)); </span><span style="color:#7F848E;font-style:italic;">//true</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">/</span><span style="color:#D19A66;">[a-z]{2,3}</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">test</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;arfsf&quot;</span><span style="color:#ABB2BF;">)); </span><span style="color:#7F848E;font-style:italic;">//true</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>示例 2：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">/\\d/</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">test</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;998&quot;</span><span style="color:#ABB2BF;">)); </span><span style="color:#7F848E;font-style:italic;">//true</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">/\\d</span><span style="color:#D19A66;">*</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">test</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;998&quot;</span><span style="color:#ABB2BF;">)); </span><span style="color:#7F848E;font-style:italic;">//true</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">/\\d</span><span style="color:#D19A66;">+</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">test</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;998&quot;</span><span style="color:#ABB2BF;">)); </span><span style="color:#7F848E;font-style:italic;">//true</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">/\\d</span><span style="color:#D19A66;">{0,}</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">test</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;998&quot;</span><span style="color:#ABB2BF;">)); </span><span style="color:#7F848E;font-style:italic;">//true</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">/\\d</span><span style="color:#D19A66;">{2,3}</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">test</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;998&quot;</span><span style="color:#ABB2BF;">)); </span><span style="color:#7F848E;font-style:italic;">//true</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">/\\D/</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">test</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;eat&quot;</span><span style="color:#ABB2BF;">)); </span><span style="color:#7F848E;font-style:italic;">//true</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">/\\s/</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">test</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;  &quot;</span><span style="color:#ABB2BF;">)); </span><span style="color:#7F848E;font-style:italic;">//true</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">/\\S/</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">test</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;嘎嘎&quot;</span><span style="color:#ABB2BF;">)); </span><span style="color:#7F848E;font-style:italic;">//true</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">/\\w/</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">test</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;_&quot;</span><span style="color:#ABB2BF;">)); </span><span style="color:#7F848E;font-style:italic;">//true</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">/\\W/</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">test</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;_&quot;</span><span style="color:#ABB2BF;">)); </span><span style="color:#7F848E;font-style:italic;">//true</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><hr><h3 id="选择匹配" tabindex="-1">选择匹配 <a class="header-anchor" href="#选择匹配" aria-label="Permalink to &quot;选择匹配&quot;">​</a></h3><p>选择匹配类似于 JavaScript  的逻辑与运算，使用竖线<code>|</code>描述，表示在两个子模式的匹配结果中任选一个。例如：</p><p>1)  匹配任意数字或字母</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> r</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /\\w</span><span style="color:#D19A66;">+</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">\\d</span><span style="color:#D19A66;">+</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>2)  可以定义多重选择模式。设计方法：在多个子模式之间加入选择操作符。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> r</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /(abc)</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">(efg)</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">(123)</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">(456)/</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><blockquote><p>为了避免歧义，应该为选择操作的多个子模式加上小括号</p></blockquote><h4 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h4><p>设计对提交的表单字符串进行敏感词过滤。先设计一个敏感词列表，然后使用竖线把它们连接在一起，定义选择匹配模式，最后使用字符串的  replace()  方法把所有敏感字符替换为可以显示的编码格式。代码如下：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> s</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &#39;&lt;meta charset=&quot;utf-8&quot;&gt;&#39;</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">//待过滤的表单提交信息</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> r</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /</span><span style="color:#56B6C2;">\\&#39;</span><span style="color:#ABB2BF;">|</span><span style="color:#56B6C2;">\\&quot;</span><span style="color:#ABB2BF;">|</span><span style="color:#56B6C2;">\\&lt;</span><span style="color:#ABB2BF;">|</span><span style="color:#56B6C2;">\\&gt;</span><span style="color:#E06C75;">/</span><span style="color:#C678DD;">gi</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">//过滤敏感字符的正则表达式</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> f</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	//替换函数</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	////把敏感字符替换为对应的网页显示的编码格式</span></span>
<span class="line"><span style="color:#C678DD;">	return</span><span style="color:#98C379;"> &quot;&amp;#&quot;</span><span style="color:#56B6C2;"> +</span><span style="color:#E5C07B;"> arguments</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">].</span><span style="color:#61AFEF;">charCodeAt</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">+</span><span style="color:#98C379;"> &quot;;&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> s</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">replace</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">r</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">f</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">//执行过滤替换</span></span>
<span class="line"><span style="color:#E5C07B;">document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">//在网页中显示正常的字符信息</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><hr><h3 id="重复-限定-符匹配" tabindex="-1">重复(限定)符匹配 <a class="header-anchor" href="#重复-限定-符匹配" aria-label="Permalink to &quot;重复(限定)符匹配&quot;">​</a></h3><p>使用的是限定符进行匹配</p><p>重复类量词列表跟上面限定符表格一样的</p><table tabindex="0"><thead><tr><th>量词</th><th>描述</th></tr></thead><tbody><tr><td><code>n+</code></td><td>匹配任何包含至少一个  n  的字符串</td></tr><tr><td><code>n*</code></td><td>匹配任何包含零个或多个  n  的字符串</td></tr><tr><td><code>n?</code></td><td>匹配任何包含零个或一个  n  的字符串</td></tr><tr><td><code>n{x}</code></td><td>匹配包含  x  个  n  的序列的字符串</td></tr><tr><td><code>n{x,y}</code></td><td>匹配包含最少  x  个、最多  y  个  n  的序列的字符串</td></tr><tr><td><code>n{x,}</code></td><td>匹配包含至少  x  个  n  的序列的字符串</td></tr></tbody></table><h4 id="重复-限定-符匹配示例" tabindex="-1">重复(限定)符匹配示例 <a class="header-anchor" href="#重复-限定-符匹配示例" aria-label="Permalink to &quot;重复(限定)符匹配示例&quot;">​</a></h4><p>下面结合示例进行演示说明，先设计一个字符串：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> s</span><span style="color:#56B6C2;"> =</span></span>
<span class="line"><span style="color:#98C379;">	&quot;ggle gogle google gooogle goooogle gooooogle goooooogle gooooooogle goooooooogle&quot;</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>1)  如果仅匹配单词  ggle  和  gogle，可以设计：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> r</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /go</span><span style="color:#D19A66;">?</span><span style="color:#E06C75;">gle/</span><span style="color:#C678DD;">g</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> s</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">match</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">r</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>量词<code>?</code>表示前面字符或子表达式为可有可无，等效于：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> r</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /go</span><span style="color:#D19A66;">{0,1}</span><span style="color:#E06C75;">gle/</span><span style="color:#C678DD;">g</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> s</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">match</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">r</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>2)  如果匹配第 4  个单词  gooogle，可以设计：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> r</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /go</span><span style="color:#D19A66;">{3}</span><span style="color:#E06C75;">gle/</span><span style="color:#C678DD;">g</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> s</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">match</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">r</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>等效于：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> r</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /gooogle/</span><span style="color:#C678DD;">g</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> s</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">match</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">r</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>3)  如果匹配第 4  个到第 6  个之间的单词，可以设计：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> r</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /go</span><span style="color:#D19A66;">{3,5}</span><span style="color:#E06C75;">gle/</span><span style="color:#C678DD;">g</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> s</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">match</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">r</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>4)  如果匹配所有单词，可以设计：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> r</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /go</span><span style="color:#D19A66;">*</span><span style="color:#E06C75;">gle/</span><span style="color:#C678DD;">g</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> s</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">match</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">r</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>量词<code>*</code>表示前面字符或表达式可以不出现，或者重复出现任意多次。等效于：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> r</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /go(0,)gle/</span><span style="color:#C678DD;">g</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> s</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">match</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">r</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>5)  如果匹配包含字符“o”的所有词，可以设计：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> r</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /go</span><span style="color:#D19A66;">+</span><span style="color:#E06C75;">gle/</span><span style="color:#C678DD;">g</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> s</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">match</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">r</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>量词<code>+</code>表示前面字符或子表达式至少出现 1  次，最多重复次数不限。等效于：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> r</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /go</span><span style="color:#D19A66;">{1,}</span><span style="color:#E06C75;">gle/</span><span style="color:#C678DD;">g</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> s</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">match</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">r</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>重复类量词总是出现在它们所作用的字符或子表达式后面。如果想作用于多个字符，需要使用小括号把它们包裹在一起形成一个子表达式</p><hr><h3 id="惰性匹配" tabindex="-1">惰性匹配 <a class="header-anchor" href="#惰性匹配" aria-label="Permalink to &quot;惰性匹配&quot;">​</a></h3><p>重复类量词都具有贪婪性，在条件允许的前提下，会匹配尽可能多的字符。</p><ul><li>?、{n} 和 {n,m}  重复类具有弱贪婪性，表现为贪婪的有限性。</li><li>*、+  和 {n,}  重复类具有强贪婪性，表现为贪婪的无限性。</li></ul><h4 id="惰性匹配示例" tabindex="-1">惰性匹配示例 <a class="header-anchor" href="#惰性匹配示例" aria-label="Permalink to &quot;惰性匹配示例&quot;">​</a></h4><p>越是排在左侧的重复类量词匹配优先级越高。下面示例显示当多个重复类量词同时满足条件时，会在保证右侧重复类量词最低匹配次数基础上，使最左侧的重复类量词尽可能占有所有字符。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> s</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;&lt;html&gt;&lt;head&gt;&lt;title&gt;&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt;&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> r</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /(&lt;.</span><span style="color:#D19A66;">*</span><span style="color:#E06C75;">&gt;)(&lt;.</span><span style="color:#D19A66;">*</span><span style="color:#E06C75;">&gt;)/</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> s</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">match</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">r</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//左侧表达式匹配&quot;&lt;html&gt;&lt;head&gt;&lt;title&gt;&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt;&quot;</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">])；</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">]);  </span><span style="color:#7F848E;font-style:italic;">//右侧表达式匹配“&lt;/html&gt;”</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>与贪婪匹配相反，惰性匹配将遵循另一种算法：在满足条件的前提下，尽可能少的匹配字符。定义惰性匹配的方法：在重复类量词后面添加问号?限制词。贪婪匹配体现了最大化匹配原则，惰性匹配则体现最小化匹配原则。</p><h4 id="示例-2" tabindex="-1">示例 2 <a class="header-anchor" href="#示例-2" aria-label="Permalink to &quot;示例 2&quot;">​</a></h4><p>下面示例演示了如何定义匹配模式</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> s</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;&lt;html&gt;&lt;head&gt;&lt;title&gt;&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt;&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> r</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /&lt;.</span><span style="color:#D19A66;">*?</span><span style="color:#E06C75;">&gt;/</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> s</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">match</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">r</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">//返回单个元素数组[&quot;&lt;html&gt;&quot;]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>在上面示例中，对于正则表达式 /&lt;.*?&gt;/  来说，它可以返回匹配字符串 &quot;&lt;&gt;&quot;，但是为了能够确保匹配条件成立，在执行中还是匹配了带有 4  个字符的字符串“html”。惰性取值不能够以违反模式限定的条件而返回，除非没有找到符合条件的字符串，否则必须满足它。</p><p>针对 6  种重复类惰性匹配的简单描述如下：</p><ul><li>{n,m}?：尽量匹配  n  次，但是为了满足限定条件也可能最多重复  m  次。</li><li>{n}?：尽量匹配  n  次。</li><li>{n,}?：尽量匹配  n  次，但是为了满足限定条件也可能匹配任意次。</li><li>??：尽量匹配，但是为了满足限定条件也可能最多匹配 1  次，相当于 {0,1}?。</li><li>+?：尽量匹配 1  次，但是为了满足限定条件也可能匹配任意次，相当于 {1,}?。</li><li>*? ：尽量不匹配，但是为了满足限定条件也可能匹配任意次，相当于 {0,}?。</li></ul><hr><h2 id="边界量词" tabindex="-1">边界量词 <a class="header-anchor" href="#边界量词" aria-label="Permalink to &quot;边界量词&quot;">​</a></h2><p>边界就是确定匹配模式的位置，如字符串的头部或尾部，具体说明如表所示。</p><p>JavaScript 正则表达式支持的边界量词</p><table tabindex="0"><thead><tr><th>量词</th><th>说明</th></tr></thead><tbody><tr><td>^</td><td>匹配开头，在多行检测中，会匹配一行的开头</td></tr><tr><td>$</td><td>匹配结尾，在多行检测中，会匹配一行的结尾</td></tr></tbody></table><p>下面代码演示如何使用边界量词。先定义字符串：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> s</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;how are you&quot;</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>1)  匹配最后一个单词</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> r</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /\\w</span><span style="color:#D19A66;">+</span><span style="color:#C678DD;">$</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> s</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">match</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">r</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">//返回数组[&quot;you&quot;]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>2)  匹配第一个单词</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> r</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /</span><span style="color:#C678DD;">^</span><span style="color:#E06C75;">\\w</span><span style="color:#D19A66;">+</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> s</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">match</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">r</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">//返回数组[&quot;how&quot;]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>3)  匹配每一个单词</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> r</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /\\w</span><span style="color:#D19A66;">+</span><span style="color:#E06C75;">/</span><span style="color:#C678DD;">g</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> s</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">match</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">r</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">//返回数组[&quot;how&quot;,&quot;are&quot;,&quot;you&quot;]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><hr><h2 id="声明词量" tabindex="-1">声明词量 <a class="header-anchor" href="#声明词量" aria-label="Permalink to &quot;声明词量&quot;">​</a></h2><p>声明表示条件的意思。声明词量包括正向声明和反向声明两种模式。</p><h3 id="正向声明" tabindex="-1">正向声明 <a class="header-anchor" href="#正向声明" aria-label="Permalink to &quot;正向声明&quot;">​</a></h3><p>指定匹配模式后面的字符必须被匹配，但又不返回这些字符。语法格式如下：</p><p>匹配模式 (?=  匹配条件)</p><p>声明包含在小括号内，它不是分组，因此作为子表达式。</p><p>下面代码定义一个正前向生命的匹配模式。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> s</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;one : 1; two : 2&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> r</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /\\w</span><span style="color:#D19A66;">*</span><span style="color:#E06C75;">(?==)/</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">//使用正前向声明，指定执行匹配必须满足的条件</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> s</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">match</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">r</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">//返回数组[&quot;two&quot;]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>在上面示例中，通过<code>?==</code>锚定条件，指定只有在 <code>\\w</code>所能够匹配的字符后面跟随一个等号字符，才能够执行 <code>\\w</code>  匹配。所以，最后匹配的字符串“two”，而不是字符串“one”。</p><h3 id="反向声明" tabindex="-1">反向声明 <a class="header-anchor" href="#反向声明" aria-label="Permalink to &quot;反向声明&quot;">​</a></h3><p>与正向声明匹配相反，指定接下来的字符都不必被匹配。语法格式如下：</p><p>匹配模式(?!  匹配条件)</p><p>下面代码定义一个反前向生命的匹配模式。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> s</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;one : 1; two : 2&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> r</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /\\w</span><span style="color:#D19A66;">*</span><span style="color:#E06C75;">(?!=)/</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">//使用正前向声明，指定执行匹配不必满足的条件</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> s</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">match</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">r</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">//返回数组[&quot;one&quot;]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>在上面示例中，通过<code>?!=</code>锚定条件，指定只有在“\\w*”所能够匹配的字符后面不跟随一个等号字符，才能够执行 \\w*匹配。所以，最后匹配的是字符串“one”，而不是字符串“two”。</p><hr><h3 id="子表达式" tabindex="-1">子表达式 <a class="header-anchor" href="#子表达式" aria-label="Permalink to &quot;子表达式&quot;">​</a></h3><p>使用小括号可以对字符模式进行任意分组，在小括号内的字符串表示子表达式，也称为子模式。子表达式具有独立的匹配功能，保存独立的匹配结果；同时，小括号后的量词将会作用于整个子表达式。</p><p>通过分组可以在一个完整的字符模式中定义一个或多个子模式。当正则表达式成功地匹配目标字符串后，也可以从目标字符串中抽出与子模式相匹配的子内容。</p><h4 id="子表达式示例" tabindex="-1">子表达式示例 <a class="header-anchor" href="#子表达式示例" aria-label="Permalink to &quot;子表达式示例&quot;">​</a></h4><p>在下面代码中，不仅能匹配出每个变量声明，同时还抽出每个变量及其值。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> s</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;ab=21, bc=45, cd=43&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> r</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /(\\w</span><span style="color:#D19A66;">+</span><span style="color:#E06C75;">)=(\\d</span><span style="color:#D19A66;">*</span><span style="color:#E06C75;">)/</span><span style="color:#C678DD;">g</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">while</span><span style="color:#ABB2BF;"> ((</span><span style="color:#E06C75;">a</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> r</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">exec</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">s</span><span style="color:#ABB2BF;">))) {</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">//返回类似[&quot;ab=21&quot;,&quot;bc=45&quot;,&quot;cd=43&quot;]三个数组</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><hr><h3 id="反向引用" tabindex="-1">反向引用 <a class="header-anchor" href="#反向引用" aria-label="Permalink to &quot;反向引用&quot;">​</a></h3><p>在字符模式中，后面的字符可以引用前面的子表达式。实现方法如下：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">\\</span><span style="color:#56B6C2;">+</span><span style="color:#E06C75;"> 数字</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>数字指定了子表达式在字符模式中的顺序。如“\\1”引用的是第 1  个子表达式，“\\2”引用的是第 2  个子表达式。</p><h4 id="反向引用示例-1" tabindex="-1">反向引用示例 1 <a class="header-anchor" href="#反向引用示例-1" aria-label="Permalink to &quot;反向引用示例 1&quot;">​</a></h4><p>在下面代码中，通过引用前面子表达式匹配的文本，实现成组匹配字符串。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> s</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;&lt;h1&gt;title&lt;h1&gt;&lt;p&gt;text&lt;p&gt;&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> r</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /(&lt;</span><span style="color:#56B6C2;">\\/</span><span style="color:#D19A66;">?</span><span style="color:#E06C75;">\\w</span><span style="color:#D19A66;">+</span><span style="color:#E06C75;">&gt;)</span><span style="color:#C678DD;">\\1</span><span style="color:#E06C75;">/</span><span style="color:#C678DD;">g</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> s</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">match</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">r</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">//返回数组[&quot;&lt;h1&gt;title&lt;h1&gt;&quot;,&quot;&lt;p&gt;text&lt;p&gt;&quot;]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>由于子表达式可以相互嵌套，它们的顺序将根据左括号的顺序来确定。例如，下面示例定义匹配模式包含多个子表达式。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> s</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;abc&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> r</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /(a(b(c)))/</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> s</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">match</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">r</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">//返回数组[&quot;abc&quot;,&quot;abc&quot;,&quot;bc&quot;,&quot;c&quot;]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>在这个模式中，共产生了 3  个反向引用，第一个是“(a(b(c)))”，第二个是“(b(c))”，第三个是“(C)”。它们引用的匹配文本分别是字符串“abc”、“bc”和“c”。</p><p>对子表达式的引用，是指引用前面子表达式所匹配的文本，而不是子表达式的匹配模式。如果要引用前面子表达式的匹配模式，则必须使用下面方式，只有这样才能够达到匹配目的。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> s</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;&lt;h1&gt;title&lt;/h1&gt;&lt;p&gt;text&lt;/p&gt;&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> r</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /((&lt;</span><span style="color:#56B6C2;">\\/</span><span style="color:#D19A66;">?</span><span style="color:#E06C75;">\\w</span><span style="color:#D19A66;">+</span><span style="color:#E06C75;">&gt;).</span><span style="color:#D19A66;">*</span><span style="color:#E06C75;">(&lt;</span><span style="color:#56B6C2;">\\/</span><span style="color:#D19A66;">?</span><span style="color:#E06C75;">\\w</span><span style="color:#D19A66;">+</span><span style="color:#E06C75;">&gt;))/</span><span style="color:#C678DD;">g</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> s</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">match</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">r</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">//返回数组[&quot;&lt;h1&gt;title&lt;/h1&gt;&quot;,&quot;&lt;p&gt;text&lt;/p&gt;&quot;]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>反向引用在开发中主要有以下几种常规用法。</p><h4 id="反向引用示例-2" tabindex="-1">反向引用示例 2 <a class="header-anchor" href="#反向引用示例-2" aria-label="Permalink to &quot;反向引用示例 2&quot;">​</a></h4><p>在正则表达式对象的  test()  方法中，以及字符串对象的  match()  和  search()  等方法中使用。在这些方法中，反向引用的值可以从 RegExp()  构造函数中获得。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> s</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;abcdefghijklmn&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> r</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /(\\w)(\\w)(\\w)/</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">r</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">test</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">s</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">RegExp</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">$1</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">//返回第1个子表达式匹配的字符a</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">RegExp</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">$2</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">//返回第2个子表达式匹配的字符b</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">RegExp</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">$3</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">//返回第3个子表达式匹配的字符c</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>通过上面示例可以看到，正则表达式执行匹配检测后，所有子表达式匹配的文本都被分组存储在 RegExp()  构造函数的属性内，通过前缀符号<code>$</code>与正则表达式中子表达式的编号来引用这些临时属性。其中属性 <code>$1</code>  标识符指向第 1  个值引用，属性 <code>$2</code>  标识符指向第 2  个值引用。</p><h4 id="反向引用示例-3" tabindex="-1">反向引用示例 3 <a class="header-anchor" href="#反向引用示例-3" aria-label="Permalink to &quot;反向引用示例 3&quot;">​</a></h4><p>可以直接在定义的字符模式中包含反向引用。这可以通过使用特殊转义序列（如 \\1、\\2 等）来实现。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> s</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;abcbcacba&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> r</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /(\\w)(\\w)(\\w)</span><span style="color:#C678DD;">\\2\\3\\1\\3\\2\\1</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> b</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> r</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">test</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">s</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">//验证正则表达式是否匹配该字符串</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">//返回true</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>在上面示例的正则表达式中，“\\1”表示对第 1  个反向引用 (\\w)  所匹配的字符  a  进行引用，“\\2”表示对第 2  个反向引用 (\\w)  所匹配的字符串  b  进行引用，“\\3”表示对第 3  个反向引用 (\\w)  所匹配的字符  c  进行引用。</p><h4 id="反向引用示例-4" tabindex="-1">反向引用示例 4 <a class="header-anchor" href="#反向引用示例-4" aria-label="Permalink to &quot;反向引用示例 4&quot;">​</a></h4><p>可以在字符串对象的  replace()  方法中使用。通过使用特殊字符序列$1、$2、$3  等来实现。例如，在下面的示例中将颠倒相邻字母和数字的位置。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> s</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;aa11bb22c3d4e5f6&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> r</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /(\\w</span><span style="color:#D19A66;">+?</span><span style="color:#E06C75;">)(\\d</span><span style="color:#D19A66;">+</span><span style="color:#E06C75;">)/</span><span style="color:#C678DD;">g</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> b</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> s</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">replace</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">r</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;$2$1&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">//返回字符串“aa11bb22c3 d4e5f6”</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>在上面例子中，正则表达式包括两个分组，第 1  个分组匹配任意连续的字母，第 2  个分组匹配任意连续的数字。在  replace()  方法的第 2  个参数中，<code>$1</code>  表示对正则表达式中第 1  个子表达式匹配文本的引用，而 <code>$2</code>  表示对正则表达式中第 2  个子表达式匹配文本的引用，通过颠倒 <code>$1</code>  和 <code>$2</code>  标识符的位置，即可实现字符串的颠倒来替换原字符串。</p><hr><h3 id="禁止引用" tabindex="-1">禁止引用 <a class="header-anchor" href="#禁止引用" aria-label="Permalink to &quot;禁止引用&quot;">​</a></h3><p>反向引用会占用一定的系统资源，在较长的正则表达式中，反向引用会降低匹配速度。如果分组仅仅是为了方便操作，可以禁止反向引用。</p><p>实现方法：在左括号的后面加上一个问号和冒号。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> s1</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;abc&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> r</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /(?:\\w</span><span style="color:#D19A66;">*?</span><span style="color:#E06C75;">)</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">(?:\\d</span><span style="color:#D19A66;">*?</span><span style="color:#E06C75;">)/</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> r</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">test</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">si</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>非引用型分组必须使用子表达式，但是又不希望存储无用的匹配信息，或者希望提高匹配速度来说，是非常重用的方法。</p><hr><h3 id="正则表达式案例" tabindex="-1">正则表达式案例 <a class="header-anchor" href="#正则表达式案例" aria-label="Permalink to &quot;正则表达式案例&quot;">​</a></h3><p>1.验证密码强弱</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;!</span><span style="color:#E06C75;">DOCTYPE</span><span style="color:#D19A66;"> html</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">html</span><span style="color:#D19A66;"> lang</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;en&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">meta</span><span style="color:#D19A66;"> charset</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;UTF-8&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;验证密码强度案例&lt;/</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;/</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">style</span><span style="color:#D19A66;"> type</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;text/css&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#61AFEF;">		#dv</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">			width: </span><span style="color:#D19A66;">300</span><span style="color:#E06C75;">px</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">			height: </span><span style="color:#D19A66;">200</span><span style="color:#E06C75;">px</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">			position: </span><span style="color:#D19A66;">absolute</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">			left: </span><span style="color:#D19A66;">300</span><span style="color:#E06C75;">px</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">			top: </span><span style="color:#D19A66;">100</span><span style="color:#E06C75;">px</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">		}</span></span>
<span class="line"><span style="color:#D19A66;">		.strengthLv0</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">			height: </span><span style="color:#D19A66;">6</span><span style="color:#E06C75;">px</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">			width: </span><span style="color:#D19A66;">120</span><span style="color:#E06C75;">px</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">			border: </span><span style="color:#D19A66;">1</span><span style="color:#E06C75;">px</span><span style="color:#D19A66;"> solid</span><span style="color:#D19A66;"> #ccc</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">			padding: </span><span style="color:#D19A66;">2</span><span style="color:#E06C75;">px</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">		}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D19A66;">		.strengthLv1</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">			background: </span><span style="color:#D19A66;">red</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">			height: </span><span style="color:#D19A66;">6</span><span style="color:#E06C75;">px</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">			width: </span><span style="color:#D19A66;">40</span><span style="color:#E06C75;">px</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">			border: </span><span style="color:#D19A66;">1</span><span style="color:#E06C75;">px</span><span style="color:#D19A66;"> solid</span><span style="color:#D19A66;"> #ccc</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">			padding: </span><span style="color:#D19A66;">2</span><span style="color:#E06C75;">px</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">		}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D19A66;">		.strengthLv2</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">			background: </span><span style="color:#D19A66;">orange</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">			height: </span><span style="color:#D19A66;">6</span><span style="color:#E06C75;">px</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">			width: </span><span style="color:#D19A66;">80</span><span style="color:#E06C75;">px</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">			border: </span><span style="color:#D19A66;">1</span><span style="color:#E06C75;">px</span><span style="color:#D19A66;"> solid</span><span style="color:#D19A66;"> #ccc</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">			padding: </span><span style="color:#D19A66;">2</span><span style="color:#E06C75;">px</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">		}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D19A66;">		.strengthLv3</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">			background: </span><span style="color:#D19A66;">green</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">			height: </span><span style="color:#D19A66;">6</span><span style="color:#E06C75;">px</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">			width: </span><span style="color:#D19A66;">120</span><span style="color:#E06C75;">px</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">			border: </span><span style="color:#D19A66;">1</span><span style="color:#E06C75;">px</span><span style="color:#D19A66;"> solid</span><span style="color:#D19A66;"> #ccc</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">			padding: </span><span style="color:#D19A66;">2</span><span style="color:#E06C75;">px</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">		}</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;/</span><span style="color:#E06C75;">style</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">div</span><span style="color:#D19A66;"> id</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;dv&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">			&lt;</span><span style="color:#E06C75;">label</span><span style="color:#D19A66;"> for</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;pwd&quot;</span><span style="color:#ABB2BF;">&gt;密码&lt;/</span><span style="color:#E06C75;">label</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">			&lt;</span><span style="color:#E06C75;">input</span><span style="color:#D19A66;"> type</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;text&quot;</span><span style="color:#D19A66;"> id</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;pwd&quot;</span><span style="color:#D19A66;"> maxlength</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;16&quot;</span><span style="color:#ABB2BF;"> /&gt;</span><span style="color:#7F848E;font-style:italic;">&lt;!--课外话题--&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">			&lt;</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">				&lt;</span><span style="color:#E06C75;">em</span><span style="color:#ABB2BF;">&gt;密码强度：&lt;/</span><span style="color:#E06C75;">em</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">				&lt;</span><span style="color:#E06C75;">em</span><span style="color:#D19A66;"> id</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;strength&quot;</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">em</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">				&lt;</span><span style="color:#E06C75;">div</span><span style="color:#D19A66;"> id</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;strengthLevel&quot;</span><span style="color:#D19A66;"> class</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;strengthLv0&quot;</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">			&lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">script</span><span style="color:#D19A66;"> src</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;common.js&quot;</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//获取文本框注册键盘抬起事件</span></span>
<span class="line"><span style="color:#61AFEF;">			my$</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;pwd&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">onkeyup</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				//每次键盘抬起都要获取文本框中的内容,验证文本框中有什么东西,得到一个级别,然后下面的div显示对应的颜色</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				//如果密码的长度是小于6的,没有必要判断</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				//    if(this.value.length&gt;=6){</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				//     var lvl= getLvl(this.value);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				//      my$(&quot;strengthLevel&quot;).className=&quot;strengthLv&quot;+lvl;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				//    }else{</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				//      my$(&quot;strengthLevel&quot;).className=&quot;strengthLv0&quot;;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				//    }</span></span>
<span class="line"><span style="color:#61AFEF;">				my$</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;strengthLevel&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#E06C75;">className</span><span style="color:#56B6C2;"> =</span></span>
<span class="line"><span style="color:#98C379;">					&quot;strengthLv&quot;</span><span style="color:#56B6C2;"> +</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">value</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">length</span><span style="color:#56B6C2;"> &gt;=</span><span style="color:#D19A66;"> 6</span><span style="color:#C678DD;"> ?</span><span style="color:#61AFEF;"> getLvl</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">:</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">			};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//给我密码,我返回对应的级别</span></span>
<span class="line"><span style="color:#C678DD;">			function</span><span style="color:#61AFEF;"> getLvl</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">pwd</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">				var</span><span style="color:#E06C75;"> lvl</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">//默认是0级</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				//密码中是否有数字,或者是字母,或者是特殊符号</span></span>
<span class="line"><span style="color:#C678DD;">				if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">/</span><span style="color:#D19A66;">[0-9]</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">test</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">pwd</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#E06C75;">					lvl</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">				}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				//判断密码中有没有字母</span></span>
<span class="line"><span style="color:#C678DD;">				if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">/</span><span style="color:#D19A66;">[a-zA-Z]</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">test</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">pwd</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#E06C75;">					lvl</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">				}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				//判断密码中有没有特殊符号</span></span>
<span class="line"><span style="color:#C678DD;">				if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">/</span><span style="color:#D19A66;">[</span><span style="color:#ABB2BF;">^</span><span style="color:#D19A66;">0-9a-zA-Z_]</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">test</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">pwd</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#E06C75;">					lvl</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">				}</span></span>
<span class="line"><span style="color:#C678DD;">				return</span><span style="color:#E06C75;"> lvl</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">//最小的值是1,最大值是3</span></span>
<span class="line"><span style="color:#ABB2BF;">			}</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			/*</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			 *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			 * 密码: 数字,字母,特殊符号</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			 *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			 * 密码: 只有数字- 或者是只有字母,或者是只有特殊符号---1级---弱</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			 * 两两组合: 数字和字母, 数字和特殊符号, 字母和特殊符号   -----2级----中</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			 * 三者都有: 数字和字母和特殊符号------3级-----强</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			 *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			 * */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//</span><span style="color:#7F848E;font-style:italic;">  //获取文本框注册键盘抬起事件</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//  my$(&quot;pwd&quot;).onkeyup=function () {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//</span><span style="color:#7F848E;font-style:italic;">    //每次键盘抬起都要获取文本框中的内容,验证文本框中有什么东西,得到一个级别,然后下面的div显示对应的颜色</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//</span><span style="color:#7F848E;font-style:italic;">    //如果密码的长度是小于6的,没有必要判断</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    if(this.value.length&gt;=6){</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//      var lvl=getLvl(this.value);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//      if(lvl==1){</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//</span><span style="color:#7F848E;font-style:italic;">        //弱</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//        my$(&quot;strengthLevel&quot;).className=&quot;strengthLv1&quot;;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//      }else if(lvl==2){</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//        my$(&quot;strengthLevel&quot;).className=&quot;strengthLv2&quot;;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//      }else if(lvl==3){</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//        my$(&quot;strengthLevel&quot;).className=&quot;strengthLv3&quot;;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//      }else{</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//        my$(&quot;strengthLevel&quot;).className=&quot;strengthLv0&quot;;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//      }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    }else{</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//      my$(&quot;strengthLevel&quot;).className=&quot;strengthLv0&quot;;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//  };</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//</span><span style="color:#7F848E;font-style:italic;">  //给我密码,我返回对应的级别</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//  function getLvl(pwd) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    var lvl=0;//默认是0级</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//</span><span style="color:#7F848E;font-style:italic;">    //密码中是否有数字,或者是字母,或者是特殊符号</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    if(/[0-9]/.test(pwd)){</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//      lvl++;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//</span><span style="color:#7F848E;font-style:italic;">    //判断密码中有没有字母</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    if(/[a-zA-Z]/.test(pwd)){</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//      lvl++;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//</span><span style="color:#7F848E;font-style:italic;">    //判断密码中有没有特殊符号</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    if(/[^0-9a-zA-Z_]/.test(pwd)){</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//      lvl++;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    return lvl;//1  3</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//  }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;/</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">html</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br></div></div><p>2.验证邮箱：<code>[0-9a-zA-Z_.-]+[@][0-9a-zA-Z._-]+([.][a-zA-Z]+){1,2}</code></p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;!</span><span style="color:#E06C75;">DOCTYPE</span><span style="color:#D19A66;"> html</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">html</span><span style="color:#D19A66;"> lang</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;en&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">meta</span><span style="color:#D19A66;"> charset</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;UTF-8&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;验证邮箱&lt;/</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;/</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		请您输入邮箱地址:&lt;</span><span style="color:#E06C75;">input</span><span style="color:#D19A66;"> type</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;text&quot;</span><span style="color:#D19A66;"> value</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#D19A66;"> id</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;email&quot;</span><span style="color:#ABB2BF;"> /&gt; *&lt;</span><span style="color:#E06C75;">br</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//如果输入的是邮箱,那么背景颜色为绿色,否则为红色</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//获取文本框,注册失去焦点的事件</span></span>
<span class="line"><span style="color:#E5C07B;">			document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getElementById</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;email&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">onblur</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				//判断这个文本框中输入的是不是邮箱</span></span>
<span class="line"><span style="color:#C678DD;">				var</span><span style="color:#E06C75;"> reg</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /</span><span style="color:#C678DD;">^</span><span style="color:#D19A66;">[0-9a-zA-Z_</span><span style="color:#E06C75;">.</span><span style="color:#D19A66;">-]+[@][0-9a-zA-Z_</span><span style="color:#E06C75;">.</span><span style="color:#D19A66;">-]+</span><span style="color:#E06C75;">(</span><span style="color:#D19A66;">[</span><span style="color:#E06C75;">.</span><span style="color:#D19A66;">][a-zA-Z]+</span><span style="color:#E06C75;">)</span><span style="color:#D19A66;">{1,2}</span><span style="color:#C678DD;">$</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">				if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">reg</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">test</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#E5C07B;">					this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">style</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">backgroundColor</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;green&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">				} </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">					this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">style</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">backgroundColor</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;red&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">				}</span></span>
<span class="line"><span style="color:#ABB2BF;">			};</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;/</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">html</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>3.验证中文名字：<code>[\\u4e00-\\u9fa5]</code></p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;!</span><span style="color:#E06C75;">DOCTYPE</span><span style="color:#D19A66;"> html</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">html</span><span style="color:#D19A66;"> lang</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;en&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">meta</span><span style="color:#D19A66;"> charset</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;UTF-8&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;验证中文名字&lt;/</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;/</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		请输入您的名字:&lt;</span><span style="color:#E06C75;">input</span><span style="color:#D19A66;"> type</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;text&quot;</span><span style="color:#D19A66;"> value</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#D19A66;"> id</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;userName&quot;</span><span style="color:#ABB2BF;"> /&gt;*&lt;</span><span style="color:#E06C75;">br</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//是中文名字,则绿色,否则红色</span></span>
<span class="line"><span style="color:#E5C07B;">			document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getElementById</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;userName&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">onblur</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#C678DD;">				var</span><span style="color:#E06C75;"> reg</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /</span><span style="color:#C678DD;">^</span><span style="color:#D19A66;">[\\u4e00-\\u9fa5]{2,6}</span><span style="color:#C678DD;">$</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">				if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">reg</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">test</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#E5C07B;">					this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">style</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">backgroundColor</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;green&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">				} </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">					this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">style</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">backgroundColor</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;pink&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">				}</span></span>
<span class="line"><span style="color:#ABB2BF;">			};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//[\\u4e00-\\u9fa5]    [一-龥]</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;/</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">html</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><hr><h3 id="正则提取" tabindex="-1">正则提取 <a class="header-anchor" href="#正则提取" aria-label="Permalink to &quot;正则提取&quot;">​</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 1. 提取工资</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> str</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;张三：1000，李四：5000，王五：8000。&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> array</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> str</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">match</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">/\\d</span><span style="color:#D19A66;">+</span><span style="color:#E06C75;">/</span><span style="color:#C678DD;">g</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">array</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 2. 提取email地址</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> str</span><span style="color:#56B6C2;"> =</span></span>
<span class="line"><span style="color:#98C379;">	&quot;123123@xx.com,fangfang@valuedopinions.cn 286669312@qq.com 2、emailenglish@emailenglish.englishtown.com 286669312@qq.com...&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> array</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> str</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">match</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">/\\w</span><span style="color:#D19A66;">+</span><span style="color:#E06C75;">@\\w</span><span style="color:#D19A66;">+</span><span style="color:#56B6C2;">\\.</span><span style="color:#E06C75;">\\w</span><span style="color:#D19A66;">+</span><span style="color:#E06C75;">(</span><span style="color:#56B6C2;">\\.</span><span style="color:#E06C75;">\\w</span><span style="color:#D19A66;">+</span><span style="color:#E06C75;">)</span><span style="color:#D19A66;">?</span><span style="color:#E06C75;">/</span><span style="color:#C678DD;">g</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">array</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 3. 分组提取</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 3. 提取日期中的年部分  2015-5-10</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> dateStr</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;2016-1-5&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 正则表达式中的()作为分组来使用，获取分组匹配到的结果用Regex.$1 $2 $3....来获取</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> reg</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /(\\d</span><span style="color:#D19A66;">{4}</span><span style="color:#E06C75;">)-\\d</span><span style="color:#D19A66;">{1,2}</span><span style="color:#E06C75;">-\\d</span><span style="color:#D19A66;">{1,2}</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">reg</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">test</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">dateStr</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">RegExp</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">$1</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 4. 提取邮件中的每一部分</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> reg</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /(\\w</span><span style="color:#D19A66;">+</span><span style="color:#E06C75;">)@(\\w</span><span style="color:#D19A66;">+</span><span style="color:#E06C75;">)</span><span style="color:#56B6C2;">\\.</span><span style="color:#E06C75;">(\\w</span><span style="color:#D19A66;">+</span><span style="color:#E06C75;">)(</span><span style="color:#56B6C2;">\\.</span><span style="color:#E06C75;">\\w</span><span style="color:#D19A66;">+</span><span style="color:#E06C75;">)</span><span style="color:#D19A66;">?</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> str</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;123123@xx.com&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">reg</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">test</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">str</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">RegExp</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">$1</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">RegExp</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">$2</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">RegExp</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">$3</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><hr><h3 id="正则替换" tabindex="-1">正则替换 <a class="header-anchor" href="#正则替换" aria-label="Permalink to &quot;正则替换&quot;">​</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 1. 替换所有空白</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> str</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;   123AD  asadf   asadfasf  adf &quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">str</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> str</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">replace</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">/\\s/</span><span style="color:#C678DD;">g</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;xx&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">str</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 2. 替换所有,|，</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> str</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;abc,efg,123，abc,123，a&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">str</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> str</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">replace</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">/,</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">，/</span><span style="color:#C678DD;">g</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;.&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">str</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="正则替换示例" tabindex="-1">正则替换示例 <a class="header-anchor" href="#正则替换示例" aria-label="Permalink to &quot;正则替换示例&quot;">​</a></h3><p>示例 1：</p><p>下面使用 ASCII  编码定义正则表达式直接量。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> r</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /</span><span style="color:#D19A66;">\\x61</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> s</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;JavaScript&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> s</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">match</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">s</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>由于字母  a  的 ASCII  编码为 97，被转换为十六进制数值后为 61，因此如果要匹配字符  a，就应该在前面添加“\\x”前缀，以提示它为 ASCII  编码。</p><p>示例 2：</p><p>除了十六进制外，还可以直接使用八进制数值表示字符。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> r</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /</span><span style="color:#C678DD;">\\141</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> s</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;JavaScript&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> s</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">match</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">r</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>使用十六进制需要添加“\\x”前缀，主要是为了避免语义混淆，而八进制则不需要添加前缀。</p><p>示例 3：</p><p>ASCII  编码只能够匹配有限的单字节字符，使用 Unicode  编码可以表示双字节字符。Unicode  编码方式：“\\u”前缀加上 4  位十六进制值。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> r</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;/</span><span style="color:#56B6C2;">\\u0061</span><span style="color:#98C379;">/&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> s</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;JavaScript&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> s</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">match</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">s</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>在 RegExp()  构造函数中使用元字符时，应使用双斜杠。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> r</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> RegExp</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;</span><span style="color:#56B6C2;">\\\\</span><span style="color:#98C379;">u0061&quot;</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>RegExp()  构造函数的参数只接受字符串，而不是字符模式。在字符串中，任何字符加反斜杠还表示字符本身，如字符串“\\u”就被解释为  u  本身，所以对于“\\u0061”字符串来说，在转换为字符模式时，就被解释为“u0061”，而不是“\\u0061”，此时反斜杠就失去转义功能。解决方法：在字符  u  前面加双反斜杠。</p><p><strong>案例:过滤敏感词汇</strong>：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">textarea</span><span style="color:#D19A66;font-style:italic;"> name</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#D19A66;font-style:italic;"> id</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;message&quot;</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">textarea</span><span style="color:#ABB2BF;">&gt; &lt;</span><span style="color:#E06C75;">button</span><span style="color:#ABB2BF;">&gt;提交&lt;/</span><span style="color:#E06C75;">button</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    var text = document.querySelector(&#39;textarea&#39;);</span></span>
<span class="line"><span style="color:#ABB2BF;">    var btn = document.querySelector(&#39;button&#39;);</span></span>
<span class="line"><span style="color:#ABB2BF;">    var div = document.querySelector(&#39;div&#39;);</span></span>
<span class="line"><span style="color:#ABB2BF;">    btn.onclick = function() </span><span style="color:#C678DD;">{</span></span>
<span class="line"><span style="color:#E5C07B;">        div</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">innerHTML</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> text</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">value</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">replace</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">/激情</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">gay/</span><span style="color:#C678DD;">g</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;**&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><hr><h3 id="案例-表单验证" tabindex="-1">案例：表单验证 <a class="header-anchor" href="#案例-表单验证" aria-label="Permalink to &quot;案例：表单验证&quot;">​</a></h3><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">QQ号：&lt;</span><span style="color:#E06C75;">input</span><span style="color:#D19A66;"> type</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;text&quot;</span><span style="color:#D19A66;"> id</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;txtQQ&quot;</span><span style="color:#ABB2BF;"> /&gt;&lt;</span><span style="color:#E06C75;">span</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">span</span><span style="color:#ABB2BF;">&gt;&lt;</span><span style="color:#E06C75;">br</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">邮箱：&lt;</span><span style="color:#E06C75;">input</span><span style="color:#D19A66;"> type</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;text&quot;</span><span style="color:#D19A66;"> id</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;txtEMail&quot;</span><span style="color:#ABB2BF;"> /&gt;&lt;</span><span style="color:#E06C75;">span</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">span</span><span style="color:#ABB2BF;">&gt;&lt;</span><span style="color:#E06C75;">br</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">手机：&lt;</span><span style="color:#E06C75;">input</span><span style="color:#D19A66;"> type</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;text&quot;</span><span style="color:#D19A66;"> id</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;txtPhone&quot;</span><span style="color:#ABB2BF;"> /&gt;&lt;</span><span style="color:#E06C75;">span</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">span</span><span style="color:#ABB2BF;">&gt;&lt;</span><span style="color:#E06C75;">br</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">生日：&lt;</span><span style="color:#E06C75;">input</span><span style="color:#D19A66;"> type</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;text&quot;</span><span style="color:#D19A66;"> id</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;txtBirthday&quot;</span><span style="color:#ABB2BF;"> /&gt;&lt;</span><span style="color:#E06C75;">span</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">span</span><span style="color:#ABB2BF;">&gt;&lt;</span><span style="color:#E06C75;">br</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">姓名：&lt;</span><span style="color:#E06C75;">input</span><span style="color:#D19A66;"> type</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;text&quot;</span><span style="color:#D19A66;"> id</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;txtName&quot;</span><span style="color:#ABB2BF;"> /&gt;&lt;</span><span style="color:#E06C75;">span</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">span</span><span style="color:#ABB2BF;">&gt;&lt;</span><span style="color:#E06C75;">br</span><span style="color:#ABB2BF;"> /&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">//获取文本框</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> txtQQ</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getElementById</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;txtQQ&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> txtEMail</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getElementById</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;txtEMail&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> txtPhone</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getElementById</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;txtPhone&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> txtBirthday</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getElementById</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;txtBirthday&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> txtName</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getElementById</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;txtName&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//</span></span>
<span class="line"><span style="color:#E5C07B;">txtQQ</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">onblur</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	//获取当前文本框对应的span</span></span>
<span class="line"><span style="color:#C678DD;">	var</span><span style="color:#E06C75;"> span</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">nextElementSibling</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">	var</span><span style="color:#E06C75;"> reg</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /</span><span style="color:#C678DD;">^</span><span style="color:#E06C75;">\\d</span><span style="color:#D19A66;">{5,12}</span><span style="color:#C678DD;">$</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	//判断验证是否成功</span></span>
<span class="line"><span style="color:#C678DD;">	if</span><span style="color:#ABB2BF;"> (</span><span style="color:#56B6C2;">!</span><span style="color:#E5C07B;">reg</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">test</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		//验证不成功</span></span>
<span class="line"><span style="color:#E5C07B;">		span</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">innerText</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;请输入正确的QQ号&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">		span</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">style</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">color</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;red&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">	} </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		//验证成功</span></span>
<span class="line"><span style="color:#E5C07B;">		span</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">innerText</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">		span</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">style</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">color</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//txtEMail</span></span>
<span class="line"><span style="color:#E5C07B;">txtEMail</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">onblur</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	//获取当前文本框对应的span</span></span>
<span class="line"><span style="color:#C678DD;">	var</span><span style="color:#E06C75;"> span</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">nextElementSibling</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">	var</span><span style="color:#E06C75;"> reg</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /</span><span style="color:#C678DD;">^</span><span style="color:#E06C75;">\\w</span><span style="color:#D19A66;">+</span><span style="color:#E06C75;">@\\w</span><span style="color:#D19A66;">+</span><span style="color:#56B6C2;">\\.</span><span style="color:#E06C75;">\\w</span><span style="color:#D19A66;">+</span><span style="color:#E06C75;">(</span><span style="color:#56B6C2;">\\.</span><span style="color:#E06C75;">\\w</span><span style="color:#D19A66;">+</span><span style="color:#E06C75;">)</span><span style="color:#D19A66;">?</span><span style="color:#C678DD;">$</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	//判断验证是否成功</span></span>
<span class="line"><span style="color:#C678DD;">	if</span><span style="color:#ABB2BF;"> (</span><span style="color:#56B6C2;">!</span><span style="color:#E5C07B;">reg</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">test</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		//验证不成功</span></span>
<span class="line"><span style="color:#E5C07B;">		span</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">innerText</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;请输入正确的EMail地址&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">		span</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">style</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">color</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;red&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">	} </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		//验证成功</span></span>
<span class="line"><span style="color:#E5C07B;">		span</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">innerText</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">		span</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">style</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">color</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br></div></div><p>表单验证部分，封装成函数：</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> regBirthday</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /</span><span style="color:#C678DD;">^</span><span style="color:#E06C75;">\\d</span><span style="color:#D19A66;">{4}</span><span style="color:#E06C75;">-\\d</span><span style="color:#D19A66;">{1,2}</span><span style="color:#E06C75;">-\\d</span><span style="color:#D19A66;">{1,2}</span><span style="color:#C678DD;">$</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#61AFEF;">addCheck</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">txtBirthday</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">regBirthday</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;请输入正确的出生日期&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//给文本框添加验证</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> addCheck</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">element</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">reg</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">tip</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">	element</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">onblur</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		//获取当前文本框对应的span</span></span>
<span class="line"><span style="color:#C678DD;">		var</span><span style="color:#E06C75;"> span</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">nextElementSibling</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		//判断验证是否成功</span></span>
<span class="line"><span style="color:#C678DD;">		if</span><span style="color:#ABB2BF;"> (</span><span style="color:#56B6C2;">!</span><span style="color:#E5C07B;">reg</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">test</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//验证不成功</span></span>
<span class="line"><span style="color:#E5C07B;">			span</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">innerText</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> tip</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">			span</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">style</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">color</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;red&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">		} </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//验证成功</span></span>
<span class="line"><span style="color:#E5C07B;">			span</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">innerText</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">			span</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">style</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">color</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">		}</span></span>
<span class="line"><span style="color:#ABB2BF;">	};</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>通过给元素增加自定义验证属性对表单进行验证：</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">form</span><span style="color:#D19A66;"> id</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;frm&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	QQ号：&lt;</span><span style="color:#E06C75;">input</span><span style="color:#D19A66;"> type</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;text&quot;</span><span style="color:#D19A66;"> name</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;txtQQ&quot;</span><span style="color:#D19A66;"> data-rule</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;qq&quot;</span><span style="color:#ABB2BF;"> /&gt;&lt;</span><span style="color:#E06C75;">span</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">span</span><span style="color:#ABB2BF;">&gt;&lt;</span><span style="color:#E06C75;">br</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	邮箱：&lt;</span><span style="color:#E06C75;">input</span><span style="color:#D19A66;"> type</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;text&quot;</span><span style="color:#D19A66;"> name</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;txtEMail&quot;</span><span style="color:#D19A66;"> data-rule</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;email&quot;</span><span style="color:#ABB2BF;"> /&gt;&lt;</span><span style="color:#E06C75;">span</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">span</span></span>
<span class="line"><span style="color:#ABB2BF;">	&gt;&lt;</span><span style="color:#E06C75;">br</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	手机：&lt;</span><span style="color:#E06C75;">input</span><span style="color:#D19A66;"> type</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;text&quot;</span><span style="color:#D19A66;"> name</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;txtPhone&quot;</span><span style="color:#D19A66;"> data-rule</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;phone&quot;</span><span style="color:#ABB2BF;"> /&gt;&lt;</span><span style="color:#E06C75;">span</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">span</span></span>
<span class="line"><span style="color:#ABB2BF;">	&gt;&lt;</span><span style="color:#E06C75;">br</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	生日：&lt;</span><span style="color:#E06C75;">input</span><span style="color:#D19A66;"> type</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;text&quot;</span><span style="color:#D19A66;"> name</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;txtBirthday&quot;</span><span style="color:#D19A66;"> data-rule</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;date&quot;</span><span style="color:#ABB2BF;"> /&gt;&lt;</span><span style="color:#E06C75;">span</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">span</span></span>
<span class="line"><span style="color:#ABB2BF;">	&gt;&lt;</span><span style="color:#E06C75;">br</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	姓名：&lt;</span><span style="color:#E06C75;">input</span><span style="color:#D19A66;"> type</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;text&quot;</span><span style="color:#D19A66;"> name</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;txtName&quot;</span><span style="color:#D19A66;"> data-rule</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;cn&quot;</span><span style="color:#ABB2BF;"> /&gt;&lt;</span><span style="color:#E06C75;">span</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">span</span><span style="color:#ABB2BF;">&gt;&lt;</span><span style="color:#E06C75;">br</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">form</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 所有的验证规则</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> rules</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> [</span></span>
<span class="line"><span style="color:#ABB2BF;">	{</span></span>
<span class="line"><span style="color:#E06C75;">		name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;qq&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		reg</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;"> /</span><span style="color:#C678DD;">^</span><span style="color:#E06C75;">\\d</span><span style="color:#D19A66;">{5,12}</span><span style="color:#C678DD;">$</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		tip</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;请输入正确的QQ&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#ABB2BF;">	{</span></span>
<span class="line"><span style="color:#E06C75;">		name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;email&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		reg</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;"> /</span><span style="color:#C678DD;">^</span><span style="color:#E06C75;">\\w</span><span style="color:#D19A66;">+</span><span style="color:#E06C75;">@\\w</span><span style="color:#D19A66;">+</span><span style="color:#56B6C2;">\\.</span><span style="color:#E06C75;">\\w</span><span style="color:#D19A66;">+</span><span style="color:#E06C75;">(</span><span style="color:#56B6C2;">\\.</span><span style="color:#E06C75;">\\w</span><span style="color:#D19A66;">+</span><span style="color:#E06C75;">)</span><span style="color:#D19A66;">?</span><span style="color:#C678DD;">$</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		tip</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;请输入正确的邮箱地址&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#ABB2BF;">	{</span></span>
<span class="line"><span style="color:#E06C75;">		name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;phone&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		reg</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;"> /</span><span style="color:#C678DD;">^</span><span style="color:#E06C75;">\\d</span><span style="color:#D19A66;">{11}</span><span style="color:#C678DD;">$</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		tip</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;请输入正确的手机号码&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#ABB2BF;">	{</span></span>
<span class="line"><span style="color:#E06C75;">		name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;date&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		reg</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;"> /</span><span style="color:#C678DD;">^</span><span style="color:#E06C75;">\\d</span><span style="color:#D19A66;">{4}</span><span style="color:#E06C75;">-\\d</span><span style="color:#D19A66;">{1,2}</span><span style="color:#E06C75;">-\\d</span><span style="color:#D19A66;">{1,2}</span><span style="color:#C678DD;">$</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		tip</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;请输入正确的出生日期&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#ABB2BF;">	{</span></span>
<span class="line"><span style="color:#E06C75;">		name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;cn&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		reg</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;"> /</span><span style="color:#C678DD;">^</span><span style="color:#D19A66;">[\\u4e00-\\u9fa5]{2,4}</span><span style="color:#C678DD;">$</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		tip</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;请输入正确的姓名&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#ABB2BF;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">addCheck</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;frm&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//给文本框添加验证</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> addCheck</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">formId</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">	var</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		len</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		frm</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getElementById</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">formId</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E06C75;">	len</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> frm</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">children</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">	for</span><span style="color:#ABB2BF;"> (; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> &lt;</span><span style="color:#E06C75;"> len</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">		var</span><span style="color:#E06C75;"> element</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> frm</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">children</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">];</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// 表单元素中有name属性的元素添加验证</span></span>
<span class="line"><span style="color:#C678DD;">		if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">element</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">			element</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">onblur</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				// 使用dataset获取data-自定义属性的值</span></span>
<span class="line"><span style="color:#C678DD;">				var</span><span style="color:#E06C75;"> ruleName</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">dataset</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">rule</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">				var</span><span style="color:#E06C75;"> rule</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> getRuleByRuleName</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">rules</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">ruleName</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">				var</span><span style="color:#E06C75;"> span</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">nextElementSibling</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				//判断验证是否成功</span></span>
<span class="line"><span style="color:#C678DD;">				if</span><span style="color:#ABB2BF;"> (</span><span style="color:#56B6C2;">!</span><span style="color:#E5C07B;">rule</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">reg</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">test</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">					//验证不成功</span></span>
<span class="line"><span style="color:#E5C07B;">					span</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">innerText</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> rule</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">tip</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">					span</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">style</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">color</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;red&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">				} </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">					//验证成功</span></span>
<span class="line"><span style="color:#E5C07B;">					span</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">innerText</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">					span</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">style</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">color</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">				}</span></span>
<span class="line"><span style="color:#ABB2BF;">			};</span></span>
<span class="line"><span style="color:#ABB2BF;">		}</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 根据规则的名称获取规则对象</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> getRuleByRuleName</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">rules</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">ruleName</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">	var</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		len</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> rules</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">	var</span><span style="color:#E06C75;"> rule</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> null</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">	for</span><span style="color:#ABB2BF;"> (; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> &lt;</span><span style="color:#E06C75;"> len</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">		if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">rules</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">].</span><span style="color:#E06C75;">name</span><span style="color:#56B6C2;"> ==</span><span style="color:#E06C75;"> ruleName</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E06C75;">			rule</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> rules</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">];</span></span>
<span class="line"><span style="color:#C678DD;">			break</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">		}</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#C678DD;">	return</span><span style="color:#E06C75;"> rule</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br></div></div><h2 id="相关资源和库" tabindex="-1">相关资源和库 <a class="header-anchor" href="#相关资源和库" aria-label="Permalink to &quot;相关资源和库&quot;">​</a></h2><p>any-rule，地址：<a href="https://any86.github.io/any-rule/" target="_blank" rel="noreferrer">https://any86.github.io/any-rule/</a></p><ul><li>any-rule 是一个强大且开源的正则表达式库，目前已经收集了 82 条常用的正则表达式，如常用的手机号验证，邮箱验证，链接验证，车牌验证等，并且支持 web，vscode，idea 等多个平台，在 web 端可以在线验证和一键复制正则表达式，而在编辑器上，我们只需要安装对应的插件，即可方便的生成我们所需要的正则表达式，非常的方便</li></ul>`,310)]))}const u=n(o,[["render",e]]);export{b as __pageData,u as default};
