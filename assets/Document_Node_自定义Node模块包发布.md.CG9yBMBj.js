import{_ as s,c as n,o as e,ah as l}from"./chunks/framework.DqD713j2.js";const u=JSON.parse('{"title":"自定义Node模块发布","description":"","frontmatter":{},"headers":[],"relativePath":"Document/Node/自定义Node模块包发布.md","filePath":"Document/Node/自定义Node模块包发布.md","lastUpdated":1750954157000}'),p={name:"Document/Node/自定义Node模块包发布.md"};function r(o,a,i,t,c,d){return e(),n("div",null,a[0]||(a[0]=[l(`<h1 id="自定义node模块发布" tabindex="-1">自定义Node模块发布 <a class="header-anchor" href="#自定义node模块发布" aria-label="Permalink to &quot;自定义Node模块发布&quot;">​</a></h1><p>参考文章：<a href="https://juejin.cn/post/7172240485778456606" target="_blank" rel="noreferrer">https://juejin.cn/post/7172240485778456606</a></p><h2 id="npm" tabindex="-1">NPM <a class="header-anchor" href="#npm" aria-label="Permalink to &quot;NPM&quot;">​</a></h2><p>官网：<a href="https://www.npmjs.com/" target="_blank" rel="noreferrer">https://www.npmjs.com/</a></p><p>node包（模块）管理器 - 搜索、下载（安装）、升级、删除……node包（模块）</p><h3 id="搜索后-左边-sort-packages栏信息" tabindex="-1">搜索后-左边-Sort Packages栏信息 <a class="header-anchor" href="#搜索后-左边-sort-packages栏信息" aria-label="Permalink to &quot;搜索后-左边-Sort Packages栏信息&quot;">​</a></h3><ul><li><p>Quality：质量，稳定性、测试、依赖等</p></li><li><p>Maintenance：维护等级，更新频率等</p></li><li><p>Optimal：以上三点的综合</p></li></ul><h3 id="命令" tabindex="-1">命令 <a class="header-anchor" href="#命令" aria-label="Permalink to &quot;命令&quot;">​</a></h3><ul><li>查看已经安装的依赖包命令：<code>npm ls</code></li></ul><hr><h2 id="发布自己的模块包" tabindex="-1">发布自己的模块包 <a class="header-anchor" href="#发布自己的模块包" aria-label="Permalink to &quot;发布自己的模块包&quot;">​</a></h2><p>package.json 文件：项目（模块、包）说明配置文件，该文件描述了当前包的信息，只有拥有 package.json 文件的项目才可以被发布</p><p>1.手动创建package.json 文件(初始化项目)</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> init</span></span>
<span class="line"><span style="color:#61AFEF;">或</span></span>
<span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> init</span><span style="color:#D19A66;"> --yes</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>相关配置选择</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">name：包名称，必填</span></span>
<span class="line"><span style="color:#61AFEF;">version：版本，必填，格式</span><span style="color:#98C379;"> x.x.x</span></span>
<span class="line"><span style="color:#61AFEF;">main:</span><span style="color:#98C379;"> 包的入口主文件,app.js/index.js</span></span>
<span class="line"><span style="color:#61AFEF;">scripts：自定义脚本，通过</span><span style="color:#98C379;"> npm</span><span style="color:#98C379;"> run</span><span style="color:#98C379;"> 脚本名称即可执行脚本定义的命令</span></span>
<span class="line"><span style="color:#61AFEF;">dependencies：生产环境下需要使用的依赖包</span></span>
<span class="line"><span style="color:#61AFEF;">devDependencies：只做开发环境（测试环境）</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">以上都可以全部回车默认选项</span></span>
<span class="line"><span style="color:#61AFEF;">（如果使用的是npm</span><span style="color:#98C379;"> init</span><span style="color:#D19A66;"> --yes命令，就是相当于全部执行的默认）</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>2.注册npm网站的账号：<a href="https://www.npmjs.com/" target="_blank" rel="noreferrer">npm (npmjs.com)</a></p><p>3.开发相关模块</p><p>4.登录npm账号命令</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> adduser</span></span>
<span class="line"><span style="color:#61AFEF;">或</span></span>
<span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> login</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>5.发布开发好的模块</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> publish</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="开发方向" tabindex="-1">开发方向 <a class="header-anchor" href="#开发方向" aria-label="Permalink to &quot;开发方向&quot;">​</a></h2><ul><li><p>GUI - Graphical User Interface ： 图形用户界面-office、vscode、浏览器、播放器</p></li><li><p>CLI - Command-Line Interface：命令行界面，也称为 CUI，字符用户界面</p><ul><li><p>虽然没有GUI操作直观，但是CLI更加节省计算机资源（所以一般用于服务器环境）</p></li><li><p>babel、tsc / webpack / vue-cli</p></li></ul></li><li><p>Server - 服务提供（Web Server、IM……）</p></li></ul><h3 id="cli命令行工具开发" tabindex="-1">CLI命令行工具开发 <a class="header-anchor" href="#cli命令行工具开发" aria-label="Permalink to &quot;CLI命令行工具开发&quot;">​</a></h3><ul><li><p>command [subCommand] [options] [arguments]</p><ul><li><p>command：命令，比如 vue</p></li><li><p>[subCommand]：子命令，比如 vue create</p></li><li><p>[options]：选项，配置，同一个命令不同选项会有不一样的操作结果，比如 vue -h，vue -v</p></li><li><p>[arguments]：参数，某些命令需要使用的值，比如 vue create myApp</p></li></ul></li><li><p>选项与参数的区别：选项是命令内置实现，用户进行选择，参数一般是用户决定传入的值</p><ul><li><p>选项一般会有全拼与简写形式（具体看使用的命令帮助），比如 --version = -v</p><ul><li><p>全拼：以 -- 开头 / 简写：以 - 开头</p></li><li><p>选项也可以接受值，值写在选项之后，通过空格分隔</p></li><li><p>多个简写的选项可以连写，开头使用一个 - 即可，需要注意的是，如果有接受值的选项需要放在最后，比如：</p><ul><li><p>vue create -d -r &lt;-r的值&gt; myApp</p></li><li><p>vue create -dr &lt;-r的值&gt; myApp</p></li></ul></li></ul></li></ul></li></ul><h3 id="第三方框架" tabindex="-1">第三方框架 <a class="header-anchor" href="#第三方框架" aria-label="Permalink to &quot;第三方框架&quot;">​</a></h3><ul><li><p>commander - 命令行开发工具</p><ul><li><p>GitHub中文文档：<a href="https://github.com/tj/commander.js/blob/HEAD/Readme_zh-CN.md" target="_blank" rel="noreferrer">commander中文文档</a></p></li><li><p>npm：<a href="https://www.npmjs.com/package/commander" target="_blank" rel="noreferrer">commander - npm (npmjs.com)</a></p></li></ul></li><li><p>chalk - 命令行样式风格控制器</p><ul><li>npm：<a href="https://www.npmjs.com/package/chalk" target="_blank" rel="noreferrer">chalk - npm (npmjs.com)</a></li></ul></li><li><p>inquirer - 交互式命令行工具</p><ul><li>npm：<a href="https://www.npmjs.com/package/inquirer" target="_blank" rel="noreferrer">inquirer - npm (npmjs.com)</a></li></ul></li></ul>`,28)]))}const b=s(p,[["render",r]]);export{u as __pageData,b as default};
