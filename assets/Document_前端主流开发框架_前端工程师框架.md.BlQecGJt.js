import{_ as s,c as p,o as a,ah as n}from"./chunks/framework.DqD713j2.js";const y=JSON.parse('{"title":"前端工程师框架","description":"","frontmatter":{},"headers":[],"relativePath":"Document/前端主流开发框架/前端工程师框架.md","filePath":"Document/前端主流开发框架/前端工程师框架.md","lastUpdated":1750954157000}'),i={name:"Document/前端主流开发框架/前端工程师框架.md"};function o(e,l,t,r,u,c){return a(),p("div",null,l[0]||(l[0]=[n(`<h1 id="前端工程师框架" tabindex="-1">前端工程师框架 <a class="header-anchor" href="#前端工程师框架" aria-label="Permalink to &quot;前端工程师框架&quot;">​</a></h1><h2 id="常用框架" tabindex="-1">常用框架 <a class="header-anchor" href="#常用框架" aria-label="Permalink to &quot;常用框架&quot;">​</a></h2><h3 id="jquery" tabindex="-1">jQuery <a class="header-anchor" href="#jquery" aria-label="Permalink to &quot;jQuery&quot;">​</a></h3><h4 id="jquery-基础认识" tabindex="-1">jQuery 基础认识 <a class="header-anchor" href="#jquery-基础认识" aria-label="Permalink to &quot;jQuery 基础认识&quot;">​</a></h4><h5 id="jquery-的特点" tabindex="-1">jQuery 的特点 <a class="header-anchor" href="#jquery-的特点" aria-label="Permalink to &quot;jQuery 的特点&quot;">​</a></h5><ul><li><p>轻量、开源、免费、易于学习</p></li><li><p>兼容性处理</p></li><li><p>强大的选择器</p></li><li><p>链式操作</p></li><li><p>编辑的 DOM 操作</p></li><li><p>可靠的事件处理机制</p></li><li><p>封装了简单易用的 Ajax 操作</p></li><li><p>丰富的插件</p></li></ul><h5 id="版本兼容性" tabindex="-1">版本兼容性 <a class="header-anchor" href="#版本兼容性" aria-label="Permalink to &quot;版本兼容性&quot;">​</a></h5><ul><li><p>1.x</p><ul><li>兼容 IE678 低版本浏览器，官网不在更新</li></ul></li><li><p>2.x</p><ul><li>兼容 IE9 以上 浏览器，官网不在更新</li></ul></li><li><p>3.x</p><ul><li>官网主要维护更新版本</li></ul></li></ul><p>兼容性引入</p><ul><li><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">&lt;!--chrome firefox safari opera ie9+ --&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">&lt;!--[if gt ie 8]&gt; --&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">&lt;!-- &lt;![endif]--&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">&lt;!--ie8以及以下--&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">&lt;!--[if lte ie 8]&gt; &lt;![endif]--&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li></ul><h4 id="jquery-的使用" tabindex="-1">jQuery 的使用 <a class="header-anchor" href="#jquery-的使用" aria-label="Permalink to &quot;jQuery 的使用&quot;">​</a></h4><h5 id="jquery-的-ready-事件" tabindex="-1">jQuery 的 ready 事件 <a class="header-anchor" href="#jquery-的-ready-事件" aria-label="Permalink to &quot;jQuery 的 ready 事件&quot;">​</a></h5><ul><li><p>ready 表示页面中的 DOM 加载完毕后 触发</p><ul><li><p>$(document).ready(function(){ ... })</p></li><li><p>简写 $(function(){ .... })</p></li></ul></li></ul><h5 id="原生-js-的-load-事件" tabindex="-1">原生 JS 的 load 事件 <a class="header-anchor" href="#原生-js-的-load-事件" aria-label="Permalink to &quot;原生 JS 的 load 事件&quot;">​</a></h5><ul><li>load 事件在页面所有的一切加载完毕后触发 <ul><li>window.onload =function(){ ... }</li></ul></li></ul><h5 id="文档" tabindex="-1">文档 <a class="header-anchor" href="#文档" aria-label="Permalink to &quot;文档&quot;">​</a></h5><ul><li><p><a href="https://www.jquery123.com/" target="_blank" rel="noreferrer">https://www.jquery123.com/</a></p></li><li><p><a href="http://jquery.cuishifeng.cn/index.html" target="_blank" rel="noreferrer">http://jquery.cuishifeng.cn/index.html</a></p></li></ul><h4 id="jquery-代码基础" tabindex="-1">jQuery 代码基础 <a class="header-anchor" href="#jquery-代码基础" aria-label="Permalink to &quot;jQuery 代码基础&quot;">​</a></h4><h5 id="jquery-的-顶级-全局-对象" tabindex="-1">jQuery 的 顶级(全局)对象 <a class="header-anchor" href="#jquery-的-顶级-全局-对象" aria-label="Permalink to &quot;jQuery 的 顶级(全局)对象&quot;">​</a></h5><ul><li><p>$</p><ul><li><p>相当于原生 JavaScript 的 window 对象</p></li><li><p>等价于 jQuery</p><ul><li>jQuery(function(){})</li></ul></li><li><p>$(function(){})</p></li></ul></li><li><p>相等</p><ul><li><p>$(document).ready(function(){ ... })</p></li><li><p>jQuery(document).ready(function(){ ... })</p></li></ul></li><li><p>怎么区分 $ 符号的功能</p><ul><li><p>$ 的参数如果是 dom 对象，把该对象转为 jQuery dom</p></li><li><p>$ 的参数如果是 字符串，作为 jQuery 的选择器</p></li><li><p>$ 的参数如果是 字符串，并且以&lt;开头，则是创建一个新元素</p></li></ul></li></ul><h5 id="jquery-的-dom-对象" tabindex="-1">jQuery 的 DOM 对象 <a class="header-anchor" href="#jquery-的-dom-对象" aria-label="Permalink to &quot;jQuery 的 DOM 对象&quot;">​</a></h5><ul><li><p>本质</p><ul><li><p>使用 jQuery 选择器获取的对象，不是原生的 DOM 对象， 称之为 jQuery dom 对象</p></li><li><p>jQuery dom 对象 本质上是由原生 dom 对象组成的集合</p></li></ul></li><li><p>操作语法</p><ul><li><p>$box.css(&quot;color&quot;)</p><ul><li>参数只写属性名，返回值是属性值</li></ul></li><li><p>$box.css(&quot;background&quot;,&quot;green&quot;)</p><ul><li>修改简单元素样式</li></ul></li><li><p>$box.css(&quot;background&quot;:&quot;green&quot;,&quot;fonst-size&quot;:&quot;20px&quot;)</p><ul><li>修改多个样式</li></ul></li><li><p>$box.css( width:400, height:400, backgroud:&#39;red&#39;; )</p><ul><li><p>添加多个样式</p></li><li><p>属性要添加 ‘’引号</p></li></ul></li></ul></li></ul><h5 id="原生-js-dom-和-jquery-dom-相互转换" tabindex="-1">原生 JS DOM 和 jQuery DOM 相互转换 <a class="header-anchor" href="#原生-js-dom-和-jquery-dom-相互转换" aria-label="Permalink to &quot;原生 JS DOM 和 jQuery DOM 相互转换&quot;">​</a></h5><ul><li><p>原生的 DOM 转换为 jQuery DOM</p><ul><li>$(函数) <ul><li>$(box).css(&quot;border&quot;,&quot;2px solid red&quot;);</li></ul></li></ul></li><li><p>jQuery DOM 转换为 原生的 DOM</p><ul><li><p>取元素下标：$box[0]</p><ul><li>$(box[0]).style.border = &quot;2px solid red&quot;;</li></ul></li><li><p>.get(0)</p><ul><li>$(box.get(0)).style.border = &quot;2px solid red&quot;;</li></ul></li></ul></li></ul><h5 id="jquery-选择器" tabindex="-1">jQuery 选择器 <a class="header-anchor" href="#jquery-选择器" aria-label="Permalink to &quot;jQuery 选择器&quot;">​</a></h5><ul><li><p>1.基本选择器</p><ul><li><p>ID 选择器</p><ul><li>$(&quot;#box&quot;)</li></ul></li><li><p>class 类选择器</p><ul><li>$(&quot;.item&quot;)</li></ul></li><li><p>标签名选择器</p><ul><li>$(&quot;li&quot;)</li></ul></li><li><p>组合选择器</p><ul><li>$(&quot;li.item&quot;)</li></ul></li><li><p>全局选择器</p><ul><li>$(&quot;*&quot;)</li></ul></li><li><p>多个选择器</p><ul><li>$(&quot;li,p&quot;)</li></ul></li></ul></li><li><p>2.层级选择器</p><ul><li><p>后代元素</p><ul><li>$(&quot;#box li&quot;)</li></ul></li><li><p>子元素</p><ul><li>$(&quot;#box&gt;li&quot;)</li></ul></li><li><p>紧邻的兄弟元素</p><ul><li>$(&quot;#box+li&quot;)</li></ul></li><li><p>后面所有的兄弟元素</p><ul><li>$(&quot;#box~li&quot;)</li></ul></li></ul></li><li><p>3.筛选选择器</p><ul><li><p>:first</p><ul><li><p>获取第一个元素</p></li><li><p>$(&#39;li:first&#39;)</p></li></ul></li><li><p>:last</p><ul><li><p>获取最后一个元素</p></li><li><p>$(&#39;li:last&#39;)</p></li></ul></li><li><p>:eq(index)</p><ul><li>$(&#39;li:eq(2)&#39;) <ul><li>获取到的 li 元素中，选择索引号为 2 的元素 索引号 index 从 0 开始</li></ul></li></ul></li><li><p>:even</p><ul><li>$(&#39;li:even&#39;) <ul><li>获取到的 li 元素中，选择索引号为偶数的元素</li></ul></li></ul></li><li><p>:odd</p><ul><li>$(&#39;li:odd&#39;) <ul><li>获取到的 li 元素中，选择索引号为奇数的元素</li></ul></li></ul></li><li><p>:lt(index)</p><ul><li>&lt;</li></ul></li><li><p>:gt(index)</p><ul><li>&gt;</li></ul></li><li><p>:not(selector)</p></li><li><p>:lang()1.9+</p></li><li><p>:root1.9+</p></li><li><p>:header</p><ul><li>所有的标题标签</li></ul></li><li><p>:focus</p><ul><li>获取焦点元素</li></ul></li><li><p>:target1.9+</p><ul><li>锚点指向元素</li></ul></li><li><p>:animated</p><ul><li>正在执行动画元素</li></ul></li></ul></li><li><p>4.内容选择器</p><ul><li><p>:contains(text)</p><ul><li>包含指定的文本</li></ul></li><li><p>:has(selector)</p><ul><li>包含满足条件的后代元素</li></ul></li><li><p>:empty</p><ul><li>没有内容，也没有子元素</li></ul></li><li><p>:parent</p><ul><li>要么有内容，要么有子元素</li></ul></li></ul></li><li><p>5.可见性选择器</p><ul><li><p>:hidden</p><ul><li>不可见的元素</li></ul></li><li><p>:visible</p><ul><li>可见的元素</li></ul></li></ul></li><li><p>6.属性选择器</p><ul><li><p>[attribute]</p><ul><li>直接写属性名</li></ul></li><li><p>[attribute=value]</p><ul><li>指定属性名的值</li></ul></li><li><p>[attribute!=value]</p><ul><li>属性名不等于某个值</li></ul></li><li><p>[attribute^=value]</p><ul><li>属性名以某个值开始</li></ul></li><li><p>[attribute$=value]</p><ul><li>属性名以某个值结束</li></ul></li><li><p>[attribute*=value]</p><ul><li>属性包含某个值</li></ul></li><li><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">attrSel1</span><span style="color:#ABB2BF;">][</span><span style="color:#E06C75;">attrSel2</span><span style="color:#ABB2BF;">][</span><span style="color:#E06C75;">attrSelN</span><span style="color:#ABB2BF;">];</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>多个属性 选择器</li></ul></li></ul></li><li><p>7.子元素选择器</p><ul><li><p>:first-child</p><ul><li>选择一个是所有兄弟元素里面的第一个元素</li></ul></li><li><p>:last-child</p><ul><li>选择一个是所有兄弟元素里面的第最后一个元素</li></ul></li><li><p>:nth-child(1)</p><ul><li>子主题 1</li></ul></li><li><p>:nth-last-child()</p></li><li><p>:only-child</p><ul><li>没有兄弟元素的元素</li></ul></li><li><p>:first-of-type</p><ul><li>选择所有兄弟元素里面的相同标签的第一个</li></ul></li><li><p>:last-of-type()</p></li><li><p>:nth-of-type(1)</p><ul><li>选择所有兄弟元素里面同标签的第一个</li></ul></li><li><p>:nth-last-of-type()</p><ul><li>子主题 1</li></ul></li><li><p>:only-of-type</p></li></ul></li><li><p>8.表单选择器</p><ul><li><p>:input</p><ul><li>所有的表单控件</li></ul></li><li><p>input 的 type 值</p><ul><li><p>:text</p></li><li><p>:password</p></li><li><p>:radio</p></li><li><p>:checkbox</p></li><li><p>:file</p></li><li><p>:reset</p></li><li><p>:image</p></li><li><p>:submit</p></li><li><p>:button</p></li></ul></li></ul></li><li><p>9.表单对象选择器</p><ul><li><p>:enabled</p></li><li><p>:disabled</p></li><li><p>:checked</p></li><li><p>:selected</p></li></ul></li><li><p>10.混淆选择器</p><ul><li>$.escapeSelector(selector) 3.0+ <ul><li>className 或者 IDname 是有特殊符号</li></ul></li></ul></li></ul><h5 id="jquery-属性与样式操作" tabindex="-1">jQuery 属性与样式操作 <a class="header-anchor" href="#jquery-属性与样式操作" aria-label="Permalink to &quot;jQuery 属性与样式操作&quot;">​</a></h5><ul><li><p>属性操作</p><ul><li><p>attr(name|properties|key,value|fn)</p><ul><li><p>1.设置属性</p><ul><li>$(this).attr(&#39;index&#39;)</li></ul></li><li><p>2.自定义设置元素的属性值</p><ul><li>$(this).attr(&#39;index&#39;,4)</li></ul></li><li><p>参数</p><ul><li><p>name</p><ul><li>名字</li></ul></li><li><p>properties</p><ul><li>性质</li></ul></li><li><p>key,value</p><ul><li>值</li></ul></li><li><p>fn</p><ul><li>函数</li></ul></li></ul></li></ul></li><li><p>removeAttr(name)</p><ul><li>删除属性</li></ul></li><li><p>prop(name|properties|key,value|fn)</p><ul><li><p>获取在匹配的元素集中的第一个元素的属性值</p></li><li><p>参数</p><ul><li><p>name</p><ul><li>名字</li></ul></li><li><p>properties</p><ul><li>性质</li></ul></li><li><p>key,value</p><ul><li>值</li></ul></li><li><p>fn</p><ul><li>函数</li></ul></li></ul></li></ul></li><li><p>removeProp(name)</p><ul><li>用来删除由.prop()方法设置的属性集</li></ul></li><li><p>data()</p><ul><li><p>data()方法可以在指定的元素上存取数据，并不会修改 DOM 元素结构 ，一旦页面刷新，之前存放的数据都将被删除</p></li><li><p>获取属性</p><ul><li><p>.data(&#39;属性&#39;,&#39;值&#39;)</p></li><li><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">$</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">span</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">data</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;uname&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;andy&quot;</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// 获取属性</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">$</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;span&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">data</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;uname&quot;</span><span style="color:#ABB2BF;">)); </span><span style="color:#7F848E;font-style:italic;">// andy</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 也可以获取其他属性</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">$</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;div&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">data</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;index&quot;</span><span style="color:#ABB2BF;">)); </span><span style="color:#7F848E;font-style:italic;">// 返回数字</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li><li></li></ul></li></ul></li></ul></li></ul><h5 id="css-类操作" tabindex="-1">CSS 类操作 <a class="header-anchor" href="#css-类操作" aria-label="Permalink to &quot;CSS 类操作&quot;">​</a></h5><ul><li><p>addClass(class|fn)</p><ul><li><p>为每个匹配的元素添加指定的类名。</p></li><li><p>$(&#39;div&#39;).addClass(&#39;current&#39;)</p></li></ul></li><li><p>removeClass([class|fn])</p><ul><li><p>从所有匹配的元素中删除全部或者指定的类。</p></li><li><p>$(&#39;div&#39;).removeClass(&#39;current&#39;)</p></li></ul></li><li><p>toggleClass(class|fn[,sw])</p><ul><li><p>如果存在（不存在）就删除（添加）一个类。</p></li><li><p>$(&#39;div&#39;).toggleClass(&#39;current&#39;)</p></li></ul></li><li><p>hasClass()</p><ul><li>判断是否有某个 class 值 <ul><li>返回 true 或 false</li></ul></li></ul></li><li><p>HTML 代码/文本/值 获取 设置</p><ul><li><p>html([val|fn])</p><ul><li>取得第一个匹配元素的 html 代码内容。类似 innerHTML 这个函数不能用于 XML 文档。但可以用于 XHTML 文档。</li></ul></li><li><p>text([val|fn])</p><ul><li>取得所有匹配元素的内容。类似 innerText</li></ul></li><li><p>val([val|fn|arr])</p><ul><li>获得匹配元素的当前值。</li></ul></li></ul></li></ul><h5 id="样式操作" tabindex="-1">样式操作 <a class="header-anchor" href="#样式操作" aria-label="Permalink to &quot;样式操作&quot;">​</a></h5><ul><li><p>1.CSS 操作</p><ul><li>css(attr,[value]) <ul><li>或者设置 css 属性，参数可以使用对象</li></ul></li></ul></li><li><p>2.位置操作</p><ul><li><p>offset([obj])</p><ul><li>元素在页面中的坐标，返回对象(属性 left top)</li></ul></li><li><p>position()</p><ul><li>元素在第一个定位的祖先元素内的坐标，只读</li></ul></li></ul></li><li><p>3.尺寸操作</p><ul><li><p>width() / height()</p><ul><li>元素内容的尺寸</li></ul></li><li><p>innerWidth() / innerHeight()</p><ul><li>内容尺寸+padding</li></ul></li><li><p>outerWidth() / outerHeight()</p><ul><li>实际盒子的尺寸</li></ul></li></ul></li></ul><h5 id="jquery-筛选方法" tabindex="-1">jQuery 筛选方法 <a class="header-anchor" href="#jquery-筛选方法" aria-label="Permalink to &quot;jQuery 筛选方法&quot;">​</a></h5><ul><li><p>过滤</p><ul><li><p>eq(index|-index)</p></li><li><p>first()</p></li><li><p>last()</p></li><li><p>hasClass(class)</p></li><li><p>filter(expr|obj|ele|fn)</p></li><li><p>is(expr|obj|ele|fn)</p></li><li><p>map(callback)</p></li><li><p>has(expr|ele)</p></li><li><p>not(expr|ele|fn)</p></li><li><p>slice(start,[end])</p></li></ul></li><li><p>查找</p><ul><li><p>parent([expr])</p><ul><li>获取一个祖先元素</li></ul></li><li><p>parents([expr])</p><ul><li>获取所有的祖先元素（满足条件）</li></ul></li><li><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">parentsUntil</span><span style="color:#ABB2BF;">([</span><span style="color:#E06C75;">e</span><span style="color:#56B6C2;">|</span><span style="color:#E06C75;">e</span><span style="color:#ABB2BF;">][,</span><span style="color:#E06C75;">f</span><span style="color:#ABB2BF;">])</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>获取祖先元素集合 写参数就是指定过滤排除掉这个元素参数</li></ul></li><li><p>offsetParent()</p><ul><li>返回第一个定位的祖先元素</li></ul></li><li><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">nextUntil</span><span style="color:#ABB2BF;">([</span><span style="color:#E06C75;">e</span><span style="color:#56B6C2;">|</span><span style="color:#E06C75;">e</span><span style="color:#ABB2BF;">][,</span><span style="color:#E06C75;">f</span><span style="color:#ABB2BF;">])</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>查找当前元素之后所有的同辈元素，直到遇到匹配的那个元素为止</li></ul></li><li><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">prevUntil</span><span style="color:#ABB2BF;">([</span><span style="color:#E06C75;">e</span><span style="color:#56B6C2;">|</span><span style="color:#E06C75;">e</span><span style="color:#ABB2BF;">][,</span><span style="color:#E06C75;">f</span><span style="color:#ABB2BF;">])</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>查找当前元素之前所有的同辈元素，直到遇到匹配的那个元素为止</li></ul></li><li><p>closest(e|o|e)1.7*</p><ul><li>从元素本身开始，逐级向上级元素匹配，并返回最先匹配的元素</li></ul></li><li><p>查找父级</p><ul><li>$(&#39;li&#39;).parent();</li></ul></li><li><p>查找最近子级</p><ul><li>$(&#39;ul&#39;).children(&#39;li&#39;);</li></ul></li><li><p>查找后代</p><ul><li>$(&#39;ul&#39;).find(&#39;li&#39;);</li></ul></li><li><p>查找兄弟节点</p><ul><li>$(&#39;.first&#39;).siblings(&#39;li&#39;);</li></ul></li><li><p>查找当前元素之后的 所有兄弟元素</p><ul><li>$(&#39;.first&#39;).nextAll();</li></ul></li><li><p>紧邻在后面的兄弟元素</p><ul><li>next([expr])</li></ul></li><li><p>查找当前元素之前的 所有兄弟元素</p><ul><li>$(&#39;.last&#39;).prevAll();</li></ul></li><li><p>紧邻在前面的兄弟元素</p><ul><li>prev([expr])</li></ul></li><li><p>检查当前元素是否为某个特定元素</p><ul><li><p>返回布尔值</p></li><li><p>$(&#39;div&#39;).hacClass(&#39;protected&#39;);</p></li></ul></li><li><p>获取指定索引号元素</p><ul><li><p>$(&#39;li&#39;).eq(2);</p></li><li><p>相当于:eq(2)</p></li></ul></li></ul></li><li><p>串联</p><ul><li><p>add(&quot;li&quot;)1.9*</p><ul><li>把元素加入当前集合中</li></ul></li><li><p>addBack()1.9+</p><ul><li>把调用该方法的元素 加入当前集合中</li></ul></li><li><p>contents()</p><ul><li>返回所有子节点的集合</li></ul></li><li><p>end()</p><ul><li>返回最后一次 破坏性操作（过滤，查找操作）</li></ul></li><li><p>andSelf()1.8-</p></li></ul></li></ul><h5 id="jquery-dom-对象方法" tabindex="-1">jQuery DOM 对象方法 <a class="header-anchor" href="#jquery-dom-对象方法" aria-label="Permalink to &quot;jQuery DOM 对象方法&quot;">​</a></h5><ul><li><p>遍历：each()</p><ul><li><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">$</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;#myList li&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">each</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">index</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">ele</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// ele.innerHTML +=&quot;你好啊&quot;;</span></span>
<span class="line"><span style="color:#61AFEF;">	$</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">ele</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">append</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;你好啊&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li></ul></li><li><p>返回新集合：map()</p><ul><li>$(&quot;#myList li&quot;).map(function(index,ele){ return $(ele).html(); })</li></ul></li><li><p>集合中元素的数量：length</p></li><li><p>index() 返回该元素在父元素的索引位置</p></li><li><p>get([index]) 返回集合指定索引的 dom 对象，不写参数 还可以把 jQuery dom 集合转为存数组</p></li><li><p>is() 判断 jQuery dom 是否满足条件，返回布尔值</p></li></ul><h5 id="jquery-dom-操作" tabindex="-1">jQuery DOM 操作 <a class="header-anchor" href="#jquery-dom-操作" aria-label="Permalink to &quot;jQuery DOM 操作&quot;">​</a></h5><ul><li><p>1.创建元素</p></li><li><p>2.内部插入</p><ul><li><p>append()</p><ul><li>追加到后面</li></ul></li><li><p>appendTo()</p><ul><li>追加到指定元素前面</li></ul></li><li><p>prepend()</p><ul><li>追加到前面</li></ul></li><li><p>prependTo()</p><ul><li>追加到指定元素后面</li></ul></li></ul></li><li><p>3.外部插入</p><ul><li><p>after(&quot;&quot;)</p><ul><li>元素后面添加元素</li></ul></li><li><p>insertAfter(&quot;指定元素&quot;)</p><ul><li>指定元素后面添加元素</li></ul></li><li><p>befor()</p><ul><li>元素前面添加元素</li></ul></li><li><p>insertBefor(&quot;指定元素&quot;)</p><ul><li>指定元素前面添加元素</li></ul></li><li><p>消息滚动案例</p><ul><li>子主题 1</li></ul></li></ul></li><li><p>4.包裹</p><ul><li><p>.wrap(&quot;li&quot;)</p><ul><li>每个元素都包裹一个元素</li></ul></li><li><p>.wrapAll(&quot;li&quot;)</p><ul><li>全部元素统一包裹一个元素</li></ul></li><li><p>.wrapInner(&quot;#box&quot;)</p><ul><li>在 box 元素里面添加一个包裹他子元素的元素</li></ul></li><li><p>.unwrap(&quot;a&quot;)</p><ul><li>去掉包裹父元素</li></ul></li></ul></li><li><p>5.替换</p><ul><li><p>.replaceWith(新建标签标签或者元素)</p><ul><li>替换元素</li></ul></li><li><p>.replaceAll(元素)</p><ul><li>替换元素到指定标签元素里</li></ul></li></ul></li><li><p>6.删除</p><ul><li><p>.empty()</p><ul><li>清空一个元素里的所有内容</li></ul></li><li><p>.remove()</p><ul><li>删除元素</li></ul></li><li><p>.detach()</p><ul><li><p>删除元素（可恢复删除的元素）</p></li><li><p>恢复</p><ul><li>使用：.append(元素)</li></ul></li></ul></li></ul></li><li><p>7.克隆</p><ul><li>.clone().appendTo(&quot;body&quot;) <ul><li>克隆追加到 body 元素里</li></ul></li></ul></li><li><p>选项卡案例</p><ul><li><p>单击事件</p></li><li><p>//头部 $(this)addClass(&quot;current&quot;).removeClass(&quot;current&quot;);</p></li><li><p>//内容 $(&quot;li&quot;).removaClass(&quot;current&quot;).eq($(this).index()).addClass(&quot;current&quot;);</p></li></ul></li><li><p>jQuery 事件</p><ul><li><p>1.事件绑定</p><ul><li><p>鼠标悬浮和鼠标离开. 把事件名作为方法</p><ul><li>$(&quot;#btn&quot;).mouseover(function(){ $(this).css(&quot;background-color&quot;,&quot;#999&quot;); }).mouseout(function(){ $(this).css(&quot;background-color&quot;,&quot;#f5f5f5&quot;); })</li></ul></li><li><p>单击事件：.on(event,fn)</p><ul><li><p>.on(&quot;cclick&quot;,function(){ })</p></li><li><p>//使用 on 同时绑定多个事件 $(&quot;#btn&quot;).on({ &quot;mouseover&quot;:function(){ $(&quot;#btn&quot;).css(&quot;background-color&quot;,&quot;red&quot;); }, &quot;mouseout&quot;:function(){ $(&quot;#btn&quot;).css(&quot;background-color&quot;,&quot;teansparent&quot;); }, &quot;click&quot;:function(){ alert(&quot;OK&quot;); }, })</p></li></ul></li><li><p>//把事件 仅仅绑定一次 $(&quot;#btn&quot;).one(&quot;dbclick&quot;,function(){ })</p></li><li><p>把事件名作为方法</p></li></ul></li><li><p>2.解除事件绑定</p><ul><li><p>$(&quot;#btn&quot;).off();</p><ul><li>解除全部事件</li></ul></li><li><p>$(&quot;#btn&quot;).off(&quot;mouseout&quot;);</p><ul><li>解除指定事件</li></ul></li></ul></li><li><p>3.事件委派</p><ul><li>on(event,selectoer,fn) <ul><li>$(&quot;#myList&quot;).on(&quot;click&quot;,&quot;li&quot;,function(){ $(this).toggleClass(&quot;current&quot;); })</li></ul></li></ul></li><li><p>4.控制事件触发</p><ul><li><p>$(&quot;#btn&quot;).trlgger(&quot;事件&quot;)</p><ul><li><p>外面可以包裹一个点击事件</p></li><li><p>返回的是 jQuery dom 可以连贯操作</p></li><li><p>无法触发元素自带的事件</p></li><li><p>会触发集合中所有元素的事件</p></li></ul></li><li><p>$(&quot;#btn&quot;).trlggerHandle(&quot;事件&quot;)</p><ul><li>triggerHandle 值触发集合中第一个元素的事件</li></ul></li></ul></li><li><p>5.事件列表</p><ul><li><p>除了原生 js 的事件</p></li><li><p>新增事件</p><ul><li><p>ready</p><ul><li>页面中的 DOM 加载完毕</li></ul></li><li><p>focusin()</p><ul><li>获取焦点，绑定给输入框的父元素</li></ul></li><li><p>focusout()</p><ul><li>失去焦点，绑定给输入框的父元素</li></ul></li><li><p>mouseenter()</p><ul><li><p>类似于 mouseover：鼠标悬停在元素上</p></li><li><p>mouseenter 与 mouseover 的区别</p></li></ul></li><li><p>mouseleave()</p><ul><li><p>类似于 mouseout：鼠标离开在元素</p></li><li><p>mouseleave 与 mouseout 的区别</p></li></ul></li><li><p>hover()</p><ul><li>mouseenter()和 mouseleave()的集合</li></ul></li></ul></li></ul></li><li><p>6.事件对象</p><ul><li><p>pageX</p><ul><li>鼠标箭头 X 坐标</li></ul></li><li><p>pageY</p><ul><li>鼠标箭头 Y 坐标</li></ul></li><li><p>target</p><ul><li>当前触发事件的元素</li></ul></li><li><p>which</p><ul><li>键盘按键的 ascii 码</li></ul></li><li><p>type</p><ul><li>事件类型(事件名称)</li></ul></li><li><p>event.preventDefault();</p><ul><li>阻止默认操作</li></ul></li><li><p>event.stopPropagation();</p><ul><li>阻止事件冒泡</li></ul></li><li><p>return false;</p><ul><li>既可以阻止事件冒泡，又可以阻止默认操作</li></ul></li><li><p>案例</p><ul><li><p>鼠标拖拽元素案例</p><ul><li><p>1.鼠标按下事件</p><ul><li><p>1.按下的元素透明度</p></li><li><p>2.鼠标在元素上的位置</p></li><li><p>3.鼠标移动事件</p><ul><li><p>获取鼠标位置</p></li><li><p>改变元素位置</p></li></ul></li><li><p>4.连贯操作</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">mouseup</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 4.1透明度恢复</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 解除绑定mousemove事件</span></span>
<span class="line"><span style="color:#61AFEF;">    $</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">off</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;mouseover&quot;</span><span style="color:#ABB2BF;">) })</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li></ul></li></ul></li><li><p>键盘控制元素移动案例</p><ul><li><p>1.绑定键盘事件</p><ul><li><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">//计算页面的宽高</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> pWidth</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> $</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">window</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">width</span><span style="color:#ABB2BF;">(); </span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> pHeight</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> $</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">window</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">height</span><span style="color:#ABB2BF;">(); </span><span style="color:#7F848E;font-style:italic;">//绑定键盘事件</span></span>
<span class="line"><span style="color:#61AFEF;">$</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">document</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">keydown</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">event</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    //获取目前的位置</span></span>
<span class="line"><span style="color:#C678DD;">    var</span><span style="color:#E06C75;"> left</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> $</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;#box&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">offset</span><span style="color:#ABB2BF;">().</span><span style="color:#E06C75;">left</span><span style="color:#ABB2BF;">;    </span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> top</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> $</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;#box&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">offset</span><span style="color:#ABB2BF;">().</span><span style="color:#E06C75;">top</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    //判断按键</span></span>
<span class="line"><span style="color:#C678DD;">    switch</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">event</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">which</span><span style="color:#ABB2BF;">){        </span><span style="color:#C678DD;">case</span><span style="color:#D19A66;"> 65</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">            //向左移动</span></span>
<span class="line"><span style="color:#61AFEF;">            $</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;#box&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">offset</span><span style="color:#ABB2BF;">({              </span><span style="color:#E06C75;">left</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Math</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">max</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">left</span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">)            });            </span><span style="color:#E06C75;">break</span><span style="color:#ABB2BF;">;                </span><span style="color:#E06C75;">case</span><span style="color:#D19A66;"> 68</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">            //向右移动</span></span>
<span class="line"><span style="color:#61AFEF;">            $</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;#box&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">offset</span><span style="color:#ABB2BF;">({              </span><span style="color:#E06C75;">left</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Math</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">min</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">left</span><span style="color:#56B6C2;">+</span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">pWidth</span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">40</span><span style="color:#ABB2BF;">)            });            </span><span style="color:#E06C75;">break</span><span style="color:#ABB2BF;">;        </span><span style="color:#E06C75;">case</span><span style="color:#D19A66;"> 87</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">            // 向上移动</span></span>
<span class="line"><span style="color:#61AFEF;">            $</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;#box&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">offset</span><span style="color:#ABB2BF;">({              </span><span style="color:#E06C75;">top</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Math</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">max</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">top</span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">)            });            </span><span style="color:#E06C75;">break</span><span style="color:#ABB2BF;">;        </span><span style="color:#E06C75;">case</span><span style="color:#D19A66;"> 83</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">            // 向下移动</span></span>
<span class="line"><span style="color:#61AFEF;">            $</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;#box&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">offset</span><span style="color:#ABB2BF;">({              </span><span style="color:#E06C75;">top</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Math</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">min</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">top</span><span style="color:#56B6C2;">+</span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">pHeight</span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">40</span><span style="color:#ABB2BF;">)            });            </span><span style="color:#E06C75;">break</span><span style="color:#ABB2BF;">;    } })</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div></li><li><p>w:87 上 a:65 左 s:83 下 d:68 右</p></li></ul></li></ul></li><li><p>图片放大镜案例</p><ul><li><p>0.计算小图的位置</p></li><li><p>1.鼠标悬停事件</p><ul><li><p>1.显示大图并设置改变大图位置</p><ul><li>子主题 1</li></ul></li><li><p>2.放大镜元素 显示并跟随鼠标移动</p><ul><li><p>计算放大镜元素</p></li><li><p>放大镜元素跟随鼠标移动</p></li></ul></li><li><p>3.绑定 鼠标移动位置</p><ul><li><p>1.鼠标在小图的位置</p></li><li><p>2.控制大图 显示部分内容</p><ul><li><p>$(&quot;#bigBox&quot;).scrollLeft(mLeft *3)..scrollTop(mTop *3)</p></li><li><p>小图和大图的倍数对应</p></li></ul></li></ul></li></ul></li><li><p>2.鼠标离开事件</p><ul><li>大图隐藏</li></ul></li></ul></li></ul></li></ul></li></ul></li><li><p>jQuery 动画效果</p><ul><li><p>([s],[e],[fn])参数</p><ul><li><p>[] 中括号可以都省略</p></li><li><p>[s]速度</p><ul><li><p>(&quot;slow&quot;)</p></li><li><p>(&quot;normal&quot;)</p></li><li><p>(&quot;fast&quot;)</p></li><li><p>毫秒数值</p><ul><li>1000</li></ul></li></ul></li><li><p>[e]切换效果</p><ul><li><p>默认是&quot;swing&quot;</p></li><li><p>可用参数&quot;linear&quot;</p></li></ul></li><li><p>[fn]动画完成执行的函数</p><ul><li>function(){}</li></ul></li></ul></li><li><p>基本效果</p><ul><li><p>基本相关的 css 属性变化：透明度变化， 元素大小相关样式，外边距</p></li><li><p>隐藏：<code>hide([s,[e],[fn]])</code></p><ul><li><p>hide()</p><ul><li>无动画</li></ul></li><li><p>hide(&quot;fast&quot;)</p><ul><li>快速的隐藏</li></ul></li><li><p>hide(&quot;normal&quot;)</p></li><li><p>hide(&quot;slow&quot;)</p><ul><li>缓慢的隐藏</li></ul></li><li><p>hide(3000)</p></li><li><p>hide(3000,function(){ alert(&quot;Animation Done.&quot;); })</p></li></ul></li><li><p>显示：<code>show([s,[e],[fn]])</code></p><ul><li><p>show()</p><ul><li>无动画</li></ul></li><li><p>show(&quot;fast&quot;)</p><ul><li>快速的隐藏</li></ul></li><li><p>show(&quot;normal&quot;)</p></li><li><p>show(&quot;slow&quot;)</p><ul><li>缓慢的隐藏</li></ul></li><li><p>show(3000)</p></li><li><p>show(3000,function(){ $(this).text(&quot;Animation Done!&quot;); })</p></li></ul></li><li><p>隐藏和显示切换切换：toggle([s],[e],[fn])</p><ul><li><p>$(&#39;td).toggle();</p></li><li><p>$(&quot;p&quot;).toggle(&quot;slow&quot;);</p></li><li><p>$(&quot;p&quot;).toggle(&quot;fast&quot;,function(){ alert(&quot;Animation Done.&quot;); });</p></li><li><p>$(&#39;#foo&#39;).toggle(showOrHide);</p><ul><li>//相当于 if (showOrHide) { $(&#39;#foo&#39;).show(); } else { $(&#39;#foo&#39;).hide(); }</li></ul></li></ul></li></ul></li><li><p>滑动效果</p><ul><li><p>垂直向上或向上的运动</p></li><li><p>slideDown([s],[e],[fn])</p><ul><li>下滑动</li></ul></li><li><p><code>slideUp([s,[e],[fn]])</code></p><ul><li>上滑动</li></ul></li><li><p>slideToggle([s],[e],[fn])</p><ul><li><p>显示和隐藏切换</p></li><li><p>配合.hover()使用</p><ul><li>鼠标经过事件</li></ul></li><li><p>上述两个合并的动画</p></li></ul></li></ul></li><li><p>淡入淡出效果</p><ul><li><p>透明度的变化/渐变</p></li><li><p>e 透明度参数</p><ul><li>0.1 ~ 1</li></ul></li><li><p>fadeIn([s],[e],[fn])</p><ul><li>淡入效果</li></ul></li><li><p>fadeOut([s],[e],[fn])</p><ul><li>淡出效果</li></ul></li></ul></li></ul></li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">fadeToggle</span><span style="color:#ABB2BF;">([</span><span style="color:#E06C75;">s</span><span style="color:#ABB2BF;">, [</span><span style="color:#E06C75;">e</span><span style="color:#ABB2BF;">], [</span><span style="color:#E06C75;">fn</span><span style="color:#ABB2BF;">]]);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>淡入淡出切换效果</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">fadeTo</span><span style="color:#ABB2BF;">([[</span><span style="color:#E06C75;">s</span><span style="color:#ABB2BF;">], </span><span style="color:#E06C75;">o</span><span style="color:#ABB2BF;">, [</span><span style="color:#E06C75;">e</span><span style="color:#ABB2BF;">], [</span><span style="color:#E06C75;">fn</span><span style="color:#ABB2BF;">]]);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>仅仅改变透明度效果</p><ul><li>自定义</li></ul><p>自定义动画：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">animate</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">p</span><span style="color:#ABB2BF;">,[</span><span style="color:#E06C75;">s</span><span style="color:#ABB2BF;">],[</span><span style="color:#E06C75;">e</span><span style="color:#ABB2BF;">],[</span><span style="color:#E06C75;">fn</span><span style="color:#ABB2BF;">])</span><span style="color:#D19A66;">1.8</span><span style="color:#ABB2BF;">\\</span><span style="color:#56B6C2;">*</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><pre><code>- p 参数

  - 1.包含作为动画属性和终值的样式属性和及其值的集合

  - 2.或 CSS 样式

  - $(&quot;p&quot;).animate({ height: &#39;toggle&#39;, opacity: &#39;toggle&#39; }, &quot;slow&quot;);

- \`\`\`js
  // 在一个动画中同时应用三种类型的效果
  $(&quot;#go&quot;).click(function () {
  	$(&quot;#block&quot;).animate(
  		{ width: &quot;90%&quot;, height: &quot;100%&quot;, fontSize: &quot;10em&quot;, borderWidth: 10 },
  		1000
  	);
  });
  \`\`\`

-
</code></pre><ul><li><p>使动画停止：stop([c],[j])1.7*</p></li><li><p>使动画延迟执行：delay(d,[q])</p></li><li><p>使动画完成：finish([queue])1.9+</p></li><li><p>动画设置</p><ul><li><p>执行一个禁用的动画：jQuery.fx.off</p><ul><li><p>//关闭页面中所有的动画 jQuery.fx.off = true;</p></li><li><p>jQuery.fx.off = true; $(&quot;input&quot;).click(function(){ $(&quot;div&quot;).toggle(&quot;slow&quot;); });</p></li></ul></li><li><p>设置动画的显示帧速：jQuery.fx.interval 3.0-</p><ul><li>jQuery.fx.interval = 100;</li></ul></li></ul></li><li><p>动画的队列</p><ul><li><p>所有的动画操作会加入到队列中，依次执行</p></li><li><p>.stop()停止动画</p><ul><li>$(this).children(&#39;ul&#39;).stop().slideToggle();</li></ul></li><li><p>其他操作不会加入滑动队列</p></li><li><p>.stop()写在动画或者效果的前面，相当于停止结束上一次的动画</p></li></ul></li><li><p>jQuery 动画和 CSS3 动画</p><ul><li><p>兼容性，css3 的动画和过渡需要 IE9+，jQuery 可以使用 1.*版本的</p></li><li><p>CSS3 的动画或者过渡必须给元素具体的 CSS 属性值</p></li></ul></li><li><p>案例</p><ul><li><p>消息滚动动画案例</p></li><li><p>轮播图案例</p></li><li><p>手风琴</p></li></ul></li><li><p>jQuery Ajax</p><ul><li><p>1.快速请求方法</p><ul><li><p>$.get(&quot;url&quot;,function(data){ })</p></li><li><p>$.post(&quot;url&quot;,function(data){ })</p></li></ul></li><li><p>2.ajax 方法</p><ul><li>$.ajax({url:&quot;&quot;,type:&quot;get 或者 post&quot;,data:{name:&quot;JIM&quot;,message:&quot;哈哈哈&quot;},async:true,success:function(data){alert(data);}})</li></ul></li><li><p>3.表单方法</p><ul><li>$(&quot;#myForm&quot;).serialize() <ul><li>把表单中有 name 属性的表单控件的值，拼接成字符串</li></ul></li></ul></li><li><p>4.处理 json 数据</p><ul><li></li></ul></li><li><p>地址联动案例</p><ul><li>子主题 1</li></ul></li></ul></li><li><p>jQuery 工具方法</p><ul><li><p>数组和对象操作方法</p><ul><li><p>$.each(object,[callback])</p><ul><li>遍历数组或者类数组对象</li></ul></li><li><p>$.grep(array,fn,[invert])</p><ul><li>过滤数组</li></ul></li><li><p>$.map(arr|obj,callback)</p><ul><li>从数组中取出信息，返回新的数组</li></ul></li><li><p>$.makeArray(obj)</p><ul><li>把类数组对象转为纯数组</li></ul></li><li><p>$.inArray(val,arr,[from])</p><ul><li>判断某个元素在数组中的位置，不存在，返回-1</li></ul></li><li><p>$.merge(first,second)</p><ul><li>合并数组</li></ul></li><li><p>$.toArray()</p><ul><li>返回一个新的纯数组</li></ul></li><li><p>$.extend([d],tgt,obj1,[objN])</p></li><li><p>$.sub()1.9-</p></li><li><p>$.when(deferreds)</p></li><li><p>$.unique(array)3.0-</p></li><li><p>$.uniqueSort(array)3.0+</p></li><li><p>$.parseJSON(json)3.0-</p></li><li><p>$.parseXML(data)</p></li></ul></li><li><p>函数操作</p><ul><li><p>$.proxy(function,context)</p><ul><li>改函数内的 this 指向</li></ul></li><li><p>$.noop</p></li></ul></li><li><p>测试操作类型判断</p><ul><li><p>$.type(obj)</p><ul><li>判断类型</li></ul></li><li><p>$.isFunction(obj)3.3-</p><ul><li>判断是否是函数的方法</li></ul></li><li><p>$.isEmptyObject(obj)</p><ul><li>判断是否是空的对象</li></ul></li><li><p>$.isPlainObject(obj)</p><ul><li>判断是否是纯的对象(构造函数是 Object)</li></ul></li><li><p>$.isWindow(obj)3.3-</p><ul><li>判断是否是 Windows 对象</li></ul></li><li><p>$.isNumeric(value)1.7+</p><ul><li>判断是否是数字(NaN 为 false)</li></ul></li><li><p>$.contains(c,c)</p></li><li><p>$.isArray(obj)3.2-</p></li></ul></li><li><p>字符串操作</p><ul><li><p>$.trim(str)</p><ul><li>去掉字符串起始和结尾的空格</li></ul></li><li><p>$.param(obj,[traditional])</p><ul><li>把对象序列化成字符串</li></ul></li></ul></li><li><p>插件编写</p><ul><li><p>$.error(message)</p><ul><li>接受一个字符串，并且直接抛出一个包含这个字符串的异常</li></ul></li><li><p>$.fn.jquery</p><ul><li>判断 jQuery 版本号的字符串</li></ul></li></ul></li></ul></li><li><p>代码案例</p><ul><li><p>1.菜单收缩展开效果</p><ul><li><p>绑定单击事件</p></li><li><p>//点击展开收缩 $(this).toggleClass(&quot;open&quot;);</p></li><li><p>//判断 ul 是隐藏还是显示 $(this).next(&quot;ul&quot;).slideToggle();</p></li><li><p>//连写简化效果 $(this).toggleClass(&quot;open&quot;).next(&quot;ul&quot;).slideToggle();</p></li></ul></li><li><p>2.手风琴菜单</p><ul><li><p>绑定单击事件</p></li><li><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">$</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">document</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">ready</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 绑定单击事件</span></span>
<span class="line"><span style="color:#61AFEF;">    $</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;.nav-list h3&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">click</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">(){         </span><span style="color:#61AFEF;">$</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">addClass</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;open&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">siblings</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;h3&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#E06C75;">removeClass</span><span style="color:#ABB2BF;">.(</span><span style="color:#98C379;">&quot;open&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">end</span><span style="color:#ABB2BF;">().</span><span style="color:#61AFEF;">next</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;ul&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">slideDown</span><span style="color:#ABB2BF;">().</span><span style="color:#61AFEF;">siblings</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;ul&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">slideUp</span><span style="color:#ABB2BF;">();    })    })</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li><li><ul><li></li></ul></li></ul></li><li><p>3.手风琴菜单 2(关闭其他)</p><ul><li><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">$</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">document</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">ready</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">(){    </span><span style="color:#7F848E;font-style:italic;">// 绑定单击事件</span></span>
<span class="line"><span style="color:#61AFEF;">    $</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;.nav-list h3&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">click</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">(){         </span><span style="color:#61AFEF;">$</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">toggleClass</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;open&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">siblings</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;h3&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#E06C75;">removeClass</span><span style="color:#ABB2BF;">.(</span><span style="color:#98C379;">&quot;open&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">end</span><span style="color:#ABB2BF;">().</span><span style="color:#61AFEF;">next</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;ul&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">slideTaggle</span><span style="color:#ABB2BF;">().</span><span style="color:#61AFEF;">siblings</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;ul&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">slideUp</span><span style="color:#ABB2BF;">();    })    })</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li><li></li></ul></li></ul></li><li><p>基于 jQuery 的插件</p></li></ul><h3 id="backbone" tabindex="-1">Backbone <a class="header-anchor" href="#backbone" aria-label="Permalink to &quot;Backbone&quot;">​</a></h3><ul><li><p>是一个轻量级的 MVC JavaScript 库</p></li><li><p>基于 underscore.js</p><ul><li>子主题 1</li></ul></li></ul><h3 id="bootstrap" tabindex="-1">Bootstrap <a class="header-anchor" href="#bootstrap" aria-label="Permalink to &quot;Bootstrap&quot;">​</a></h3><ul><li><p>页面结构</p><ul><li><p>nav</p><ul><li>导航部分</li></ul></li><li><p>div.container</p><ul><li>主体部分</li></ul></li><li><p>footer</p><ul><li>页尾</li></ul></li></ul></li><li><p>样式</p><ul><li><p>网格类</p><ul><li><p>.col- 针对所有设备</p></li><li><p>.col-sm- 平板 - 屏幕宽度等于或大于 576px</p></li><li><p>.col-md- 桌面显示器 - 屏幕宽度等于或大于 768px)</p></li><li><p>.col-lg- 大桌面显示器 - 屏幕宽度等于或大于 992px)</p></li><li><p>.col-xl- 超大桌面显示器 - 屏幕宽度等于或大于 1200px)</p></li></ul></li><li><p>容器</p><ul><li><p>.container (固定宽度)</p></li><li><p>.container-fluid (全屏宽度)</p></li></ul></li><li><p>文字排版</p></li><li><p>颜色</p><ul><li><p>柔和的文本。</p></li><li><p>重要的文本。</p></li><li><p>执行成功的文本。</p></li><li><p>代表一些提示信息的文本。</p></li><li><p>警告文本。</p></li><li><p>危险操作文本。</p></li><li><p>副标题。</p></li><li><p>深灰色文字。</p></li><li><p>浅灰色文本（白色背景上看不清楚）。</p></li><li><p>白色文本（白色背景上看不清楚）。</p></li></ul></li><li><p>按钮</p></li></ul></li></ul><h2 id="数据可视化库" tabindex="-1">数据可视化库 <a class="header-anchor" href="#数据可视化库" aria-label="Permalink to &quot;数据可视化库&quot;">​</a></h2><h3 id="数据可视化" tabindex="-1">数据可视化 <a class="header-anchor" href="#数据可视化" aria-label="Permalink to &quot;数据可视化&quot;">​</a></h3><ul><li><p>数据可视化的主要目的：借助图形化手段，清晰有效的传达与沟通信息</p></li><li><p>数据可视化可以把数据从冰冷的数字转换成图形，揭示蕴含在数据中的规律和道理</p></li><li><p>使用场景</p><ul><li><p>通用报表</p></li><li><p>移动端图表</p></li><li><p>大屏可视化</p></li><li><p>图编辑&amp;图分析</p></li><li><p>地理可视化</p></li><li><p>图解</p></li></ul></li></ul><h3 id="前端画图基础" tabindex="-1">前端画图基础 <a class="header-anchor" href="#前端画图基础" aria-label="Permalink to &quot;前端画图基础&quot;">​</a></h3><ul><li><p>canvas</p><ul><li>canvas 是 HTML5 新增的专门用来绘制图形的元素， canvas 元素是一块无色透明的区域， 开发者需要通过 js 脚本在元素中绘图；</li></ul></li><li><p>svg</p><ul><li>html 元素</li></ul></li></ul><h3 id="echarts-js" tabindex="-1">Echarts.js <a class="header-anchor" href="#echarts-js" aria-label="Permalink to &quot;Echarts.js&quot;">​</a></h3><ul><li><p>百度 Echarts 开源图表官网</p><ul><li><p><a href="https://www.echartsjs.com/zh/index.html" target="_blank" rel="noreferrer">https://www.echartsjs.com/zh/index.html</a></p></li><li><p><a href="https://gallery.echartsjs.com/explore.html#sort=rank~timeframe=all~author=all" target="_blank" rel="noreferrer">https://gallery.echartsjs.com/explore.html#sort=rank~timeframe=all~author=all</a></p></li></ul></li><li><p>使用步骤</p><ul><li><p>1.下载并引入 ECharts</p><ul><li><p>下载</p></li><li><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#56B6C2;">&lt;!--</span><span style="color:#E06C75;"> 引入</span><span style="color:#E06C75;"> echarts</span><span style="color:#E06C75;"> 文件</span><span style="color:#56B6C2;"> --&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li></li></ul></li><li><p>2.准备一个具备大小的 DOM 容器</p><ul><li>生成的图表装在这个容器内</li></ul></li><li><p>3.初始化 echarts 实例对象</p><ul><li>实例化 echarts 对象</li></ul></li><li><p>4.指定配置项和数据(option)</p><ul><li>根据具体需求修改配置选型</li></ul></li><li><p>5.将配置项设置给 echarts 实例对象</p><ul><li>让 echarts 对象根据修改好的配置生效</li></ul></li><li><p>示例语法</p><ul><li><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#56B6C2;">&lt;!--</span><span style="color:#E06C75;"> 引入</span><span style="color:#E06C75;"> echarts</span><span style="color:#E06C75;"> 文件</span><span style="color:#56B6C2;"> --&gt;</span></span>
<span class="line"><span style="color:#56B6C2;">&lt;!--</span><span style="color:#61AFEF;"> 为echarts准备一个具备大小</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">宽高</span><span style="color:#ABB2BF;">)</span><span style="color:#E06C75;">的dom</span><span style="color:#56B6C2;"> --&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 基于准备好的dom，初始化echarts实例</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> myChart</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> echarts</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">init</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getElementById</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;main&#39;</span><span style="color:#ABB2BF;">));         </span><span style="color:#7F848E;font-style:italic;">// 指定图表的配置项和数据</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> option</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {            </span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">: {                </span><span style="color:#E06C75;">text</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;ECharts 入门示例&#39;</span><span style="color:#ABB2BF;">            },            </span><span style="color:#E06C75;">tooltip</span><span style="color:#ABB2BF;">: {},            </span><span style="color:#E06C75;">legend</span><span style="color:#ABB2BF;">: {                </span><span style="color:#E06C75;">data</span><span style="color:#ABB2BF;">:[</span><span style="color:#98C379;">&#39;销量&#39;</span><span style="color:#ABB2BF;">]            },            </span><span style="color:#E06C75;">xAxis</span><span style="color:#ABB2BF;">: {                </span><span style="color:#E06C75;">data</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;衬衫&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&quot;羊毛衫&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&quot;雪纺衫&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&quot;裤子&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&quot;高跟鞋&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&quot;袜子&quot;</span><span style="color:#ABB2BF;">]            },            </span><span style="color:#E06C75;">yAxis</span><span style="color:#ABB2BF;">: {},            </span><span style="color:#E06C75;">series</span><span style="color:#ABB2BF;">: [{                </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;销量&#39;</span><span style="color:#ABB2BF;">,                </span><span style="color:#E06C75;">type</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;bar&#39;</span><span style="color:#ABB2BF;">,                </span><span style="color:#E06C75;">data</span><span style="color:#ABB2BF;">: [</span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">36</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">]            }]        };</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 使用刚指定的配置项和数据显示图表。</span></span>
<span class="line"><span style="color:#E5C07B;">myChart</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setOption</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">option</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></li><li></li></ul></li></ul></li><li><p>配置和组件</p><ul><li><p>特性</p><ul><li><p>拖拽重计算</p><ul><li><p>1.拖拽整合数据</p></li><li><p>2.剔除畸形数据</p></li></ul></li><li><p>数据视图</p><ul><li><p>满足用户对数据的需求</p></li><li><p>视图改变，修改数据</p></li></ul></li><li><p>动态类型切换</p><ul><li>不同类型的图表展现</li></ul></li><li><p>值域漫游</p><ul><li>地图图表聚焦到你所关心的数值上</li></ul></li><li><p>数据区域缩放</p><ul><li>聚焦到你所关心的数据上</li></ul></li><li><p>多图联动</p><ul><li>更友好的关联数据分析</li></ul></li><li><p>百搭的时间轴</p><ul><li>时间维度的扩展</li></ul></li><li><p>大规模散点</p><ul><li>展现大数据的魅力</li></ul></li><li><p>力导向布局</p><ul><li>复杂关系网络的呈现</li></ul></li><li><p>动态数据添加</p><ul><li>实时展现数据变化</li></ul></li><li><p>多维度图例开关</p><ul><li>切换你所关心的数据系列</li></ul></li><li><p>多维度堆积</p><ul><li>展现更具有内涵的图表</li></ul></li><li><p>商业 BI</p><ul><li>一些应用广泛的商务图表</li></ul></li><li><p>混搭：全部图表可混合搭配</p><ul><li>用最佳的租户方式展现你的独特数据</li></ul></li><li><p>特效</p></li></ul></li><li><p>组件</p><ul><li><p>颜色主题（Theme）</p><ul><li><p>var chart = echarts.init(dom, &#39;light&#39;); 或者 var chart = echarts.init(dom, &#39;dark&#39;);</p></li><li><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 假设主题名称是 &quot;vintage&quot;</span></span>
<span class="line"><span style="color:#E5C07B;">$</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getJSON</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;xxx/xxx/vintage.json&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">themeJSON</span><span style="color:#ABB2BF;">) {    </span><span style="color:#E5C07B;">echarts</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">registerTheme</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;vintage&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">JSON</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">parse</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">themeJSON</span><span style="color:#ABB2BF;">))    </span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> chart</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> echarts</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">init</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">dom</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;vintage&#39;</span><span style="color:#ABB2BF;">); });</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li><li></li><li><p>如果保存为 UMD 格式的 JS 文件，那么支持了自注册，直接引入 JS 文件即可： // HTML 引入 vintage.js 文件后（假设主题名称是 &quot;vintage&quot;） var chart = echarts.init(dom, &#39;vintage&#39;); // ...</p></li></ul></li><li><p>调色盘</p><ul><li><p>调色盘，可以在 option 中设置。它给定了一组颜色，图形、 系列会自动从其中选择颜色。 可以设置全局的调色盘， 也可以设置系列自己专属的调色盘。</p></li><li><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E06C75;">option</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 全局调色盘。</span></span>
<span class="line"><span style="color:#E06C75;">    color</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&#39;#c23531&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&#39;#2f4554&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;#61a0a8&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;#d48265&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;#91c7ae&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&#39;#749f83&#39;</span><span style="color:#ABB2BF;">,  </span><span style="color:#98C379;">&#39;#ca8622&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;#bda29a&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&#39;#6e7074&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;#546570&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;#c4ccd3&#39;</span><span style="color:#ABB2BF;">],     </span><span style="color:#E06C75;">series</span><span style="color:#ABB2BF;">: [{        </span><span style="color:#E06C75;">type</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;bar&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                                                                                                                                                  // 此系列自己的调色盘。</span></span>
<span class="line"><span style="color:#E06C75;">                                                                                                                                                  color</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&#39;#dd6b66&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&#39;#759aa0&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&#39;#e69d87&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&#39;#8dc1a9&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&#39;#ea7e53&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&#39;#eedd78&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&#39;#73a373&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&#39;#73b9bc&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&#39;#7289ab&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;#91ca8c&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&#39;#f49f42&#39;</span><span style="color:#ABB2BF;">],        ...    }, {        </span><span style="color:#E06C75;">type</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;pie&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                                                                                                                                                  // 此系列自己的调色盘。</span></span>
<span class="line"><span style="color:#E06C75;">                                                                                                                                                  color</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&#39;#37A2DA&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;#32C5E9&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;#67E0E3&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;#9FE6B8&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;#FFDB5C&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&#39;#ff9f7f&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;#fb7293&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;#E062AE&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;#E690D1&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;#e7bcf3&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;#9d96f5&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;#8378EA&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;#96BFFF&#39;</span><span style="color:#ABB2BF;">],        ...    }] }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></li><li></li></ul></li><li><p>高亮的样式：emphasis</p><ul><li><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E06C75;">option</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">	series</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">		type</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;scatter&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 普通样式。</span></span>
<span class="line"><span style="color:#E06C75;">		itemStyle</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// 点的颜色。</span></span>
<span class="line"><span style="color:#E06C75;">			color</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;red&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">		},</span></span>
<span class="line"><span style="color:#E06C75;">		label</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">			show</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// 标签的文字。</span></span>
<span class="line"><span style="color:#E06C75;">			formatter</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;This is a normal label.&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">		}, </span><span style="color:#7F848E;font-style:italic;">// 高亮样式。</span></span>
<span class="line"><span style="color:#E06C75;">		emphasis</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">			itemStyle</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				// 高亮时点的颜色。</span></span>
<span class="line"><span style="color:#E06C75;">				color</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;blue&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">			},</span></span>
<span class="line"><span style="color:#E06C75;">			label</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">				show</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 高亮时标签的文字。</span></span>
<span class="line"><span style="color:#E06C75;">				formatter</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;This is a emphasis label.&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">			},</span></span>
<span class="line"><span style="color:#ABB2BF;">		},</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div></li><li></li></ul></li></ul></li><li><p>组件参数详解</p><ul><li><p>更详细配置访问官网文档：<a href="https://www.echartsjs.com/zh/option.html#title" target="_blank" rel="noreferrer">https://www.echartsjs.com/zh/option.html#title</a></p></li><li><p>title:标题组件</p><ul><li><p>title:{...}</p><ul><li><p>标题文字</p></li><li><p>子标题</p></li><li><p>标题位置</p></li><li><p>边框颜色</p></li><li><p>边框宽度</p></li></ul></li></ul></li><li><p>tooltip:提示框组件</p><ul><li><p>tootip{...}</p><ul><li><p>提示框组件可以设置在多种地方：</p></li><li><p>触发</p></li><li><p>配置</p></li><li><p>如何显示</p></li><li><p>触屏设置</p></li><li><p>坐标</p></li><li><p>时效</p></li><li><p>触发条件</p></li><li><p>动画</p><ul><li><p>时间</p></li><li><p>效果</p></li></ul></li><li><p>...</p></li></ul></li></ul></li><li><p>legend:图例组件</p><ul><li>legend: {...}</li></ul></li><li><p>toolbox:工具栏组件</p><ul><li><p>toolbox: {...}</p><ul><li><p>组件 ID</p></li><li><p>是否显示</p></li><li><p>整个组件的宽度、大小</p><ul><li>默认自适应</li></ul></li><li><p>布局朝向</p><ul><li>上下左右</li></ul></li><li><p>图标</p><ul><li><p>工具栏图标大小</p></li><li><p>工具栏图标间隔</p></li><li><p>鼠标经过时图标标题</p></li></ul></li><li><p>工具配置项</p><ul><li><p>feature: {...}</p></li><li><p>最基本的属性</p><ul><li>show:true/false</li></ul></li><li><p>自定义工具</p><ul><li><p>只能以 my 开头</p></li><li><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E06C75;">myTool1</span><span style="color:#ABB2BF;">:{</span></span>
<span class="line"><span style="color:#E06C75;">    show</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        title</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;自定义扩展方法&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    icon</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;image://http://echarts.baidu.com/images/favicon.png&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    onclick</span><span style="color:#ABB2BF;">: </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> (){                    </span><span style="color:#61AFEF;">alert</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;myToolHandler2&#39;</span><span style="color:#ABB2BF;">)                } }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li><li></li></ul></li><li><p>保存图片</p><ul><li>saveasimage:{}</li></ul></li><li><p>还原</p><ul><li>restore:{}</li></ul></li><li><p>数据视图</p><ul><li>dataview:{}</li></ul></li><li><p>缩放视图</p><ul><li>datazoom:{}</li></ul></li><li><p>动态类型切换</p><ul><li><p>magictype:{type[&#39;&#39;,&#39;&#39;]}</p><ul><li><p>type 里面填写类型</p></li><li><p>类型</p><ul><li>所有属性 { show , type , title , icon , iconStyle , emphasis , option , seriesIndex }</li></ul></li></ul></li></ul></li><li><p>选框组件的控制按钮</p><ul><li>brush:{...}</li></ul></li><li><p>工具图标样式</p><ul><li><p>iconstyle:{...}</p><ul><li><p>颜色</p></li><li><p>边框</p><ul><li><p>边框颜色</p></li><li><p>边框宽度</p></li><li><p>边框类型</p></li><li><p>阴影大小</p></li><li><p>阴影颜色</p></li><li><p>阴影偏移</p><ul><li><p>水平</p></li><li><p>垂直</p></li></ul></li></ul></li><li><p>图形的透明度</p></li></ul></li></ul></li></ul></li><li><p>tooltip</p><ul><li>提示组件</li></ul></li></ul></li></ul></li><li><p>grid:直角坐标系内绘图网格</p></li><li><p>xAxis:直角坐标系 grid 中的 X 轴</p><ul><li>xAxis:{...}</li></ul></li><li><p>yAxis:直角坐标系 grid 中的 Y 轴</p><ul><li>yAxis:{...}</li></ul></li><li><p>polar:极坐标系组件</p><ul><li><p>polar:{...}</p><ul><li><p>可以用于散点图和折线图</p></li><li><p>每个极坐标系拥有一个角度轴和一个半径轴</p></li></ul></li></ul></li><li><p>series:系列列表组件</p><ul><li><p>series:{[...]}</p><ul><li><p>图表类型</p><ul><li><p>line</p></li><li><p>...</p></li></ul></li><li><p>ID</p></li><li><p>名称</p></li><li><p>坐标系</p></li><li><p>链接</p></li><li><p>动画</p></li><li><p>状态</p></li><li><p>指针样式</p></li><li><p>图形数据信息标签</p><ul><li><p>lable:{...}</p><ul><li><p>是否显示：show:true/false</p></li><li><p>X,Y 轴</p><ul><li><p>绝对像素值和相对百分比</p><ul><li>// 绝对的像素值 position: [10, 10], // 相对的百分比 position: [&#39;50%&#39;, &#39;50%&#39;]</li></ul></li><li><p>上下左右、内部的</p></li></ul></li><li><p>标签旋转</p><ul><li>rotate</li></ul></li><li><p>标签偏移</p><ul><li>offset</li></ul></li><li><p>标签内容格式器</p><ul><li>formatter</li></ul></li><li><p>自定义富文本样式</p><ul><li>rich{...} <ul><li>文字字体/大小/颜色/粗细/对齐方式/行高/背景色/ 边框样式：颜色/宽度/圆角/内边距/阴影/宽度</li></ul></li></ul></li><li><p>折线拐点标志</p><ul><li><p>itemStyle:{...}</p><ul><li><p>颜色 color:{...}</p><ul><li><p>type:&#39;&#39;</p><ul><li><p>linear</p><ul><li><h2 id="线性渐变" tabindex="-1">线性渐变 <a class="header-anchor" href="#线性渐变" aria-label="Permalink to &quot;线性渐变&quot;">​</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 线性渐变，前四个参数分别是 x0, y0, x2, y2, 范围从 0 - 1，相当于在图形包围盒中的百分比，如果 globalCoord 为 \`true\`，则该四个值是绝对的像素位置</span></span>
<span class="line"><span style="color:#E06C75;">color</span><span style="color:#ABB2BF;">: { </span><span style="color:#E06C75;">type</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;linear&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">x</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">y</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">x2</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">y2</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">colorStops</span><span style="color:#ABB2BF;">: [{ </span><span style="color:#E06C75;">offset</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">color</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;red&#39;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 0% 处的颜色</span></span>
<span class="line"><span style="color:#ABB2BF;"> }, { </span><span style="color:#E06C75;">offset</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">color</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;blue&#39;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> // 100% 处的颜色</span></span>
<span class="line"><span style="color:#ABB2BF;">  }], </span><span style="color:#E06C75;">global</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // 缺省为 false</span></span>
<span class="line"><span style="color:#ABB2BF;">   }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></li></ul></li><li><p>radial</p><ul><li><p>径向渐变</p><ul><li><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 径向渐变，前三个参数分别是圆心 x, y 和半径，取值同线性渐变</span></span>
<span class="line"><span style="color:#E06C75;">color</span><span style="color:#ABB2BF;">: {    </span><span style="color:#E06C75;">type</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;radial&#39;</span><span style="color:#ABB2BF;">,    </span><span style="color:#E06C75;">x</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">0.5</span><span style="color:#ABB2BF;">,    </span><span style="color:#E06C75;">y</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">0.5</span><span style="color:#ABB2BF;">,    </span><span style="color:#E06C75;">r</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">0.5</span><span style="color:#ABB2BF;">,    </span><span style="color:#E06C75;">colorStops</span><span style="color:#ABB2BF;">: [{        </span><span style="color:#E06C75;">offset</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">color</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;red&#39;</span><span style="color:#7F848E;font-style:italic;"> // 0% 处的颜色</span></span>
<span class="line"><span style="color:#ABB2BF;">                                                                             }, {        </span><span style="color:#E06C75;">offset</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">color</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;blue&#39;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                                                                                 // 100% 处的颜色</span></span>
<span class="line"><span style="color:#ABB2BF;">                                                                                }],    </span><span style="color:#E06C75;">global</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 缺省为 false }</span><span style="color:#7F848E;font-style:italic;"> // 纹理填充</span></span>
<span class="line"><span style="color:#E06C75;">        color</span><span style="color:#ABB2BF;">: {    </span><span style="color:#E06C75;">image</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">imageDom</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 支持为 HTMLImageElement, HTMLCanvasElement，不支持路径字符串</span></span>
<span class="line"><span style="color:#E06C75;">            repeat</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;repeat&#39;</span><span style="color:#7F848E;font-style:italic;"> // 是否平铺, 可以是 &#39;repeat-x&#39;,</span></span>
<span class="line"><span style="color:#98C379;">                &#39;repeat-y&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;no-repeat&#39;</span><span style="color:#ABB2BF;"> }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></li><li></li></ul></li></ul></li><li><p>支持回调函数</p></li></ul></li></ul></li><li><p>描边样式</p></li><li><p>阴影样式</p></li><li><p>线条样式</p><ul><li><p>linestyle:{...}</p><ul><li><p>颜色</p></li><li><p>线宽</p></li><li><p>类型</p></li><li><p>阴影</p></li><li><p>透明</p></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li><li><p>图形的高亮样式</p><ul><li>emphasis:{...}</li></ul></li><li><p>标记线和点</p><ul><li>mark</li></ul></li></ul></li></ul></li><li><p>color:调色盘颜色列表</p></li><li><p>数据存放组件</p><ul><li>data:{...}</li></ul></li></ul></li></ul></li></ul><h3 id="highcharts-js" tabindex="-1">Highcharts.js <a class="header-anchor" href="#highcharts-js" aria-label="Permalink to &quot;Highcharts.js&quot;">​</a></h3><h3 id="antv" tabindex="-1">AntV <a class="header-anchor" href="#antv" aria-label="Permalink to &quot;AntV&quot;">​</a></h3><h3 id="d3-js" tabindex="-1">D3.js <a class="header-anchor" href="#d3-js" aria-label="Permalink to &quot;D3.js&quot;">​</a></h3><h3 id="there-js" tabindex="-1">There.js <a class="header-anchor" href="#there-js" aria-label="Permalink to &quot;There.js&quot;">​</a></h3><h2 id="webapp-框架" tabindex="-1">webapp 框架 <a class="header-anchor" href="#webapp-框架" aria-label="Permalink to &quot;webapp 框架&quot;">​</a></h2><h3 id="mui" tabindex="-1">MUI <a class="header-anchor" href="#mui" aria-label="Permalink to &quot;MUI&quot;">​</a></h3><ul><li><p>官方网址</p><ul><li><a href="https://dev.dcloud.net.cn/mui/ui/" target="_blank" rel="noreferrer">https://dev.dcloud.net.cn/mui/ui/</a></li></ul></li><li><p>头部：带图标和标题</p><ul><li><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">header</span><span style="color:#D19A66;"> class</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;mui-bar mui-bar-nav&quot;</span><span style="color:#ABB2BF;">&gt;  &lt;</span><span style="color:#E06C75;">h1</span><span style="color:#D19A66;"> class</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;mui-title&quot;</span><span style="color:#ABB2BF;">&gt;工作 &lt;/</span><span style="color:#E06C75;">header</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li></li></ul></li><li><p>主体</p><ul><li></li></ul></li><li><p>导航</p><ul><li><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">nav</span><span style="color:#D19A66;"> class</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;mui-bar mui-bar-tab&quot;</span><span style="color:#ABB2BF;">&gt;发现 9 消息 我的 设置&lt;/</span><span style="color:#E06C75;">nav</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li></ul></li></ul><h2 id="_3d-场景" tabindex="-1">3D 场景 <a class="header-anchor" href="#_3d-场景" aria-label="Permalink to &quot;3D 场景&quot;">​</a></h2><ul><li><p>WebGL</p></li><li><p>Three.js</p></li></ul><h2 id="es-语言风格" tabindex="-1">ES 语言风格 <a class="header-anchor" href="#es-语言风格" aria-label="Permalink to &quot;ES 语言风格&quot;">​</a></h2><ul><li><p>TypeScript</p></li><li><p>CoffeeScript</p></li></ul><h2 id="js-插件" tabindex="-1">JS 插件 <a class="header-anchor" href="#js-插件" aria-label="Permalink to &quot;JS 插件&quot;">​</a></h2><ul><li><p>parallel.js: 前后端通用的一个并行库</p></li><li><p>zepto: 用于现代浏览器的兼容 jQuery 的库</p></li><li><p>totoro: 稳定的跨浏览器测试工具</p></li><li><p>TheaterJS: 一个用于模拟人输入状态的 JS 库</p></li><li><p>stellar.js: 前端用于实现异步滚动效果的库，现已不再维护</p></li><li><p>skrollr: 另一款实现一步滚动的开源库，使用人数众多，可实现各种狂拽酷炫掉渣天的前端效果，看真相</p></li><li><p>Framework7: 前端框架，是开发人员可以基于 web 技术构建 IOS7 程序</p></li><li><p>regulex: 用于生成 正则表达式 的可视化流程图</p></li><li><p>markdown-it: 新型 Markdown 解析器，快速，支持插件</p></li><li><p>multiline: 用于 Javascript 中的多行文本，类似于 Ruby 的 HERE Doc</p></li><li><p>screenfull.js: 全屏插件，支持各大浏览器</p></li><li><p>lunr.js: 类似于 Solr, 但是用于浏览器上的全文搜索引擎，可以为 JSON 创建索引，离线也可以使用</p></li><li><p>jquery.hotkeys: jQuery 插件，用于绑定热键</p></li><li><p>breach_core: Javascript 编写的 Browser (浏览器)</p></li><li><p>octocard: 用于生成 Github 信息卡片的库</p></li><li><p>github-cards: 用于生成 Github 信息卡片的库</p></li><li><p>money.js: 轻量级货币转换库，web 和 node 皆可用</p></li><li><p>accounting.js: 轻量级的数字、货币转换库</p></li><li><p>javascript-algorithms: Javascript 实现的各种算法集合</p></li><li><p>lazy.js: 类似于 underscore, 但是会延迟执行，某些场景下，性能会有很大的提升</p></li><li><p>seajs: 前端模块加载器，解决模块化、依赖等问题</p></li><li><p>jQuery-One-Page-Nav: 单页应用中一个用于处理导航栏的库</p></li><li><p>js.js: Javascript 实现的 javascript JIT</p></li><li><p>jquery-ui: jQuery 团队开发的 UI 相关的前端库，功能强大</p></li><li><p>todomvc: 分别基于 AngularJS/EmberJS/Backbone 等实现的 TODO List, 帮助开发者选择前端 MVC 库</p></li><li><p>localForage: Mozilla 出品，用于离线存储，基于 IndexedDB, WebSQL 或者 localStorage, 提供一致的接口</p></li><li><p>EventEmitter: 浏览器版的 EventEmitter</p></li><li><p>jquery.serializeJSON: jQuery 插件，用于将 form 表单序列化成 JSON 数据</p></li><li><p>knockout: 前端 MVVM 框架，用于开发富前端应用</p></li><li><p>mermaid: 可以根据文本生成流程图，类似于 Markdown 的语法</p></li><li><p>js-sequence-diagrams: 另一款可以根据文本生成流程图的库，类似于 Markdown 的语法</p></li><li><p>flow: 一个用来检测 Javascript 语法错误的库， Facebook 出品</p></li><li><p>zoomooz: jQuery 插件，用来处理浏览器缩放</p></li><li><p>fancyBox: 一个用于放大缩小图片、Web 内容或者多媒体元素的库，优雅大方</p></li><li><p>mithril.js: 轻量型前端 MVC 框架，部分使用场景下性能优于 Angular.js 和 React</p></li><li><p>backbone: 强大的前端 MVC 库，鼻祖级前端库，最初为了配合 Rails 来模块化前端应用，兼容性良好 (兼容到 IE6)，插件丰富，性能良好</p></li><li><p>jquery.smartbanner: smartbanner 是从 IOS6 开始支持的一个新特性, 这个插件提供了对早期 IOS4/5 和 Android 的支持</p></li><li><p>jquery.scrollTo: 在页面上以一个元素为起始以动画的方式移动(ScrollTo)到另一个元素， 支持回退等</p></li><li><p>jScrollPane: 自定义的滚动条，让所有浏览器都显示一样的滚动条</p></li><li><p>onepage-scroll: 提供类似于 iPhone6 展示页类似的效果，适用于单页应用，兼容到 IE8</p></li><li><p>scrollMonitor: 前端插件用来监控元素的滚动事件(进入、退出等)，性能很好</p></li><li><p>ScrollMagic: 神奇的滚动交互效果插件，可以在滚动的过程中设置各种各样的动态效果</p></li><li><p>infinite-scroll: 滚动加载，滚动到最下到自动加载， Paul Irish 大神之作</p></li><li><p>animatable: 仅仅依靠 border-width 和 background-position 实现的各种动态效果，看真相</p></li><li><p>Fluidbox: 页面上内嵌图片的放大缩小效果，类似于 Medium 中的效果</p></li><li><p>jquery-validation: jQuery 的一个插件，用于校验 Form 表单</p></li><li><p>BigVideo.js: jQuery 的一个插件, 用于实现大背景(视频、图片)效果</p></li><li><p>emscripten: 一款基于 LLVM, 可以将 C/C++ 转换成 Javascript 的工具，使得 Javascript 可以近乎 Native 的速度</p></li><li><p>qrcode-generator: 各种语言的二维码生成工具</p></li><li><p>device.js: 一个可以检测设备类型的工具，可以让我们根据不同的设备来为其定制响应的 Javascript 和 CSS</p></li><li><p>jquery-qrcode: jQuery 插件，用来生成二维码</p></li><li><p>Wookmark-jQuery: jQuery 的一个插件，可以用来实现瀑布流的效果</p></li><li><p>isotope: 可以用来过滤、排列布局，实现美观的动态布局切换效果，Demo</p></li><li><p>lazysizes: 功能强大的图片延迟加载工具，可以首先加载一个低质量的图片，然后再加载高质量的图片</p></li><li><p>progressbar.js: 简洁美观的进度条，扁平化</p></li><li><p>pigshell: 一个由 Javascript 实现的 Shell, 将互联网当做一个大的文件系统, 通过 cd/ls/cat…..等命令, 可以访问 Facebook/Twitter/Google Drive 等网络服务</p></li><li><p>spectrum: Js 实现的颜色选择器 (Colorpicker)</p></li><li><p>jQuery.countdown: jQuery 倒计时插件</p></li><li><p>summernote: WYSIWYG 富文本编辑器</p></li><li><p>awesomplete: 非常轻型的一个自动补全 JS 库, 没有任何依赖, 配置简单, 美观</p></li><li><p>switchery: IOS 7 上 Switch 的 JS 实现, 支持 IE8 及以上浏览器</p></li><li><p>trix: Basecamp 公司出品的富文本编辑器，简洁小巧</p></li><li><p>sensor.js: 在智能移动设备浏览器上，通过 HTML5 的 api 使用移动设备的功能。定位、运动、倾斜等</p></li><li><p>hyhyhy: 用于创建 基于 HTML5 的 演示文稿</p></li><li><p>swipebox: jQuery 插件，用于处理移动端的触摸事件</p></li><li><p>FileAPI: 前端用户处理文件（拖放、多文件上传等）</p></li><li><p>Sortable: 现代浏览器上用于实现元素拖拽排序的功能，支持 Meteor, AngularJS, React，不依赖 jQuery</p></li><li><p>Swiper: 用于实现浏览器上的滑动切换效果，支持硬件加速</p></li><li><p>matter-js: 2D 物理效果引擎，碰撞、弹跳等</p></li><li><p>jQTouch: 用于辅助创建手机端的 Web 应用，支持主题、Zepto.js 等</p></li><li><p>snabbt.js: 一个利用 Javascript 和 CSS transform 的 animation 库</p></li><li><p>c3: 基于 D3 的图表库</p></li><li><p>echarts: 企业级图表库，百度开发</p></li><li><p>parallax.js: 一个用于响应智能手机 orientation 的库</p></li><li><p>jQuery-Animate-Enhanced: jQuery 动画库的一个增强，用于现代浏览器</p></li><li><p>wysihtml: 富文本编辑器，适用于现代浏览器</p></li><li><p>slip: 一个通过滑动或者拖拽来操控列表的库</p></li><li><p>evil-icons: 一个矢量图库，提供 Ruby/Node 等支持</p></li><li><p>PhotoSwipe: JS 的一个图片展示库</p></li><li><p>focusable: 是页面上一个元素高亮的库，有图有真相</p></li><li><p>firefox.html: Firefox 在浏览器端的实现 —— HTML 版的 Firefox</p></li><li><p>jquery-mobile: jQuery 团队开发的用于辅助手机端 web app 开发的库，基于 HTML5</p></li><li><p>mobile-angular-ui: 基于 angularjs 和 bootstarp 的 web app 开发框架</p></li><li><p>interact.js: 一个适用于现代浏览器的，用于处理 手势、拖放、缩放等的库</p></li><li><p>rebound-js: 实现部分物理效果，Facebook 出品</p></li><li><p>basket.js: 基于 LocalStorage 的资源加载器，可以用来缓存 script 和 css, 手机端使用速度快于浏览器直接缓存</p></li><li><p>iscroll: 高性能的滚动(scroll)处理库，功能强大，支持各种事件，不依赖任何的库，且插件丰富, 大众点评的手机端列表滚动就是用这个库处理的</p></li><li><p>metrics-graphics: 基于 D3 的图表库，简洁、高效，Mozilla 出品</p></li><li><p>accessible-html5-video-player: Paypal 出品的 Video 播放器</p></li><li><p>loading: 几种 Loading 效果，基于 SVG</p></li><li><p>flippant.js: 一款能够漂亮的网页元素翻转效果库，代码许久不更新，不过作为源码学习还是不错的</p></li><li><p>move.js: 基于 CSS3 的前端动画框架</p></li><li><p>scrollReveal.js: 使元素以非常酷帅的方式进入画布 (Viewpoint)，看 Demo</p></li><li><p>Modernizr: 一个用来检测 HTML5 和 CSS3 支持情况的库</p></li><li><p>foundation: 另一款前端模版框架，类似于 Bootstrap</p></li><li><p>Flat-UI: Bootstrap 的一款主题，简洁美观</p></li><li><p>iCheck: 一款漂亮的 Checkbox 插件</p></li><li><p>Swipe: 非常轻量级的一个图片滑动切换效果库, 性能良好, 尤其是对手机的支持, 压缩后的大小约 5kb</p></li><li><p>slick: 功能异常强大的一个图片滑动切换效果库</p></li><li><p>SocialButtons: 漂亮的社交按钮</p></li><li><p>sweetalert: 一个非常美观的用于替换浏览器默认 alert 的库</p></li><li><p>web-animations-js: Javascript 实现的 Web Animation API</p></li><li><p>vivus: 可以动态描绘 SVG 的 JS 库, 支持多种动画</p></li><li><p>plyr: 轻量, 小巧, 美观的 HTML5 视频播放器</p></li><li><p>timesheet.js: 基于 HTML5 &amp; CSS3 时间表</p></li><li><p>slideout: 一个非常美观的侧滑菜单</p></li></ul><h2 id="移动端插件" tabindex="-1">移动端插件 <a class="header-anchor" href="#移动端插件" aria-label="Permalink to &quot;移动端插件&quot;">​</a></h2><ul><li><p>Touch.js</p><ul><li>移动端触摸事件库</li></ul></li><li><p>swiper.js</p><ul><li><p>应用</p><ul><li><p>H5 微信场景</p></li><li><p>子主题 2</p></li></ul></li><li><p>移动端触摸滑动插件</p></li></ul></li><li><p>animation.js</p><ul><li>css3 动画库</li></ul></li><li><p>iScroll.js</p><ul><li>移动端区域滚动插件</li></ul></li><li><p>three.js</p></li><li><p>canvas.js</p></li></ul><h2 id="前端自动化、sass-样式预处理语言" tabindex="-1">前端自动化、Sass 样式预处理语言 <a class="header-anchor" href="#前端自动化、sass-样式预处理语言" aria-label="Permalink to &quot;前端自动化、Sass 样式预处理语言&quot;">​</a></h2><ul><li><p>gulp</p></li><li><p>webpack</p><ul><li>模块化打包</li></ul></li><li><p>sass</p></li><li><p>node</p></li><li><p>ES6</p></li></ul><h2 id="常用框架-1" tabindex="-1">常用框架 <a class="header-anchor" href="#常用框架-1" aria-label="Permalink to &quot;常用框架&quot;">​</a></h2><h2 id="移动端开发框架" tabindex="-1">移动端开发框架 <a class="header-anchor" href="#移动端开发框架" aria-label="Permalink to &quot;移动端开发框架&quot;">​</a></h2><h3 id="网页-webapp" tabindex="-1">网页 WebApp <a class="header-anchor" href="#网页-webapp" aria-label="Permalink to &quot;网页 WebApp&quot;">​</a></h3><ul><li><p>React</p><ul><li><p>官网</p><ul><li><a href="https://react-1251415695.cos-website.ap-chengdu.myqcloud.com/" target="_blank" rel="noreferrer">https://react-1251415695.cos-website.ap-chengdu.myqcloud.com/</a></li></ul></li><li><p>作用</p><ul><li><p>MVC 的 view 层框架</p></li><li><p>轻量、高效</p></li></ul></li><li><p>入门前</p><ul><li><p>ES6</p></li><li><p>node</p></li></ul></li><li><p>框架</p><ul><li><p>Ant Design（蚂蚁金服）</p><ul><li>工具：create-react-app</li></ul></li><li><p>Amaze UI Touch</p></li><li><p>Material</p></li></ul></li></ul></li><li><p>Vue.js</p><ul><li><p>官网</p><ul><li><a href="https://cn.vuejs.org/" target="_blank" rel="noreferrer">https://cn.vuejs.org/</a></li></ul></li><li><p>特点</p><ul><li><p>构建用户界面的渐进式框架</p></li><li><p>自底向上增量开发工具</p></li></ul></li><li><p>价值</p><ul><li>开发移动端混合项目</li></ul></li><li><p>技术栈</p><ul><li><p>Vue2</p></li><li><p>Vue-router</p></li><li><p>Vuex</p></li><li><p>Webpack</p></li><li><p>ES6/7</p></li><li><p>Sass</p></li><li><p>Axios</p></li></ul></li><li><p>框架</p><ul><li><p>element（饿了么）</p></li><li><p>iview</p></li><li><p>vuetify</p></li></ul></li></ul></li><li><p>AngularJS</p><ul><li><p>中文网</p><ul><li><a href="https://www.angularjs.net.cn/" target="_blank" rel="noreferrer">https://www.angularjs.net.cn/</a></li></ul></li><li><p>官网</p><ul><li><a href="https://docs.angularjs.org/" target="_blank" rel="noreferrer">https://docs.angularjs.org/</a></li></ul></li><li><p>特点</p><ul><li><p>CRUD(增删改查)基于 MVC 系统开发</p></li><li><p>效率高，节省人力物力</p></li></ul></li><li><p>框架</p><ul><li><p>Angular Material</p></li><li><p>NG-ZORRO</p></li></ul></li></ul></li></ul><h3 id="混合-hybridapp" tabindex="-1">混合 HybridApp <a class="header-anchor" href="#混合-hybridapp" aria-label="Permalink to &quot;混合 HybridApp&quot;">​</a></h3><ul><li><p>Cordpva</p><ul><li><p>官网</p><ul><li><a href="https://cordova.apache.org/" target="_blank" rel="noreferrer">https://cordova.apache.org/</a></li></ul></li><li><p>中文网</p><ul><li><a href="http://cordova.axuer.com/" target="_blank" rel="noreferrer">http://cordova.axuer.com/</a></li></ul></li></ul></li></ul><h3 id="桥接-bridgeapp" tabindex="-1">桥接 BridgeApp <a class="header-anchor" href="#桥接-bridgeapp" aria-label="Permalink to &quot;桥接 BridgeApp&quot;">​</a></h3><ul><li><p>React Native</p></li><li><p>Weex</p></li><li><p>Xamarin（C#）</p></li><li><p>RubyMoton（Ruby）</p></li><li><p>Titanium（JS）</p></li></ul><h3 id="渐进-progressiveapp" tabindex="-1">渐进 ProgressiveApp <a class="header-anchor" href="#渐进-progressiveapp" aria-label="Permalink to &quot;渐进 ProgressiveApp&quot;">​</a></h3><ul><li><p>PWA</p></li><li><p>MinProgram</p></li><li><p>Taro</p></li><li><p>Nanachi</p></li><li><p>Chameleon</p></li></ul><h3 id="自绘-owndrawapp" tabindex="-1">自绘 OwndrawApp <a class="header-anchor" href="#自绘-owndrawapp" aria-label="Permalink to &quot;自绘 OwndrawApp&quot;">​</a></h3><ul><li><p>Flutter（Dart）</p></li><li><p>CrossApp（C++）</p></li><li><p>Corona（Lua）</p></li><li><p>Kivy（Python）</p></li></ul><h3 id="mui-h5" tabindex="-1">Mui&amp;H5+ <a class="header-anchor" href="#mui-h5" aria-label="Permalink to &quot;Mui&amp;H5+&quot;">​</a></h3><ul><li><p>官网</p><ul><li><a href="https://dev.dcloud.net.cn/mui/" target="_blank" rel="noreferrer">https://dev.dcloud.net.cn/mui/</a></li></ul></li><li><p>特点</p><ul><li>轻量、只涉及 UI 只为移动端 App 而生、界面风格原生化</li></ul></li></ul><h3 id="ionic-framework" tabindex="-1">ionic Framework <a class="header-anchor" href="#ionic-framework" aria-label="Permalink to &quot;ionic Framework&quot;">​</a></h3><ul><li><p>官网</p><ul><li><p><a href="https://ionicframework.com/" target="_blank" rel="noreferrer">https://ionicframework.com/</a></p></li><li><p><a href="https://ionicframework.com/docs" target="_blank" rel="noreferrer">https://ionicframework.com/docs</a></p></li></ul></li><li><p>入门理解：上到下</p><ul><li><p>angular</p></li><li><p>cordova</p></li><li><p>gulp</p></li><li><p>sass</p></li><li><p>node</p></li><li><p>bower</p></li><li><p>git</p></li><li><p>ionic Framework</p></li></ul></li><li><p>特点</p><ul><li>手机 UI 库</li></ul></li></ul><h3 id="微信" tabindex="-1">微信 <a class="header-anchor" href="#微信" aria-label="Permalink to &quot;微信&quot;">​</a></h3><ul><li><p>微信小程序</p><ul><li><p>WEUI:官方组件设计</p></li><li><p>开发</p><ul><li><p>开发工具</p></li><li><p>框架</p></li><li><p>组件</p></li><li><p>API 接口</p></li></ul></li><li><p>运营</p><ul><li><p>推广</p></li><li><p>维护</p></li></ul></li></ul></li><li><p>微信公众号开发</p></li></ul><h3 id="nodejs-全栈开发" tabindex="-1">nodejs 全栈开发 <a class="header-anchor" href="#nodejs-全栈开发" aria-label="Permalink to &quot;nodejs 全栈开发&quot;">​</a></h3><h2 id="多端开发框架" tabindex="-1">多端开发框架 <a class="header-anchor" href="#多端开发框架" aria-label="Permalink to &quot;多端开发框架&quot;">​</a></h2><h3 id="游戏引擎" tabindex="-1">游戏引擎 <a class="header-anchor" href="#游戏引擎" aria-label="Permalink to &quot;游戏引擎&quot;">​</a></h3><ul><li>白鹭</li></ul><h3 id="uni-app" tabindex="-1">uni-app <a class="header-anchor" href="#uni-app" aria-label="Permalink to &quot;uni-app&quot;">​</a></h3><ul><li><p><a href="https://uniapp.dcloud.io/" target="_blank" rel="noreferrer">https://uniapp.dcloud.io/</a></p></li><li><p>网络 API</p><ul><li><p>发起请求</p><ul><li><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">uni</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">request</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">	url</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;https://www.example.com/request&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">	data</span><span style="color:#ABB2BF;">: { </span><span style="color:#E06C75;">text</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;uni.request&quot;</span><span style="color:#ABB2BF;"> },</span></span>
<span class="line"><span style="color:#E06C75;">	header</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#98C379;">		&quot;custom-header&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;hello&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// 自定义请求头信息</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#61AFEF;">	success</span><span style="color:#ABB2BF;">: (</span><span style="color:#E06C75;font-style:italic;">res</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">		console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">res</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">data</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">		this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">text</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;request success&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div></li><li></li></ul></li></ul></li><li><p>微信小程序 封装异步请求</p><ul><li><p>为什么封装</p><ul><li><p>原生的微信小程序不支持 promise</p></li><li><p>uniapp 的请求不能够方便的添加请求中效果</p></li><li><p>uniapp 的请求返回值是个数组，不够方便</p></li></ul></li><li><p>utils 工具类目录下</p><ul><li><p>微信小程序异步请求的封装 request.js 代码例子</p><ul><li></li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// es6 promise 微信小程序的 api 的铺垫</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> default</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">params</span><span style="color:#ABB2BF;">)</span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // 加载中</span></span>
<span class="line"><span style="color:#E5C07B;">   uni</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">showLoading</span><span style="color:#ABB2BF;">({ </span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;">&quot;加载中&quot;</span><span style="color:#ABB2BF;"> }) </span><span style="color:#C678DD;">return</span><span style="color:#C678DD;"> new</span><span style="color:#E5C07B;"> Promise</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">resolve</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;font-style:italic;">reject</span><span style="color:#ABB2BF;">)</span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;">{ </span><span style="color:#E5C07B;">wx</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">request</span><span style="color:#ABB2BF;">({ ...</span><span style="color:#E06C75;">params</span><span style="color:#ABB2BF;">, </span><span style="color:#61AFEF;">success</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">res</span><span style="color:#ABB2BF;">){ </span><span style="color:#61AFEF;">resolve</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">res</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">data</span><span style="color:#ABB2BF;">); }, </span><span style="color:#61AFEF;">fail</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">err</span><span style="color:#ABB2BF;">){ </span><span style="color:#61AFEF;">reject</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">err</span><span style="color:#ABB2BF;">); }, </span><span style="color:#61AFEF;">complete</span><span style="color:#ABB2BF;">(){ </span><span style="color:#E5C07B;">uni</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">hideLoading</span><span style="color:#ABB2BF;">(); } }) }) }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li><p>导入</p><ul><li><p>main.js</p><ul><li><p>import request from &quot;./utils/request&quot;;</p></li><li><p>Vue.prototype.request=request;</p><ul><li>挂载</li></ul></li></ul></li></ul></li><li><p>页面调用</p><ul><li><p>导入</p><ul><li>export default { components: { } }</li></ul></li><li><p>onLoad(){ this.request({ url:&#39;&#39; }).then(res=&gt;{ console.log(res) }) }</p><ul><li>resolve()调用了 then()里面的 res=&gt;{console.log(res)}</li></ul></li></ul></li></ul></li><li><p>如果时间返回的是时间戳格式 可以使用第三方法库处理</p><ul><li><p>Moment.js</p><ul><li>中文网 <ul><li>momentjs.cn</li></ul></li></ul></li><li><p>项目目录下命令行安装</p></li><li><p>使用页面引入</p><ul><li>import moment from &quot;moment&quot;;</li></ul></li></ul></li></ul></li></ul></li></ul><h3 id="mpvue" tabindex="-1">mpvue <a class="header-anchor" href="#mpvue" aria-label="Permalink to &quot;mpvue&quot;">​</a></h3><ul><li><a href="http://mpvue.com/" target="_blank" rel="noreferrer">http://mpvue.com/</a></li></ul><h3 id="taro" tabindex="-1">taro <a class="header-anchor" href="#taro" aria-label="Permalink to &quot;taro&quot;">​</a></h3><ul><li><a href="https://taro.aotu.io/" target="_blank" rel="noreferrer">https://taro.aotu.io/</a></li></ul><h3 id="wepy" tabindex="-1">wepy <a class="header-anchor" href="#wepy" aria-label="Permalink to &quot;wepy&quot;">​</a></h3><h3 id="chameleon" tabindex="-1">chameleon <a class="header-anchor" href="#chameleon" aria-label="Permalink to &quot;chameleon&quot;">​</a></h3>`,105)]))}const d=s(i,[["render",o]]);export{y as __pageData,d as default};
