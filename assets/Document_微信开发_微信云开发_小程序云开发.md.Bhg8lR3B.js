import{_ as a,c as n,o as e,ah as l}from"./chunks/framework.DqD713j2.js";const t="/FrontEndLearnNotes/assets/image-20240227225120453.D9NIkSSb.png",p="/FrontEndLearnNotes/assets/image-20240227225444090.CGMz3OSU.png",o="/FrontEndLearnNotes/assets/image-20240227225504050.Dc4-Irrr.png",r="/FrontEndLearnNotes/assets/image-20240227225542097.B6nt95Pt.png",i="/FrontEndLearnNotes/assets/image-20240227225616058.DIBfPHhJ.png",c="/FrontEndLearnNotes/assets/image-20240227225716478.BjWO6c8z.png",d="/FrontEndLearnNotes/assets/image-20240227225739331.D-quTdp-.png",B="/FrontEndLearnNotes/assets/d2d5bffdb941b1b7b51ca3732abe4343.BOyHHvPO.png",m="/FrontEndLearnNotes/assets/b37909aeb9427cdfad0591fb51947012.D5VFpklU.png",h="/FrontEndLearnNotes/assets/95ae5d6e0c0c44692b58921eddcf9fa9.DH7EsVJ1.png",b="/FrontEndLearnNotes/assets/wps4.Cy8n9fMb.jpg",u="/FrontEndLearnNotes/assets/wps5.g-d4IVwl.jpg",y="/FrontEndLearnNotes/assets/wps6.maId2-0H.png",F="/FrontEndLearnNotes/assets/1240.Dx41I-IP.webp",q="/FrontEndLearnNotes/assets/1240-1709044807668-7.gy2nn3PB.webp",g="/FrontEndLearnNotes/assets/1240-1709044807669-8.BdbVXd7p.webp",A="/FrontEndLearnNotes/assets/1240-1709044807669-9.6V6akvOn.webp",_="/FrontEndLearnNotes/assets/1240-1709044807669-10.BpLdLJkw.webp",f="/FrontEndLearnNotes/assets/1240-1709044807669-11.BZ6eEyif.webp",E="/FrontEndLearnNotes/assets/1240-1709044807669-12.CvXljAex.webp",x="/FrontEndLearnNotes/assets/1240-1709044807669-13.QcxKiE6i.webp",w="/FrontEndLearnNotes/assets/1240-1709044807669-14.Bz2VA5fB.webp",C="/FrontEndLearnNotes/assets/1240-1709044807669-15.IfFnXFIj.webp",k="/FrontEndLearnNotes/assets/1240-1709044807669-16.BFFWPvzx.webp",v="/FrontEndLearnNotes/assets/1240-1709044807669-17.fDjsbMhG.webp",P="/FrontEndLearnNotes/assets/1240-1709044807669-18.DMGFFkY-.webp",D="/FrontEndLearnNotes/assets/1240-1709044807669-19.C6oxxfuu.webp",N="/FrontEndLearnNotes/assets/1240-1709044807669-20.DyMvZjsD.webp",L="/FrontEndLearnNotes/assets/1240-1709044807669-21.B1H_-zX7.webp",j="/FrontEndLearnNotes/assets/1240-1709044807669-22.BnzzrvWR.webp",I="/FrontEndLearnNotes/assets/1240-1709044807669-23.ejn6GUBz.webp",T="/FrontEndLearnNotes/assets/1240-1709044807669-24.CsenMvih.webp",S="/FrontEndLearnNotes/assets/1240-1709044807669-25.DavgEnJ2.webp",M="/FrontEndLearnNotes/assets/1240-1709044807669-26.Bo6ZiP_z.webp",H="/FrontEndLearnNotes/assets/1240-1709044807669-25.DavgEnJ2.webp",O="/FrontEndLearnNotes/assets/1240-1709044807670-28.DHmoGH6F.webp",V="/FrontEndLearnNotes/assets/1240-1709044807670-29.gdPNP_6a.webp",z="/FrontEndLearnNotes/assets/1240-1709044807670-30.CoxylU7K.webp",$=JSON.parse('{"title":"小程序云开发","description":"","frontmatter":{},"headers":[],"relativePath":"Document/微信开发/微信云开发/小程序云开发.md","filePath":"Document/微信开发/微信云开发/小程序云开发.md","lastUpdated":1750954157000}'),J={name:"Document/微信开发/微信云开发/小程序云开发.md"};function W(U,s,G,Z,K,Q){return e(),n("div",null,s[0]||(s[0]=[l('<h1 id="小程序云开发" tabindex="-1">小程序云开发 <a class="header-anchor" href="#小程序云开发" aria-label="Permalink to &quot;小程序云开发&quot;">​</a></h1><h2 id="一、认识小程序云开发" tabindex="-1">一、认识小程序云开发 <a class="header-anchor" href="#一、认识小程序云开发" aria-label="Permalink to &quot;一、认识小程序云开发&quot;">​</a></h2><p>小程序云开发简称 tcb，是微信官方给我们提供的基于腾讯云的云服务器。</p><p>目前云开发包含：云数据库，云函数，云存储，云调用。</p><p>云开发相对于传统服务器的优势如下表：</p><table tabindex="0"><thead><tr><th></th><th>云开发</th><th>传统服务器</th></tr></thead><tbody><tr><td>难易程度</td><td>简单</td><td>复杂</td></tr><tr><td>部署难易</td><td>基本上不用部署</td><td>部署费时费力</td></tr><tr><td>是否需要域名</td><td>不需要</td><td>需要</td></tr><tr><td>是否需要备案</td><td>不需要</td><td>需要</td></tr><tr><td>是否支持 https</td><td>不需要</td><td>需要</td></tr><tr><td>适合公司</td><td>中小型公司</td><td>大公司</td></tr><tr><td>学习难易</td><td>容易上手</td><td>学习起来比较久</td></tr><tr><td>费用</td><td>免费版基本够用</td><td>200-2000/年</td></tr></tbody></table><p>通过上面的对比，我们可以看出，如果你想快速创建一个小程序的后台，用云开发是不错的选择。</p><h2 id="二、云开发官方文档" tabindex="-1">二、云开发官方文档 <a class="header-anchor" href="#二、云开发官方文档" aria-label="Permalink to &quot;二、云开发官方文档&quot;">​</a></h2><p><a href="https://developers.weixin.qq.com/miniprogram/dev/wxcloud/basis/getting-started.html" target="_blank" rel="noreferrer">微信开放文档 (qq.com)</a></p><p>官方文档永远是最好的老师，也是最准最正确的老师，所以在学习过程中，一定要养成经常查看官方文档的习惯。</p><h2 id="三、开通小程序云开发功能" tabindex="-1">三、开通小程序云开发功能 <a class="header-anchor" href="#三、开通小程序云开发功能" aria-label="Permalink to &quot;三、开通小程序云开发功能&quot;">​</a></h2><p>我们开通小程序云开发，需要符合下面几个条件</p><ul><li>1、 必须实名注册小程序，因为我们使用云开发时需要用到 appid</li><li>2、小程序云开发必须先创建一个小程序项目后才能开通</li></ul><p><img src="'+t+'" alt="image-20240227225120453"></p><h3 id="开通云开发" tabindex="-1">开通云开发 <a class="header-anchor" href="#开通云开发" aria-label="Permalink to &quot;开通云开发&quot;">​</a></h3><p>文档：<a href="https://developers.weixin.qq.com/miniprogram/dev/wxcloud/quick-start/miniprogram.html" target="_blank" rel="noreferrer">快速开始 / 小程序/小游戏 (qq.com)</a></p><p>微信开发者工具内，点击【云开发】，然后开通</p><p><img src="'+p+'" alt="image-20240227225444090"></p><p>弹出的开通页</p><p><img src="'+o+'" alt="image-20240227225504050"></p><p>开通协议</p><p><img src="'+r+'" alt="image-20240227225542097"></p><p>创建</p><p><img src="'+i+'" alt="image-20240227225616058"></p><p>点击确定创建</p><p><img src="'+c+'" alt="image-20240227225716478"></p><p>创建成功</p><p><img src="'+d+'" alt="image-20240227225739331"></p><h2 id="四、云开发环境初始化" tabindex="-1">四、云开发环境初始化 <a class="header-anchor" href="#四、云开发环境初始化" aria-label="Permalink to &quot;四、云开发环境初始化&quot;">​</a></h2><h3 id="代码初始化" tabindex="-1">代码初始化 <a class="header-anchor" href="#代码初始化" aria-label="Permalink to &quot;代码初始化&quot;">​</a></h3><p>文档可看开发指引：<a href="https://developers.weixin.qq.com/miniprogram/dev/wxcloud/guide/" target="_blank" rel="noreferrer">开发指引 / 指引 / 控制台 (qq.com)</a></p><p>初始化：<a href="https://developers.weixin.qq.com/miniprogram/dev/wxcloud/guide/init.html" target="_blank" rel="noreferrer">开发指引 / 基础能力 / 初始化 (qq.com)</a></p><h3 id="第-1-步-创建项目" tabindex="-1">第 1 步: 创建项目 <a class="header-anchor" href="#第-1-步-创建项目" aria-label="Permalink to &quot;第 1 步: 创建项目&quot;">​</a></h3><p>打开并登录微信开发者工具，新建小程序项目，填入 AppID，后端服务选择“微信云开发”。</p><p><img src="'+B+'" alt="img"></p><h3 id="第-2-步-选择模板" tabindex="-1">第 2 步: 选择模板 <a class="header-anchor" href="#第-2-步-选择模板" aria-label="Permalink to &quot;第 2 步: 选择模板&quot;">​</a></h3><p>在模板来源中选择<strong>微搭</strong>，并在下方选择希望使用的低代码模板。</p><p><img src="'+m+'" alt="img"></p><p>以网购消费者市场调研模板为例，点击确定后即可进入到该模板的低代码编辑器中。</p><p><img src="'+h+'" alt="img"></p><h3 id="基本目录" tabindex="-1">基本目录 <a class="header-anchor" href="#基本目录" aria-label="Permalink to &quot;基本目录&quot;">​</a></h3><ul><li>miniprogram：存放小程序的前端页面，包含了 app.js，app.json，app.wxss 等文件，以及 pages 目录，存放各个页面的 js，wxml，json，wxss 文件。</li><li><strong>miniprogram/cloud</strong>：存放云函数的目录，每个子目录对应一个云函数(目录的名字就是云函数的名字)，包含了 index.js，package.json 等文件，以及 node_modules 目录，存放云函数的依赖模块。</li><li>project.config.json：工具配置文件，用于设置项目的 AppID，版本号，编译模式等信息。</li></ul><h3 id="第-3-步-开始开发" tabindex="-1">第 3 步: 开始开发 <a class="header-anchor" href="#第-3-步-开始开发" aria-label="Permalink to &quot;第 3 步: 开始开发&quot;">​</a></h3><p>进入低代码编辑后，便可以通过简单的组件拖拉拽以及可视化界面对模板进行定制化的开发。</p><h2 id="五、云开发基础能力" tabindex="-1">五、云开发基础能力 <a class="header-anchor" href="#五、云开发基础能力" aria-label="Permalink to &quot;五、云开发基础能力&quot;">​</a></h2><p>文档：<a href="https://developers.weixin.qq.com/miniprogram/dev/wxcloud/basis/capabilities.html" target="_blank" rel="noreferrer">基础概念-云开发能力</a></p><p><strong>包括数据库、存储、云函数、云调用、HTTP API</strong>：</p><ul><li><a href="https://developers.weixin.qq.com/miniprogram/dev/wxcloud/basis/capabilities.html#%E6%95%B0%E6%8D%AE%E5%BA%93" target="_blank" rel="noreferrer">云开发能力-数据库</a></li><li><a href="https://developers.weixin.qq.com/miniprogram/dev/wxcloud/basis/capabilities.html#%E5%AD%98%E5%82%A8" target="_blank" rel="noreferrer">云开发能力-存储</a></li><li><a href="https://developers.weixin.qq.com/miniprogram/dev/wxcloud/basis/capabilities.html#%E4%BA%91%E5%87%BD%E6%95%B0" target="_blank" rel="noreferrer">云开发能力-云函数</a></li><li><a href="https://developers.weixin.qq.com/miniprogram/dev/wxcloud/basis/capabilities.html#%E4%BA%91%E8%B0%83%E7%94%A8" target="_blank" rel="noreferrer">云开发能力-云调用</a></li><li>[云开发能力-HTTP API](<a href="https://developers.weixin.qq.com/miniprogram/dev/wxcloud/basis/capabilities.html#HTTP" target="_blank" rel="noreferrer">https://developers.weixin.qq.com/miniprogram/dev/wxcloud/basis/capabilities.html#HTTP</a> API)</li></ul><h3 id="一、数据库" tabindex="-1">一、数据库 <a class="header-anchor" href="#一、数据库" aria-label="Permalink to &quot;一、数据库&quot;">​</a></h3><p>云开发提供了一个 JSON 数据库，顾名思义，数据库中的每条记录都是一个 JSON 格式的对象。一个数据库可以有多个集合（相当于关系型数据中的表），集合可看做一个 JSON 数组，数组中的每个对象就是一条记录，记录的格式是 JSON 对象。</p><p>数据库可以导入和导出当前的数据库，格式为.json。</p><h3 id="二、存储" tabindex="-1">二、存储 <a class="header-anchor" href="#二、存储" aria-label="Permalink to &quot;二、存储&quot;">​</a></h3><p>云开发提供了一块存储空间，提供了上传文件到云端、带权限管理的云端下载能力，开发者可以在小程序端和云函数端通过 API 使用云存储功能。</p><p>如可以上传存储图片、视频等资源。</p><h4 id="_1、文件上传" tabindex="-1">1、文件上传 <a class="header-anchor" href="#_1、文件上传" aria-label="Permalink to &quot;1、文件上传&quot;">​</a></h4><p>选择 word，excel 等文件的文档：<a href="https://developers.weixin.qq.com/miniprogram/dev/api/media/image/wx.chooseMessageFile.html" target="_blank" rel="noreferrer">媒体 / 图片 / wx.chooseMessageFile (qq.com)</a></p><p>选择图片的文档：<a href="https://developers.weixin.qq.com/miniprogram/dev/api/media/video/wx.chooseMedia.html" target="_blank" rel="noreferrer">媒体 / 视频 / wx.chooseMedia (qq.com)</a></p><p>选择视频文件的文档：<a href="https://developers.weixin.qq.com/miniprogram/dev/api/media/video/wx.chooseMedia.html" target="_blank" rel="noreferrer">媒体 / 视频 / wx.chooseMedia (qq.com)</a></p><p>视频播放组件 video 的文档：<a href="https://developers.weixin.qq.com/miniprogram/dev/component/video.html" target="_blank" rel="noreferrer">媒体组件 / video (qq.com)</a></p><p>使用 wx.cloud.uploadFile 上传文件：<a href="https://developers.weixin.qq.com/minigame/dev/wxcloud/reference-sdk-api/storage/uploadFile/client.uploadFile.html" target="_blank" rel="noreferrer">开发者资源 / SDK 文档 / 文件存储 / uploadFile / 小程序 (qq.com)</a></p><h4 id="_2、文件下载" tabindex="-1">2、文件下载 <a class="header-anchor" href="#_2、文件下载" aria-label="Permalink to &quot;2、文件下载&quot;">​</a></h4><p>使用 wx.cloud.downloadFile 下载文件：<a href="https://developers.weixin.qq.com/miniprogram/dev/wxcloud/reference-sdk-api/storage/downloadFile/client.downloadFile.html" target="_blank" rel="noreferrer">开发者资源 / SDK 文档 / 文件存储 / downloadFile / 小程序 (qq.com)</a></p><h4 id="_3、使用-wx-opendocument-打开文件" tabindex="-1">3、使用 wx.openDocument 打开文件 <a class="header-anchor" href="#_3、使用-wx-opendocument-打开文件" aria-label="Permalink to &quot;3、使用 wx.openDocument 打开文件&quot;">​</a></h4><p><a href="https://developers.weixin.qq.com/miniprogram/dev/api/file/wx.openDocument.html" target="_blank" rel="noreferrer">文件 / wx.openDocument (qq.com)</a></p><h3 id="三、云函数" tabindex="-1">三、云函数 <a class="header-anchor" href="#三、云函数" aria-label="Permalink to &quot;三、云函数&quot;">​</a></h3><p>云函数是一段运行在云端的代码，无需管理服务器，在开发工具内编写、一键上传部署即可运行后端代码。</p><p>为什么要用云函数获取数据库的数据？</p><p>1， 云函数获取数据库数据可以突破 20 条的限制</p><p>2， 云函数获取数据库不受数据表的权限控制</p><p>3， 云函数可以实现的功能更多</p><h3 id="四、云调用" tabindex="-1">四、云调用 <a class="header-anchor" href="#四、云调用" aria-label="Permalink to &quot;四、云调用&quot;">​</a></h3><p>云调用是云开发提供的基于云函数使用小程序开放接口的能力，支持在云函数调用服务端开放接口，如发送模板消息、获取小程序码等操作都可以在云函数中完成，详情可见具体<a href="https://developers.weixin.qq.com/miniprogram/dev/wxcloud/guide/openapi/openapi.html" target="_blank" rel="noreferrer">开发指引</a>。</p><h3 id="五、http-api" tabindex="-1">五、HTTP API <a class="header-anchor" href="#五、http-api" aria-label="Permalink to &quot;五、HTTP API&quot;">​</a></h3><p>云开发资源也可以通过 HTTP 接口访问，即在小程序外访问，接口见<a href="https://developers.weixin.qq.com/miniprogram/dev/wxcloud/reference-http-api/" target="_blank" rel="noreferrer">HTTP API 文档</a>。</p><h2 id="以下是云开发实战" tabindex="-1">以下是云开发实战 <a class="header-anchor" href="#以下是云开发实战" aria-label="Permalink to &quot;以下是云开发实战&quot;">​</a></h2><h2 id="云开发实现登陆注册功能" tabindex="-1">云开发实现登陆注册功能 <a class="header-anchor" href="#云开发实现登陆注册功能" aria-label="Permalink to &quot;云开发实现登陆注册功能&quot;">​</a></h2><h3 id="_1、注册页" tabindex="-1">1、注册页 <a class="header-anchor" href="#_1、注册页" aria-label="Permalink to &quot;1、注册页&quot;">​</a></h3><p>注册页主要用到了 input 组件获取用户输入，button 组件实现注册功能，注册主要是把账号名和密码添加到云开发数据库</p><h3 id="_2、登陆页" tabindex="-1">2、登陆页 <a class="header-anchor" href="#_2、登陆页" aria-label="Permalink to &quot;2、登陆页&quot;">​</a></h3><p>登陆主要是获取用户输入的账号和密码，然后从数据库里读取相应的数据，做账号和密码的比对，如果账号和密码都一样，就可以直接登陆成功</p><h3 id="_3、登陆成功跳转到首页" tabindex="-1">3、登陆成功跳转到首页 <a class="header-anchor" href="#_3、登陆成功跳转到首页" aria-label="Permalink to &quot;3、登陆成功跳转到首页&quot;">​</a></h3><p>登陆成功以后，会调整到首页</p><h3 id="_4、保存登陆状态" tabindex="-1">4、保存登陆状态 <a class="header-anchor" href="#_4、保存登陆状态" aria-label="Permalink to &quot;4、保存登陆状态&quot;">​</a></h3><p>我们通常做登陆时，用户登陆成功后我们需要帮用户保存登陆状态，要不然用户下次再进入应用时还要重新登陆。所以我们要做下用户登陆状态的保存</p><h2 id="模仿微信朋友圈" tabindex="-1">模仿微信朋友圈 <a class="header-anchor" href="#模仿微信朋友圈" aria-label="Permalink to &quot;模仿微信朋友圈&quot;">​</a></h2><h3 id="_1、效果图" tabindex="-1">1、效果图 <a class="header-anchor" href="#_1、效果图" aria-label="Permalink to &quot;1、效果图&quot;">​</a></h3><p><img src="'+b+'" alt="img"> <img src="'+u+'" alt="img"></p><h3 id="_2、流程图" tabindex="-1">2、流程图 <a class="header-anchor" href="#_2、流程图" aria-label="Permalink to &quot;2、流程图&quot;">​</a></h3><p><img src="'+y+'" alt="img"></p><h3 id="_3、图文讲解" tabindex="-1">3、图文讲解 <a class="header-anchor" href="#_3、图文讲解" aria-label="Permalink to &quot;3、图文讲解&quot;">​</a></h3><p><a href="https://juejin.im/post/5da15e15f265da5b576be2e8" target="_blank" rel="noreferrer">https://juejin.im/post/5da15e15f265da5b576be2e8</a></p><h3 id="_4、图片选择" tabindex="-1">4、图片选择 <a class="header-anchor" href="#_4、图片选择" aria-label="Permalink to &quot;4、图片选择&quot;">​</a></h3><p><a href="https://developers.weixin.qq.com/miniprogram/dev/api/media/image/wx.chooseImage.html" target="_blank" rel="noreferrer">https://developers.weixin.qq.com/miniprogram/dev/api/media/image/wx.chooseImage.html</a></p><h3 id="_5、promise-实现异步" tabindex="-1">5、Promise 实现异步 <a class="header-anchor" href="#_5、promise-实现异步" aria-label="Permalink to &quot;5、Promise 实现异步&quot;">​</a></h3><p>我们做图片上传时，必须所有的图片都上传成功后才能成功，有一个图片上传失败本地上传就不成。</p><table tabindex="0"><thead><tr><th>Promise 做异步</th><th>new Promise((resolve, reject) =&gt; { resolve(&quot;异步 123&quot;) // reject(&quot;错误 123&quot;) }).then(res =&gt; { console.log(&quot;返回的数据&quot;, res) }).catch(res =&gt; { console.log(&quot;错误&quot;, res) })</th></tr></thead><tbody><tr><td>Promise.all 执行多条 Promise 异步数据</td><td>let pArr = []let p1 = new Promise((resolve, reject) =&gt; { resolve(&quot;异步 123&quot;) // reject(&quot;错误 123&quot;)});pArr.push(p1)Promise.all(pArr).then(res =&gt; { console.log(&quot;返回的数据&quot;, res)})</td></tr></tbody></table><p>Promise.all(iterable) 方法返回一个 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise" target="_blank" rel="noreferrer">Promise</a> 实例，此实例在 iterable 参数内所有的 promise 都“完成（resolved）”或参数中不包含 promise 时回调完成（resolve）；如果参数中 promise 有一个失败（rejected），此实例回调失败（reject），失败原因的是第一个失败 promise 的结果。</p><h3 id="_6、云数据库文档" tabindex="-1">6、云数据库文档 <a class="header-anchor" href="#_6、云数据库文档" aria-label="Permalink to &quot;6、云数据库文档&quot;">​</a></h3><p><a href="https://developers.weixin.qq.com/miniprogram/dev/wxcloud/reference-client-api/database/collection.orderBy.html" target="_blank" rel="noreferrer">https://developers.weixin.qq.com/miniprogram/dev/wxcloud/reference-client-api/database/collection.orderBy.html</a></p><h2 id="实现微信支付准备工作" tabindex="-1">实现微信支付准备工作 <a class="header-anchor" href="#实现微信支付准备工作" aria-label="Permalink to &quot;实现微信支付准备工作&quot;">​</a></h2><p>我们在使用微信支付之前，需要做以下准备</p><h3 id="_1、注册一个微信支付的商户号" tabindex="-1">1、注册一个微信支付的商户号 <a class="header-anchor" href="#_1、注册一个微信支付的商户号" aria-label="Permalink to &quot;1、注册一个微信支付的商户号&quot;">​</a></h3><p>官方注册网址：<a href="https://pay.weixin.qq.com/index.php/apply/applyment_home/guide_normal" target="_blank" rel="noreferrer">https://pay.weixin.qq.com/index.php/apply/applyment_home/guide_normal</a></p><h3 id="_2、生成微信支付的密匙" tabindex="-1">2、生成微信支付的密匙 <a class="header-anchor" href="#_2、生成微信支付的密匙" aria-label="Permalink to &quot;2、生成微信支付的密匙&quot;">​</a></h3><p>配套图文讲解：<a href="https://www.jianshu.com/p/f0805f5792e3" target="_blank" rel="noreferrer">https://www.jianshu.com/p/f0805f5792e3</a></p><h3 id="_3、在小程序里关联微信支付的商户号" tabindex="-1">3、在小程序里关联微信支付的商户号 <a class="header-anchor" href="#_3、在小程序里关联微信支付的商户号" aria-label="Permalink to &quot;3、在小程序里关联微信支付的商户号&quot;">​</a></h3><h2 id="小程序实现微信支付-云开发云函数实现" tabindex="-1">小程序实现微信支付（云开发云函数实现） <a class="header-anchor" href="#小程序实现微信支付-云开发云函数实现" aria-label="Permalink to &quot;小程序实现微信支付（云开发云函数实现）&quot;">​</a></h2><h3 id="_1、tenpay-三方依赖使用文档" tabindex="-1">1、tenpay 三方依赖使用文档 <a class="header-anchor" href="#_1、tenpay-三方依赖使用文档" aria-label="Permalink to &quot;1、tenpay 三方依赖使用文档&quot;">​</a></h3><p><a href="https://www.npmjs.com/package/tenpay" target="_blank" rel="noreferrer">https://www.npmjs.com/package/tenpay</a></p><h3 id="_2、小程序支付官方-api" tabindex="-1">2、小程序支付官方 api <a class="header-anchor" href="#_2、小程序支付官方-api" aria-label="Permalink to &quot;2、小程序支付官方 api&quot;">​</a></h3><p><a href="https://developers.weixin.qq.com/miniprogram/dev/api/open-api/payment/wx.requestPayment.html" target="_blank" rel="noreferrer">https://developers.weixin.qq.com/miniprogram/dev/api/open-api/payment/wx.requestPayment.html</a></p><h2 id="实现订阅消息推送" tabindex="-1">实现订阅消息推送 <a class="header-anchor" href="#实现订阅消息推送" aria-label="Permalink to &quot;实现订阅消息推送&quot;">​</a></h2><blockquote><p>之前的通过 formid 发送模板消息推送，将在 2020 年 1 月 10 日下线，所以我们不得不使用订阅消息了。</p></blockquote><p>我们先来看下订阅消息的官方简介。 <img src="'+F+'" alt=" "> 接下来我们就来借助云开发，来快速实现小程序消息推送的功能。</p><h3 id="一-获取模板-id" tabindex="-1">一：获取模板 ID <a class="header-anchor" href="#一-获取模板-id" aria-label="Permalink to &quot;一：获取模板 ID&quot;">​</a></h3><p>这一步和我们之前的模板消息推送是一样的，也是先添加模板，然后拿到模板 id <img src="'+q+'" alt=" "> 首先是开通订阅消息功能，很简单，如下图 <img src="'+g+'" alt=" "> 由于长期性订阅消息，目前仅向政务民生、医疗、交通、金融、教育等线下公共服务开放，后期将逐步支持到其他线下公共服务业务。仅就线下公共服务这一点，长期性订阅消息就和大部分开发者无缘了。 所以我们这里只能以使用一次性订阅消息为例。 <img src="'+A+'" alt=" "> 如上图，我们从公共模板库里选择一个一次性订阅的模板。然后编辑模板如下图 <img src="'+_+'" alt=" "> 下图就是我们添加好的模板，下图的模板 id 就是我们需要的。 <img src="'+f+'" alt=" "></p><h3 id="二-请求用户授权" tabindex="-1">二：请求用户授权 <a class="header-anchor" href="#二-请求用户授权" aria-label="Permalink to &quot;二：请求用户授权&quot;">​</a></h3><p>我们做订阅消息授权时，只能是用户点击或者支付完成后才可以调起来授权弹窗，官方是这么要求的： <img src="'+E+'" alt=" "> 我们这里用到了 wx.requestSubscribeMessage 这个方法，来获取用户的授权。</p><ul><li>1，编写 index.wxml 代码 <img src="'+x+'" alt=" "></li><li>2，编写 index.js 代码,实现点击获取授权 <img src="'+w+'" alt=" "> 这一步 tmplIds 里的一串字符，就是我们自己添加的模板 id</li><li>3，点击按钮运行效果如下 开发者工具模拟器上点击授权弹窗是这样的： <img src="'+C+'" alt=" "> 手机上的授权弹窗是这样的： <img src="'+k+'" alt=" "> 可以看到，这里显示的就是我们添加的 ‘上课提醒’的模板。 细心的同学可以看到， 真机上多了一个 ‘总是保持以上选择，不再询问’ 其实，你自己仔细多品一些。也能明天，我们正常订阅消息授权时，用户允许的话，你只能推送一次消息。也就是用户允许一次，我们就可以推送一条消息给用户，并且这个允许不存在过期。所以我们可以让用户尽量多的点击允许，这样我们就可以尽量多的给用户发送消息了。</li></ul><p>这里用户允许后，我们就可以给用户推送消息了，接下来我们来借助云开发的云函数来实现消息推送功能。</p><h3 id="三-获取用户的-opneid" tabindex="-1">三：获取用户的 opneid <a class="header-anchor" href="#三-获取用户的-opneid" aria-label="Permalink to &quot;三：获取用户的 opneid&quot;">​</a></h3><p>先来看官方爸爸是怎么说的。 <img src="'+v+'" alt=" "> 可以看出官方提供了两种方式，我们这里使用云调用。说白了就是在云函数里调用推送功能。</p><ul><li>推送所需参数 <img src="'+P+'" alt=" "> 可以看到我这里用来 openapi 功能，并且需要用到用户的 opneid，关于 openid 的获取，我之前有写过文章，也录过视频的。文章的话，大家去翻下我历史的文章，视频的话，点击这个即可：<a href="https://edu.csdn.net/course/play/26572/336253" target="_blank" rel="noreferrer">《借助云函数获取用户 openid》</a> 这里的 openid 的获取我就不再详细讲解了，把对应云函数的代码给大家贴出来。 <img src="'+D+'" alt=" "> 在使用云开发时，有几点需要注意的</li><li>1，需要在 project.config.json 里创建云函数目录如下图 <img src="'+N+'" alt=" "></li><li>2，需要在 app.js 里初始化云开发环境 <img src="'+L+'" alt=" "> 至于云开发的环境 id 从哪里拿，我视频里也讲过很多遍了，直接去看我视频或者翻看我历史文章即可。 <a href="https://edu.csdn.net/course/play/26572/336253" target="_blank" rel="noreferrer">《零基础入门云开发视频》</a></li></ul><h3 id="四-用云函数实现消息推送" tabindex="-1">四：用云函数实现消息推送 <a class="header-anchor" href="#四-用云函数实现消息推送" aria-label="Permalink to &quot;四：用云函数实现消息推送&quot;">​</a></h3><p>我们只需要创建一个云函数如下，然后填入用户的 openid，要跳转的小程序页面链接，模板内容，模板 id 即可。通常这些数据都应该传进来，简单起见，我就把这里的模板内容写成固定的。 <img src="'+j+'" alt=" "></p><p><strong>注意</strong>：我在编写上面的代码时，推送内容的 key 必须和小程序模板里的 key 保持一致，否则就会报如下错误。</p><p><img src="'+I+'" alt=" "></p><ul><li>然后看下调用这个云函数的地方 <img src="'+T+'" alt=" "> 如果用户没有授权，我们推送会报如下错误 <img src="'+S+'" alt=" "> 如果用户授权过，我们就可以成功推送了，推送后的打印日志如下 <img src="'+M+'" alt=" "> 还记得我们真机上的授权吗，如果用户只是点击了允许，没有选择一直允许，那我我们在推送成功一次后，如果再次推送，就需要用户重新授权。否则，还是会报这个错误的 <img src="'+H+'" alt=" "> 所以我们用户点击一次允许，我们就可以推送一次消息，比如，我点击了 4 次允许那么我就可以成功的推送 4 次 <img src="'+O+'" alt=" "></li></ul><h4 id="效果图" tabindex="-1">效果图 <a class="header-anchor" href="#效果图" aria-label="Permalink to &quot;效果图&quot;">​</a></h4><p><img src="'+V+'" alt=" "> 可以看到，我们成功的收到 上课提醒的模板消息，点击进去，就是我们具体的推送内容 <img src="'+z+`" alt=" "> 其实我这是连续收到了 4 条消息，因为我点击了 4 次允许推送，所以就可以成功的推送 4 次。</p><p>到这里我们就完整的实现模板消息推送功能了，下面我把主要代码贴给大家，大家也可以私信我获取完整源码。</p><ul><li>index.wxml</li></ul><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">button</span><span style="color:#D19A66;"> bindtap</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;shouquan&quot;</span><span style="color:#D19A66;"> type</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;primary&quot;</span><span style="color:#ABB2BF;">&gt;获取订阅消息授权&lt;/</span><span style="color:#E06C75;">button</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">button</span><span style="color:#D19A66;"> bindtap</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;getOpenid&quot;</span><span style="color:#ABB2BF;">&gt;获取用户的openid并推送消息&lt;/</span><span style="color:#E06C75;">button</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li>index.js</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">//编程小石头wechat：2501902696</span></span>
<span class="line"><span style="color:#61AFEF;">Page</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	//获取授权的点击事件</span></span>
<span class="line"><span style="color:#61AFEF;">	shouquan</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E5C07B;">		wx</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">requestSubscribeMessage</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">			tmplIds</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;CFeSWarQLMPyPjwmiy6AV4eB-IZcipu48V8bFLkBzTU&quot;</span><span style="color:#ABB2BF;">], </span><span style="color:#7F848E;font-style:italic;">//这里填入我们生成的模板id</span></span>
<span class="line"><span style="color:#61AFEF;">			success</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">res</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">				console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;授权成功&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">res</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">			},</span></span>
<span class="line"><span style="color:#61AFEF;">			fail</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">res</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">				console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;授权失败&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">res</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">			},</span></span>
<span class="line"><span style="color:#ABB2BF;">		});</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	//获取用户的openid</span></span>
<span class="line"><span style="color:#61AFEF;">	getOpenid</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E5C07B;">		wx</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">cloud</span></span>
<span class="line"><span style="color:#ABB2BF;">			.</span><span style="color:#61AFEF;">callFunction</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">				name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;getopenid&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">			})</span></span>
<span class="line"><span style="color:#ABB2BF;">			.</span><span style="color:#61AFEF;">then</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">res</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">				let</span><span style="color:#E06C75;"> openid</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> res</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">result</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">openid</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">				console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;获取openid成功&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">openid</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">				this</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">send</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">openid</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">			})</span></span>
<span class="line"><span style="color:#ABB2BF;">			.</span><span style="color:#61AFEF;">catch</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">res</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">				console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;获取openid失败&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">res</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">			});</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	//发送模板消息到指定用户,推送之前要先获取用户的openid</span></span>
<span class="line"><span style="color:#61AFEF;">	send</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">openid</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">		wx</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">cloud</span></span>
<span class="line"><span style="color:#ABB2BF;">			.</span><span style="color:#61AFEF;">callFunction</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">				name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;sendMsg&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">				data</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">					openid</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">openid</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">				},</span></span>
<span class="line"><span style="color:#ABB2BF;">			})</span></span>
<span class="line"><span style="color:#ABB2BF;">			.</span><span style="color:#61AFEF;">then</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">res</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">				console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;推送消息成功&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">res</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">			})</span></span>
<span class="line"><span style="color:#ABB2BF;">			.</span><span style="color:#61AFEF;">catch</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">res</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">				console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;推送消息失败&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">res</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">			});</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br></div></div><ul><li>推送对应的云函数</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">//编程小石头wechat：2501902696</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> cloud</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;wx-server-sdk&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">cloud</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">init</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">exports</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">main</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> async</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">event</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">context</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">	try</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">		const</span><span style="color:#E5C07B;"> result</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> await</span><span style="color:#E5C07B;"> cloud</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">openapi</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">subscribeMessage</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">send</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">			touser</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">event</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">openid</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">//要推送给那个用户</span></span>
<span class="line"><span style="color:#E06C75;">			page</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;pages/index/index&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">//要跳转到那个小程序页面</span></span>
<span class="line"><span style="color:#E06C75;">			data</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				//推送的内容</span></span>
<span class="line"><span style="color:#E06C75;">				thing1</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">					value</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;小程序入门课程&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">				},</span></span>
<span class="line"><span style="color:#E06C75;">				thing6</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">					value</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;杭州浙江大学&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">				},</span></span>
<span class="line"><span style="color:#E06C75;">				thing7</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">					value</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;第一章第一节&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">				},</span></span>
<span class="line"><span style="color:#ABB2BF;">			},</span></span>
<span class="line"><span style="color:#E06C75;">			templateId</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;CFeSWarQLMPyPjwmiy6AV4eB-IZcipu48V8bFLkBzTU&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">//模板id</span></span>
<span class="line"><span style="color:#ABB2BF;">		});</span></span>
<span class="line"><span style="color:#E5C07B;">		console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">result</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">		return</span><span style="color:#E06C75;"> result</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">	} </span><span style="color:#C678DD;">catch</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">err</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">		console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">err</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">		return</span><span style="color:#E06C75;"> err</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><p>后面我会分享更多小程序相关的知识出来，请持续关注。</p><h4 id="注意-授权一次-只能发送一条消息" tabindex="-1">注意：授权一次，只能发送一条消息 <a class="header-anchor" href="#注意-授权一次-只能发送一条消息" aria-label="Permalink to &quot;注意：授权一次，只能发送一条消息&quot;">​</a></h4><h3 id="五-发送订阅消息给多个用户" tabindex="-1">五：发送订阅消息给多个用户 <a class="header-anchor" href="#五-发送订阅消息给多个用户" aria-label="Permalink to &quot;五：发送订阅消息给多个用户&quot;">​</a></h3><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">//发送订阅消息给多个用户 sendAll() { if (name == null || name == &#39;&#39;) {</span></span>
<span class="line"><span style="color:#ABB2BF;">wx.showToast({ icon: &quot;none&quot;, title: &#39;请输入课程名&#39;, }) return } let users = [</span></span>
<span class="line"><span style="color:#ABB2BF;">&quot;oc4sa0Vp_s65LEItm4JSWT5WFQds&quot;, &quot;oc4sa0dZ-pSCu95djiLCt7jo97bY&quot; ]</span></span>
<span class="line"><span style="color:#ABB2BF;">users.forEach(item =&gt; { console.log(&quot;for循环&quot;, item) this.sendFun(item, name) })</span></span>
<span class="line"><span style="color:#ABB2BF;">}, //封装的方式方法 sendFun(openid, name) { wx.cloud.callFunction({ name:</span></span>
<span class="line"><span style="color:#ABB2BF;">&quot;fasong&quot;, data: { openid: openid, name: name } }).then(res =&gt; {</span></span>
<span class="line"><span style="color:#ABB2BF;">console.log(&quot;发送单条成功&quot;, res) }).catch(res =&gt; { console.log(&quot;发送单条失败&quot;,</span></span>
<span class="line"><span style="color:#ABB2BF;">res) }) }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="短信验证码" tabindex="-1">短信验证码 <a class="header-anchor" href="#短信验证码" aria-label="Permalink to &quot;短信验证码&quot;">​</a></h2><p>文档：<a href="https://developers.weixin.qq.com/miniprogram/dev/OpenApiDoc/cloudbase/newSendCloudBaseSms.html" target="_blank" rel="noreferrer">云开发 / 发送短信 v2 (qq.com)</a></p><h3 id="_1、使用云开发短信的条件" tabindex="-1">1、使用云开发短信的条件 <a class="header-anchor" href="#_1、使用云开发短信的条件" aria-label="Permalink to &quot;1、使用云开发短信的条件&quot;">​</a></h3><p>这个前置条件很重要，条件不满足，你就没法使用云开发短信功能</p><h4 id="使用条件" tabindex="-1">使用条件 <a class="header-anchor" href="#使用条件" aria-label="Permalink to &quot;使用条件&quot;">​</a></h4><p>1、必须是企业小程序，目前个人小程序无法使用短信发送</p><p>2、必须开通静态网站功能(后面应该会逐步放开)</p><p>3、必须开通云开发(这个没得说，不开通云开发你还用啥云开发功能)</p>`,149)]))}const R=a(J,[["render",W]]);export{$ as __pageData,R as default};
