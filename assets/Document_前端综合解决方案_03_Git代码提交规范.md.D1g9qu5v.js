import{_ as n,c as a,o as l,ah as p}from"./chunks/framework.DqD713j2.js";const e="/FrontEndLearnNotes/assets/git-cz-demo.BbDKkWV4.gif",o="/FrontEndLearnNotes/assets/run-prepare-success.BgeZEqNi.png",t="/FrontEndLearnNotes/assets/7b_720w.DENGTYSc.jpg",r="/FrontEndLearnNotes/assets/9f_720w.Chr5QNcs.jpg",c="/FrontEndLearnNotes/assets/1661824534429.B44S-jFz.jpg",F=JSON.parse('{"title":"03_Git 代码提交规范","description":"","frontmatter":{},"headers":[],"relativePath":"Document/前端综合解决方案/03_Git代码提交规范.md","filePath":"Document/前端综合解决方案/03_Git代码提交规范.md","lastUpdated":1750954157000}'),i={name:"Document/前端综合解决方案/03_Git代码提交规范.md"};function u(y,s,b,m,B,d){return l(),a("div",null,s[0]||(s[0]=[p(`<h1 id="_03-git-代码提交规范" tabindex="-1">03_Git 代码提交规范 <a class="header-anchor" href="#_03-git-代码提交规范" aria-label="Permalink to &quot;03_Git 代码提交规范&quot;">​</a></h1><p>常见的 commit message 规范有：<a href="https://hub.fastgit.org/conventional-changelog/conventional-changelog/blob/v0.5.3/conventions/atom.md" target="_blank" rel="noreferrer">atom</a>，<a href="https://hub.fastgit.org/conventional-changelog/conventional-changelog/blob/v0.5.3/conventions/eslint.md" target="_blank" rel="noreferrer">eslint</a>和<a href="https://github.com/angular/angular/blob/master/CONTRIBUTING.md" target="_blank" rel="noreferrer">Angular</a>等,其中 Angular 规范更为通用。</p><p>现在市面上比较流行的 Git 代码提交规范方案是<a href="https://www.conventionalcommits.org/zh-hans/v1.0.0/" target="_blank" rel="noreferrer">Conventional Commit （约定式提交规范）</a>，它受到了<a href="https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md" target="_blank" rel="noreferrer">Angular 提交准则</a>的启发，并在很大程度上以其为依据。</p><p>约定式提交规范是一种基于提交消息的轻量级约定。它提供了一组用于创建清晰的提交历史的简单规则；这使得编写基于规范的自动化工具变得更容易。这个约定与 SemVer 相吻合，在提交信息中描述新特性、bug 修复和破坏性变更</p><ul><li><strong>规范化提交</strong>(无论哪种方式，要做到<code>统一</code>、<code>简明</code>)</li><li><strong>一处变更一次 commit</strong>(不要多处、多次修改堆积成一次 commit 提交，这对后期分析 bug 不利)</li></ul><h3 id="约定式提交" tabindex="-1">约定式提交 <a class="header-anchor" href="#约定式提交" aria-label="Permalink to &quot;约定式提交&quot;">​</a></h3><p>约定式提交：每次使用<code>git commit</code>  的时候都需要写 commit message,如果 message 的 style 是<code>按照固定的模版格式书写</code>，对于后期的维护和编写 changelog 都有巨大的好处。</p><p>而且现在的很多自动生成 changelog 的工具，都是建立在约定式提交的基础之上。</p><h4 id="优点" tabindex="-1">优点 <a class="header-anchor" href="#优点" aria-label="Permalink to &quot;优点&quot;">​</a></h4><ul><li>可读性好，清晰，不必深入看代码即可了解当前 commit 的作用。</li><li>为 Code Reviewing 做准备</li><li>方便跟踪工程历史</li><li>让其他的开发者在运行 git blame 的时候想跪谢</li><li>提高项目的整体质量，提高个人工程素质</li></ul><hr><h3 id="_1-约定式提交规范" tabindex="-1">1.约定式提交规范 <a class="header-anchor" href="#_1-约定式提交规范" aria-label="Permalink to &quot;1.约定式提交规范&quot;">​</a></h3><p><strong>1.提交格式：</strong></p><ul><li><p>type：提交的类型；</p></li><li><p>scope：代码修改的范围：用于说明 commit 影响的范围，比如数据层、控制层、视图层等等，视项目不同而不同。</p></li><li><p>desctiption：对提交代码做一个简短的说明</p></li></ul><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">type</span><span style="color:#ABB2BF;">&gt;[opting scope]: &lt;</span><span style="color:#E06C75;">desctiption</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">// 空一行</span></span>
<span class="line"><span style="color:#ABB2BF;">[optional body]</span></span>
<span class="line"><span style="color:#ABB2BF;">// 空一行</span></span>
<span class="line"><span style="color:#ABB2BF;">[optional footer(s)]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="翻译" tabindex="-1"><u>---------- 翻译 ----------</u> <a class="header-anchor" href="#翻译" aria-label="Permalink to &quot;&lt;u&gt;---------- 翻译 ----------&lt;/u&gt;&quot;">​</a></h4><ul><li><p><mark>Header (&lt;类型&gt;[可选的范围]: &lt;描述&gt;)</mark></p><p>[header 包含三部分内容: 类型 type(必需)，可选的范围 scope(可选)，描述 desctiption(必需)] <strong><code>type</code>: 代码提交的类型</strong></p><table tabindex="0"><thead><tr><th>Type</th><th>作用</th></tr></thead><tbody><tr><td>feat</td><td>新增特性 (feature)</td></tr><tr><td>fix</td><td>修复 Bug(bug fix)</td></tr><tr><td>docs</td><td>修改文档 (documentation)</td></tr><tr><td>style</td><td>代码格式修改(white-space, formatting, missing semi colons, etc)</td></tr><tr><td>refactor</td><td>代码重构(refactor)</td></tr><tr><td>perf</td><td>改善性能(A code change that improves performance)</td></tr><tr><td>test</td><td>测试(when adding missing tests)</td></tr><tr><td>build</td><td>变更项目构建或外部依赖（例如 scopes: webpack、gulp、npm 等）</td></tr><tr><td>ci</td><td>更改持续集成软件的配置文件和 package 中的 scripts 命令，例如 scopes: Travis, Circle 等</td></tr><tr><td>chore</td><td>变更构建流程或辅助工具(比如更改测试环境)</td></tr><tr><td>revert</td><td>代码回退</td></tr></tbody></table><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">add：增加</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">del：删除</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">mod：修改</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">update：更新</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">feat:</span><span style="color:#98C379;"> 新功能的开发</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">fix:</span><span style="color:#98C379;"> bug的修复</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">docs:</span><span style="color:#98C379;"> 文档的的修改变动</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">style:</span><span style="color:#98C379;"> 代码格式的修改</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">refactor:</span><span style="color:#98C379;"> 对已有功能进行重构</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">即不是新增功能，也不是修改bug的代码变动</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">perf:</span><span style="color:#98C379;"> 性能优化</span></span>
<span class="line"></span>
<span class="line"><span style="color:#56B6C2;">test</span><span style="color:#98C379;">:</span><span style="color:#98C379;"> 增加测试</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">build:</span><span style="color:#98C379;"> 修改影响到了系统的构建或外部依赖</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">ci:</span><span style="color:#98C379;"> 修改CI配置文件或相关的脚本</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">chore:</span><span style="color:#98C379;"> 构建过程或辅助工具的变动</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">done: 已完成</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">import：导入库</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">revert：撤销上一次的</span><span style="color:#98C379;"> commit</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">merge：合并分支操作</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div><p>中文示例</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">【新增功能】-【新的功能点、新的需求】</span></span>
<span class="line"><span style="color:#61AFEF;">【Bug修复】-【修复的Bug:现网发散Bug、测试阶段的Bug、验收阶段的Bug】</span></span>
<span class="line"><span style="color:#61AFEF;">【文档修改】-【只是修改了文档:注释、README.md等】.</span></span>
<span class="line"><span style="color:#61AFEF;">【样式修改】-【不影响代码功能的修改:CSS样式、代码格式化等】</span></span>
<span class="line"><span style="color:#61AFEF;">【代码重构】-【代码更改既不修复错误也不添加功能】</span></span>
<span class="line"><span style="color:#61AFEF;">【性能优化】-【代码更改能够提升性能】</span></span>
<span class="line"><span style="color:#61AFEF;">【测试代码】-【添加缺失测试或更正现有测试】</span></span>
<span class="line"><span style="color:#61AFEF;">【编译代码】-【影响构建系统或外部依赖项的更改:build.gradle、package.json、Podfile等】</span></span>
<span class="line"><span style="color:#61AFEF;">【持续集成】-【咱们的CI配置文件和脚本的更改:Jenkinsfile等】</span></span>
<span class="line"><span style="color:#61AFEF;">【回退更改】-【代码回退提交更改】</span></span>
<span class="line"><span style="color:#61AFEF;">【其余提交】-【除以上全部类型以外的提交更改】</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p><strong><code>scope</code>：用于说明 commit 影响的范围，比如数据层,控制层,视图层等等。</strong><strong><code>desctiption</code>：commit 提交的目的的简短描述，不超过 50 个字符</strong></p></li><li><p><mark>Body([可选的正文])</mark></p><p>Body 部分是对本次 commit 的详细描述：</p><p><strong>此次提交的详细描述，描述为什么修改，做了什么样的修改，以及开发的思路等等。</strong></p><p>可以分成多行，如</p><blockquote><p>为什么修改，做了什么修改，开发的思路</p><ul><li>修改了什么要点</li><li>使用了什么库，达到什么目的</li></ul></blockquote></li><li><p><mark>Footer( [可选的脚注] )</mark></p><p>Footer 脚注部分只用于两种情况</p><p><strong>不兼容破坏性变动</strong></p><p>如果当前代码与上一个版本不兼容，产生了破坏性变更，则 Footer 部分以 BREAKING CHANGE 开头,后面是对变动的描述，以及变动理由和迁移方法。如:</p><blockquote><p>BREAKING CHANGE: 隔离作用域绑定定义已更改。</p><p>按照下面的例子来迁移代码:     Before:<br>         scope: {<br>             myAttr: &#39;attribute&#39;,<br>         }<br>     After:<br>         scope: {<br>             myAttr: &#39;@&#39;,<br>         }<br> 删除的&#39; inject &#39;已经没有用处，所以不再使用它。</p></blockquote><p><strong>关闭 Issue(Closed issues:)</strong>：罗列此次提交修复的 bug，如：</p><p>参考文档： <a href="https://docs.gitlab.com/ee/user/" target="_blank" rel="noreferrer">User Docs | GitLab</a></p><blockquote><p>fixes issue #110</p><p>Closes #234</p><p>Closes #123, #245, #992</p></blockquote></li></ul><p><strong>3.commit 提交的例子:</strong></p><p>最简单的例子：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">fix(首页菜单栏</span><span style="color:#ABB2BF;">)：添加缺少的图标</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>全部规范包含的例子：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">docs[登录授权]：修改了登录授权文档</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">将文档中的公司改成企业授权</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">closes</span><span style="color:#98C379;"> issue</span><span style="color:#7F848E;font-style:italic;"> #10 (关闭了第10个问题)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><img src="https://img2018.cnblogs.com/blog/1756063/201911/1756063-20191112091951842-1280371229.png" alt=""></p><h3 id="_2、自建-git-提交信息模板来作为团队提交规范" tabindex="-1"><strong>2、自建 git 提交信息模板来作为团队提交规范</strong> <a class="header-anchor" href="#_2、自建-git-提交信息模板来作为团队提交规范" aria-label="Permalink to &quot;**2、自建 git 提交信息模板来作为团队提交规范**&quot;">​</a></h3><p>如果你的团队对提交信息有格式要求，可以在系统上创建一个文件，并配置 git 把它作为默认的模板，这样可以更加容易地使提交信息遵循格式。</p><p>通过以下命令来配置提交信息模板:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> config</span><span style="color:#98C379;"> commit.template</span><span style="color:#ABB2BF;">   [模板文件名]    //这个命令只能设置当前分支的提交模板</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> config</span><span style="color:#98C379;">  —</span><span style="color:#98C379;"> —global</span><span style="color:#98C379;"> commit.template</span><span style="color:#ABB2BF;">   [模板文件名]    //这个命令能设置全局的提交模板，注意global前面是两杠</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>新建  <code>.gitmessage.txt</code>(模板文件) 内容可以如下:</p><div class="language-docker line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">docker</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># headr: &lt;type&gt;(&lt;scope&gt;): &lt;subject&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># - type: feat, fix, docs, style, refactor, test, chore</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># - scope: can be empty</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># - subject: start with verb (such as &#39;change&#39;), 50-character line</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">#</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># body: 72-character wrapped. This should answer:</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># * Why was this change necessary?</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># * How does it address the problem?</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># * Are there any side effects?</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">#</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># footer:</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># - Include a link to the issue.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># - BREAKING CHANGE</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">#</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="_3、使用工具-commit-符合规范" tabindex="-1">3、使用工具 commit 符合规范 <a class="header-anchor" href="#_3、使用工具-commit-符合规范" aria-label="Permalink to &quot;3、使用工具 commit 符合规范&quot;">​</a></h3><h4 id="_3-1-commitizen-cz-conventional-changelog-提交工具" tabindex="-1">3.1 commitizen + cz-conventional-changelog：提交工具 <a class="header-anchor" href="#_3-1-commitizen-cz-conventional-changelog-提交工具" aria-label="Permalink to &quot;3.1 commitizen + cz-conventional-changelog：提交工具&quot;">​</a></h4><ul><li><p><code>commitizen（cz-cli）</code>：是一款可以交互式建立提交信息的工具。它帮助我们从 type 开始一步步建立提交信息</p><p>可根据不同的<code>adapter</code>配置 commit message</p><ul><li><p>GitHub：<a href="https://github.com/commitizen/cz-cli" target="_blank" rel="noreferrer">commitizen/cz-cli</a></p></li><li><p>官网：<a href="http://commitizen.github.io/cz-cli/" target="_blank" rel="noreferrer">commitizen.github.io/cz-cli/</a></p></li><li><p>npm：<a href="https://www.npmjs.com/package/commitizen" target="_blank" rel="noreferrer">commitizen - npm (npmjs.com)</a></p></li></ul></li><li><p><code>cz-customizable</code>：可自定义的 Commitizen 插件（或独立实用程序），可帮助实现一致的提交消息。和 cz-conventional-changelog 一样的作用</p><ul><li><p>GitHub：<a href="https://github.com/leoforfree/cz-customizable" target="_blank" rel="noreferrer">leoforfree/cz-customizable</a></p></li><li><p>npm：<a href="https://www.npmjs.com/package/cz-customizable" target="_blank" rel="noreferrer">cz-customizable - npm (npmjs.com)</a></p></li></ul></li><li><p><code>cz-conventional-changelog</code>：Angular 的 adapter(适配器) commit message 格式</p><ul><li><p>npm：<a href="https://www.npmjs.com/package/cz-conventional-changelog" target="_blank" rel="noreferrer">cz-conventional-changelog - npm (npmjs.com)</a></p></li><li><p>GitHub：<a href="https://github.com/commitizen/cz-conventional-changelog" target="_blank" rel="noreferrer">https://github.com/commitizen/cz-conventional-changelog</a></p></li></ul><p>commitizen 是一个撰写合格 commit message 的工具，用于代替 git commit 指令，而 cz-conventional-changelog 适配器提供 conventional-changelog 标准（约定式提交标准）。基于不一样需求，也可使用不一样适配器</p></li></ul><p><strong>全局环境下安装:</strong></p><blockquote><p>commitizen 根据不同的<code>adapter</code>配置 commit message。例如，要使用 Angular 的 commit message 格式，可以安装<code>cz-conventional-changelog</code>。</p></blockquote><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 需要同时安装commitizen和cz-conventional-changelog，后者是adapter</span></span>
<span class="line"><span style="color:#61AFEF;">$</span><span style="color:#98C379;"> npm</span><span style="color:#98C379;"> install</span><span style="color:#D19A66;"> -g</span><span style="color:#98C379;"> commitizen</span><span style="color:#98C379;"> cz-conventional-changelog</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 配置安装的adapter: 全局模式下，需要 ~/.czrc 配置文件, 为commitizen指定Adapter</span></span>
<span class="line"><span style="color:#61AFEF;">$</span><span style="color:#98C379;"> echo</span><span style="color:#98C379;"> &#39;{ &quot;path&quot;: &quot;cz-conventional-changelog&quot; }&#39;</span><span style="color:#ABB2BF;"> &gt; </span><span style="color:#98C379;">~/.czrc</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>本地项目安装:</strong></p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 安装commitizen</span></span>
<span class="line"><span style="color:#61AFEF;">$</span><span style="color:#98C379;"> npm</span><span style="color:#98C379;"> install</span><span style="color:#D19A66;"> --save-dev</span><span style="color:#98C379;"> commitizen</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 接下来安装适配器</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># npm版本要 &gt;= 5.2</span></span>
<span class="line"><span style="color:#61AFEF;">$</span><span style="color:#98C379;"> npx</span><span style="color:#98C379;"> commitizen</span><span style="color:#98C379;"> init</span><span style="color:#98C379;"> cz-conventional-changelog</span><span style="color:#D19A66;"> --save-dev</span><span style="color:#D19A66;"> --save-exact</span></span>
<span class="line"><span style="color:#61AFEF;">或者</span></span>
<span class="line"><span style="color:#61AFEF;">$</span><span style="color:#98C379;"> npm</span><span style="color:#98C379;"> i</span><span style="color:#98C379;"> cz-customizable</span><span style="color:#D19A66;"> --save-dev</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>ps: 对于<code>非Node项目</code>(java、php...)在执行上一条安装适配器的命令前,需要手动创建<a href="http://t.zoukankan.com/larscheng-p-11839745.html" target="_blank" rel="noreferrer">package.json</a>文件</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> init</span><span style="color:#D19A66;"> --yes</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>1.如果是安装：cz-customizable，那么要在 package.json 配置</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#98C379;">&quot;config&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">  &quot;commitizen&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">    &quot;path&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;node_modules/cz-customizable&quot;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // &quot;path&quot;: &quot;node_modules/cz-conventional-changelog&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>2.接着在项目根目录创建 <code>.cz-config.js</code> 自定义提示文件：两种格式</p><p>官方提供的配置信息:<a href="https://github.com/leoforfree/cz-customizable/blob/master/cz-config-EXAMPLE.js" target="_blank" rel="noreferrer">github.com</a></p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#98C379;">&quot;use strict&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">	types</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#ABB2BF;">		{ </span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;feat&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;新增：新增功能、页面&quot;</span><span style="color:#ABB2BF;"> },</span></span>
<span class="line"><span style="color:#ABB2BF;">		{ </span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;fix&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;bug：修复某个bug&quot;</span><span style="color:#ABB2BF;"> },</span></span>
<span class="line"><span style="color:#ABB2BF;">		{ </span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;docs&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;文档：修改增加文档、注释&quot;</span><span style="color:#ABB2BF;"> },</span></span>
<span class="line"><span style="color:#ABB2BF;">		{ </span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;style&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;格式：不影响代码运行的变动、空格、格式化等等&quot;</span><span style="color:#ABB2BF;"> },</span></span>
<span class="line"><span style="color:#ABB2BF;">		{ </span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;ui&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;ui修改：布局、css样式等等&quot;</span><span style="color:#ABB2BF;"> },</span></span>
<span class="line"><span style="color:#ABB2BF;">		{ </span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;hotfix&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;bug：修复线上紧急bug&quot;</span><span style="color:#ABB2BF;"> },</span></span>
<span class="line"><span style="color:#ABB2BF;">		{ </span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;build&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;测试：添加一个测试&quot;</span><span style="color:#ABB2BF;"> },</span></span>
<span class="line"><span style="color:#ABB2BF;">		{ </span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;refactor&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;重构：代码重构，未新增任何功能和修复任何bug&quot;</span><span style="color:#ABB2BF;"> },</span></span>
<span class="line"><span style="color:#ABB2BF;">		{ </span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;revert&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;回滚：代码回退到某个版本节点&quot;</span><span style="color:#ABB2BF;"> },</span></span>
<span class="line"><span style="color:#ABB2BF;">		{ </span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;perf&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;优化：提升性能、用户体验等&quot;</span><span style="color:#ABB2BF;"> },</span></span>
<span class="line"><span style="color:#ABB2BF;">		{ </span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;ci&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;自动化构建：对CI/CD配置文件和脚本的更改&quot;</span><span style="color:#ABB2BF;"> },</span></span>
<span class="line"><span style="color:#ABB2BF;">		{ </span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;chore&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;其他修改：不修改src目录或测试文件的修改&quot;</span><span style="color:#ABB2BF;"> },</span></span>
<span class="line"><span style="color:#ABB2BF;">		{ </span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;test&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;测试：包括单元测试、集成测试&quot;</span><span style="color:#ABB2BF;"> },</span></span>
<span class="line"><span style="color:#ABB2BF;">		{ </span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;update&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;更新：普通更新&quot;</span><span style="color:#ABB2BF;"> },</span></span>
<span class="line"><span style="color:#ABB2BF;">	],</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 交互提示信息</span></span>
<span class="line"><span style="color:#E06C75;">	messages</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">		type</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;选择一种你的提交类型：&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		scope</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;选择一个影响范围（可选）:&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		customScope</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;表示此更改的范围：&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		subject</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;短说明：</span><span style="color:#56B6C2;">\\n</span><span style="color:#98C379;">&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		body</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;长说明，使用&quot;|&quot;符号换行（可选）：</span><span style="color:#56B6C2;">\\n</span><span style="color:#98C379;">&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		breaking</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;非兼容性说明（可选）：</span><span style="color:#56B6C2;">\\n</span><span style="color:#98C379;">&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		footer</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;关闭的issue，例如：#31, #34（可选）：</span><span style="color:#56B6C2;">\\n</span><span style="color:#98C379;">&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		confirmCommit</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;确定提交说明?（yes/no）&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#E06C75;">	allowCustomScopes</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 设置选择了那些type，才询问 breaking message</span></span>
<span class="line"><span style="color:#E06C75;">	allowBreakingChanges</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;feat&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;fix&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;ui&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;hotfix&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;update&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;perf&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#E06C75;">	subjectLimit</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">100</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 配置选项：https://github.com/leoforfree/cz-customizable/blob/master/cz-config-EXAMPLE.js</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// type: {Array of Object}：项目中使用的 type 和默认描述。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// scopes: {Array of Strings}：预设项目中使用的可选 scope 。如：在一个银行系统项目中使用 [“acccounts”, “payments”]；在一个旅行应用中使用 [“bookings”, “search”, “profile”]。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// scopeOverrides: {Object where key contains a Array of String}：当您想重写特定提交类型的作用域时，使用此方法。如：在类型为“fix”时指定范围 { fix: [ {name: &#39;merge&#39;}, {name: &#39;style&#39;}, {name: &#39;e2eTest&#39;},{name: &#39;unitTest&#39;} ] }。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// allowCustomScopes: {boolean, default false}：增加自定义 scope 选项，开启可以在设置 scope 时支持直接输入。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// allowBreakingChanges: {Array of Strings: default none}：配置想要 breaking change 弹出提示的scope列表，如：[‘feat’, ‘fix’]。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// appendBranchNameToCommitMessage：当配合 cz-customizable-ghooks 使用 cz-customizable 时, 可自动获取分支名称并添加到 commit message 中，此功能已经在 cz-customizable-ghooks实现，对应选项已经被添加到 cz-customizable-ghooks, v1.3.0. 中，默认值为 true。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// breakingPrefix: {string, default ‘BREAKING CHANGE:’}：设置自定义 breaking change 块。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// footerPrefix: {string, default ‘ISSUES CLOSED:’}：设置自定义 foot 块。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // 可选类型</span></span>
<span class="line"><span style="color:#E06C75;">  types</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#ABB2BF;">    {</span></span>
<span class="line"><span style="color:#E06C75;">      value</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;feat&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">      name </span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;feat:     新功能&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#ABB2BF;">    {</span></span>
<span class="line"><span style="color:#E06C75;">      value</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;fix&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">      name </span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;fix:      bug修复&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#ABB2BF;">    {</span></span>
<span class="line"><span style="color:#E06C75;">      value</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;docs&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">      name </span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;docs:     文档变更&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#ABB2BF;">    {</span></span>
<span class="line"><span style="color:#E06C75;">      value</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;style&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">      name </span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;style:     代码格式(不影响代码运行的变动)&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#ABB2BF;">    {</span></span>
<span class="line"><span style="color:#E06C75;">      value</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;refactor&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">      name </span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;refactor: 重构(既不是增加feature，也不是修复bug)&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#ABB2BF;">    {</span></span>
<span class="line"><span style="color:#E06C75;">      value</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;perf&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">      name </span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;perf:     性能优化&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#ABB2BF;">    {</span></span>
<span class="line"><span style="color:#E06C75;">      value</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;test&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">      name </span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;test:     增加测试&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#ABB2BF;">    {</span></span>
<span class="line"><span style="color:#E06C75;">      value</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;chore&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">      name </span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;chore:    构建过程或者辅助工具的变动&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#ABB2BF;">    {</span></span>
<span class="line"><span style="color:#E06C75;">      value</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;revert&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">      name </span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;revert:   提交的版本回退&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#ABB2BF;">    {</span></span>
<span class="line"><span style="color:#E06C75;">      value</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;build&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">      name </span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;build:    打包&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">  ],</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // 配置想要 breaking change 弹出提示的scope列表</span></span>
<span class="line"><span style="color:#E06C75;">  allowBreakingChanges</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&#39;feat&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;fix&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;refactor&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;perf&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;build&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;revert&#39;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // 消息步骤</span></span>
<span class="line"><span style="color:#98C379;">  &quot;messages&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">    type</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;请选择提交类型&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    customScope</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;请输入修改范围(可选)&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    subject</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;请简要描述提交(必填)&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    body</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;请输入详细描述(可选)&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    footer</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;请输入要关闭的issue(可选)&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    confirmCommit</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;确认使用以上信息提交？(y/n/e/h)&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // 跳过问题</span></span>
<span class="line"><span style="color:#98C379;">  &quot;skipQuestions&quot;</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&#39;body&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;footer&#39;</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // 文字长度：默认是72</span></span>
<span class="line"><span style="color:#E06C75;">  subjectLinmit</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">72</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br></div></div><p><strong>安装完毕后，可直接使用 git cz 来取代 git commit。</strong></p><p>以后，凡是用到<code>git commit</code>命令，一律改为使用<code>git cz</code>，就会出现选项，用来生成符合格式的 Commit message</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> cz</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>提交流程展示：</p><p><img src="`+e+`" alt="git-cz"></p><p>执行<code>git cz</code>c 进入 interactive 模式，根据提示依次填写 blog</p><p><img src="https://ewr1.vultrobjects.com/imgur2/000/005/422/677_87e_6e2.jpg" alt=""></p><p>任何 git commit 指令的 option 都能用在 git cz 指令上, 例如 git cz -a</p><p>上面我们完成了 commitizen 的安装与提交规范的制定。</p><h4 id="_3-2-git-commit-规范化工具-commitlint" tabindex="-1">3.2 git commit 规范化工具 -- commitlint <a class="header-anchor" href="#_3-2-git-commit-规范化工具-commitlint" aria-label="Permalink to &quot;3.2 git commit 规范化工具 -- commitlint&quot;">​</a></h4><h5 id="_3-2-1-commitlint-cli-commitlint-config-conventional-规范" tabindex="-1"><strong>3.2-1 @commitlint/cli + @commitlint/config-conventional(规范)</strong> <a class="header-anchor" href="#_3-2-1-commitlint-cli-commitlint-config-conventional-规范" aria-label="Permalink to &quot;**3.2-1 @commitlint/cli + @commitlint/config-conventional(规范)**&quot;">​</a></h5><blockquote><p>如果要自定义提交规范，就不用安装<code>@commitlint/config-conventional</code></p></blockquote><ul><li><p><code>@commitlint</code>：是一个提交验证工具。原理是可以在实际的 git commit 提交到远程仓库之前使用 git 钩子来验证信息。提交不符合规则的信息将会被阻止提交到远程仓库。</p><ul><li><p>GitHub：<a href="https://github.com/commitizen/cz-cli" target="_blank" rel="noreferrer">commitizen/cz-cli</a></p></li><li><p>官网：<a href="http://commitizen.github.io/cz-cli/" target="_blank" rel="noreferrer">commitizen.github.io/cz-cli/</a></p></li><li><p>npm：<a href="https://www.npmjs.com/package/@commitlint/cli" target="_blank" rel="noreferrer">@commitlint/cli - npm (npmjs.com)</a></p></li></ul></li><li><p><code>@commitlint/config-conventional</code>：对于  <code>Conventional Commits</code>  规范，社区已经整理好了  <code>@commitlint/config-conventional</code>  包</p><ul><li><p>GitHub：<a href="https://github.com/conventional-changelog/commitlint" target="_blank" rel="noreferrer">conventional-changelog</a></p></li><li><p>官网：<a href="https://commitlint.js.org/#/" target="_blank" rel="noreferrer">commitlint - 官网文档</a></p></li><li><p>npm：<a href="https://github.com/conventional-changelog/commitlint" target="_blank" rel="noreferrer">github.com/conventional-changelog/commitlint</a></p></li></ul></li></ul><p><strong>1.首先安装 commitlint 以及 conventional 规范:</strong></p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 安装两个库</span></span>
<span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> install</span><span style="color:#D19A66;"> --save-dev</span><span style="color:#98C379;"> @commitlint/cli</span><span style="color:#98C379;"> @commitlint/config-conventional</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 生成配置文件commitlint.config.js</span></span>
<span class="line"><span style="color:#56B6C2;">echo</span><span style="color:#98C379;"> &quot;module.exports = {extends: [&#39;@commitlint/config-angular&#39;]};&quot;</span><span style="color:#ABB2BF;"> &gt; </span><span style="color:#98C379;">commitlint.config.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>2. commitlint.config.js 配置文件</strong>：</p><p>查阅 commitlint 文档：<a href="https://commitlint.js.org/#/reference-configuration?id=rules" target="_blank" rel="noreferrer">配置 (commitlint.js.org)</a></p><p>在 <code>commitlint.config.js</code> 制定提交 message 规范</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * feature：新功能</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * update：更新某功能</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * fixbug：修补某功能的bug</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * refactor：重构某个功能</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * optimize: 优化构建工具或运行时性能</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * style：仅样式改动</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * docs：仅文档新增/改动</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * chore：构建过程或辅助工具的变动</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 继承自 @commitlint/config-conventional</span></span>
<span class="line"><span style="color:#98C379;">&quot;module.exports = {extends: [&#39;@commitlint/config-conventional&#39;]}&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">	extends</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;@commitlint/config-conventional&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// type 的类型定义：表示 git 提交的type必须在以下范围之内</span></span>
<span class="line"><span style="color:#E06C75;">	rules</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#98C379;">		&quot;type-enum&quot;</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// 当前验证的错误级别</span></span>
<span class="line"><span style="color:#D19A66;">			2</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// 在什么情况下进行验证</span></span>
<span class="line"><span style="color:#98C379;">			&quot;always&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">			[</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				// 泛型内容：和.cz-config.js文件的内容泛型对应</span></span>
<span class="line"><span style="color:#98C379;">				&quot;feat&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 新功能 feature</span></span>
<span class="line"><span style="color:#98C379;">				&quot;fix&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 修复 Bug</span></span>
<span class="line"><span style="color:#98C379;">				&quot;docs&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 文档注释</span></span>
<span class="line"><span style="color:#98C379;">				&quot;style&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 代码格式（不影响代码运行的变动）</span></span>
<span class="line"><span style="color:#98C379;">				&quot;refactor&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 重构（既不增加新功能，也不是修复bug）</span></span>
<span class="line"><span style="color:#98C379;">				&quot;perf&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 性能优化</span></span>
<span class="line"><span style="color:#98C379;">				&quot;test&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 增加测试</span></span>
<span class="line"><span style="color:#98C379;">				&quot;chore&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 构建过程或辅助工具的变动</span></span>
<span class="line"><span style="color:#98C379;">				&quot;revert&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 回退</span></span>
<span class="line"><span style="color:#98C379;">				&quot;build&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 打包</span></span>
<span class="line"><span style="color:#ABB2BF;">			],</span></span>
<span class="line"><span style="color:#ABB2BF;">		],</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		//</span></span>
<span class="line"><span style="color:#98C379;">		&quot;subject-full-stop&quot;</span><span style="color:#ABB2BF;">: [</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;never&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// subject大小写不做校验</span></span>
<span class="line"><span style="color:#98C379;">		&quot;subject-case&quot;</span><span style="color:#ABB2BF;">: [</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;never&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br></div></div><p><strong>3.接着在  <code>package.json</code>  中配置  <code>commitlint</code>  脚本:</strong></p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#98C379;">&quot;commitlint&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">   &quot;extends&quot;</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#98C379;">     &quot;@commitlint/config-conventional&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">   ]</span></span>
<span class="line"><span style="color:#ABB2BF;">},</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>上面我们就完成了 commitlint 的安装与提交规范的制定。</p><h5 id="_3-2-2-git-hooks-husky-钩子" tabindex="-1">3.2-2. Git Hooks + Husky 钩子 <a class="header-anchor" href="#_3-2-2-git-hooks-husky-钩子" aria-label="Permalink to &quot;3.2-2. Git Hooks + Husky 钩子&quot;">​</a></h5><p>如果提交的描述信息不符合<a href="https://www.conventionalcommits.org/zh-hans/v1.0.0/" target="_blank" rel="noreferrer">Conventional Commit （约定式提交规范）</a>，可以使用 Git Hooks 阻止当前提交，并抛出对应的错误提示</p><blockquote><p>检验 commit message 的最佳方式是结合 git hook，所以需要配合 Husky</p><p>Git 也预先定义了一些“事件钩子”如“commit-msg”、“pre-commit”等，当我们执行对应的 Git 操作时会触发它们，从而通知订阅该事件的 shell script 文件处理我们要进行的任务，这些 shell 脚本文件存放在项目根目录下的.git/hooks 目录中</p></blockquote><p><strong>PS：完整 Git Hooks 钩子说明，请参考<a href="https://git-scm.com/docs/githooks" target="_blank" rel="noreferrer">官网链接</a></strong></p><p>Git 支持的所有钩子见下表（<strong>加粗的为常用钩子</strong>）：</p><table tabindex="0"><thead><tr><th>Git Hook</th><th>调用时机</th><th>说明</th></tr></thead><tbody><tr><td>pre-applypatch</td><td><code>git am</code>执行前</td><td></td></tr><tr><td>applypatch-msg</td><td><code>git am</code>执行前</td><td></td></tr><tr><td>post-applypatch</td><td><code>git am</code>执行后</td><td>不影响<code>git am</code>的结果</td></tr><tr><td><strong>pre-commit</strong></td><td><code>git commit</code>执行前</td><td>可以用<code>git commit --no-verify</code>绕过</td></tr><tr><td><strong>commit-msg</strong></td><td><code>git commit</code>执行前</td><td>可以用<code>git commit --no-verify</code>绕过</td></tr><tr><td>post-commit</td><td><code>git commit</code>执行后</td><td>不影响<code>git commit</code>的结果</td></tr><tr><td>pre-merge-commit</td><td><code>git merge</code>执行前</td><td>可以用<code>git merge --no-verify</code>绕过。</td></tr><tr><td>prepare-commit-msg</td><td><code>git commit</code>执行后，编辑器打开之前</td><td></td></tr><tr><td>pre-rebase</td><td><code>git rebase</code>执行前</td><td></td></tr><tr><td>post-checkout</td><td><code>git checkout</code>或<code>git switch</code>执行后</td><td>如果不使用<code>--no-checkout</code>参数，则在<code>git clone</code>之后也会执行。</td></tr><tr><td>post-merge</td><td><code>git commit</code>执行后</td><td>在执行<code>git pull</code>时也会被调用</td></tr><tr><td>pre-push</td><td><code>git push</code>执行前</td><td></td></tr><tr><td>pre-receive</td><td><code>git-receive-pack</code>执行前</td><td></td></tr><tr><td>update</td><td></td><td></td></tr><tr><td>post-receive</td><td><code>git-receive-pack</code>执行后</td><td>不影响<code>git-receive-pack</code>的结果</td></tr><tr><td>post-update</td><td>当  <code>git-receive-pack</code>对  <code>git push</code>  作出反应并更新仓库中的引用时</td><td></td></tr><tr><td>push-to-checkout</td><td>当\`\`git-receive-pack<code>对</code>git push<code>做出反应并更新仓库中的引用时，以及当推送试图更新当前被签出的分支且</code>receive.denyCurrentBranch<code>配置被设置为</code>updateInstead\`时</td><td></td></tr><tr><td>pre-auto-gc</td><td><code>git gc --auto</code>执行前</td><td></td></tr><tr><td>post-rewrite</td><td>执行<code>git commit --amend</code>或<code>git rebase</code>时</td><td></td></tr><tr><td>sendemail-validate</td><td><code>git send-email</code>执行前</td><td></td></tr><tr><td>fsmonitor-watchman</td><td>配置<code>core.fsmonitor</code>被设置为<code>.git/hooks/fsmonitor-watchman</code>或<code>.git/hooks/fsmonitor-watchmanv2</code>时</td><td></td></tr><tr><td>p4-pre-submit</td><td><code>git-p4 submit</code>执行前</td><td>可以用<code>git-p4 submit --no-verify</code>绕过</td></tr><tr><td>p4-prepare-changelist</td><td><code>git-p4 submit</code>执行后，编辑器启动前</td><td>可以用<code>git-p4 submit --no-verify</code>绕过</td></tr><tr><td>p4-changelist</td><td><code>git-p4 submit</code>执行并编辑完<code>changelist message</code>后</td><td>可以用<code>git-p4 submit --no-verify</code>绕过</td></tr><tr><td>p4-post-changelist</td><td><code>git-p4 submit</code>执行后</td><td></td></tr><tr><td>post-index-change</td><td>索引被写入到<code>read-cache.c do_write_locked_index</code>后</td><td></td></tr></tbody></table><p><strong>husky 钩子介绍</strong></p><blockquote><p>husky 是一个增强的  <code>git hook</code>  工具。可以在 git hook 的各个阶段执行我们在 package.json 中配置好的 npm script。</p></blockquote><blockquote><p>husky 继承了 Git 下所有的钩子，在触发钩子的时候，husky 可以阻止不合法的 commit,push 等等。</p><p>Husky 的原理是让我们在项目根目录中写一个配置文件，然后在安装 Husky 的时候把配置文件和 Git Hook 关联起来，这样我们就能在团队中使用 Git Hook 了。</p></blockquote><blockquote><p>注意使用 husky 之前，必须先将代码放到 git 仓库中，否则本地没有.git 文件，就没有地方去继承钩子了。</p></blockquote><p>通俗来讲：commitlint 是检查提交信息工具，husky 则是负责什么时候执行检查</p><p>官网：<a href="https://typicode.github.io/husky/#/" target="_blank" rel="noreferrer">Husky - Git hooks (typicode.github.io)</a></p><p>github：<a href="https://github.com/typicode/husky" target="_blank" rel="noreferrer">typicode/husky: Git hooks made easy 🐶 woof! (github.com)</a></p><h5 id="husky有什么用" tabindex="-1"><a href="https://typicode.github.io/husky/#/" target="_blank" rel="noreferrer">husky</a>有什么用？ <a class="header-anchor" href="#husky有什么用" aria-label="Permalink to &quot;[husky](https://typicode.github.io/husky/#/)有什么用？&quot;">​</a></h5><p>当我们<strong>commit message</strong>时，可以进行测试和 lint 操作，保证仓库里的代码是优雅的。 当我们进行 commit 操作时，会触发<strong>pre-commit</strong>，在此阶段，可进行 test 和 lint。其后，会触发<strong>commit-msg</strong>，对 commit 的 message 内容进行验证。</p><h6 id="pre-commit" tabindex="-1">pre-commit <a class="header-anchor" href="#pre-commit" aria-label="Permalink to &quot;pre-commit&quot;">​</a></h6><p>一般的 lint 会全局扫描，但是在此阶段，我们仅需要对暂存区的代码进行 lint 即可。所以使用<a href="https://www.npmjs.com/package/lint-staged" target="_blank" rel="noreferrer">lint-staged</a>插件。</p><h6 id="commit-msg" tabindex="-1">commit-msg <a class="header-anchor" href="#commit-msg" aria-label="Permalink to &quot;commit-msg&quot;">​</a></h6><p>在此阶段，可用 <a href="https://commitlint.js.org/#/" target="_blank" rel="noreferrer"><strong>@commitlint/cli</strong></a> <strong>@commitlint/config-conventional</strong> 对提交信息进行验证。但是记信息格式规范真的太太太太麻烦了，所以可用 <a href="https://www.npmjs.com/package/commitizen" target="_blank" rel="noreferrer"><strong>commitizen</strong></a> <a href="https://cz-git.qbb.sh/zh/guide/" title="https://cz-git.qbb.sh/zh/guide/" target="_blank" rel="noreferrer"><strong>cz-git</strong></a> 生成提交信息。</p><p>从上述说明中，可以得出 husky 配置的基本流程：</p><ol><li>安装 husky；安装 lint-staged @commitlint/cli @commitlint/config-conventional commitizen cz-git</li><li>写 commitlint 和 lint-staged 的配置文件</li><li>修改 package.json 中的 scripts 和 config</li><li>添加 pre-commit 和 commit-msg 钩子</li></ol><p><strong>命令行美化版配置：</strong><a href="https://juejin.cn/post/7138346562677129229" target="_blank" rel="noreferrer">如何在自己的项目中一键添加 husky - 掘金 (juejin.cn)</a></p><p><strong>1.安裝 husky 钩子</strong></p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 注意 Node.js 版本要 &gt;=10</span></span>
<span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> install</span><span style="color:#98C379;"> husky</span><span style="color:#D19A66;"> --save-dev</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>2.在 <code>package.json</code> 中生成 prepare 指令 (需要 npm 版本 &gt; 7.0)</strong></p><p>直接在 package.json 中手动写入</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#98C379;">&quot;script&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#FFFFFF;">   ...</span></span>
<span class="line"><span style="color:#E06C75;">   &quot;prepare&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;husky install&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>或者 终端 生成指令</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> set-script</span><span style="color:#98C379;"> prepare</span><span style="color:#98C379;"> &quot;husky install&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>3.执行<code>prepare</code>指令</strong></p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>npm run prepare</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>执行成功，则会提示</p><p><img src="`+o+`" alt=""></p><p><strong>4.提交规范设置</strong>：<a href="https://blog.csdn.net/Android062005/article/details/125332273" target="_blank" rel="noreferrer">Vue 3 + Vite + Eslint + prettier + husky + lint-staged 搭建基础项目</a></p><p><mark>commit-msg</mark>：消息提交规范设置</p><p>添加 <code>commitlint</code> 的 <code>hook</code> 到 <code>husky</code>中，并指令在 <code>commit-msg</code>的 <code>hooks</code> 下执行 <code>npx --no-install commitlint --edit &quot;$1&quot;</code>指令</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npx</span><span style="color:#98C379;"> husky</span><span style="color:#98C379;"> add</span><span style="color:#98C379;"> .husky/commit-msg</span><span style="color:#98C379;"> &#39;npx --no-install commitlint --edit &quot;$1&quot;&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>此指令会在根目录下的.husky 文件夹 -&gt; 生成了 commit-msg 文件</p><p><mark>pre-commit </mark>：检测提交时的代码规范设置</p><p>通过 husky 监测 pre-commit 钩子，在该钩子下执行 npx eslint --ext .js,.vue src 指令来去进行相关检测</p><p>1.执行 以下命令 添加 commit 时的 hook(<code>npx eslint --ext .js,.vue src</code>会在执行该 hook 时运行)</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npx</span><span style="color:#98C379;"> husky</span><span style="color:#98C379;"> add</span><span style="color:#98C379;"> .husky/pre-commit</span><span style="color:#98C379;"> &#39;npx eslint --ext .js,.vue src&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>此指令会在根目录下的.husky 文件夹 -&gt; 生成了 pre-commit 文件</p><p>大批量的格式错误修改耗时耗力，<mark>推荐配合<code>lint-staged</code>插件</mark>(此插件 vue-cli 里自动安装)，来实现提交时自动美化代码格式</p><p>没有的话需要安装<code>lint-staged</code> 包</p><p>然后在 package.json 中配置</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 或者配置代码自动格式修复：配合pre-commit提交是的代码规范检测</span></span>
<span class="line"><span style="color:#98C379;">&quot;husky&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">  &quot;hooks&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">    &quot;pre-commit&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;lint-staged&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">},</span></span>
<span class="line"><span style="color:#98C379;">&quot;lint-staged&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // prettier</span></span>
<span class="line"><span style="color:#E06C75;">  &quot;*.{js,vue}&quot;</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#98C379;">    &quot;prettier --write&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 自动美化代码格式</span></span>
<span class="line"><span style="color:#98C379;">    &quot;vue-cli-service lint&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// vue项目中语法检查</span></span>
<span class="line"><span style="color:#98C379;">    &quot;git add&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">  ]</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // eslint</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // &quot;src/**/*.{js,vue}&quot;: [</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  //   &quot;eslint --fix&quot;,</span><span style="color:#7F848E;font-style:italic;"> // 自动美化代码格式</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  //   &quot;git add&quot;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // ]</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p><strong>4.1.或者可以通过配置  <code>commitmsg</code>和 <code>precommit</code>  脚本来执行:</strong></p><p><strong>关键配置钩子：</strong></p><p><code>pre-commit</code>：可以用来代码规范化标准格式，并且可以按需指定是否要拒绝本次提交</p><p><code>commit-msg</code>：会在提交前被调用，并且可以按需指定是否要拒绝本次提交</p><p><strong>第一种配置：在项目下的 package.json 的&quot;scripts&quot;中配置  <code>commitmsg</code> 和 <code>precommit</code>  脚本</strong></p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 这是NPM原生支持的脚本执行定义，当执行“npm run 脚本名”时执行</span></span>
<span class="line"><span style="color:#98C379;">&quot;scripts&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // &quot;precommit&quot;: &quot;lint-staged&quot;,</span></span>
<span class="line"><span style="color:#E06C75;">  &quot;commitmsg&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;commitlint -e $GIT_PARAMS&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">},</span></span>
<span class="line"><span style="color:#98C379;">&quot;config&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">  &quot;commitizen&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">    &quot;path&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;cz-customizable&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">},</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p><strong>第二种配置：根目录下新建配置文件：.huskyrc</strong></p><p>4.2.5 版本的 Husky 共支持以下几种格式的配置文件：优先级也是按顺序排列</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">.huskyrc</span></span>
<span class="line"><span style="color:#61AFEF;">.huskyrc.json</span></span>
<span class="line"><span style="color:#61AFEF;">.huskyrc.yaml</span></span>
<span class="line"><span style="color:#61AFEF;">.huskyrc.yml</span></span>
<span class="line"><span style="color:#61AFEF;">.huskyrc.js</span></span>
<span class="line"><span style="color:#61AFEF;">husky.config.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>.huskyrc 文件配置</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 这是husky扩展的脚本执行的定义方式，当对应git hooks触发时执行(引入 husky版本控制)</span></span>
<span class="line"><span style="color:#98C379;">&quot;husky&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">  &quot;hooks&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 提交的代码规范</span></span>
<span class="line"><span style="color:#E06C75;">    &quot;pre-commit&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;lint-staged&quot;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // &quot;pre-commit&quot;: &quot;npm run lint&quot;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 提交消息规范</span></span>
<span class="line"><span style="color:#98C379;">    &quot;commit-msg&quot;</span><span style="color:#FFFFFF;">:</span><span style="color:#98C379;"> &quot;commitlint -E HUSKY_GIT_PARAMS&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">},</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 提交的代码规范设置</span></span>
<span class="line"><span style="color:#98C379;">&quot;lint-staged&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // 这里注意后缀名vue的 ts和js 和react 类型</span></span>
<span class="line"><span style="color:#E06C75;">  &quot;*.{js,vue}&quot;</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#98C379;">    &quot;eslint --fix&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">    &quot;git add&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">  ]</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p><strong>5.最后我们可以正常的 git 操作，可以试试有什么限制不给提交</strong></p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">//</span><span style="color:#D19A66;"> 1.1</span><span style="color:#98C379;"> 添加整个项目，（后面是个.点号）</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> add</span><span style="color:#98C379;"> .</span></span>
<span class="line"><span style="color:#61AFEF;">//</span><span style="color:#D19A66;"> 1.2</span><span style="color:#98C379;"> 添加某些个文件用这个命令</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> add</span><span style="color:#ABB2BF;"> [指定目录/文件]</span></span>
<span class="line"><span style="color:#61AFEF;">//</span><span style="color:#98C379;"> 2.</span><span style="color:#98C379;"> 提交到本地仓库</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> commit</span><span style="color:#D19A66;"> -m</span><span style="color:#98C379;"> &quot;feat：更新了什么东东&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>下面演示下不符合规范提交示例：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">D:\\accesscontrol\\access_control</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#98C379;">git</span><span style="color:#98C379;"> commit</span><span style="color:#D19A66;"> -m</span><span style="color:#98C379;"> &quot;featdf: aas&quot;</span></span>
<span class="line"><span style="color:#61AFEF;">husky</span><span style="color:#ABB2BF;"> &gt; </span><span style="color:#98C379;">npm</span><span style="color:#98C379;"> run</span><span style="color:#D19A66;"> -s</span><span style="color:#98C379;"> commitmsg</span><span style="color:#ABB2BF;"> (node </span><span style="color:#98C379;">v8.2.1</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">⧗</span><span style="color:#98C379;"> input:</span></span>
<span class="line"><span style="color:#61AFEF;">featdf:</span><span style="color:#98C379;"> aas</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">✖</span><span style="color:#98C379;"> type</span><span style="color:#98C379;"> must</span><span style="color:#98C379;"> be</span><span style="color:#98C379;"> one</span><span style="color:#98C379;"> of</span><span style="color:#ABB2BF;"> [feat, </span><span style="color:#98C379;">fix,</span><span style="color:#98C379;"> docs,</span><span style="color:#98C379;"> style,</span><span style="color:#98C379;"> refactor,</span><span style="color:#98C379;"> perf,</span><span style="color:#98C379;"> test,</span><span style="color:#98C379;"> build,</span><span style="color:#98C379;"> ci,</span><span style="color:#98C379;"> chore,</span><span style="color:#98C379;"> revert]</span><span style="color:#ABB2BF;"> [type-enum]</span></span>
<span class="line"><span style="color:#61AFEF;">✖</span><span style="color:#98C379;"> found</span><span style="color:#D19A66;"> 1</span><span style="color:#98C379;"> problems,</span><span style="color:#D19A66;"> 0</span><span style="color:#98C379;"> warnings</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">husky</span><span style="color:#ABB2BF;"> &gt; </span><span style="color:#98C379;">commit-msg</span><span style="color:#98C379;"> hook</span><span style="color:#98C379;"> failed</span><span style="color:#ABB2BF;"> (add </span><span style="color:#D19A66;">--no-verify</span><span style="color:#98C379;"> to</span><span style="color:#98C379;"> bypass</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">F:\\accesscontrol\\access_control</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>上面 message 不符合提交规范，所以会提示错误。</p><p>我们修改下 type</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>F:\\accesscontrol\\access_control&gt;git commit -m &quot;feat: 新功能&quot;</span></span>
<span class="line"><span>husky &gt; npm run -s commitmsg (node v8.2.1)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>⧗ input: feat: 新功能</span></span>
<span class="line"><span>✔ found 0 problems, 0 warnings</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[develop 7a20657] feat: 新功能</span></span>
<span class="line"><span> 1 file changed, 1 insertion(+)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>F:\\accesscontrol\\access_control&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>最后 commit 成功。</p><p>至此，git commit 的大概的执行过程</p><p><img src="`+t+'" alt=""></p><p>或者简化版</p><p><img src="'+r+`" alt=""></p><p><strong>5、最后总结过程中遇到一些问题</strong> git commit 后可能报错相关‘regenerator-runtime’模块找不到；解决方式：npm install regenerator-runtime –save。 git commit -m “messge”,用双引号</p><hr><h5 id="_3-2-3-standard-version-语义化开发的版本" tabindex="-1">3-2-3. standard-version：语义化开发的版本 <a class="header-anchor" href="#_3-2-3-standard-version-语义化开发的版本" aria-label="Permalink to &quot;3-2-3. standard-version：语义化开发的版本&quot;">​</a></h5><p>想自动生成 CHANGELOG，语义化我们的版本（Semantic Versioning）。 就需要借助 <a href="https://github.com/conventional-changelog/standard-version" target="_blank" rel="noreferrer">standard-version</a></p><p><a href="https://github.com/conventional-changelog/standard-version" target="_blank" rel="noreferrer">standard-version</a>的作用就是生成 changelog 更新 package.json 和 package.lock.json 中的 version 字段。</p><p>关于版本：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">//</span><span style="color:#98C379;"> 版本</span></span>
<span class="line"><span style="color:#61AFEF;">major：主版本号，不兼容的API修改</span></span>
<span class="line"><span style="color:#61AFEF;">minor：次版本号，向下兼容，功能性增加</span></span>
<span class="line"><span style="color:#61AFEF;">patch：修订号，向下兼容，bug</span><span style="color:#98C379;"> fixed</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">//</span><span style="color:#98C379;"> 版本发布进度</span></span>
<span class="line"><span style="color:#61AFEF;">alpha（内测）</span></span>
<span class="line"><span style="color:#61AFEF;">beta（公测）</span></span>
<span class="line"><span style="color:#61AFEF;">rc</span><span style="color:#98C379;"> （正式版本的候选版本）</span><span style="color:#98C379;">  Release</span><span style="color:#98C379;"> Candiate</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">//</span><span style="color:#98C379;"> npm</span><span style="color:#98C379;"> 发布指令</span></span>
<span class="line"><span style="color:#61AFEF;">升级补丁版本号：npm</span><span style="color:#98C379;"> version</span><span style="color:#98C379;"> patch。</span></span>
<span class="line"><span style="color:#61AFEF;">升级小版本号：npm</span><span style="color:#98C379;"> version</span><span style="color:#98C379;"> minor。</span></span>
<span class="line"><span style="color:#61AFEF;">升级大版本号：npm</span><span style="color:#98C379;"> version</span><span style="color:#98C379;"> major。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>关于 release:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">//</span><span style="color:#98C379;"> 发布首个版本</span></span>
<span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> run</span><span style="color:#98C379;"> release</span><span style="color:#D19A66;"> --</span><span style="color:#D19A66;"> --first-release</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">//</span><span style="color:#98C379;"> 发布预发布版本</span></span>
<span class="line"><span style="color:#61AFEF;">//</span><span style="color:#98C379;"> 例如：v1.0.0</span><span style="color:#ABB2BF;"> -&gt; </span><span style="color:#98C379;">v1.0.0-0</span></span>
<span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> run</span><span style="color:#98C379;"> release</span><span style="color:#D19A66;"> --</span><span style="color:#D19A66;"> --prerelease</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">//</span><span style="color:#98C379;"> 发布与首个</span><span style="color:#98C379;"> alpha</span><span style="color:#98C379;"> 版本</span></span>
<span class="line"><span style="color:#61AFEF;">//</span><span style="color:#98C379;"> 例如：v1.0.0</span><span style="color:#ABB2BF;"> -&gt; </span><span style="color:#98C379;">1.0.1-alpha.0</span></span>
<span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> run</span><span style="color:#98C379;"> release</span><span style="color:#D19A66;"> --</span><span style="color:#D19A66;"> --prerelease</span><span style="color:#98C379;"> alpha</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">//</span><span style="color:#98C379;"> 发布</span><span style="color:#98C379;"> major、minor、patch</span><span style="color:#98C379;"> 版本</span></span>
<span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> run</span><span style="color:#98C379;"> release</span><span style="color:#D19A66;"> --</span><span style="color:#D19A66;"> --release-as</span><span style="color:#98C379;"> minor</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p><strong>安装使用</strong></p><p>安装命令如下：任选其一</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 全局安装</span></span>
<span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> i</span><span style="color:#D19A66;"> -g</span><span style="color:#98C379;"> standard-version</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 项目中安装</span></span>
<span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> i</span><span style="color:#D19A66;"> -S</span><span style="color:#98C379;"> standard-version</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>配置 package.json 的<code>script</code></p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;script&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// .....</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;release&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;standard-version&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>直接执行，即可生成 CHANGELOG 文件</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> run</span><span style="color:#98C379;"> release</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>如果你的所有 Commit 都符合 Angular 格式，那么发布新版本时， Change log 就可以用脚本自动生成</p><p>备注：</p><blockquote><p>生成 CHANGELOG 的工具很多，<a href="https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-cli" target="_blank" rel="noreferrer">conventional-changelog-cli</a>也可以用来生成 CHANGELOG，安装使用方法和<code>standard-version</code>类似</p></blockquote><hr><h3 id="_4、扩展" tabindex="-1">4、扩展 <a class="header-anchor" href="#_4、扩展" aria-label="Permalink to &quot;4、扩展&quot;">​</a></h3><h4 id="_4-1-gitmoji-cli-git-commit-的表情工具" tabindex="-1"><strong>4.1 - gitmoji-cli</strong>：git commit 的表情工具 <a class="header-anchor" href="#_4-1-gitmoji-cli-git-commit-的表情工具" aria-label="Permalink to &quot;**4.1 - gitmoji-cli**：git commit 的表情工具&quot;">​</a></h4><p>平时与朋友聊天时，我们一定会用到表情包，比如。表情包的出现让我们与朋友之间的沟通变得更加有趣。如果能在 git 提交 commit 时用到表情包，岂不是使每次的 commit 能够更加直观，维护起来也更加方便。</p><p><code>gitmoji</code>是实现 带表情 commit 提交 这种功能的插件</p><p>官网：<a href="https://gitmoji.dev/" target="_blank" rel="noreferrer">https://gitmoji.dev/</a></p><p>中文网：<a href="https://gitmoji.js.org/" target="_blank" rel="noreferrer">https://gitmoji.js.org/</a></p><p>GitHub：<a href="https://github.com/carloscuesta/gitmoji" target="_blank" rel="noreferrer">https://github.com/carloscuesta/gitmoji</a></p><p>图示：</p><p><img src="https://pic3.zhimg.com/80/v2-063a7c9afe720b136469c4a619d84c0e_720w.jpg" alt=""></p><p><code>gitmoji</code>的使用很简单:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 安装</span></span>
<span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> i</span><span style="color:#D19A66;"> -g</span><span style="color:#98C379;"> gitmoji-cli</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 使用</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> commit</span><span style="color:#D19A66;"> -m</span><span style="color:#98C379;"> &#39;:bug: 问题fix&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>然后可以根据官网示例复制提交：</p><p><a href="https://gitmoji.dev/" target="_blank" rel="noreferrer">https://gitmoji.dev/</a></p><p><strong>最后附上一个之前项目针对 git commit 配置的<code>package.json</code>，作为参考:</strong></p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;name&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;ts-axios&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;version&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;0.0.0&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;description&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;keywords&quot;</span><span style="color:#ABB2BF;">: [],</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;main&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;dist/ts-axios.umd.js&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;module&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;dist/ts-axios.es5.js&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;typings&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;dist/types/ts-axios.d.ts&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;files&quot;</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;dist&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;author&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;fengshuan &lt;1263215592@qq.com&gt;&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;repository&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;type&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;git&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;url&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;license&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;MIT&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;engines&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;node&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;&gt;=6.0.0&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;scripts&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;dev&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;node examples/server.js&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;lint&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;tslint  --project tsconfig.json -t codeFrame &#39;src/**/*.ts&#39; &#39;test/**/*.ts&#39;&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;prebuild&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;rimraf dist&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;build&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;tsc --module commonjs &amp;&amp; rollup -c rollup.config.ts &amp;&amp; typedoc --out docs --target es6 --theme minimal --mode file src&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;start&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;rollup -c rollup.config.ts -w&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;test&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;jest --coverage&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;test:watch&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;jest --coverage --watch&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;test:prod&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;npm run lint &amp;&amp; npm run test -- --no-cache&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;deploy-docs&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;ts-node tools/gh-pages-publish&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;report-coverage&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;cat ./coverage/lcov.info | coveralls&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;commit&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;git-cz&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;semantic-release&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;semantic-release&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;semantic-release-prepare&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;ts-node tools/semantic-release-prepare&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;precommit&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;lint-staged&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;travis-deploy-once&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;travis-deploy-once&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;husky&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;hooks&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">			&quot;commit-msg&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;commitlint -E HUSKY_GIT_PARAMS&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">		}</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;lint-staged&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;{src,test}/**/*.ts&quot;</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;prettier --write&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;git add&quot;</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;config&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;commitizen&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">			&quot;path&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;node_modules/cz-conventional-changelog&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">		}</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;jest&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;transform&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">			&quot;.(ts|tsx)&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;ts-jest&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">		},</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;testEnvironment&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;node&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;testRegex&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;(/__tests__/.*|</span><span style="color:#56B6C2;">\\\\</span><span style="color:#98C379;">.(test|spec))</span><span style="color:#56B6C2;">\\\\</span><span style="color:#98C379;">.(ts|tsx|js)$&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;moduleFileExtensions&quot;</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;ts&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;tsx&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;js&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;coveragePathIgnorePatterns&quot;</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;/node_modules/&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;/test/&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;coverageThreshold&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">			&quot;global&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">				&quot;branches&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">90</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">				&quot;functions&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">95</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">				&quot;lines&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">95</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">				&quot;statements&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">95</span></span>
<span class="line"><span style="color:#ABB2BF;">			}</span></span>
<span class="line"><span style="color:#ABB2BF;">		},</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;collectCoverageFrom&quot;</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;src/*.{js,ts}&quot;</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;prettier&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;semi&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;singleQuote&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;commitlint&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;extends&quot;</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;@commitlint/config-conventional&quot;</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;devDependencies&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;@commitlint/cli&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;^7.1.2&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;@commitlint/config-conventional&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;^7.1.2&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;@types/jest&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;^23.3.2&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;@types/node&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;^10.11.0&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;body-parser&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;^1.19.0&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;colors&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;^1.3.2&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;commitizen&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;^3.0.0&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;coveralls&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;^3.0.2&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;cross-env&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;^5.2.0&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;cz-conventional-changelog&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;^2.1.0&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;express&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;^4.17.1&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;husky&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;^1.0.1&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;jest&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;^23.6.0&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;jest-config&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;^23.6.0&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;lint-staged&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;^8.0.0&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;lodash.camelcase&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;^4.3.0&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;prettier&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;^1.14.3&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;prompt&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;^1.0.0&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;replace-in-file&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;^3.4.2&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;rimraf&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;^2.6.2&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;rollup&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;^0.67.0&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;rollup-plugin-commonjs&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;^9.1.8&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;rollup-plugin-json&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;^3.1.0&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;rollup-plugin-node-resolve&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;^3.4.0&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;rollup-plugin-sourcemaps&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;^0.4.2&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;rollup-plugin-typescript2&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;^0.18.0&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;semantic-release&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;^15.9.16&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;shelljs&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;^0.8.3&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;travis-deploy-once&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;^5.0.9&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;ts-jest&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;^23.10.2&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;ts-loader&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;^6.1.1&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;ts-node&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;^7.0.1&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;tslint&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;^5.11.0&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;tslint-config-prettier&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;^1.15.0&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;tslint-config-standard&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;^8.0.1&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;tslint-loader&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;^3.5.4&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;typedoc&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;^0.12.0&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;typescript&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;^3.0.3&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;webpack&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;^4.40.2&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;webpack-dev-middleware&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;^3.7.1&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;webpack-hot-middleware&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;^2.25.0&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br></div></div><h4 id="_4-2-编辑器相关插件" tabindex="-1">4.2 - 编辑器相关插件 <a class="header-anchor" href="#_4-2-编辑器相关插件" aria-label="Permalink to &quot;4.2 - 编辑器相关插件&quot;">​</a></h4><h5 id="_1-vscode-编辑器插件-可在-vscode-插件市场搜索安装" tabindex="-1">1.VSCode 编辑器插件：可在 VSCode 插件市场搜索安装 <a class="header-anchor" href="#_1-vscode-编辑器插件-可在-vscode-插件市场搜索安装" aria-label="Permalink to &quot;1.VSCode 编辑器插件：可在 VSCode 插件市场搜索安装&quot;">​</a></h5><p><mark><code>gitlens</code>：git 功能增强插件</mark></p><p>vscode 有自带 git 的功能，但是 gitlens 插件更多功能且比较强大</p><p>安装好 gitlens 后设置好 git 路径，文件–首选项–设置，点右上角有个小箭头进入设置编辑模式，在里面添加路径，路径在 git 的安装目录里的 bin 目录下的 git.exe 文件，这里切记电脑路径中反斜杠\\ 要变成正双斜杠。</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#98C379;">&quot;git.path&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;D://Program Files//Git//bin//git.exe&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>功能：</p><p>在源代码管理模式下，左侧下方的几个列表就是 GitLens —— Git superchanged 插件的展示操作区</p><h6 id="_1-commits-提交记录" tabindex="-1">1. COMMITS 提交记录 <a class="header-anchor" href="#_1-commits-提交记录" aria-label="Permalink to &quot;1. COMMITS 提交记录&quot;">​</a></h6><p>展示整个提交记录、提交前后文件对比、打开提交文件、推送、拉取、切换分支等</p><ol><li>打开提交文件：在 COMMITS 里面，单击 openfile 图标打开提交的文件 或者 在路径上右键 Open File</li><li>推送、拉取、切换分支：在 COMMITS 展开后，点击最上方图标可进行推送、拉取、切换分支等</li><li>提交记录对照：在 COMMITS 里面选中提交记录，右键 Open Changes<br> Open Changes with Working File --- 选中提交记录和最新提交记录做对照<br> Open Previous Changes with Working File --- 选中提交记录的上一条提交记录和最新提交记录做对照<br> Open Changes with Revison --- 选中提交记录和其他再次选中的提交记录做对照</li></ol><h6 id="_2-file-history-文件历史记录" tabindex="-1">2. FILE HISTORY 文件历史记录 <a class="header-anchor" href="#_2-file-history-文件历史记录" aria-label="Permalink to &quot;2. FILE HISTORY 文件历史记录&quot;">​</a></h6><p>展示目标文件的历史记录、打开历史记录文件、当前历史记录文件和不同时期的历史记录对照</p><ol><li>选中目标文件：展开左侧文件列表树，选中目标文件，右键点击 Open File History，FILE HISTORY 会自动切换成当前文件的历史记录</li><li>打开历史文件：在 FILE HISTORY 里面选中历史记录，右键 Open File</li><li>历史记录对照：在 FILE HISTORY 里面选中历史记录，右键 Open Changes<br> Open Changes with Working File --- 选中历史记录和最新历史记录做对照<br> Open Previous Changes with Working File --- 选中历史记录的上一条历史记录和最新历史记录做对照<br> Open Changes with Revison --- 选中历史记录和其他再次选中的历史记录做对照</li></ol><h6 id="_3-branches-现有分支" tabindex="-1">3. BRANCHES 现有分支 <a class="header-anchor" href="#_3-branches-现有分支" aria-label="Permalink to &quot;3. BRANCHES 现有分支&quot;">​</a></h6><p>展示拉取过的分支、查看哪些分支线上代码更新、切换分支、拉取（pull）</p><ol><li>查看哪些分支线上代码更新：在 BRANCHES 里，有代码更新的分支呈现橙红色</li><li>切换分支、拉取：在 BRANCHES 里右侧图标</li></ol><h6 id="_4-remotes-远程所有分支" tabindex="-1">4. REMOTES 远程所有分支 <a class="header-anchor" href="#_4-remotes-远程所有分支" aria-label="Permalink to &quot;4. REMOTES 远程所有分支&quot;">​</a></h6><p>展示所有远程分支，可查看远程分支上的提交内容</p><ul><li>鼠标光标点击在一行代码内，会显示提交人和多久前提交 <img src="`+c+'" alt=""></li></ul><hr><p><mark><code>Git History</code>: git 历史插件</mark></p><p>和 GitLens —— Git superchanged 相比，更有针对性<br> 调起当前分支的 Git history：在源代码管理模式下点击上方的逆时针表的图标<br> 调起当前分支下当前分级的 Git history：直接右键 GIT:View File History</p><ol><li>可视化直观展示历史记录</li><li>可获取提交 id</li><li>软\\硬回滚</li><li>在历史记录基础上新建分支、</li><li>将当前历史记录内容和并到当前分支上</li><li>可选择分支（默认显示当前分支的历史记录）</li><li>可通过作者、标题来过滤历史记录</li><li>将当前分支切换到当前历史记录分支（点击绿色），删除远程分支（点击红色）</li><li>获取文件当前行修改的历史记录：打开文件代码，将光标锁定在当前行，右键，GIT:View Line History</li></ol><p><strong>查看单个文件的修改历史：</strong></p><p>打开资源管理器，右击要查看的文件，选择 GIt:View File History，即可查看修改历史。</p><p><img src="https://img2020.cnblogs.com/blog/1833860/202004/1833860-20200427170658361-242440640.png" alt=""></p><p><img src="https://img2020.cnblogs.com/blog/1833860/202004/1833860-20200427170722026-303024077.png" alt=""></p><p><img src="https://img2020.cnblogs.com/blog/1833860/202004/1833860-20200427170748365-545567489.png" alt=""></p><p>通过单击提交记录，可以进行更加详细地查看：</p><ul><li><p>View file contents：仅浏览文件内容</p></li><li><p>Compare against workspace file：与当前工作空间下的文件进行对比</p></li><li><p>Compare against previous version：与上一个版本的文件进行对比</p></li><li><p>View file history：浏览文件的修改历史</p></li></ul><p><img src="https://img2020.cnblogs.com/blog/1833860/202004/1833860-20200427170856203-943328151.png" alt=""></p><p><strong>查看 git log 的历史：</strong></p><p>打开 git 源代码管理，点击存储库的 git 图标，即可查看该 git 存储库的 git log 历史。</p><p><img src="https://img2020.cnblogs.com/blog/1833860/202004/1833860-20200427170925256-1380437140.png" alt=""></p><p><img src="https://img2020.cnblogs.com/blog/1833860/202004/1833860-20200427170945971-1439225200.png" alt=""></p><hr><p><mark><code>Git Graph</code>:git 可视化插件</mark></p><p>调起 Git Graph：在源代码管理模式下点击上方的树杈状的图标 或者 点击左下角的 Git Graph</p><ol><li>可直观的看到提交记录的注释、时间、作者、commitid 等</li><li>可选择不同分支，也可多选几个分支</li><li>获取 commit id ：右键 Copy Commit Hash</li><li>显示当前文件的提交差异对照</li></ol><hr><h5 id="_2-webstorm-插件-git-commit-message-helper" tabindex="-1">2.WebStorm 插件：<a href="https://plugins.jetbrains.com/plugin/13477-git-commit-message-helper/" target="_blank" rel="noreferrer">Git Commit Message Helper</a> <a class="header-anchor" href="#_2-webstorm-插件-git-commit-message-helper" aria-label="Permalink to &quot;2.WebStorm 插件：[Git Commit Message Helper](https://plugins.jetbrains.com/plugin/13477-git-commit-message-helper/)&quot;">​</a></h5><p><strong>安装方式</strong></p><p>idea -&gt; settings -&gt; plugins -&gt; 搜索<strong>Git Commit Message Helper</strong></p><p><img src="https://upload-images.jianshu.io/upload_images/23442520-3cc261d0fa5ac552.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt=""></p><p>git commit message helper</p><p><strong>使用方式</strong></p><p>提交时打开 idea commit(ctrl+k)</p><p><img src="https://upload-images.jianshu.io/upload_images/23442520-e6ed035720ac09cd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt=""></p><p>点击上图红框标识部位,会出现如下弹框,之后便可以在该弹框中填写具体的 commit 信息。</p><p><img src="https://upload-images.jianshu.io/upload_images/23442520-e6ee17f36920f67f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1073/format/webp" alt=""></p><p><img src="https://upload-images.jianshu.io/upload_images/23442520-6410e21cb97c7dc1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1073/format/webp" alt=""></p>',224)]))}const C=n(i,[["render",u]]);export{F as __pageData,C as default};
