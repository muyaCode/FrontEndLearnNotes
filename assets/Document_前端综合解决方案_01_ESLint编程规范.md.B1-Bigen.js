import{_ as n,c as a,o as e,ah as l}from"./chunks/framework.DqD713j2.js";const b=JSON.parse('{"title":"01_ESLint 编程规范","description":"","frontmatter":{},"headers":[],"relativePath":"Document/前端综合解决方案/01_ESLint编程规范.md","filePath":"Document/前端综合解决方案/01_ESLint编程规范.md","lastUpdated":1750954157000}'),t={name:"Document/前端综合解决方案/01_ESLint编程规范.md"};function p(r,s,o,i,c,u){return e(),a("div",null,s[0]||(s[0]=[l(`<h1 id="_01-eslint-编程规范" tabindex="-1">01_ESLint 编程规范 <a class="header-anchor" href="#_01-eslint-编程规范" aria-label="Permalink to &quot;01_ESLint 编程规范&quot;">​</a></h1><p>GitHub：<a href="https://github.com/eslint/eslint" target="_blank" rel="noreferrer">https://github.com/eslint/eslint</a></p><p>官网：<a href="https://eslint.org/" target="_blank" rel="noreferrer">https://eslint.org/</a></p><p>中文网：1：<a href="https://cn.eslint.org/" target="_blank" rel="noreferrer">https://cn.eslint.org/</a>、2：<a href="https://eslint.bootcss.com/" target="_blank" rel="noreferrer">https://eslint.bootcss.com/</a></p><p>官网配置指南：<a href="https://eslint.org/docs/latest/user-guide/" target="_blank" rel="noreferrer">User Guide - ESLint - Pluggable JavaScript Linter</a></p><p>配置选项：<a href="https://cn.eslint.org/docs/rules/" target="_blank" rel="noreferrer">List of available rules - ESLint 中文</a></p><h2 id="什么是-eslint" tabindex="-1">什么是 ESLint？ <a class="header-anchor" href="#什么是-eslint" aria-label="Permalink to &quot;什么是 ESLint？&quot;">​</a></h2><p>ESLint 是一个用来识别 ECMAScript/JavaScript 并且按照规则给出报告的代码检测工具，他就是一个插件化的 javascript 代码检测<strong>工具</strong>。</p><p>代码检查是一种静态的分析，常用于寻找有问题的模式或者代码，并且不依赖于具体的编码格式。对大多数编程语言来说都会有代码检查，一般编译程序会内置检查工具。</p><p>JavaScript 是一个动态的弱型语言，在开发过程中比较容易出错。因为没有编译，为了寻找 JavaScript 代码错误同好穿那个需要在执行过程中不断的调试。</p><p><strong>ESLint 和 JSLint、JSHint 的区别：</strong></p><p>1.ESLint 使用 Espree 解析 JavaScript。</p><p>2.ESLint 使用 AST 去分析代码中的模式。</p><p>3.ESLint 是完全插件化的。每一个规则都是一个插件并且你可以在运行时添加更多的规则。</p><h2 id="eslint-的特点" tabindex="-1">ESLint 的特点： <a class="header-anchor" href="#eslint-的特点" aria-label="Permalink to &quot;ESLint 的特点：&quot;">​</a></h2><p>1.内置规则和自定义规则共用一套规则 API。</p><p>2.内置的格式化方法和自定义的格式化方法共用一套格式化 API。</p><p>3.额外的规则和格式化方法能够在运行时指定。</p><p>4.用户可以将结果设置成警告或者错误。</p><p>5.每条规则都是各自独立的，可以根据项目情况选择开启或关闭。</p><h2 id="eslint-的-用户指南-安装和配置" tabindex="-1">ESLint 的(用户指南)安装和配置： <a class="header-anchor" href="#eslint-的-用户指南-安装和配置" aria-label="Permalink to &quot;ESLint 的(用户指南)安装和配置：&quot;">​</a></h2><p><a href="https://cn.eslint.org/docs/user-guide/getting-started" target="_blank" rel="noreferrer">Getting Started with ESLint - ESLint 中文</a></p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> install</span><span style="color:#98C379;"> eslint</span><span style="color:#7F848E;font-style:italic;">         #安装到命令行目前所在目录下</span></span>
<span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> install</span><span style="color:#D19A66;"> -g</span><span style="color:#98C379;"> eslint</span><span style="color:#7F848E;font-style:italic;">      #-g（global）全局安装</span></span>
<span class="line"><span style="color:#61AFEF;">                           可以通过npm</span><span style="color:#98C379;"> config</span><span style="color:#98C379;"> set</span><span style="color:#98C379;"> prefix设置下载路径</span></span>
<span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> install</span><span style="color:#D19A66;"> -save</span><span style="color:#98C379;"> eslint</span><span style="color:#7F848E;font-style:italic;">   #-save表示将包安装到当前项目的node_modules文件下</span></span>
<span class="line"><span style="color:#61AFEF;">                           并在pakeage文件的dependencies节点写入依赖</span></span>
<span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> install</span><span style="color:#D19A66;"> -save-dev</span><span style="color:#7F848E;font-style:italic;">      #-save-dev将包安装在当前项目的node_modules文件夹下</span></span>
<span class="line"><span style="color:#61AFEF;">                           并在写入pakeage文件的dependencies字段中</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="eslint-生成配置文件" tabindex="-1">ESLint 生成配置文件： <a class="header-anchor" href="#eslint-生成配置文件" aria-label="Permalink to &quot;ESLint 生成配置文件：&quot;">​</a></h2><p>如果全局安装了 eslint，我们可以使用以下命令生成配置文件：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">$</span><span style="color:#98C379;"> eslint</span><span style="color:#D19A66;"> --init</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>如果是已在项目中安装了 eslint，则需要在终端中输入下列命令，生存配置文件：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">$</span><span style="color:#98C379;"> ./node_modules/.bin/eslint</span><span style="color:#D19A66;"> --init</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>后面按命令提示生成</p><h3 id="配置文件优先级" tabindex="-1">配置文件优先级： <a class="header-anchor" href="#配置文件优先级" aria-label="Permalink to &quot;配置文件优先级：&quot;">​</a></h3><p><a href="https://cn.eslint.org/docs/user-guide/configuring#configuration-file-formats" target="_blank" rel="noreferrer"><code>.eslintrc.*</code></a></p><p><code>ESLint</code> 支持几种格式的配置文件。</p><p>现在存在一个问题，如果同个目录下有多个 <code>ESLint</code> 文件，它们会如何执行，优先级如何？</p><p>ESLint [源码](<a href="https://github.com/eslint/eslint/blob/v6.0.1/lib/cli-engine/config-array-factory.js#L52" target="_blank" rel="noreferrer">源码 (github.com)</a>)中给出了我们答案，其优先级配置如下：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> configFilenames</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> [</span></span>
<span class="line"><span style="color:#98C379;">	&quot;.eslintrc.js&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">	&quot;.eslintrc.yaml&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">	&quot;.eslintrc.yml&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">	&quot;.eslintrc.json&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">	&quot;.eslintrc&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">	&quot;package.json&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">];</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="配置文件的配置字段-配置文件-eslint-可插入-javascript-linter" tabindex="-1">配置文件的配置字段：<a href="https://eslint.org/docs/latest/user-guide/configuring/configuration-files" target="_blank" rel="noreferrer">配置文件 - ESLint - 可插入 JavaScript Linter</a> <a class="header-anchor" href="#配置文件的配置字段-配置文件-eslint-可插入-javascript-linter" aria-label="Permalink to &quot;配置文件的配置字段：[配置文件 - ESLint - 可插入 JavaScript Linter](https://eslint.org/docs/latest/user-guide/configuring/configuration-files)&quot;">​</a></h3><p>最简单的配置方法是设置一个 .<code>eslintrc</code> JSON 文件，其中可以描述所有的 linting 规则。</p><p><code>.eslintrc</code> 的一个示例：</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;env&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;node&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;browser&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;rules&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;no-console&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;space-infix-ops&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;error&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;quotes&quot;</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#98C379;">			&quot;error&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">			&quot;single&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">			{</span></span>
<span class="line"><span style="color:#E06C75;">				&quot;avoidEscape&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">				&quot;allowTemplateLiterals&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span></span>
<span class="line"><span style="color:#ABB2BF;">			}</span></span>
<span class="line"><span style="color:#ABB2BF;">		],</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;space-before-blocks&quot;</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;error&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;always&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;semi&quot;</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;error&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;never&quot;</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;plugins&quot;</span><span style="color:#ABB2BF;">: []</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h4 id="主要字段" tabindex="-1"><strong>主要字段：</strong> <a class="header-anchor" href="#主要字段" aria-label="Permalink to &quot;**主要字段：**&quot;">​</a></h4><ul><li><p><code>root</code> — 为 <code>true</code> 时，停止向上查找父级目录中的配置文件：表示当前目录为根目录，ESLint 规则被限制到该目录下</p></li><li><p><code>env</code> — 指定脚本的运行环境：启用 ESLint 规则将被限制到该目录下：<a href="https://eslint.org/docs/latest/user-guide/configuring/language-options#specifying-environments" target="_blank" rel="noreferrer">语言选项 - ESLint - 可插拔的 JavaScript Linter</a> | <a href="https://eslint.org/docs/latest/user-guide/configuring/language-options#using-configuration-files" target="_blank" rel="noreferrer">语言选项 - ESLint - 可插拔的 JavaScript Linter</a></p></li><li><p>extends — 配置文件扩展，就可以继承另一个配置文件的所有特征（包括规则、插件和语言选项）并修改所有选项(基础配置需要继承的配置)：<a href="https://eslint.org/docs/latest/user-guide/configuring/configuration-files#extending-configuration-files" target="_blank" rel="noreferrer">扩展配置文件</a></p></li><li><p><code>rules</code> — 自定义规则：需要修改的启用规则及其各自的错误级别</p><p><a href="https://cn.eslint.org/docs/rules/" target="_blank" rel="noreferrer">https://cn.eslint.org/docs/rules/</a> | <a href="https://eslint.org/docs/latest/user-guide/configuring/rules" target="_blank" rel="noreferrer">规则 - ESLint - 可插拔的 JavaScript Linter</a> | <a href="https://eslint.org/docs/latest/rules/" target="_blank" rel="noreferrer">规则 - ESLint - 可插拔的 JavaScript Linter</a></p><ul><li><p><strong>rules 基本配置规则：</strong></p><p>在决定要包含哪些规则之后，您必须设置这些错误级别：</p><ul><li><p><code>0</code> 或 <code>&quot;off&quot;</code> — 关闭规则</p></li><li><p><code>1</code> 或 <code>&quot;warn&quot;</code>— 开启规则作为警告（不会导致程序停止运行或退出）</p></li><li><p><code>2</code> 或 <code>&quot;error&quot;</code> — 开启规则作为错误（触发后，程序停止运行或退出）</p></li></ul><p>错误和警告之间的区别在于 eslint 完成时将具有的退出代码。如果发现任何错误，eslint 将以 <code>1</code> 退出代码退出，否则将以 <code>0</code> 退出。</p><p>如果在生成步骤中进行 lint，这允许控制哪些规则应<strong>破坏生成</strong>，哪些规则应视为警告。</p></li></ul></li><li><p><code>plugins</code> — 插件配置：<a href="https://eslint.org/docs/latest/user-guide/configuring/language-options#using-a-plugin" target="_blank" rel="noreferrer">语言选项 - ESLint - 可插拔的 JavaScript Linter</a> | [插件相关配置：包括解析器 parse、处理器 processor](<a href="https://eslint.org/docs/latest/user-guide/configuring/plugins" target="_blank" rel="noreferrer">Plugins - ESLint - Pluggable JavaScript Linter</a>)</p><ul><li><p><strong>将 ESLint 与您喜欢的编码风格结合使用</strong></p><p>ESLint 个人并不提倡任何编码风格。您可以设置 <code>.eslintrc</code> 文件以使用您喜欢的<a href="https://eslint.org/docs/rules/#stylistic-issues" target="_blank" rel="noreferrer">样式规则</a>强制编码样式。</p><p>您还可以将 ESLint 与样式指南（如 <a href="https://github.com/airbnb/javascript" target="_blank" rel="noreferrer">Airbnb</a>、<a href="https://standardjs.com/" target="_blank" rel="noreferrer">JavaScript 标准风格</a>）一起使用。</p><p>你还必须使用额外的插件，例如：</p><ul><li>Airbnb 的插件 <a href="https://www.npmjs.com/package/eslint-config-airbnb-base" target="_blank" rel="noreferrer"><code>eslint-config-airbnb-base</code></a>。</li><li>JavaScript 标准风格 <a href="https://github.com/feross/eslint-config-standard" target="_blank" rel="noreferrer">eslint-config-standard</a></li><li>一些流行库的插件：<a href="https://www.npmjs.com/package/eslint-plugin-vue" target="_blank" rel="noreferrer">Vue</a> | <a href="https://www.npmjs.com/package/eslint-plugin-react" target="_blank" rel="noreferrer">React</a></li></ul></li></ul></li><li><p><code>process</code> — 处理器：希望利用 Eslint 来约束我们的 框架 代码(比如 vue/react 框架)，配合 plugins 使用：<a href="https://eslint.org/docs/latest/user-guide/configuring/plugins#specifying-processor" target="_blank" rel="noreferrer">Plugins - ESLint - Pluggable JavaScript Linter</a></p></li><li><p><code>parser</code> — 指定和自定义解析器：<a href="https://eslint.org/docs/latest/user-guide/configuring/plugins#specifying-parser" target="_blank" rel="noreferrer">Plugins - ESLint - Pluggable JavaScript Linter</a>、<a href="https://eslint.org/docs/latest/developer-guide/working-with-custom-parsers" target="_blank" rel="noreferrer">使用自定义解析器 - ESLint - 可插入的 JavaScript Linter</a></p></li><li><p><code>parserOptions</code> — 指定解析器选项：<a href="https://eslint.org/docs/latest/user-guide/configuring/language-options#specifying-parser-options" target="_blank" rel="noreferrer">语言选项 - ESLint - 可插拔的 JavaScript Linter</a></p></li><li><p><code>globals</code> — 脚本在执行期间访问的额外的全局变量：<a href="https://eslint.org/docs/latest/user-guide/configuring/language-options#specifying-globals" target="_blank" rel="noreferrer">语言选项 - ESLint - 可插拔的 JavaScript Linter</a></p></li><li><p><code>overrides</code> — 针对不同的文件进行不同的 Lint 配置：<a href="https://eslint.org/docs/latest/user-guide/configuring/configuration-files#configuration-based-on-glob-patterns" target="_blank" rel="noreferrer">Configuration Files - ESLint - Pluggable JavaScript Linter</a></p><ul><li>我们项目中存在一些以  <code>.test</code>、<code>.spec</code>  结尾的测试文件，那么此时我们希望这些测试文件可以拥有不同的 Lint 配置规则</li></ul></li><li><p><code>ignorePatterns</code> — 忽略代码选项：<a href="https://eslint.org/docs/latest/user-guide/configuring/ignoring-code" target="_blank" rel="noreferrer">忽略代码 - ESLint - 可插拔 JavaScript Linter</a></p></li></ul><h2 id="eslint-cli" tabindex="-1">ESLint CLI： <a class="header-anchor" href="#eslint-cli" aria-label="Permalink to &quot;ESLint CLI：&quot;">​</a></h2><p>命令行界面文档：<a href="https://eslint.org/docs/latest/user-guide/command-line-interface" target="_blank" rel="noreferrer">命令行界面 - ESLint - 可插拔 JavaScript Linter</a></p><p>ESLint 附带一个命令行界面（CLI），用于 lint 文件或目录。</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">$</span><span style="color:#98C379;"> eslint</span><span style="color:#98C379;"> index.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>前面示例中我们已经看到，运行命令后生成的输出将按文件分组，并将指定 <code>line:column</code> 警告/错误、错误原因以及每个故障的规则名称。</p><h2 id="项目运行的检查命令配置" tabindex="-1">项目运行的检查命令配置： <a class="header-anchor" href="#项目运行的检查命令配置" aria-label="Permalink to &quot;项目运行的检查命令配置：&quot;">​</a></h2><p>项目的 <code>package.json</code>，在 <code>scripts</code> 字段里面添加以下脚本：</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;scripts&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;lint&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;eslint **/*.js&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;lint-html&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;eslint **/*.js -f html -o ./reports/lint-results.html&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;lint-fix&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;eslint --fix **/*.js&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>我们将该规则应用于以下文件：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="vscode-编辑器的-eslint-的插件-eslint" tabindex="-1">VSCode 编辑器的 ESLint 的插件：ESLint <a class="header-anchor" href="#vscode-编辑器的-eslint-的插件-eslint" aria-label="Permalink to &quot;VSCode 编辑器的 ESLint 的插件：ESLint&quot;">​</a></h2><p>ESLint 插件的配置文档（包括了版本说明和配置选项 - Settings Options）：<a href="https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint" target="_blank" rel="noreferrer">ESLint - Visual Studio Marketplace</a></p><p><strong>这里以 vscode 编辑器设置为例进行说明：</strong></p><p>VSCode 编辑器有两种配置，一是编辑器配置，二是项目工作区配置：</p><p><strong>编辑器全局配置：</strong></p><ol><li><p>三种打开设置方式：</p><ul><li><p>\`\`文件-&gt;首选项 -&gt; 设置 -&gt; 搜索 ESLint\`</p></li><li><p><code>左下角设置图标 -&gt; 设置 -&gt; 搜索 ESLint</code></p></li><li><p>快捷键：<code>ctrl+shift+p</code> ，然后搜索：Settings -&gt; 选择 -&gt; 首选项：打开设置 -&gt; 搜索 Prettier - &gt; 可以找到并点击 <u>在 settings.json 中编辑</u></p></li></ul></li></ol><p><strong>项目工作区配置：</strong></p><ul><li><p>1.工作区 或 项目里新建文件夹和文件：.vscode -&gt; settings.json</p></li><li><p>2.然后在 settings.json 填写配置</p></li></ul><p>插件配置和.eslintrc 配置文件一样</p><h2 id="团队-eslint-规范示例" tabindex="-1">团队 ESLint 规范示例： <a class="header-anchor" href="#团队-eslint-规范示例" aria-label="Permalink to &quot;团队 ESLint 规范示例：&quot;">​</a></h2><p><a href="https://github.com/AlloyTeam" target="_blank" rel="noreferrer">AlloyTeam</a> 给出的 React/Vue/TypeScript 项目的渐进式 ESLint 配置（<a href="https://github.com/AlloyTeam/eslint-config-alloy" target="_blank" rel="noreferrer">eslint-config-alloy</a>），以下贴出 React 的一小部分配置：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">	parserOptions</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">		babelOptions</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">			presets</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;@babel/preset-react&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">		},</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#E06C75;">	plugins</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;react&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#E06C75;">	rules</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		/**     * 布尔值类型的 propTypes 的 name 必须为 is 或 has 开头     * </span><span style="color:#C678DD;font-style:italic;">@reason</span><span style="color:#7F848E;font-style:italic;"> 类型相关的约束交给 TypeScript     */</span></span>
<span class="line"><span style="color:#98C379;">		&quot;react/boolean-prop-naming&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;off&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		/**     * &lt;button&gt; 必须有 type 属性     */</span></span>
<span class="line"><span style="color:#98C379;">		&quot;react/button-has-type&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;off&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		/**     * 一个 defaultProps 必须有对应的 propTypes     * </span><span style="color:#C678DD;font-style:italic;">@reason</span><span style="color:#7F848E;font-style:italic;"> 类型相关的约束交给 TypeScript     */</span></span>
<span class="line"><span style="color:#98C379;">		&quot;react/default-props-match-prop-types&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;off&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		/**     * props, state, context 必须用解构赋值     */</span></span>
<span class="line"><span style="color:#98C379;">		&quot;react/destructuring-assignment&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;off&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		/**     * 组件必须有 displayName 属性     * </span><span style="color:#C678DD;font-style:italic;">@reason</span><span style="color:#7F848E;font-style:italic;"> 不强制要求写 displayName     */</span></span>
<span class="line"><span style="color:#98C379;">		&quot;react/display-name&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;off&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// ...</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h2 id="eslint-插件开发" tabindex="-1">ESLint 插件开发 <a class="header-anchor" href="#eslint-插件开发" aria-label="Permalink to &quot;ESLint 插件开发&quot;">​</a></h2><p><strong>插件开发文档：<a href="https://eslint.org/docs/latest/developer-guide/working-with-plugins" target="_blank" rel="noreferrer">使用插件 - ESLint - 最新文档</a>、<a href="https://cn.eslint.org/docs/developer-guide/working-with-plugins" target="_blank" rel="noreferrer">Working with Plugins - ESLint 中文文档</a></strong></p>`,65)]))}const g=n(t,[["render",p]]);export{b as __pageData,g as default};
