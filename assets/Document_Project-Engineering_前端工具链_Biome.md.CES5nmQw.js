import{_ as a,c as e,o as n,ah as l}from"./chunks/framework.DqD713j2.js";const B=JSON.parse('{"title":"Biome：格式化程序","description":"","frontmatter":{},"headers":[],"relativePath":"Document/Project-Engineering/前端工具链/Biome.md","filePath":"Document/Project-Engineering/前端工具链/Biome.md","lastUpdated":1750954157000}'),o={name:"Document/Project-Engineering/前端工具链/Biome.md"};function p(r,s,t,i,c,b){return n(),e("div",null,s[0]||(s[0]=[l(`<h1 id="biome-格式化程序" tabindex="-1">Biome：格式化程序 <a class="header-anchor" href="#biome-格式化程序" aria-label="Permalink to &quot;Biome：格式化程序&quot;">​</a></h1><p><strong>Prettier 的创建者 Christopher Chedeau 悬赏 1 万美元</strong>（奖金随后也逐步增加）<strong>开发一个由 Rust 驱动的代码格式化程序，该格式化程序需要通过 Prettier 95% 以上单元测试。 目前，随着 v1.4.0 版本发布，Biome 团队确认赢得了 Prettier 团队发布的该奖项。</strong></p><h2 id="什么是-biome" tabindex="-1">什么是 Biome <a class="header-anchor" href="#什么是-biome" aria-label="Permalink to &quot;什么是 Biome&quot;">​</a></h2><p>Biome 是一个用于 Web 项目的高性能工具链，旨在提供开发者工具来维护项目的健康。Biome 是 JavaScript、TypeScript、JSX 和 JSON 的快速格式化程序。</p><p>同时，Biome 也是一个适用于 JavaScript、TypeScript 和 JSX 的高性能 linter，具有来自 ESLint、TypeSCript ESLint 和其他来源的 170 多个规则。 Biome 输出详细的上下文诊断信息，帮助开发者改进代码。</p><p>Biome 从一开始就被设计为可以在编辑器中交互使用，可以在开发者编写错误代码时对其进行格式化和检查。</p><h2 id="更好的格式化程序" tabindex="-1">更好的格式化程序 <a class="header-anchor" href="#更好的格式化程序" aria-label="Permalink to &quot;更好的格式化程序&quot;">​</a></h2><p>Biome 格式化程序现在与 Prettier 的兼容性超过 96%，分数是针对 JavaScript、TypeScript 和 JSX 代码综合计算的。</p><p>Biome 团队将挑战目标能够实现的主要因素归结为以下三个：</p><ul><li>钱：通过参与到 Biome 的项目中，不少贡献者可以获得一笔不错的收入</li><li>沟通：Biome 使用 GitHub 作为唯一的协调媒介，提供了有关如何交付的信息、说明和帮助。</li><li>基础设施：Biome 依赖于以前的 Rome Tools 员工和贡献者构建的可靠的测试基础设施，能够捕获每个重新格式化错误，提供精细的差异，并在发出的输出与 Prettier 发出的输出不同时警告用户。</li></ul><p>根据内部指标（JavaScript、TypeScript 和 JSX，基于选项奇偶校验），在挑战之前，Biome 的兼容性约为 85%。 尽管 85% 看起来很高，但像 15% 这样的低数字对大型代码库的影响是巨大的，人们可能会对如此多的变化感到害怕，导致早期采用者在将 Biome 引入团队时遇到一些阻力。</p><h2 id="biome-新的格式选项" tabindex="-1">Biome 新的格式选项 <a class="header-anchor" href="#biome-新的格式选项" aria-label="Permalink to &quot;Biome 新的格式选项&quot;">​</a></h2><h2 id="lineending" tabindex="-1">lineEnding <a class="header-anchor" href="#lineending" aria-label="Permalink to &quot;lineEnding&quot;">​</a></h2><p>使用此选项来匹配操作系统的行结尾，支持 lf（换行 - \\n）、cr（回车 - \\r）和 crlf（回车换行 - \\r\\n）。</p><h2 id="bracketsameline" tabindex="-1">bracketSameLine <a class="header-anchor" href="#bracketsameline" aria-label="Permalink to &quot;bracketSameLine&quot;">​</a></h2><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">// Existing behavior. Now also the default, meaning \`bracketSameLine: false\`. &lt;</span><span style="color:#E06C75;">Foo</span><span style="color:#D19A66;"> className</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">{somethingReallyLongThatForcesThisToWrap}</span><span style="color:#D19A66;"> anotherReallyLongAttribute</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">{withAValueThatsSurelyTooLong}</span><span style="color:#D19A66;"> soThatEverythingWraps</span><span style="color:#ABB2BF;"> &gt; Hello &lt;/</span><span style="color:#E06C75;">Foo</span><span style="color:#ABB2BF;">&gt; &lt;</span><span style="color:#E06C75;">Foo</span><span style="color:#D19A66;"> selfClosingTags</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">{likeThisOne}</span><span style="color:#D19A66;"> stillPlaceTheBracket</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">{onItsOwnLine}</span><span style="color:#D19A66;"> toIndicateThat</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">{itClosesItself}</span><span style="color:#ABB2BF;"> /&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>使用 &#39;bracketSameLine&#39;: true 格式化后代码如下：</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">// New behavior, with \`bracketSameLine: true\`.</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">Foo</span></span>
<span class="line"><span style="color:#D19A66;">  className</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">{somethingReallyLongThatForcesThisToWrap}</span></span>
<span class="line"><span style="color:#D19A66;">  anotherReallyLongAttribute</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">{withAValueThatsSurelyTooLong}</span></span>
<span class="line"><span style="color:#D19A66;">  soThatEverythingWraps</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  Hello</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">Foo</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">Foo</span></span>
<span class="line"><span style="color:#D19A66;">  selfClosingTags</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">{likeThisOne}</span></span>
<span class="line"><span style="color:#D19A66;">  stillPlaceTheBracket</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">{onItsOwnLine}</span></span>
<span class="line"><span style="color:#ABB2BF;">/&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="bracketspacing" tabindex="-1">bracketSpacing <a class="header-anchor" href="#bracketspacing" aria-label="Permalink to &quot;bracketSpacing&quot;">​</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">sort</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;sort.js&#39;</span><span style="color:#ABB2BF;">; </span><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> value</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">sort</span><span style="color:#ABB2BF;"> };</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>使用 &#39;bracketSpacing&#39;: false 格式化后代码如下：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">sort</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;sort.js&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> value</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">sort</span><span style="color:#ABB2BF;"> };</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>关于 Biome 的更多规则可以参考文末资料，这里不再过多展开。</p><h2 id="biome-cli" tabindex="-1">Biome CLI <a class="header-anchor" href="#biome-cli" aria-label="Permalink to &quot;Biome CLI&quot;">​</a></h2><p>依赖 Biome LSP 的开发者会很高兴他们现在可以使用选项 --config-path 将自定义配置传递给命令 lsp-proxy，命令 start 接受相同的选项：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">biome</span><span style="color:#D19A66;"> --config-path=../path/where/config/is</span><span style="color:#98C379;"> lsp-proxy</span><span style="color:#98C379;"> biome</span><span style="color:#D19A66;"> --config-path=../path/where/config/is</span><span style="color:#98C379;"> start</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>CLI 现在公开了选项 --diagnostic-level，该选项允许过滤打印到终端的诊断类型。</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">biome</span><span style="color:#98C379;"> check</span><span style="color:#D19A66;"> --diagnostic-level=error</span><span style="color:#98C379;"> ./src</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-label="Permalink to &quot;参考资料&quot;">​</a></h2><p>biome开源地址：<a href="https://github.com/biomejs/biome" target="_blank" rel="noreferrer">https://github.com/biomejs/biome</a></p><p><a href="https://v/blog/biome-wins-prettier-challenge/" target="_blank" rel="noreferrer">https://v/blog/biome-wins-prettier-challenge/</a></p><p><a href="https://github.com/biomejs/biome" target="_blank" rel="noreferrer">https://github.com/biomejs/biome</a></p><p><a href="https://github.com/prettier/prettier" target="_blank" rel="noreferrer">https://github.com/prettier/prettier</a></p>`,33)]))}const d=a(o,[["render",p]]);export{B as __pageData,d as default};
