import{_ as n,c as a,o as l,ah as p}from"./chunks/framework.DqD713j2.js";const b=JSON.parse('{"title":"3. 手写组合 API","description":"","frontmatter":{},"headers":[],"relativePath":"Document/前端主流开发框架/Vue/Vue3 Composition API/03_手写组合API.md","filePath":"Document/前端主流开发框架/Vue/Vue3 Composition API/03_手写组合API.md","lastUpdated":1750954157000}'),e={name:"Document/前端主流开发框架/Vue/Vue3 Composition API/03_手写组合API.md"};function o(r,s,c,t,B,y){return l(),a("div",null,s[0]||(s[0]=[p(`<h1 id="_3-手写组合-api" tabindex="-1">3. 手写组合 API <a class="header-anchor" href="#_3-手写组合-api" aria-label="Permalink to &quot;3. 手写组合 API&quot;">​</a></h1><h2 id="_1-shallowreactive-与-reactive" tabindex="-1">1) shallowReactive 与 reactive <a class="header-anchor" href="#_1-shallowreactive-与-reactive" aria-label="Permalink to &quot;1) shallowReactive 与 reactive&quot;">​</a></h2><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> reactiveHandler</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#61AFEF;">  get</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">target</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">key</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">    if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">key</span><span style="color:#56B6C2;"> ===</span><span style="color:#98C379;"> &#39;_is_reactive&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">return</span><span style="color:#D19A66;"> true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E5C07B;"> Reflect</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">get</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">target</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">  set</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">target</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">key</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">value</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">    const</span><span style="color:#E5C07B;"> result</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> Reflect</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">set</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">target</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E5C07B;">    console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;数据已更新, 去更新界面&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E06C75;"> result</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">  deleteProperty</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">target</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">key</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">    const</span><span style="color:#E5C07B;"> result</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> Reflect</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">deleteProperty</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">target</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E5C07B;">    console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;数据已删除, 去更新界面&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E06C75;"> result</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">自定义shallowReactive</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">*/</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> shallowReactive</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">obj</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">  return</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Proxy</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">reactiveHandler</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">自定义reactive</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">*/</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> reactive</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">target</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">  if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">target</span><span style="color:#56B6C2;"> &amp;&amp;</span><span style="color:#C678DD;"> typeof</span><span style="color:#E06C75;"> target</span><span style="color:#56B6C2;"> ===</span><span style="color:#98C379;"> &#39;object&#39;</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">    if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">target</span><span style="color:#C678DD;"> instanceof</span><span style="color:#E5C07B;"> Array</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      // 数组</span></span>
<span class="line"><span style="color:#E5C07B;">      target</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">forEach</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">item</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">index</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">        target</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">index</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> reactive</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">item</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">      })</span></span>
<span class="line"><span style="color:#ABB2BF;">    } </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      // 对象</span></span>
<span class="line"><span style="color:#E5C07B;">      Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">keys</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">target</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">forEach</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">key</span><span style="color:#C678DD;"> =&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">        target</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> reactive</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">target</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">])</span></span>
<span class="line"><span style="color:#ABB2BF;">      })</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">    const</span><span style="color:#E5C07B;"> proxy</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Proxy</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">target</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">reactiveHandler</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E06C75;"> proxy</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">  return</span><span style="color:#E06C75;"> target</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/* 测试自定义shallowReactive */</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> proxy</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> shallowReactive</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">  a</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">    b</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">3</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">proxy</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">a</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;"> } </span><span style="color:#7F848E;font-style:italic;">// 劫持到了</span></span>
<span class="line"><span style="color:#E5C07B;">proxy</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">a</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">b</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 5</span><span style="color:#7F848E;font-style:italic;"> // 没有劫持到</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/* 测试自定义reactive */</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> obj</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">  a</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;abc&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">  b</span><span style="color:#ABB2BF;">: [{ </span><span style="color:#E06C75;">x</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;"> }],</span></span>
<span class="line"><span style="color:#E06C75;">  c</span><span style="color:#ABB2BF;">: { </span><span style="color:#E06C75;">x</span><span style="color:#ABB2BF;">: [</span><span style="color:#D19A66;">11</span><span style="color:#ABB2BF;">] }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> proxy</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> reactive</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">proxy</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E5C07B;">proxy</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">].</span><span style="color:#E06C75;">x</span><span style="color:#56B6C2;"> +=</span><span style="color:#D19A66;"> 1</span></span>
<span class="line"><span style="color:#E5C07B;">proxy</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">c</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">x</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">+=</span><span style="color:#D19A66;"> 1</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br></div></div><h2 id="_2-shallowref-与-ref" tabindex="-1">2) shallowRef 与 ref <a class="header-anchor" href="#_2-shallowref-与-ref" aria-label="Permalink to &quot;2) shallowRef 与 ref&quot;">​</a></h2><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">自定义shallowRef</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">*/</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> shallowRef</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">target</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">  const</span><span style="color:#E5C07B;"> result</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">    _value</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">target</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 用来保存数据的内部属性</span></span>
<span class="line"><span style="color:#E06C75;">    _is_ref</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 用来标识是ref对象</span></span>
<span class="line"><span style="color:#C678DD;">    get</span><span style="color:#61AFEF;"> value</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">      return</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">_value</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#C678DD;">    set</span><span style="color:#61AFEF;"> value</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">val</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">      this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">_value</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> val</span></span>
<span class="line"><span style="color:#E5C07B;">      console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;set value 数据已更新, 去更新界面&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">  return</span><span style="color:#E06C75;"> result</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">自定义ref</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">*/</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> ref</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">target</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">  if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">target</span><span style="color:#56B6C2;"> &amp;&amp;</span><span style="color:#C678DD;"> typeof</span><span style="color:#E06C75;"> target</span><span style="color:#56B6C2;"> ===</span><span style="color:#98C379;"> &#39;object&#39;</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E06C75;">    target</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> reactive</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">target</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">  const</span><span style="color:#E5C07B;"> result</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">    _value</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">target</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 用来保存数据的内部属性</span></span>
<span class="line"><span style="color:#E06C75;">    _is_ref</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 用来标识是ref对象</span></span>
<span class="line"><span style="color:#C678DD;">    get</span><span style="color:#61AFEF;"> value</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">      return</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">_value</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#C678DD;">    set</span><span style="color:#61AFEF;"> value</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">val</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">      this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">_value</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> val</span></span>
<span class="line"><span style="color:#E5C07B;">      console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;set value 数据已更新, 去更新界面&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">  return</span><span style="color:#E06C75;"> result</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/* 测试自定义shallowRef */</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> ref3</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> shallowRef</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">  a</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;abc&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span>
<span class="line"><span style="color:#E5C07B;">ref3</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">value</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &#39;xxx&#39;</span></span>
<span class="line"><span style="color:#E5C07B;">ref3</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">value</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">a</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &#39;yyy&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/* 测试自定义ref */</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> ref1</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> ref</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> ref2</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> ref</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">  a</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;abc&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">  b</span><span style="color:#ABB2BF;">: [{ </span><span style="color:#E06C75;">x</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;"> }],</span></span>
<span class="line"><span style="color:#E06C75;">  c</span><span style="color:#ABB2BF;">: { </span><span style="color:#E06C75;">x</span><span style="color:#ABB2BF;">: [</span><span style="color:#D19A66;">11</span><span style="color:#ABB2BF;">] }</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span>
<span class="line"><span style="color:#E5C07B;">ref1</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">value</span><span style="color:#56B6C2;">++</span></span>
<span class="line"><span style="color:#E5C07B;">ref2</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">value</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">].</span><span style="color:#E06C75;">x</span><span style="color:#56B6C2;">++</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">ref1</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">ref2</span><span style="color:#ABB2BF;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br></div></div><h2 id="_3-shallowreadonly-与-readonly" tabindex="-1">3) shallowReadonly 与 readonly <a class="header-anchor" href="#_3-shallowreadonly-与-readonly" aria-label="Permalink to &quot;3) shallowReadonly 与 readonly&quot;">​</a></h2><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> readonlyHandler</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#61AFEF;">  get</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">target</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">key</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">    if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">key</span><span style="color:#56B6C2;"> ===</span><span style="color:#98C379;"> &#39;_is_readonly&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">return</span><span style="color:#D19A66;"> true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E5C07B;"> Reflect</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">get</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">target</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">  set</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E5C07B;">    console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">warn</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;只读的, 不能修改&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#D19A66;"> true</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">  deleteProperty</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E5C07B;">    console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">warn</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;只读的, 不能删除&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#D19A66;"> true</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">自定义shallowReadonly</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">*/</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> shallowReadonly</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">obj</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">  return</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Proxy</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">readonlyHandler</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">自定义readonly</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">*/</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> readonly</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">target</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">  if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">target</span><span style="color:#56B6C2;"> &amp;&amp;</span><span style="color:#C678DD;"> typeof</span><span style="color:#E06C75;"> target</span><span style="color:#56B6C2;"> ===</span><span style="color:#98C379;"> &#39;object&#39;</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">    if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">target</span><span style="color:#C678DD;"> instanceof</span><span style="color:#E5C07B;"> Array</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      // 数组</span></span>
<span class="line"><span style="color:#E5C07B;">      target</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">forEach</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">item</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">index</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">        target</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">index</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> readonly</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">item</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">      })</span></span>
<span class="line"><span style="color:#ABB2BF;">    } </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      // 对象</span></span>
<span class="line"><span style="color:#E5C07B;">      Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">keys</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">target</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">forEach</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">key</span><span style="color:#C678DD;"> =&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">        target</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> readonly</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">target</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">])</span></span>
<span class="line"><span style="color:#ABB2BF;">      })</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#C678DD;">    const</span><span style="color:#E5C07B;"> proxy</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Proxy</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">target</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">readonlyHandler</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E06C75;"> proxy</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">  return</span><span style="color:#E06C75;"> target</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/* 测试自定义readonly */</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/* 测试自定义shallowReadonly */</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> objReadOnly</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> readonly</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">  a</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">    b</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">1</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> objReadOnly2</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> shallowReadonly</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">  a</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">    b</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">1</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">objReadOnly</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">a</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 1</span></span>
<span class="line"><span style="color:#E5C07B;">objReadOnly</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">a</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">b</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 2</span></span>
<span class="line"><span style="color:#E5C07B;">objReadOnly2</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">a</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 1</span></span>
<span class="line"><span style="color:#E5C07B;">objReadOnly2</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">a</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">b</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 2</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br></div></div><h2 id="_4-isref-isreactive-与-isreadonly" tabindex="-1">4) isRef, isReactive 与 isReadonly <a class="header-anchor" href="#_4-isref-isreactive-与-isreadonly" aria-label="Permalink to &quot;4) isRef, isReactive 与 isReadonly&quot;">​</a></h2><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">判断是否是ref对象</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">*/</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> isRef</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">obj</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">  return</span><span style="color:#E06C75;"> obj</span><span style="color:#56B6C2;"> &amp;&amp;</span><span style="color:#E5C07B;"> obj</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">_is_ref</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">判断是否是reactive对象</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">*/</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> isReactive</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">obj</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">  return</span><span style="color:#E06C75;"> obj</span><span style="color:#56B6C2;"> &amp;&amp;</span><span style="color:#E5C07B;"> obj</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">_is_reactive</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">判断是否是readonly对象</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">*/</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> isReadonly</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">obj</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">  return</span><span style="color:#E06C75;"> obj</span><span style="color:#56B6C2;"> &amp;&amp;</span><span style="color:#E5C07B;"> obj</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">_is_readonly</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">是否是reactive或readonly产生的代理对象</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">*/</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> isProxy</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">obj</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">  return</span><span style="color:#61AFEF;"> isReactive</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">||</span><span style="color:#61AFEF;"> isReadonly</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/* 测试判断函数 */</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">isReactive</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">reactive</span><span style="color:#ABB2BF;">({})))</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">isRef</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">ref</span><span style="color:#ABB2BF;">({})))</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">isReadonly</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">readonly</span><span style="color:#ABB2BF;">({})))</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">isProxy</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">reactive</span><span style="color:#ABB2BF;">({})))</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">isProxy</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">readonly</span><span style="color:#ABB2BF;">({})))</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div>`,9)]))}const F=n(e,[["render",o]]);export{b as __pageData,F as default};
