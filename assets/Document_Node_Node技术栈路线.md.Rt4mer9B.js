import{_ as i,c as e,o,ah as s}from"./chunks/framework.DqD713j2.js";const t="/FrontEndLearnNotes/assets/Node%E6%8A%80%E6%9C%AF%E6%A0%88%E4%BF%A1%E6%81%AF%E8%B7%AF%E7%BA%BF.C7EOaBWe.jpeg",N=JSON.parse('{"title":"Node技术栈路线","description":"","frontmatter":{},"headers":[],"relativePath":"Document/Node/Node技术栈路线.md","filePath":"Document/Node/Node技术栈路线.md","lastUpdated":1750954157000}'),a={name:"Document/Node/Node技术栈路线.md"};function E(r,l,d,u,n,p){return o(),e("div",null,l[0]||(l[0]=[s('<h1 id="node技术栈路线" tabindex="-1">Node技术栈路线 <a class="header-anchor" href="#node技术栈路线" aria-label="Permalink to &quot;Node技术栈路线&quot;">​</a></h1><p>GitHub开源：<a href="https://github.com/qufei1993/Nodejs-Roadmap" target="_blank" rel="noreferrer">qufei1993/Nodejs-Roadmap: 【Nodejs-Roadmap】侧重于 Node.js 服务端的开发指南，公众号 “Nodejs技术栈” (github.com)</a></p><hr><p><strong>Node.js 技术栈</strong> 是由作者 “五月君” 于 2019 年 4 月梳理之后最早开源于 Github，同时注册了微信公众号「Nodejs技术栈」。本文档包含了作者从事 Node.js Developer 以来的学习历程，旨在为大家提供一个较详细的学习教程，侧重点更倾向于 Node.js 服务端所涉及的技术栈。</p><p>也致力于为大家分享最具有价值的 Node.js 相关技术干货，包含 Node.js 基础知识（JavaScript、ES6/ES7/ES8...、TypeScript）、Node.js 核心模块、主流框架实践、缓存、数据库、消息中间件、DevOps、HTTP 协议以及 Node.js 在微服务、分布式领域下的应用分享等。</p><p><img src="'+t+'" alt="Node技术栈信息路线"></p><p><strong>说明</strong>：大致方向不会变，中间细节部分之后可能会修改，欢迎关注公众号「Nodejs技术栈」回复 “思维导图” 查看最新版学习指南</p><p>目录大纲</p><ul><li>JavaScript <ul><li>基础</li><li>This</li><li>函数</li><li>对象</li><li>原型</li><li>正则</li></ul></li><li>ES系列 <ul><li>sync/await</li><li>Object.values()</li><li>Object.entries()</li><li>includes</li><li>指数操作符</li><li>Let、Const 变量声明</li><li>数据类型功能扩展</li><li>Set、Map 集合</li><li>解构赋值</li><li>箭头函数</li><li>Promise</li><li>Symbol</li><li>Decorators</li><li>Generator</li><li>ES6</li><li>ES7</li><li>ES8</li></ul></li><li>Node.js 基础 <ul><li>Node.js 初识</li><li>Node.js 发展史</li><li>开发环境搭建</li><li>NPM 包管理器</li><li>构建第一个 Hello World 应用程序</li><li>初识 Node.js 模块</li><li>回调函数/异步编程</li><li>Node.js 编码风格指南</li><li>Koa.js 入门</li><li>Node.js 中应用 MongoDB</li><li>Node.js 中应用 Redis</li><li>基于 Koa.js 的简单 CRUD</li><li>统一异常处理</li><li>单元测试</li><li>PM2 部署</li><li>Node.js 应用场景</li></ul></li><li>Node.js 核心模块 <ul><li>Module — 模块</li><li>HTTP / HTTPS / HTTP2</li><li>Net — 网络</li><li>Event — 事件</li><li>Stream — 流</li><li>Buffer — 缓冲区</li><li>Crypto — 加密</li><li>FS — 文件</li><li>Timer — 定时器</li></ul></li><li>Node.js 进阶 <ul><li>Memory 内存管理</li><li>V8 虚拟机</li><li>I/O 模型</li><li>EventLoop 事件轮询</li><li>Threads&amp;Process 线程和进程</li><li>Testing 测试</li><li>Schedule 定时任务</li><li>Template 模版引擎</li><li>Cache 缓存</li><li>性能调优</li><li>最佳实战</li></ul></li><li>Node.js 框架 <ul><li>Express.js</li><li>Koa.js</li><li>Egg.js</li><li>Nest.js</li><li>Midway.js</li><li>Meteor.js</li></ul></li><li>数据库 <ul><li>Azure CosmosDB</li><li>Amazon DynamoDB</li><li>ElasticSearch</li><li>Solr</li><li>Sphinx</li><li>MySql</li><li>PostgreSQL</li><li>SQL Server</li><li>Redis</li><li>MongoDB</li><li>CouchDB</li><li>NoSql</li><li>关系型</li><li>搜索引擎</li><li>云数据库</li></ul></li><li>HTTP <ul><li>HTTP 协议发展史</li><li>5 层网络模型</li><li>HTTP 三次握手/四次挥手</li><li>URI/URL/URN</li><li>跨域的形成及解决方案</li><li>缓存头 Cache-Control</li><li>Cookie 与 Session</li><li>HTTP 长链接</li><li>HTTP2 协议实践</li></ul></li><li>微服务 <ul><li>可能出现的问题</li><li>熔断</li><li>限流</li><li>服务降级</li><li>Consul</li><li>Zookper</li><li>ResultFul API</li><li>GraphQL</li><li>HAL 基于ResultFul协议的提升</li><li>RPC</li><li>消息队列</li><li>认识微服务</li><li>数据通信</li><li>服务注册/发现</li><li>柔性可用/容错</li></ul></li><li>消息中间价 <ul><li>RabbitMQ</li><li>RocketMQ</li><li>Kafka</li><li>ActiveMQ</li></ul></li><li>分布式 <ul><li>认识分布式</li><li>分布式事务</li><li>分布式锁</li><li>分布式限流</li><li>分布式订单号生产策略</li><li>分布式系统校验</li></ul></li><li>DevOps <ul><li>PM2 生产环境部署</li><li>Docker</li><li>Jenkins 持续集成</li><li>SonarQube 代码质量评测分析</li><li>Jumpserver 开源堡垒机</li></ul></li><li>安全 <ul><li>CSRF</li><li>XSS</li><li>越权</li><li>Cookies 安全策略</li><li>HTTP/HTTPS 传输安全</li><li>SQL 注入</li><li>中间人攻击</li><li>OAuth 2.0</li></ul></li><li>工具 <ul><li>Git 版本控制</li><li>VSCode 编辑器</li></ul></li><li>设计模式 <ul><li>单例模式</li><li>工厂模式</li><li>装饰器模式</li><li>代理模式</li><li>适配器模式</li><li>观察者模式</li></ul></li><li>数据结构 <ul><li>Queue</li><li>Set</li><li>List</li><li>Map</li><li>Heap - 堆</li><li>Stack - 栈</li><li>Graph - 图</li><li>二叉树</li><li>红黑树</li><li>十大排序</li></ul></li><li>SOLID 五大原则 <ul><li>单一职责原则</li><li>开放封闭原则</li><li>里式替换原则</li><li>接口分离原则</li><li>依赖倒置原则</li></ul></li></ul><p><strong>任重而道远!</strong></p><h2 id="资源" tabindex="-1">资源 <a class="header-anchor" href="#资源" aria-label="Permalink to &quot;资源&quot;">​</a></h2><p>本项目开源于 Github: <a href="https://github.com/Q-Angelo/Nodejs-Roadmap%EF%BC%8C%E5%90%8C%E6%97%B6%E4%B9%9F%E4%BC%9A%E5%9C%A8%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E3%80%8CNodejs%E6%8A%80%E6%9C%AF%E6%A0%88%E3%80%8D%E8%BF%9B%E8%A1%8C%E5%90%8C%E6%AD%A5%EF%BC%8C%E6%AC%A2%E8%BF%8E%E5%85%B3%E6%B3%A8%EF%BC%81%E5%A6%82%E9%9C%80%E8%BF%9B%E7%BE%A4%E4%BA%A4%E6%B5%81%E7%9A%84%E5%8F%AF%E5%85%88%E5%85%B3%E6%B3%A8%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%EF%BC%8C%E5%90%8E%E5%8F%B0%E5%9B%9E%E5%A4%8D%E2%80%9C%E5%8A%A0%E7%BE%A4%E2%80%9D%EF%BC%8C%E5%8D%B3%E5%8F%AF%E5%8A%A0%E5%85%A5%E3%80%8CNodejs%E6%8A%80%E6%9C%AF%E6%A0%88%E4%BA%A4%E6%B5%81%E7%BE%A4%E3%80%8D%EF%BC%81" target="_blank" rel="noreferrer">https://github.com/Q-Angelo/Nodejs-Roadmap，同时也会在微信公众号「Nodejs技术栈」进行同步，欢迎关注！如需进群交流的可先关注微信公众号，后台回复“加群”，即可加入「Nodejs技术栈交流群」！</a></p>',12)]))}const B=i(a,[["render",E]]);export{N as __pageData,B as default};
