import{_ as n,c as a,o as l,ah as p}from"./chunks/framework.DqD713j2.js";const b=JSON.parse('{"title":"JavaScript 基础练习题","description":"","frontmatter":{},"headers":[],"relativePath":"Document/JavaScript笔记/JavaScript基础/JavaScript基础练习题.md","filePath":"Document/JavaScript笔记/JavaScript基础/JavaScript基础练习题.md","lastUpdated":1750954157000}'),o={name:"Document/JavaScript笔记/JavaScript基础/JavaScript基础练习题.md"};function e(r,s,c,t,B,y){return l(),a("div",null,s[0]||(s[0]=[p(`<h1 id="javascript-基础练习题" tabindex="-1">JavaScript 基础练习题 <a class="header-anchor" href="#javascript-基础练习题" aria-label="Permalink to &quot;JavaScript 基础练习题&quot;">​</a></h1><h5 id="_1-编写一个打印乘法口诀表的脚本程序。" tabindex="-1">1.<strong>编写一个打印乘法口诀表的脚本程序。</strong> <a class="header-anchor" href="#_1-编写一个打印乘法口诀表的脚本程序。" aria-label="Permalink to &quot;1.**编写一个打印乘法口诀表的脚本程序。**&quot;">​</a></h5><p>提示：使用嵌套循环来实现。</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> i</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">j</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">&lt;=</span><span style="color:#D19A66;">9</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#C678DD;"> for</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">j</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">j</span><span style="color:#56B6C2;">&lt;=</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">j</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E5C07B;">  document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">+</span><span style="color:#98C379;">&#39;*&#39;</span><span style="color:#56B6C2;">+</span><span style="color:#E06C75;">j</span><span style="color:#56B6C2;">+</span><span style="color:#98C379;">&#39;=&#39;</span><span style="color:#56B6C2;">+</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">*</span><span style="color:#E06C75;">j</span><span style="color:#56B6C2;">+</span><span style="color:#98C379;">&#39; &#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">  document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;&lt;br /&gt;&#39;</span><span style="color:#ABB2BF;">) ;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;&lt;table border=&quot;1&quot;&gt;&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">&lt;=</span><span style="color:#D19A66;">9</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#E5C07B;"> document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;&lt;tr&gt;&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;"> for</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">j</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">j</span><span style="color:#56B6C2;">&lt;=</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">j</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E5C07B;"> document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;&lt;td&gt;&#39;</span><span style="color:#56B6C2;">+</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">+</span><span style="color:#98C379;">&#39;*&#39;</span><span style="color:#56B6C2;">+</span><span style="color:#E06C75;">j</span><span style="color:#56B6C2;">+</span><span style="color:#98C379;">&#39;=&#39;</span><span style="color:#56B6C2;">+</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">*</span><span style="color:#E06C75;">j</span><span style="color:#56B6C2;">+</span><span style="color:#98C379;">&#39;&lt;/td&gt;&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">    document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;&lt;/tr&gt;&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h5 id="_2-表格显示学生信息" tabindex="-1"><strong>2.表格显示学生信息</strong> <a class="header-anchor" href="#_2-表格显示学生信息" aria-label="Permalink to &quot;**2.表格显示学生信息**&quot;">​</a></h5><p>在一个大学的编程选修课班里，我们得到了一组参加该班级的学生数据，分别是姓名、性别、年龄和年级，接下来呢，我们要利用 JavaScript 的知识挑出其中所有是大一的女生的的名字哦。</p><p><strong>学生信息如下：</strong></p><p>(&#39;小 A&#39;,&#39;女&#39;,21,&#39;大一&#39;), (&#39;小 B&#39;,&#39;男&#39;,23,&#39;大三&#39;), (&#39;小 C&#39;,&#39;男&#39;,24,&#39;大四&#39;), (&#39;小 D&#39;,&#39;女&#39;,21,&#39;大一&#39;), (&#39;小 E&#39;,&#39;女&#39;,22,&#39;大四&#39;), (&#39;小 F&#39;,&#39;男&#39;,21,&#39;大一&#39;), (&#39;小 G&#39;,&#39;女&#39;,22,&#39;大二&#39;), (&#39;小 H&#39;,&#39;女&#39;,20,&#39;大三&#39;), (&#39;小 I&#39;,&#39;女&#39;,20,&#39;大一&#39;), (&#39;小 J&#39;,&#39;男&#39;,20,&#39;大三&#39;)</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> student</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> Object</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> stus</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Array</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> Student</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">name</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;font-style:italic;">gender</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;font-style:italic;">age</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;font-style:italic;">grade</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#E5C07B;">    this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">name</span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">    this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">age</span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;">age</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">    this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">gender</span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;">gender</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">    this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">grade</span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;">grade</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#E06C75;">stus</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">]</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> Student</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;小A&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;女&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">21</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;大一&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E06C75;">stus</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">]</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> Student</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;小B&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;男&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">23</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;大三&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E06C75;">stus</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">]</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> Student</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;小C&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;男&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">21</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;大四&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E06C75;">stus</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">]</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> Student</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;小D&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;女&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">21</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;大一&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E06C75;">stus</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">]</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> Student</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;小E&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;女&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">22</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;大四&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E06C75;">stus</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">]</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> Student</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;小F&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;男&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">21</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;大一&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E06C75;">stus</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">6</span><span style="color:#ABB2BF;">]</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> Student</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;小G&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;女&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">22</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;大二&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E06C75;">stus</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">7</span><span style="color:#ABB2BF;">]</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> Student</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;小H&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;女&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;大三&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E06C75;">stus</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">8</span><span style="color:#ABB2BF;">]</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> Student</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;小I&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;女&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;大一&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E06C75;">stus</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">9</span><span style="color:#ABB2BF;">]</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> Student</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;小J&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;男&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;大三&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> show</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"><span style="color:#C678DD;"> var</span><span style="color:#E06C75;"> i</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;"> document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;&lt;table border = &quot;1&quot; width=&quot;400dp&quot;&gt;&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;"> document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;&lt;tr&gt;&lt;td&gt;序号&lt;/td&gt;&lt;td&gt;姓名&lt;/td&gt;&lt;td&gt;性别&lt;/td&gt;&lt;td&gt;年龄&lt;/td&gt;&lt;td&gt;年级&lt;/td&gt;&lt;/tr&gt;&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;"> for</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">&lt;</span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#C678DD;">  if</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">stus</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">].</span><span style="color:#E06C75;">gender</span><span style="color:#56B6C2;">==</span><span style="color:#98C379;">&#39;女&#39;</span><span style="color:#56B6C2;">&amp;&amp;</span><span style="color:#E06C75;">stus</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">].</span><span style="color:#E06C75;">grade</span><span style="color:#56B6C2;">==</span><span style="color:#98C379;">&#39;大一&#39;</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#E5C07B;">        document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;&lt;tr bgcolor=&quot;#3C6Fee&quot;&gt;&lt;th&gt;&#39;</span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">+</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">)</span><span style="color:#56B6C2;">+</span><span style="color:#98C379;">&#39;&lt;/th&gt;   &lt;th&gt;&#39;</span><span style="color:#56B6C2;">+</span><span style="color:#E06C75;">stus</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">].</span><span style="color:#E06C75;">name</span><span style="color:#56B6C2;">+</span><span style="color:#98C379;">&#39;&lt;/th&gt;&lt;th&gt;&#39;</span><span style="color:#56B6C2;">+</span><span style="color:#E06C75;">stus</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">].</span><span style="color:#E06C75;">gender</span><span style="color:#56B6C2;">+</span><span style="color:#98C379;">&#39;&lt;/th&gt;    &lt;th&gt;&#39;</span><span style="color:#56B6C2;">+</span><span style="color:#E06C75;">stus</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">].</span><span style="color:#E06C75;">age</span><span style="color:#56B6C2;">+</span><span style="color:#98C379;">&#39;&lt;/th&gt;&lt;th&gt;&#39;</span><span style="color:#56B6C2;">+</span><span style="color:#E06C75;">stus</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">].</span><span style="color:#E06C75;">grade</span><span style="color:#56B6C2;">+</span><span style="color:#98C379;">&#39;&lt;/th&gt;&lt;/tr&gt;&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;"> }</span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E5C07B;">  document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;&lt;tr&gt;&lt;td&gt;&#39;</span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">+</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">)</span><span style="color:#56B6C2;">+</span><span style="color:#98C379;">&#39;&lt;/td&gt;&lt;td&gt;&#39;</span><span style="color:#56B6C2;">+</span><span style="color:#E06C75;">stus</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">].</span><span style="color:#E06C75;">name</span><span style="color:#56B6C2;">+</span><span style="color:#98C379;">&#39;&lt;/td&gt;   &lt;td&gt;&#39;</span><span style="color:#56B6C2;">+</span><span style="color:#E06C75;">stus</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">].</span><span style="color:#E06C75;">gender</span><span style="color:#56B6C2;">+</span><span style="color:#98C379;">&#39;&lt;/td&gt;&lt;td&gt;&#39;</span><span style="color:#56B6C2;">+</span><span style="color:#E06C75;">stus</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">].</span><span style="color:#E06C75;">age</span><span style="color:#56B6C2;">+</span><span style="color:#98C379;">&#39;&lt;/td&gt;     &lt;td&gt;&#39;</span><span style="color:#56B6C2;">+</span><span style="color:#E06C75;">stus</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">].</span><span style="color:#E06C75;">grade</span><span style="color:#56B6C2;">+</span><span style="color:#98C379;">&#39;&lt;/td&gt;&lt;/tr&gt;&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;"> }</span></span>
<span class="line"><span style="color:#E5C07B;"> document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;&lt;/table&gt;&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">show</span><span style="color:#ABB2BF;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><p>马克思的手稿中有这样一道有趣的数学题：有 30 我的，其中有男人，女人，小孩。他们在一家饭馆中吃饭，共花费 50 先令。若是每一个男人吃饭要花 3 先令，每一个女人要花 2 先令，每一个小孩要花 1 先令，问男人，女人，小孩各多少人？</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> man</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">man</span><span style="color:#56B6C2;"> &lt;</span><span style="color:#D19A66;"> 17</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">man</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">	for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> woman</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">woman</span><span style="color:#56B6C2;"> &lt;</span><span style="color:#D19A66;"> 25</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">woman</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">		var</span><span style="color:#E06C75;"> child</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 50</span><span style="color:#56B6C2;"> -</span><span style="color:#E06C75;"> man</span><span style="color:#56B6C2;"> *</span><span style="color:#D19A66;"> 3</span><span style="color:#56B6C2;"> -</span><span style="color:#E06C75;"> woman</span><span style="color:#56B6C2;"> *</span><span style="color:#D19A66;"> 2</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">		if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">child</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> woman</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> man</span><span style="color:#56B6C2;"> ==</span><span style="color:#D19A66;"> 30</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">			console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;男人&quot;</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> man</span><span style="color:#56B6C2;"> +</span><span style="color:#98C379;"> &quot;女人&quot;</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> woman</span><span style="color:#56B6C2;"> +</span><span style="color:#98C379;"> &quot;小孩&quot;</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> child</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">		}</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>计算 e=1+1/1！+1/2！+1/3！……+1/n！的前 50 项</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// var e=1;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// var n=50;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// for(var m=1;m&lt;=n;m++){</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//     var fenmu=1;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//</span><span style="color:#7F848E;font-style:italic;">     //fenum分母的值</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//     for(var s=1;s&lt;=m;s++){</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//         fenmu*=s;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//     }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//     e+=1/fenmu;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// alert(e);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//方法二</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> n</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> s</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> e</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">n</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">n</span><span style="color:#56B6C2;"> &lt;=</span><span style="color:#D19A66;"> 50</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">n</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E06C75;">	s</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> s</span><span style="color:#56B6C2;"> *</span><span style="color:#E06C75;"> n</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">	e</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> e</span><span style="color:#56B6C2;"> +</span><span style="color:#D19A66;"> 1</span><span style="color:#56B6C2;"> /</span><span style="color:#E06C75;"> s</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#E5C07B;">document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">e</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><ol><li>输入一个数（不限位数），输出一个数字的位数。</li></ol><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> input</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getElementById</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;input&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> output</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getElementById</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;output&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">output</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">onclick</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#C678DD;">	var</span><span style="color:#E06C75;"> value</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> input</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">	output</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">value</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> value</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>打印九九乘法表</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> i</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">j</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> &lt;=</span><span style="color:#D19A66;"> 9</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">	for</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">j</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">j</span><span style="color:#56B6C2;"> &lt;=</span><span style="color:#E06C75;"> i</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">j</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">		document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> +</span><span style="color:#98C379;"> &quot;*&quot;</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> j</span><span style="color:#56B6C2;"> +</span><span style="color:#98C379;"> &quot;=&quot;</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;"> *</span><span style="color:#E06C75;"> j</span><span style="color:#56B6C2;"> +</span><span style="color:#98C379;"> &quot;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#E5C07B;">	document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;&lt;br&gt;&lt;br&gt;&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>青年歌手参加歌曲大奖赛，有 10 个评委打分，试编程求选手的平均得分（去掉一个最高分和一个最低分）</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">input</span><span style="color:#D19A66;font-style:italic;"> type</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#D19A66;font-style:italic;"> name</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#D19A66;font-style:italic;"> value</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#D19A66;font-style:italic;"> class</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;inputs&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">input</span><span style="color:#D19A66;font-style:italic;"> type</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#D19A66;font-style:italic;"> name</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#D19A66;font-style:italic;"> value</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#D19A66;font-style:italic;"> class</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;inputs&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">input</span><span style="color:#D19A66;font-style:italic;"> type</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#D19A66;font-style:italic;"> name</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#D19A66;font-style:italic;"> value</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#D19A66;font-style:italic;"> class</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;inputs&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">input</span><span style="color:#D19A66;font-style:italic;"> type</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#D19A66;font-style:italic;"> name</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#D19A66;font-style:italic;"> value</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#D19A66;font-style:italic;"> class</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;inputs&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">input</span><span style="color:#D19A66;font-style:italic;"> type</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#D19A66;font-style:italic;"> name</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#D19A66;font-style:italic;"> value</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#D19A66;font-style:italic;"> class</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;inputs&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">input</span><span style="color:#D19A66;font-style:italic;"> type</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#D19A66;font-style:italic;"> name</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#D19A66;font-style:italic;"> value</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#D19A66;font-style:italic;"> class</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;inputs&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">input</span><span style="color:#D19A66;font-style:italic;"> type</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#D19A66;font-style:italic;"> name</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#D19A66;font-style:italic;"> value</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#D19A66;font-style:italic;"> class</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;inputs&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">input</span><span style="color:#D19A66;font-style:italic;"> type</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#D19A66;font-style:italic;"> name</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#D19A66;font-style:italic;"> value</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#D19A66;font-style:italic;"> class</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;inputs&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">input</span><span style="color:#D19A66;font-style:italic;"> type</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#D19A66;font-style:italic;"> name</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#D19A66;font-style:italic;"> value</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#D19A66;font-style:italic;"> class</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;inputs&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">input</span><span style="color:#D19A66;font-style:italic;"> type</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#D19A66;font-style:italic;"> name</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#D19A66;font-style:italic;"> value</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#D19A66;font-style:italic;"> class</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;inputs&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">button</span><span style="color:#D19A66;font-style:italic;"> onclick</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;fun()&quot;</span><span style="color:#ABB2BF;">&gt;得分&lt;/</span><span style="color:#E06C75;">button</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">script</span><span style="color:#D19A66;font-style:italic;"> type</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;text/javascript&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    var array=[],a,max,min;</span></span>
<span class="line"><span style="color:#ABB2BF;">    var inputs = document.getElementsByClassName(&#39;inputs&#39;);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    function fun()</span><span style="color:#C678DD;">{</span></span>
<span class="line"><span style="color:#E06C75;">        max</span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;">min</span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;">parseInt</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">inputs</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">9</span><span style="color:#ABB2BF;">].</span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#61AFEF;">        for</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">a</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">a</span><span style="color:#56B6C2;">&lt;</span><span style="color:#E5C07B;">inputs</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">a</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#61AFEF;">            if</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">parseInt</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">inputs</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;font-style:italic;">a</span><span style="color:#ABB2BF;">].value)&gt;=max){</span></span>
<span class="line"><span style="color:#E06C75;">                max</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> parseInt</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">inputs</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">].</span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">                var</span><span style="color:#E06C75;"> k</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> a</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#61AFEF;">            if</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">parseInt</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">inputs</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;font-style:italic;">a</span><span style="color:#ABB2BF;">].value)&lt;</span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;">min</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#E06C75;">                min</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> parseInt</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">inputs</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">].</span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">                var</span><span style="color:#E06C75;"> s</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> a</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#E5C07B;">alert</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">max</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">alert</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">k</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">alert</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">min</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">alert</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">s</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">        for</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">var</span><span style="color:#E5C07B;"> m</span><span style="color:#ABB2BF;">=</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">;</span><span style="color:#E5C07B;">m</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">inputs</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">length</span><span style="color:#ABB2BF;">;</span><span style="color:#E5C07B;">m</span><span style="color:#ABB2BF;">++){</span></span>
<span class="line"><span style="color:#61AFEF;">            if</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">m</span><span style="color:#ABB2BF;">!=k&amp;&amp;</span><span style="color:#E06C75;font-style:italic;">m</span><span style="color:#ABB2BF;">!=s){</span></span>
<span class="line"><span style="color:#E5C07B;">            array</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">push</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">parseInt</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">inputs</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">m</span><span style="color:#ABB2BF;">].</span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#E5C07B;">        var</span><span style="color:#E5C07B;"> count</span><span style="color:#ABB2BF;">=</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">        for</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">var</span><span style="color:#E5C07B;"> s</span><span style="color:#ABB2BF;">=</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">;</span><span style="color:#E5C07B;">s</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">array</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">length</span><span style="color:#ABB2BF;">;</span><span style="color:#E5C07B;">s</span><span style="color:#ABB2BF;">++){</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">            count</span><span style="color:#ABB2BF;">+=</span><span style="color:#E5C07B;">array</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">s</span><span style="color:#ABB2BF;">];</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // alert(count);</span></span>
<span class="line"><span style="color:#E5C07B;">        alert</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">array</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">length</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">        pingjun</span><span style="color:#ABB2BF;">=</span><span style="color:#E5C07B;">count</span><span style="color:#ABB2BF;">/</span><span style="color:#E5C07B;">array</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">length</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">alert</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">pingjun</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//方法二：</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   // function demo() {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   //     var str = document.getElementById(&quot;getScore&quot;).value;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   //      var score = new Array();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   //      score= str.split(&quot;,&quot;);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   //      var max = 0;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   //      var min = 10000;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   //      var sum = 0;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   //      var ave = 0;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   //      for(i=0;i&lt;score.length;i++){</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   //          if(score[i]&gt;max)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   //          {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   //              max = score[i];</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   //          }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   //          if(score[i]&lt;min)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   //          {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   //              min = score[i];</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   //          }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   //          sum = sum+score[i];</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   //      }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   //      ave = (sum-max-min)/8;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   //     document.getElementById(&quot;txt&quot;).innerHTML = ave;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   //  }</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E5C07B;">script</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br></div></div><p>一、打印三角形</p><ul><li><p>**</p><hr><hr></li></ul><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> &lt;=</span><span style="color:#D19A66;"> 4</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#C678DD;">        for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> j</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">j</span><span style="color:#56B6C2;"> &lt;=</span><span style="color:#E06C75;"> i</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">j</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#E5C07B;">            document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;*&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#E5C07B;">        document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;&lt;br&gt;&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><ul><li><pre><code>**
</code></pre></li></ul><hr><hr><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> &lt;=</span><span style="color:#D19A66;"> 4</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#C678DD;">        for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> k</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 4</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">k</span><span style="color:#56B6C2;"> &gt;</span><span style="color:#E06C75;"> i</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">k</span><span style="color:#56B6C2;">--</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#E5C07B;">            document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;&amp;nbsp;&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> j</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">j</span><span style="color:#56B6C2;"> &lt;=</span><span style="color:#E06C75;"> i</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">j</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#E5C07B;">            document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;*&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#E5C07B;">        document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;&lt;br&gt;&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> &lt;=</span><span style="color:#D19A66;"> 4</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#C678DD;">        for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> k</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">k</span><span style="color:#56B6C2;"> &lt;=</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">4</span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">);</span><span style="color:#E06C75;">k</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#E5C07B;">            document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;&amp;nbsp;&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> j</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">j</span><span style="color:#56B6C2;"> &lt;=</span><span style="color:#E06C75;"> i</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">j</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#E5C07B;">            document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;*&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#E5C07B;">        document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;&lt;br&gt;&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><hr><hr><p>*_ ​ _</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> &gt;</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">--</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#C678DD;">        for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> k</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 4</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">k</span><span style="color:#56B6C2;">&gt;</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">k</span><span style="color:#56B6C2;">--</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#E5C07B;">            document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;&amp;nbsp;&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> j</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">j</span><span style="color:#56B6C2;">&lt;=</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">j</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#E5C07B;">            document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;*&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#E5C07B;">        document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;&lt;br&gt;&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><img src="http://img.voidcn.com/vcimg/static/loading.png" alt="分享图片"></p><hr><hr><p>**</p><ul><li></li></ul><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> &lt;=</span><span style="color:#D19A66;"> 4</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#C678DD;">        for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> j</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 4</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">j</span><span style="color:#56B6C2;"> &gt;=</span><span style="color:#E06C75;"> i</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">j</span><span style="color:#56B6C2;">--</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#E5C07B;">            document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;*&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#E5C07B;">        document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;&lt;br&gt;&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>* ​ ***</p><hr><hr><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">&lt;</span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#C678DD;">            for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> j</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">j</span><span style="color:#56B6C2;">&gt;</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">j</span><span style="color:#56B6C2;">--</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#E5C07B;">               document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">writeln</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;&amp;nbsp&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#C678DD;">            for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> k</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">k</span><span style="color:#56B6C2;">&lt;</span><span style="color:#D19A66;">2</span><span style="color:#56B6C2;">*</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">+</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">k</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#E5C07B;">               document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">writeln</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;*&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#E5C07B;">            document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">writeln</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;&lt;/br&gt;&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">         }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>二、水仙花数 三位数 各个数字的立方和等于本身，153 1<em>1</em>1 + 5<em>5</em>5 + 3<em>3</em>3 = 153</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 100</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> &lt;</span><span style="color:#D19A66;"> 999</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#C678DD;">        var</span><span style="color:#E06C75;"> bai</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> parseInt</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">/</span><span style="color:#D19A66;">100</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">        var</span><span style="color:#E06C75;"> shi</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> parseInt</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">bai</span><span style="color:#56B6C2;">*</span><span style="color:#D19A66;">100</span><span style="color:#ABB2BF;">)</span><span style="color:#56B6C2;">/</span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">        var</span><span style="color:#E06C75;"> ge</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;"> -</span><span style="color:#E06C75;"> bai</span><span style="color:#56B6C2;">*</span><span style="color:#D19A66;">100</span><span style="color:#56B6C2;"> -</span><span style="color:#E06C75;"> shi</span><span style="color:#56B6C2;">*</span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">        if</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">bai</span><span style="color:#56B6C2;">*</span><span style="color:#E06C75;">bai</span><span style="color:#56B6C2;">*</span><span style="color:#E06C75;">bai</span><span style="color:#56B6C2;">+</span><span style="color:#E06C75;">shi</span><span style="color:#56B6C2;">*</span><span style="color:#E06C75;">shi</span><span style="color:#56B6C2;">*</span><span style="color:#E06C75;">shi</span><span style="color:#56B6C2;">+</span><span style="color:#E06C75;">ge</span><span style="color:#56B6C2;">*</span><span style="color:#E06C75;">ge</span><span style="color:#56B6C2;">*</span><span style="color:#E06C75;">ge</span><span style="color:#56B6C2;"> ==</span><span style="color:#E06C75;"> i</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#E5C07B;">            document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">  +</span><span style="color:#98C379;"> &quot;,&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>四、100 元购物卡，牙刷 5 元，香皂 2 元、洗发水 15 元 100 元正好花完有多少种可能</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> bs</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">    for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">&lt;=</span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#C678DD;">        for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> j</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">j</span><span style="color:#56B6C2;"> &lt;=</span><span style="color:#D19A66;"> 50</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">j</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#C678DD;">            for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> k</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">k</span><span style="color:#56B6C2;"> &lt;=</span><span style="color:#D19A66;"> 6</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">k</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#C678DD;">                if</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">*</span><span style="color:#D19A66;">5</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> j</span><span style="color:#56B6C2;">*</span><span style="color:#D19A66;">2</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> k</span><span style="color:#56B6C2;">*</span><span style="color:#D19A66;">5</span><span style="color:#56B6C2;"> ==</span><span style="color:#D19A66;"> 100</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#E06C75;">                    bs</span><span style="color:#56B6C2;">++</span></span>
<span class="line"><span style="color:#ABB2BF;">                }</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span><span style="color:#61AFEF;">alert</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">bs</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p><img src="http://img.voidcn.com/vcimg/static/loading.png" alt="分享图片"></p><p>100 内与 7 相关的数</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> &lt;=</span><span style="color:#D19A66;"> 100</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#C678DD;">        if</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">%</span><span style="color:#D19A66;">7</span><span style="color:#56B6C2;"> ==</span><span style="color:#D19A66;"> 0</span><span style="color:#56B6C2;"> ||</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;">%</span><span style="color:#D19A66;">10</span><span style="color:#56B6C2;"> ==</span><span style="color:#D19A66;"> 7</span><span style="color:#56B6C2;"> ||</span><span style="color:#61AFEF;"> parseInt</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">/</span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">==</span><span style="color:#D19A66;"> 7</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#E5C07B;">            document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">+</span><span style="color:#98C379;">&quot;,&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><img src="http://img.voidcn.com/vcimg/static/loading.png" alt="分享图片"></p><p>六、100 以内的质数、只能被 1 和自己整除</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> flag</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> true</span></span>
<span class="line"><span style="color:#C678DD;">    for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 2</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> &lt;</span><span style="color:#D19A66;"> 100</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#E06C75;">        flag</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> true</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">        for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> j</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 2</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">j</span><span style="color:#56B6C2;"> &lt;</span><span style="color:#E06C75;"> i</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">j</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#C678DD;">            if</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">%</span><span style="color:#E06C75;">j</span><span style="color:#56B6C2;"> ==</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#E06C75;">                flag</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> false</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">flag</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#E5C07B;">            document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;">‘，‘)</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p><img src="http://img.voidcn.com/vcimg/static/loading.png" alt="分享图片"></p><p>16、大马驮 2 石粮食，中马驮 1 石粮食，两头小马驮一石粮食，要用 100 匹马，驮 100 石粮食，该如何调配？</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> &lt;=</span><span style="color:#D19A66;"> 50</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#C678DD;">        for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> j</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">j</span><span style="color:#56B6C2;"> &lt;=</span><span style="color:#D19A66;"> 100</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">j</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#C678DD;">            for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> k</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">k</span><span style="color:#56B6C2;"> &lt;=</span><span style="color:#D19A66;"> 100</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">k</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#C678DD;">                if</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">*</span><span style="color:#D19A66;">2</span><span style="color:#56B6C2;">+</span><span style="color:#E06C75;">j</span><span style="color:#56B6C2;">*</span><span style="color:#D19A66;">1</span><span style="color:#56B6C2;">+</span><span style="color:#E06C75;">k</span><span style="color:#56B6C2;">/</span><span style="color:#D19A66;">2</span><span style="color:#56B6C2;"> ==</span><span style="color:#D19A66;"> 100</span><span style="color:#56B6C2;"> &amp;&amp;</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;">+</span><span style="color:#E06C75;">j</span><span style="color:#56B6C2;">+</span><span style="color:#E06C75;">k</span><span style="color:#56B6C2;"> ==</span><span style="color:#D19A66;"> 100</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#E5C07B;">                    document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;大马：&quot;</span><span style="color:#56B6C2;">+</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">+</span><span style="color:#98C379;">&quot;匹&quot;</span><span style="color:#56B6C2;">+</span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">                }</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><img src="http://img.voidcn.com/vcimg/static/loading.png" alt="分享图片"></p><p>17、有一个棋盘，有 64 个方格，在第一个方格里面放 1 粒芝麻重量是 0.00001kg，第二个里面放 2 粒，第三个里面放 4， 棋盘上放的所有芝麻的重量</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> sum</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">    for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> &lt;=</span><span style="color:#D19A66;"> 64</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#C678DD;">        var</span><span style="color:#E06C75;"> num</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">        for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> j</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">j</span><span style="color:#56B6C2;"> &lt;</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">j</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#E06C75;">            num</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> num</span><span style="color:#56B6C2;">*</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#E06C75;">        sum</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> sum</span><span style="color:#56B6C2;">+</span><span style="color:#E06C75;">num</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#61AFEF;">    alert</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">sum</span><span style="color:#56B6C2;">*</span><span style="color:#D19A66;">0.000</span><span style="color:#ABB2BF;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><img src="http://img.voidcn.com/vcimg/static/loading.png" alt="分享图片"></p><p>18、公园里有一只猴子和一堆桃子，猴子每天吃掉桃子总数的一半，把剩下一半中扔掉一个坏的。 到第七天的时候，猴子睁开眼发现只剩下一个桃子。问公园里刚开始有多少个桃子？</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> num</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">    for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 6</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> &gt;=</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">--</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#E06C75;">        num</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">num</span><span style="color:#56B6C2;">+</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">)</span><span style="color:#56B6C2;">*</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span><span style="color:#61AFEF;">alert</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">num</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h6 id="二、小明单位发了-100-元的购物卡-小明到超市买三类洗化用品-洗发水-15-元-香皂-2-元-牙刷-5-元-。要把-100-元整好花掉-可若有哪些购买结合" tabindex="-1">二、小明单位发了 100 元的购物卡，小明到超市买三类洗化用品，洗发水（15 元），香皂（2 元），牙刷（5 元）。要把 100 元整好花掉，可若有哪些购买结合？ <a class="header-anchor" href="#二、小明单位发了-100-元的购物卡-小明到超市买三类洗化用品-洗发水-15-元-香皂-2-元-牙刷-5-元-。要把-100-元整好花掉-可若有哪些购买结合" aria-label="Permalink to &quot;二、小明单位发了 100 元的购物卡，小明到超市买三类洗化用品，洗发水（15 元），香皂（2 元），牙刷（5 元）。要把 100 元整好花掉，可若有哪些购买结合？&quot;">​</a></h6><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">//a=洗发水，b=香皂，c=牙刷</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//100元能够买6瓶洗发水</span></span>
<span class="line"><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">a</span><span style="color:#56B6C2;"> &lt;=</span><span style="color:#D19A66;"> 6</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">a</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	//100元能够买50块香皂</span></span>
<span class="line"><span style="color:#C678DD;">	for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> b</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">b</span><span style="color:#56B6C2;"> &lt;=</span><span style="color:#D19A66;"> 50</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">b</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		//100元能够买20个牙刷</span></span>
<span class="line"><span style="color:#C678DD;">		for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> c</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">c</span><span style="color:#56B6C2;"> &lt;=</span><span style="color:#D19A66;"> 20</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">c</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//条件</span></span>
<span class="line"><span style="color:#C678DD;">			if</span><span style="color:#ABB2BF;"> (</span><span style="color:#D19A66;">15</span><span style="color:#56B6C2;"> *</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> +</span><span style="color:#D19A66;"> 2</span><span style="color:#56B6C2;"> *</span><span style="color:#E06C75;"> b</span><span style="color:#56B6C2;"> +</span><span style="color:#D19A66;"> 5</span><span style="color:#56B6C2;"> *</span><span style="color:#E06C75;"> c</span><span style="color:#56B6C2;"> ==</span><span style="color:#D19A66;"> 100</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">				document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;洗发水:&quot;</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> +</span><span style="color:#98C379;"> &quot;香皂:&quot;</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> b</span><span style="color:#56B6C2;"> +</span><span style="color:#98C379;"> &quot;牙刷:&quot;</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> c</span><span style="color:#56B6C2;"> +</span><span style="color:#98C379;"> &quot;&lt;hr /&gt;&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">			}</span></span>
<span class="line"><span style="color:#ABB2BF;">		}</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h5 id="三、打印出下列图形" tabindex="-1">三、打印出下列图形 <a class="header-anchor" href="#三、打印出下列图形" aria-label="Permalink to &quot;三、打印出下列图形&quot;">​</a></h5><p>●●●●●●●● 　　 ●●●●●●●● 　　 ●●●●●●●● 　　 ●●●●●●●● 　　 ●●●●●●●● 　　 ●●●●●●●● 　　 ●●●●●●●●c++</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"> //循环的行数</span></span>
<span class="line"><span style="color:#C678DD;">             for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> x</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">x</span><span style="color:#56B6C2;">&lt;=</span><span style="color:#D19A66;">7</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">x</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                 //循环的列数</span></span>
<span class="line"><span style="color:#C678DD;">                 for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> y</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">y</span><span style="color:#56B6C2;">&lt;=</span><span style="color:#D19A66;">8</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">y</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#E5C07B;">                     document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;●&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">                 }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">             //循环完每一行输出一个换行</span></span>
<span class="line"><span style="color:#E5C07B;">             document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;&lt;br /&gt;&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">             } 　　●　　●●　　●●●　　●●●●　　●●●●●</span></span>
<span class="line"><span style="color:#C678DD;"> for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> x</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">x</span><span style="color:#56B6C2;">&lt;=</span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">x</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#C678DD;">                 for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> y</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">y</span><span style="color:#56B6C2;">&lt;=</span><span style="color:#E06C75;">x</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">y</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#E5C07B;">                     document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;●&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">                 }</span></span>
<span class="line"><span style="color:#E5C07B;">             document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;&lt;br /&gt;&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">             }　　●●●●●　　●●●●　　●●●　　●●　　●</span></span>
<span class="line"><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> x</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">x</span><span style="color:#56B6C2;">&lt;=</span><span style="color:#D19A66;">6</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">x</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#C678DD;">                for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> y</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">y</span><span style="color:#56B6C2;">&lt;=</span><span style="color:#D19A66;">6</span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">x</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">y</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#E5C07B;">                    document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;●&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">                }</span></span>
<span class="line"><span style="color:#E5C07B;">            document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;&lt;br /&gt;&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">            }　　□□□□● 　　□□□●● 　　□□●●● 　　□●●●● 　　●●●●●</span></span>
<span class="line"><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> x</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">x</span><span style="color:#56B6C2;">&lt;=</span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">x</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#C678DD;">                 for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> y</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">y</span><span style="color:#56B6C2;">&lt;=</span><span style="color:#D19A66;">5</span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">x</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">y</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#E5C07B;">                     document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;□&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">                 }</span></span>
<span class="line"><span style="color:#C678DD;">                 for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> z</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">z</span><span style="color:#56B6C2;">&lt;=</span><span style="color:#E06C75;">x</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">z</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#E5C07B;">                     document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;●&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">                 }</span></span>
<span class="line"><span style="color:#E5C07B;">             document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;&lt;br /&gt;&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">             }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><h5 id="四、公园里有一只猴子和一堆桃子-猴子天天吃掉桃子总数的一半-把剩下一半中扔掉一个坏的。到第七天的时候-猴子睁开眼发现只剩下一个桃子。问公园里刚开始有多少个桃子" tabindex="-1">四、公园里有一只猴子和一堆桃子，猴子天天吃掉桃子总数的一半，把剩下一半中扔掉一个坏的。到第七天的时候，猴子睁开眼发现只剩下一个桃子。问公园里刚开始有多少个桃子？ <a class="header-anchor" href="#四、公园里有一只猴子和一堆桃子-猴子天天吃掉桃子总数的一半-把剩下一半中扔掉一个坏的。到第七天的时候-猴子睁开眼发现只剩下一个桃子。问公园里刚开始有多少个桃子" aria-label="Permalink to &quot;四、公园里有一只猴子和一堆桃子，猴子天天吃掉桃子总数的一半，把剩下一半中扔掉一个坏的。到第七天的时候，猴子睁开眼发现只剩下一个桃子。问公园里刚开始有多少个桃子？&quot;">​</a></h5><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">//最后一天剩下一个桃子</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> peach</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//反推</span></span>
<span class="line"><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> &lt;=</span><span style="color:#D19A66;"> 6</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E06C75;">	peach</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">peach</span><span style="color:#56B6C2;"> +</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">*</span><span style="color:#D19A66;"> 2</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#E5C07B;">document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;公园里刚开始有&quot;</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> peach</span><span style="color:#56B6C2;"> +</span><span style="color:#98C379;"> &quot;个桃子&quot;</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h5 id="五、某侦察队接到一项紧急任务-要求在-a、b、c、d、e、f-六个队员中尽量多地挑若干人-但有如下限制条件-●a-和-b-两人中至少去一人-●a-和-d-不能一块儿去-●a、e-和-f-三人中要派两人去-●b-和-c-都去或都不去-●c-和-d-两人中去一个-●-若-d-不去-则-e-也不去。-问应当让哪几我的去" tabindex="-1">五、某侦察队接到一项紧急任务，要求在 A、B、C、D、E、F 六个队员中尽量多地挑若干人，但有如下限制条件：<br> ●A 和 B 两人中至少去一人； ●A 和 D 不能一块儿去； ●A、E 和 F 三人中要派两人去； ●B 和 C 都去或都不去； ●C 和 D 两人中去一个； ● 若 D 不去，则 E 也不去。 问应当让哪几我的去？ <a class="header-anchor" href="#五、某侦察队接到一项紧急任务-要求在-a、b、c、d、e、f-六个队员中尽量多地挑若干人-但有如下限制条件-●a-和-b-两人中至少去一人-●a-和-d-不能一块儿去-●a、e-和-f-三人中要派两人去-●b-和-c-都去或都不去-●c-和-d-两人中去一个-●-若-d-不去-则-e-也不去。-问应当让哪几我的去" aria-label="Permalink to &quot;五、某侦察队接到一项紧急任务，要求在 A、B、C、D、E、F 六个队员中尽量多地挑若干人，但有如下限制条件：&lt;br /&gt; ●A 和 B 两人中至少去一人； ●A 和 D 不能一块儿去； ●A、E 和 F 三人中要派两人去； ●B 和 C 都去或都不去； ●C 和 D 两人中去一个； ● 若 D 不去，则 E 也不去。 问应当让哪几我的去？&quot;">​</a></h5><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">a</span><span style="color:#56B6C2;"> &lt;=</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">a</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">	for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> b</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">b</span><span style="color:#56B6C2;"> &lt;=</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">b</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">		for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> c</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">c</span><span style="color:#56B6C2;"> &lt;=</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">c</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">			for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> d</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">d</span><span style="color:#56B6C2;"> &lt;=</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">d</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">				for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> e</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">e</span><span style="color:#56B6C2;"> &lt;=</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">e</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">					for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> f</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">f</span><span style="color:#56B6C2;"> &lt;=</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">f</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">						//根据上面列出的条件,全都加到判断中,符合条件的就是最终的结果</span></span>
<span class="line"><span style="color:#C678DD;">						if</span><span style="color:#ABB2BF;"> (</span></span>
<span class="line"><span style="color:#E06C75;">							a</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> b</span><span style="color:#56B6C2;"> &gt;=</span><span style="color:#D19A66;"> 1</span><span style="color:#56B6C2;"> &amp;&amp;</span></span>
<span class="line"><span style="color:#E06C75;">							a</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> d</span><span style="color:#56B6C2;"> !=</span><span style="color:#D19A66;"> 2</span><span style="color:#56B6C2;"> &amp;&amp;</span></span>
<span class="line"><span style="color:#E06C75;">							a</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> e</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> f</span><span style="color:#56B6C2;"> ==</span><span style="color:#D19A66;"> 2</span><span style="color:#56B6C2;"> &amp;&amp;</span></span>
<span class="line"><span style="color:#E06C75;">							b</span><span style="color:#56B6C2;"> ==</span><span style="color:#E06C75;"> c</span><span style="color:#56B6C2;"> &amp;&amp;</span></span>
<span class="line"><span style="color:#E06C75;">							c</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> d</span><span style="color:#56B6C2;"> ==</span><span style="color:#D19A66;"> 1</span><span style="color:#56B6C2;"> &amp;&amp;</span></span>
<span class="line"><span style="color:#ABB2BF;">							(</span><span style="color:#E06C75;">d</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> e</span><span style="color:#56B6C2;"> ==</span><span style="color:#D19A66;"> 0</span><span style="color:#56B6C2;"> ||</span><span style="color:#E06C75;"> d</span><span style="color:#56B6C2;"> ==</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">						) {</span></span>
<span class="line"><span style="color:#E5C07B;">							document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#98C379;">								&quot;a=&quot;</span><span style="color:#56B6C2;"> +</span></span>
<span class="line"><span style="color:#E06C75;">									a</span><span style="color:#56B6C2;"> +</span></span>
<span class="line"><span style="color:#98C379;">									&quot;&lt;br /&gt;b=&quot;</span><span style="color:#56B6C2;"> +</span></span>
<span class="line"><span style="color:#E06C75;">									b</span><span style="color:#56B6C2;"> +</span></span>
<span class="line"><span style="color:#98C379;">									&quot;&lt;br /&gt;c=&quot;</span><span style="color:#56B6C2;"> +</span></span>
<span class="line"><span style="color:#E06C75;">									c</span><span style="color:#56B6C2;"> +</span></span>
<span class="line"><span style="color:#98C379;">									&quot;&lt;br /&gt;d=&quot;</span><span style="color:#56B6C2;"> +</span></span>
<span class="line"><span style="color:#E06C75;">									d</span><span style="color:#56B6C2;"> +</span></span>
<span class="line"><span style="color:#98C379;">									&quot;&lt;br /&gt;e=&quot;</span><span style="color:#56B6C2;"> +</span></span>
<span class="line"><span style="color:#E06C75;">									e</span><span style="color:#56B6C2;"> +</span></span>
<span class="line"><span style="color:#98C379;">									&quot;&lt;br /&gt;f=&quot;</span><span style="color:#56B6C2;"> +</span></span>
<span class="line"><span style="color:#E06C75;">									f</span></span>
<span class="line"><span style="color:#ABB2BF;">							);</span></span>
<span class="line"><span style="color:#ABB2BF;">						}</span></span>
<span class="line"><span style="color:#ABB2BF;">					}</span></span>
<span class="line"><span style="color:#ABB2BF;">				}</span></span>
<span class="line"><span style="color:#ABB2BF;">			}</span></span>
<span class="line"><span style="color:#ABB2BF;">		}</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><h5 id="六、循环输出-1-100-之间数字的和" tabindex="-1">六、循环输出 1~100 之间数字的和 <a class="header-anchor" href="#六、循环输出-1-100-之间数字的和" aria-label="Permalink to &quot;六、循环输出 1~100 之间数字的和&quot;">​</a></h5><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> sum</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> &lt;=</span><span style="color:#D19A66;"> 100</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E06C75;">	sum</span><span style="color:#56B6C2;"> +=</span><span style="color:#E06C75;"> i</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#E5C07B;">document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">sum</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h5 id="七、1-100-奇数和" tabindex="-1">七、1~100 奇数和 <a class="header-anchor" href="#七、1-100-奇数和" aria-label="Permalink to &quot;七、1~100 奇数和&quot;">​</a></h5><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> sum</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> &lt;=</span><span style="color:#D19A66;"> 100</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> +=</span><span style="color:#D19A66;"> 2</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E06C75;">	sum</span><span style="color:#56B6C2;"> +=</span><span style="color:#E06C75;"> i</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#E5C07B;">document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">sum</span><span style="color:#56B6C2;"> +</span><span style="color:#98C379;"> &quot;&lt;br /&gt;&quot;</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h5 id="八、1-100-偶数和" tabindex="-1">八、1~100 偶数和 <a class="header-anchor" href="#八、1-100-偶数和" aria-label="Permalink to &quot;八、1~100 偶数和&quot;">​</a></h5><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> sum</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 2</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> &lt;=</span><span style="color:#D19A66;"> 100</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> +=</span><span style="color:#D19A66;"> 2</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E06C75;">	sum</span><span style="color:#56B6C2;"> +=</span><span style="color:#E06C75;"> i</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#E5C07B;">document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">sum</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h5 id="九、99-乘法表倒着写-table" tabindex="-1">九、99 乘法表倒着写（table） <a class="header-anchor" href="#九、99-乘法表倒着写-table" aria-label="Permalink to &quot;九、99 乘法表倒着写（table）&quot;">​</a></h5><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;&lt;table border=1 style=border-collapse:collapse&gt;&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 9</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> &gt;=</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">--</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">	document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;&lt;tr&gt;&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">	for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> j</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">j</span><span style="color:#56B6C2;"> &lt;=</span><span style="color:#E06C75;"> i</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">j</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">		document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;&lt;td&gt;&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">		document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">j</span><span style="color:#56B6C2;"> +</span><span style="color:#98C379;"> &quot;x&quot;</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;"> +</span><span style="color:#98C379;"> &quot;=&quot;</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;"> *</span><span style="color:#E06C75;"> j</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">		document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;&lt;/td&gt;&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#E5C07B;">	document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;&lt;/tr&gt;&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#E5C07B;">document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;&lt;/table&gt;&quot;</span><span style="color:#56B6C2;"> +</span><span style="color:#98C379;"> &quot;&lt;br /&gt;&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E06C75;">spa</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h5 id="十、五个小朋友排成一队" tabindex="-1">十、五个小朋友排成一队 <a class="header-anchor" href="#十、五个小朋友排成一队" aria-label="Permalink to &quot;十、五个小朋友排成一队&quot;">​</a></h5><p>问第一个多大了，第一个说比第二个大两岁， 　　问第二个，第二个说比第三个大两岁，以此类推。 　　问第五个小朋友几岁了，第五个小朋友说 3 岁了。 　　问第一个小朋友几岁？code</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> &lt;=</span><span style="color:#D19A66;"> 5</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E06C75;">	a</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> +</span><span style="color:#D19A66;"> 2</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#E5C07B;">document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;第一个小朋友&quot;</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> +</span><span style="color:#98C379;"> &quot;岁了&quot;</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h5 id="十一、凑钱-1-2-5-凑-20-元钱有多少种可能" tabindex="-1">十一、凑钱 1,2，5 凑 20 元钱有多少种可能 <a class="header-anchor" href="#十一、凑钱-1-2-5-凑-20-元钱有多少种可能" aria-label="Permalink to &quot;十一、凑钱 1,2，5 凑 20 元钱有多少种可能&quot;">​</a></h5><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">a</span><span style="color:#56B6C2;"> &lt;=</span><span style="color:#D19A66;"> 20</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">a</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">	for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> b</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">b</span><span style="color:#56B6C2;"> &lt;=</span><span style="color:#D19A66;"> 10</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">b</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">		for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> c</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">c</span><span style="color:#56B6C2;"> &lt;=</span><span style="color:#D19A66;"> 4</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">c</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">			if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">a</span><span style="color:#56B6C2;"> +</span><span style="color:#D19A66;"> 2</span><span style="color:#56B6C2;"> *</span><span style="color:#E06C75;"> b</span><span style="color:#56B6C2;"> +</span><span style="color:#D19A66;"> 5</span><span style="color:#56B6C2;"> *</span><span style="color:#E06C75;"> c</span><span style="color:#56B6C2;"> ==</span><span style="color:#D19A66;"> 20</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">				document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;一块：&quot;</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> +</span><span style="color:#98C379;"> &quot;两块：&quot;</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> b</span><span style="color:#56B6C2;"> +</span><span style="color:#98C379;"> &quot;五块：&quot;</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> c</span><span style="color:#56B6C2;"> +</span><span style="color:#98C379;"> &quot;&lt;hr /&gt;&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">			}</span></span>
<span class="line"><span style="color:#ABB2BF;">		}</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h5 id="十二、有一对幼兔-幼兔-1-个月后长成小兔-小兔-1-个月后长成成兔并生下一对幼兔-问几年后有多少对兔子-幼兔、小兔、成兔对数分别是多少" tabindex="-1">十二、有一对幼兔，幼兔 1 个月后长成小兔，小兔 1 个月后长成成兔并生下一对幼兔，问几年后有多少对兔子，幼兔、小兔、成兔对数分别是多少 <a class="header-anchor" href="#十二、有一对幼兔-幼兔-1-个月后长成小兔-小兔-1-个月后长成成兔并生下一对幼兔-问几年后有多少对兔子-幼兔、小兔、成兔对数分别是多少" aria-label="Permalink to &quot;十二、有一对幼兔，幼兔 1 个月后长成小兔，小兔 1 个月后长成成兔并生下一对幼兔，问几年后有多少对兔子，幼兔、小兔、成兔对数分别是多少&quot;">​</a></h5><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> a</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">c</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">sum</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">             for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">&lt;=</span><span style="color:#D19A66;">12</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                 //第一个月的时候</span></span>
<span class="line"><span style="color:#C678DD;">                 if</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">==</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#E06C75;">                     a</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">                     b</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">                     c</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">                    sum</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">                 }</span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">                     c</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> c</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> b</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">                     b</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> a</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">                     a</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> c</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">                     sum</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> b</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> c</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">                 }</span></span>
<span class="line"><span style="color:#E5C07B;">                 document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">+</span><span style="color:#98C379;">&quot;个月后有幼兔：&quot;</span><span style="color:#56B6C2;">+</span><span style="color:#E06C75;">a</span><span style="color:#56B6C2;">+</span><span style="color:#98C379;">&quot;对，小兔：&quot;</span><span style="color:#56B6C2;">+</span><span style="color:#E06C75;">b</span><span style="color:#56B6C2;">+</span><span style="color:#98C379;">&quot;对，成兔：&quot;</span><span style="color:#56B6C2;">+</span><span style="color:#E06C75;">c</span><span style="color:#56B6C2;">+</span><span style="color:#98C379;">&quot;对；一共：&quot;</span><span style="color:#56B6C2;">+</span><span style="color:#E06C75;">sum</span><span style="color:#56B6C2;">+</span><span style="color:#98C379;">&quot;对。&lt;hr /&gt;&quot;</span><span style="color:#ABB2BF;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h5 id="_1-三、打印出全部的-水仙花数-所谓-水仙花数-是指一个三位数-其各位数字立方和等于该数自己" tabindex="-1">1 三、打印出全部的 &quot;水仙花数 &quot;，所谓 &quot;水仙花数 &quot;是指一个三位数，其各位数字立方和等于该数自己 <a class="header-anchor" href="#_1-三、打印出全部的-水仙花数-所谓-水仙花数-是指一个三位数-其各位数字立方和等于该数自己" aria-label="Permalink to &quot;1 三、打印出全部的 &quot;水仙花数 &quot;，所谓 &quot;水仙花数 &quot;是指一个三位数，其各位数字立方和等于该数自己&quot;">​</a></h5><p>例如：153 是一个 &quot;水仙花数 &quot;，由于 153=1 的三次方＋ 5 的三次方＋ 3 的三次方。orm</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 100</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> &lt;</span><span style="color:#D19A66;"> 1000</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">	var</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> parseInt</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> %</span><span style="color:#D19A66;"> 10</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">//个</span></span>
<span class="line"><span style="color:#C678DD;">	var</span><span style="color:#E06C75;"> b</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> parseInt</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> /</span><span style="color:#D19A66;"> 10</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">%</span><span style="color:#D19A66;"> 10</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">//十</span></span>
<span class="line"><span style="color:#C678DD;">	var</span><span style="color:#E06C75;"> c</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> parseInt</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> /</span><span style="color:#D19A66;"> 100</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">//百</span></span>
<span class="line"><span style="color:#C678DD;">	if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">a</span><span style="color:#56B6C2;"> *</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> *</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> b</span><span style="color:#56B6C2;"> *</span><span style="color:#E06C75;"> b</span><span style="color:#56B6C2;"> *</span><span style="color:#E06C75;"> b</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> c</span><span style="color:#56B6C2;"> *</span><span style="color:#E06C75;"> c</span><span style="color:#56B6C2;"> *</span><span style="color:#E06C75;"> c</span><span style="color:#56B6C2;"> ==</span><span style="color:#E06C75;"> i</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">		document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;水仙花数：&quot;</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;"> +</span><span style="color:#98C379;"> &quot;&lt;hr /&gt;&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h5 id="_1-四、经过-for-循环实现百钱买百-🐔-的题-公鸡-5-元每只-母鸡-3-元每只-小鸡-3-只-1-元-100-元买一百只鸡多少种办法" tabindex="-1">1 四、经过 for 循环实现百钱买百 🐔 的题:公鸡 5 元每只，母鸡 3 元每只，小鸡 3 只 1 元，100 元买一百只鸡多少种办法 <a class="header-anchor" href="#_1-四、经过-for-循环实现百钱买百-🐔-的题-公鸡-5-元每只-母鸡-3-元每只-小鸡-3-只-1-元-100-元买一百只鸡多少种办法" aria-label="Permalink to &quot;1 四、经过 for 循环实现百钱买百 🐔 的题:公鸡 5 元每只，母鸡 3 元每只，小鸡 3 只 1 元，100 元买一百只鸡多少种办法&quot;">​</a></h5><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">a</span><span style="color:#56B6C2;"> &lt;=</span><span style="color:#D19A66;"> 20</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">a</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">	for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> b</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">b</span><span style="color:#56B6C2;"> &lt;=</span><span style="color:#D19A66;"> 33</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">b</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">		var</span><span style="color:#E06C75;"> c</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 100</span><span style="color:#56B6C2;"> -</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> -</span><span style="color:#E06C75;"> b</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">		if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">a</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> b</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> c</span><span style="color:#56B6C2;"> ==</span><span style="color:#D19A66;"> 100</span><span style="color:#56B6C2;"> &amp;&amp;</span><span style="color:#D19A66;"> 5</span><span style="color:#56B6C2;"> *</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> +</span><span style="color:#D19A66;"> 3</span><span style="color:#56B6C2;"> *</span><span style="color:#E06C75;"> b</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> c</span><span style="color:#56B6C2;"> /</span><span style="color:#D19A66;"> 3</span><span style="color:#56B6C2;"> ==</span><span style="color:#D19A66;"> 100</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">			document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;公鸡:&quot;</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> +</span><span style="color:#98C379;"> &quot;母鸡:&quot;</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> b</span><span style="color:#56B6C2;"> +</span><span style="color:#98C379;"> &quot;小鸡:&quot;</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> c</span><span style="color:#56B6C2;"> +</span><span style="color:#98C379;"> &quot;&lt;hr /&gt;&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">		}</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#E5C07B;">document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;&lt;table border=1 style=border-collapse:collapse&gt;&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 9</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> &gt;=</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">--</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">	document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;&lt;tr&gt;&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">	for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> j</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">j</span><span style="color:#56B6C2;"> &lt;=</span><span style="color:#E06C75;"> i</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">j</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">		document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;&lt;td&gt;&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">		document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">j</span><span style="color:#56B6C2;"> +</span><span style="color:#98C379;"> &quot;x&quot;</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;"> +</span><span style="color:#98C379;"> &quot;=&quot;</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;"> *</span><span style="color:#E06C75;"> j</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">		document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;&lt;/td&gt;&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#E5C07B;">	document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;&lt;/tr&gt;&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#E5C07B;">document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;&lt;/table&gt;&quot;</span><span style="color:#56B6C2;"> +</span><span style="color:#98C379;"> &quot;&lt;br /&gt;&quot;</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><hr><h4 id="正则表达式练习" tabindex="-1">正则表达式练习 <a class="header-anchor" href="#正则表达式练习" aria-label="Permalink to &quot;正则表达式练习&quot;">​</a></h4><p>1 实现简单模板引擎 code</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> str</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &#39;个人名字是{{name}},年龄{{age}}&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> data</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">    name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;小葱&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    age</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">17</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> template</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">str</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">data</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E5C07B;"> str</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">replace</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">/{{(.</span><span style="color:#D19A66;">+?</span><span style="color:#E06C75;">)}}/</span><span style="color:#C678DD;">g</span><span style="color:#ABB2BF;">,</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">        return</span><span style="color:#E06C75;"> data</span><span style="color:#ABB2BF;">[</span><span style="color:#E5C07B;">arguments</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">]]</span></span>
<span class="line"><span style="color:#ABB2BF;">    })</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>2 给一个连字符串例如：get-element-by-id 转化成驼峰形 模板引擎</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> toHump</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">str</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E5C07B;"> str</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">replace</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">/-(\\w)/</span><span style="color:#C678DD;">g</span><span style="color:#ABB2BF;">,</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#C678DD;">        return</span><span style="color:#E5C07B;"> arguments</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">].</span><span style="color:#61AFEF;">toUpperCase</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">    })</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>3 分割数字每三个以逗号分割 element</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> str</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;12345678901890&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> numSplit</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">str</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E5C07B;"> str</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">replace</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">/(\\d)(?=(\\d</span><span style="color:#D19A66;">{3}</span><span style="color:#E06C75;">)</span><span style="color:#D19A66;">+</span><span style="color:#C678DD;">$</span><span style="color:#E06C75;">)/</span><span style="color:#C678DD;">g</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;$1,&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">numSplit</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">str</span><span style="color:#ABB2BF;">))</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><hr><h4 id="闭包练习题" tabindex="-1">闭包练习题 <a class="header-anchor" href="#闭包练习题" aria-label="Permalink to &quot;闭包练习题&quot;">​</a></h4><h2 id="题目描述" tabindex="-1">题目描述 <a class="header-anchor" href="#题目描述" aria-label="Permalink to &quot;题目描述&quot;">​</a></h2><p>实现函数 makeClosures，调用以后知足以下条件： 一、返回一个函数数组 result，长度与 arr 相同 二、运行 result 中第 i 个函数，即 result<a href="./">i</a>，结果与 fn(arr[i]) 相同</p><p>示例 1</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#D19A66;"> 1</span><span style="color:#7F848E;font-style:italic;"> //参考《JavaScript高级程序设计》的典型方法</span></span>
<span class="line"><span style="color:#D19A66;"> 2</span><span style="color:#C678DD;"> function</span><span style="color:#61AFEF;"> makeClosures</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">arr</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">fn</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#D19A66;"> 3</span><span style="color:#C678DD;">     var</span><span style="color:#E06C75;"> result</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Array</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#D19A66;"> 4</span><span style="color:#C678DD;">     for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">&lt;</span><span style="color:#E5C07B;">arr</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#D19A66;"> 5</span><span style="color:#E06C75;">         result</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">num</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#D19A66;"> 6</span><span style="color:#C678DD;">             return</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"><span style="color:#D19A66;"> 7</span><span style="color:#C678DD;">                 return</span><span style="color:#61AFEF;"> fn</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">num</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#D19A66;"> 8</span></span>
<span class="line"><span style="color:#D19A66;"> 9</span><span style="color:#ABB2BF;">             }</span></span>
<span class="line"><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">         }(</span><span style="color:#E06C75;">arr</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">]);</span></span>
<span class="line"><span style="color:#D19A66;">11</span><span style="color:#ABB2BF;">     }</span></span>
<span class="line"><span style="color:#D19A66;">12</span><span style="color:#C678DD;">     return</span><span style="color:#E06C75;"> result</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D19A66;">13</span><span style="color:#ABB2BF;"> }</span></span>
<span class="line"><span style="color:#D19A66;">14</span></span>
<span class="line"><span style="color:#D19A66;">15</span><span style="color:#7F848E;font-style:italic;"> //使用ES5的bind()方法</span></span>
<span class="line"><span style="color:#D19A66;">16</span><span style="color:#C678DD;"> function</span><span style="color:#61AFEF;"> makeClosures</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">arr</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">fn</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#D19A66;">17</span><span style="color:#C678DD;">     var</span><span style="color:#E06C75;"> result</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Array</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#D19A66;">18</span><span style="color:#C678DD;">     for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">&lt;</span><span style="color:#E5C07B;">arr</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#D19A66;">19</span><span style="color:#E06C75;">         result</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> fn</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">bind</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">null</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">arr</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">]);</span></span>
<span class="line"><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">     }</span></span>
<span class="line"><span style="color:#D19A66;">21</span><span style="color:#C678DD;">     return</span><span style="color:#E06C75;"> result</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D19A66;">22</span><span style="color:#ABB2BF;"> }</span></span>
<span class="line"><span style="color:#D19A66;">23</span></span>
<span class="line"><span style="color:#D19A66;">24</span><span style="color:#7F848E;font-style:italic;"> //使用forEach()</span></span>
<span class="line"><span style="color:#D19A66;">25</span><span style="color:#C678DD;"> function</span><span style="color:#61AFEF;"> makeClosures</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">arr</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">fn</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#D19A66;">26</span><span style="color:#C678DD;">     var</span><span style="color:#E06C75;"> result</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Array</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#D19A66;">27</span><span style="color:#E5C07B;">     arr</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">forEach</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">curr</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#D19A66;">28</span><span style="color:#E5C07B;">         result</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">push</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">(){</span><span style="color:#C678DD;">return</span><span style="color:#61AFEF;"> fn</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">curr</span><span style="color:#ABB2BF;">)});</span></span>
<span class="line"><span style="color:#D19A66;">29</span><span style="color:#ABB2BF;">     })</span></span>
<span class="line"><span style="color:#D19A66;">30</span><span style="color:#C678DD;">     return</span><span style="color:#E06C75;"> result</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D19A66;">31</span><span style="color:#ABB2BF;"> }</span></span>
<span class="line"><span style="color:#D19A66;">32</span></span>
<span class="line"><span style="color:#D19A66;">33</span><span style="color:#7F848E;font-style:italic;"> //使用let</span></span>
<span class="line"><span style="color:#D19A66;">34</span><span style="color:#C678DD;"> function</span><span style="color:#61AFEF;"> makeClosures</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">arr</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">fn</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#D19A66;">35</span><span style="color:#C678DD;">     var</span><span style="color:#E06C75;"> result</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Array</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#D19A66;">36</span><span style="color:#C678DD;">     for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">&lt;</span><span style="color:#E5C07B;">arr</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#D19A66;">37</span><span style="color:#E06C75;">         result</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"><span style="color:#D19A66;">38</span><span style="color:#C678DD;">             return</span><span style="color:#61AFEF;"> fn</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">arr</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">]); </span><span style="color:#7F848E;font-style:italic;">//let声明的变量只在let所在代码块内有效，所以每次循环的i都是一个新的变量</span></span>
<span class="line"><span style="color:#D19A66;">39</span><span style="color:#ABB2BF;">         };</span></span>
<span class="line"><span style="color:#D19A66;">40</span><span style="color:#ABB2BF;">     }</span></span>
<span class="line"><span style="color:#D19A66;">41</span><span style="color:#C678DD;">     return</span><span style="color:#E06C75;"> result</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D19A66;">42</span><span style="color:#ABB2BF;"> }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br></div></div><hr><h4 id="问题-1-作用域-scope" tabindex="-1">问题 1: 作用域（Scope） <a class="header-anchor" href="#问题-1-作用域-scope" aria-label="Permalink to &quot;问题 1: 作用域（Scope）&quot;">​</a></h4><p>考虑以下代码：</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">   var</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> b</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 5</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">})();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>控制台（console）会打印出什么？</p><p>答案</p><p>上述代码会打印出 5。</p><p>这个问题的陷阱就是，在立即执行函数表达式（IIFE）中，有两个赋值，但是其中变量 a 使用关键词 var 来声明。这就意味着 a 是这个函数的局部变量。与此相反，b 被分配给了全局作用域（译注：也就是全局变量）。</p><p>这个问题另一个陷阱就是，在函数中没有使用”严格模式” (&#39;use strict&#39;😉。如果 严格模式开启，那么代码就会报错 ” Uncaught ReferenceError: b is not defined” 。请记住，如果这是预期的行为，严格模式要求你显式地引用全局作用域。所以，你需要像下面这么写：</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#98C379;">   &#39;use strict&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">   var</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> window</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">b</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 5</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">})();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h4 id="问题-2-创建-原生-native-方法" tabindex="-1">问题 2: 创建 “原生(native)” 方法 <a class="header-anchor" href="#问题-2-创建-原生-native-方法" aria-label="Permalink to &quot;问题 2: 创建 “原生(native)” 方法&quot;">​</a></h4><p>在 String 对象上定义一个 repeatify 函数。这个函数接受一个整数参数，来明确字符串需要重复几次。这个函数要求字符串重复指定的次数。举个例子：</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;hello&#39;</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">repeatify</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">));</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>应该打印出 hellohellohello.</p><p>答案</p><p>一个可行的做法如下：</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">repeatify</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> String</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">repeatify</span><span style="color:#56B6C2;"> ||</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">times</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">   var</span><span style="color:#E06C75;"> str</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &#39;&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">   for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> &lt;</span><span style="color:#E06C75;"> times</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E06C75;">      str</span><span style="color:#56B6C2;"> +=</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">   }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">   return</span><span style="color:#E06C75;"> str</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>这个问题测试了开发人员对 javascript 中继承及原型(prototype)属性的知识。这也验证了开发人员是否有能力扩展原生数据类型功能（虽然不应该这么做）。</p><p>在这里，另一个关键点是，看你怎样避免重写可能已经定义了的方法。这可以通过在定义自己的方法之前，检测方法是否已经存在。</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">repeatify</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> String</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">repeatify</span><span style="color:#56B6C2;"> ||</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">times</span><span style="color:#ABB2BF;">) {</span><span style="color:#7F848E;font-style:italic;">/* code here */</span><span style="color:#ABB2BF;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>当你被问起去扩展一个 Javascript 方法时，这个技术非常有用。</p><p><strong>另一个</strong>：重复输出一个给定的字符串（str 第一个参数）n 次 （num 第二个参数），如果第二个参数 num 不是正数的时候，返回空字符串。</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> repeatStringNumTimes</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">str</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">num</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">  return</span><span style="color:#E06C75;"> str</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#61AFEF;">repeatStringNumTimes</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;abc&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>提供测试情况：</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">repeatStringNumTimes</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;*&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">//应该返回 &quot;***&quot;.</span></span>
<span class="line"><span style="color:#61AFEF;">repeatStringNumTimes</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;abc&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">//应该返回 &quot;abcabcabc&quot;.</span></span>
<span class="line"><span style="color:#61AFEF;">repeatStringNumTimes</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;abc&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">//应该返回 &quot;abcabcabcabc&quot;.</span></span>
<span class="line"><span style="color:#61AFEF;">repeatStringNumTimes</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;abc&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">//应该返回 &quot;abc&quot;.</span></span>
<span class="line"><span style="color:#61AFEF;">repeatStringNumTimes</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;*&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">8</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">//应该返回 &quot;********&quot;.</span></span>
<span class="line"><span style="color:#61AFEF;">repeatStringNumTimes</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;abc&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">//应该返回 &quot;&quot;.</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>解题思路：</p><p>三种方法：</p><blockquote><p>使用 <code>while</code> 循环 使用递归 使用 ES6 <code>repeat()</code></p></blockquote><h5 id="方法-1-通过-while-循环重复输出一个字符串" tabindex="-1">方法 1：通过 <code>while</code> 循环重复输出一个字符串 <a class="header-anchor" href="#方法-1-通过-while-循环重复输出一个字符串" aria-label="Permalink to &quot;方法 1：通过 \`while\` 循环重复输出一个字符串&quot;">​</a></h5><p>这可能是最常规的解题思路。while 语句只要指定的条件计算结果为 true 的时候，就执行其语句。while 语句结构大概是这样的：</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">while</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">condition</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E06C75;">  statement</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>在每次通过循环之前计算条件结果。如果条件为 true，则执行语句。如果条件为 false，则执行继续 while 循环之后的任何语句。</p><p>只要条件为 true，语句就会执行。 这里是解决方案：</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> repeatStringNumTimes</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">string</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">times</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // 第1步. 常见一个空字符，用来寄存重复的字符串</span></span>
<span class="line"><span style="color:#C678DD;">  var</span><span style="color:#E06C75;"> repeatedString</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // 第2步. 设置 while 循环的条件为(times &gt; 0) 作为检查</span></span>
<span class="line"><span style="color:#C678DD;">  while</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">times</span><span style="color:#56B6C2;"> &gt;</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">) { </span><span style="color:#7F848E;font-style:italic;">// 只要 times 大于 0, 语句就会执行</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 执行语句 statement</span></span>
<span class="line"><span style="color:#E06C75;">    repeatedString</span><span style="color:#56B6C2;"> +=</span><span style="color:#E06C75;"> string</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// 等价于 repeatedString = repeatedString + string;</span></span>
<span class="line"><span style="color:#E06C75;">    times</span><span style="color:#56B6C2;">--</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// 递减，等价于 times = times - 1;</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  /* while循环逻辑</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">          条件        T/F    repeatedString += string   结果          次数</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    1th   (3 &gt; 0)    true    &quot;&quot; + &quot;abc&quot;                &quot;abc&quot;          2</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    2th   (2 &gt; 0)    true    &quot;abc&quot; + &quot;abc&quot;             &quot;abcabc&quot;       1</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    3th   (1 &gt; 0)    true    &quot;abcabc&quot; + &quot;abc&quot;          &quot;abcabcabc&quot;    0</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    4th   (0 &gt; 0)    false</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // 第3步. 返回重复字符串</span></span>
<span class="line"><span style="color:#C678DD;">  return</span><span style="color:#E06C75;"> repeatedString</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// &quot;abcabcabc&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">repeatStringNumTimes</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;abc&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>去掉注释后：</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> repeatStringNumTimes</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">string</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">times</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">  var</span><span style="color:#E06C75;"> repeatedString</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">  while</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">times</span><span style="color:#56B6C2;"> &gt;</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E06C75;">    repeatedString</span><span style="color:#56B6C2;"> +=</span><span style="color:#E06C75;"> string</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">    times</span><span style="color:#56B6C2;">--</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#C678DD;">  return</span><span style="color:#E06C75;"> repeatedString</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#61AFEF;">repeatStringNumTimes</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;abc&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>好，轻松完成！不过这里还可以有几个变种：</p><p>对于老前端来说，首先一个可能会将字符串拼接，修改为 数组 join()拼接字符串，例如：</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> repeatStringNumTimes</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">string</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">times</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">  var</span><span style="color:#E06C75;"> repeatedArr</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> []; </span><span style="color:#7F848E;font-style:italic;">//</span></span>
<span class="line"><span style="color:#C678DD;">  while</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">times</span><span style="color:#56B6C2;"> &gt;</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">    repeatedArr</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">push</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">string</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E06C75;">    times</span><span style="color:#56B6C2;">--</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#C678DD;">  return</span><span style="color:#E5C07B;"> repeatedArr</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">join</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#61AFEF;">repeatStringNumTimes</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;abc&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>很多老前端都有用数组 join()拼接字符串的“情怀”，因为很早以前普遍认为数组 join()拼接字符串比字符串+拼接速度要快得多。不过现在未必，例如，V8 下+拼接字符串，要比数组 join()拼接字符串快。我用这两个方法测试了 3 万次重复输出，只相差了几毫秒。</p><p>另一个变种可以用 for 循环：</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> repeatStringNumTimes</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">string</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">times</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">  var</span><span style="color:#E06C75;"> repeatedString</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">  for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> &lt;</span><span style="color:#E06C75;"> times</span><span style="color:#ABB2BF;"> ;</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E06C75;">    repeatedString</span><span style="color:#56B6C2;"> +=</span><span style="color:#E06C75;"> string</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#C678DD;">  return</span><span style="color:#E06C75;"> repeatedString</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#61AFEF;">repeatStringNumTimes</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;abc&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h5 id="方法-2-通过条件判断和递归重复输出一个字符串" tabindex="-1">方法 2：通过条件判断和递归重复输出一个字符串 <a class="header-anchor" href="#方法-2-通过条件判断和递归重复输出一个字符串" aria-label="Permalink to &quot;方法 2：通过条件判断和递归重复输出一个字符串&quot;">​</a></h5><p>递归是一种通过重复地调用函数本身，直到它达到达结果为止的迭代操作的技术。为了使其正常工作，必须包括递归的一些关键特征。</p><p>第一种是基本情况：一个语句，通常在一个条件语句（如 if）中，停止递归。</p><p>第二种是递归情况：调用递归函数本身的语句。</p><p>这里是解决方案：</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> repeatStringNumTimes</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">string</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">times</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // 步骤1.检查 times 是否为负数，如果为 true 则返回一个空字符串</span></span>
<span class="line"><span style="color:#C678DD;">  if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">times</span><span style="color:#56B6C2;"> &lt;</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#98C379;"> &quot;&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // 步骤2.检查times是否等于1，如果是，返回字符串本身。</span></span>
<span class="line"><span style="color:#C678DD;">  if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">times</span><span style="color:#56B6C2;"> ===</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E06C75;"> string</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // 步骤3. 使用递归</span></span>
<span class="line"><span style="color:#C678DD;">  else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E06C75;"> string</span><span style="color:#56B6C2;"> +</span><span style="color:#61AFEF;"> repeatStringNumTimes</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">string</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">times</span><span style="color:#56B6C2;"> -</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// return &quot;abcabcabc&quot;;</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  /*</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    递归方法的第一部分你需要记住，你不会只调用一次，您将有好几个嵌套调用</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                 times       string + repeatStringNumTimes(string, times - 1)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      1st call   3           &quot;abc&quot; + (&quot;abc&quot;, 3 - 1)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      2nd call   2           &quot;abc&quot; + (&quot;abc&quot;, 2 - 1)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      3rd call   1           &quot;abc&quot; =&gt; if (times === 1) return string;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      4th call   0           &quot;&quot;   =&gt; if (times &lt;= 0) return &quot;&quot;;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    递归方法的第二部分</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      4th call will return      &quot;&quot;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      3rd call will return     &quot;abc&quot;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      2nd call will return     &quot;abc&quot;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      1st call will return     &quot;abc&quot;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    最后调用是串联所有字符串</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    return &quot;abc&quot; + &quot;abc&quot; + &quot;abc&quot;; // return &quot;abcabcabc&quot;;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  */</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#61AFEF;">repeatStringNumTimes</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;abc&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><p>去掉注释后：</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> repeatStringNumTimes</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">string</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">times</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">  if</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">times</span><span style="color:#56B6C2;"> &lt;</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#98C379;"> &quot;&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">  if</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">times</span><span style="color:#56B6C2;"> ===</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E06C75;"> string</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">  else</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E06C75;"> string</span><span style="color:#56B6C2;"> +</span><span style="color:#61AFEF;"> repeatStringNumTimes</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">string</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">times</span><span style="color:#56B6C2;"> -</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#61AFEF;">repeatStringNumTimes</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;abc&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h5 id="方法-3-使用-es6-repeat-方法重复输出一个字符串" tabindex="-1">方法 3：使用 ES6 <code>repeat()</code> 方法重复输出一个字符串 <a class="header-anchor" href="#方法-3-使用-es6-repeat-方法重复输出一个字符串" aria-label="Permalink to &quot;方法 3：使用 ES6 \`repeat()\` 方法重复输出一个字符串&quot;">​</a></h5><p>这个解决方案比较新潮，您将使用 String.prototype.repeat() 方法：</p><p>repeat() 方法构造并返回一个新字符串，该字符串包含被连接在一起的指定数量的字符串的副本。 这个方法有一个参数 count 表示重复次数，介于 0 和正无穷大之间的整数 : [0, +∞) 。表示在新构造的字符串中重复了多少遍原字符串。重复次数不能为负数。重复次数必须小于 infinity，且长度不会大于最长的字符串。</p><p>这里是解决方案：</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> repeatStringNumTimes</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">string</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">times</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  //步骤1.如果 times 为正数，返回重复的字符串</span></span>
<span class="line"><span style="color:#C678DD;">  if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">times</span><span style="color:#56B6C2;"> &gt;</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">) { </span><span style="color:#7F848E;font-style:italic;">// (3 &gt; 0) =&gt; true</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E5C07B;"> string</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">repeat</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">times</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// return &quot;abc&quot;.repeat(3); =&gt; return &quot;abcabcabc&quot;;</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  //Step 2. Else 如果times是负数，如果为true则返回一个空字符串</span></span>
<span class="line"><span style="color:#C678DD;">  else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#98C379;"> &quot;&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">repeatStringNumTimes</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;abc&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>去掉注释后：</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> repeatStringNumTimes</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">string</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">times</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">  if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">times</span><span style="color:#56B6C2;"> &gt;</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E5C07B;"> string</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">repeat</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">times</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">  else</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#98C379;"> &quot;&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#61AFEF;">repeatStringNumTimes</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;abc&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>您可以使用三元表达式作为 if/else 语句的快捷方式，如下所示：</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> repeatStringNumTimes</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">string</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">times</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">  return</span><span style="color:#E06C75;"> times</span><span style="color:#56B6C2;"> &gt;</span><span style="color:#D19A66;"> 0</span><span style="color:#C678DD;"> ?</span><span style="color:#E5C07B;"> string</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">repeat</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">times</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">:</span><span style="color:#98C379;"> &quot;&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#61AFEF;">repeatStringNumTimes</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;abc&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="问题-3-变量提升-hoisting" tabindex="-1">问题 3: 变量提升（Hoisting） <a class="header-anchor" href="#问题-3-变量提升-hoisting" aria-label="Permalink to &quot;问题 3: 变量提升（Hoisting）&quot;">​</a></h4><p>执行以下代码的结果是什么？为什么？</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> test</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E5C07B;">   console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">   console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">foo</span><span style="color:#ABB2BF;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">   var</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">   function</span><span style="color:#61AFEF;"> foo</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">      return</span><span style="color:#D19A66;"> 2</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">   }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">test</span><span style="color:#ABB2BF;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>答案</p><p>这段代码的执行结果是 undefined 和 2。</p><p>这个结果的原因是，变量和函数都被提升(hoisted) 到了函数体的顶部。因此，当打印变量 a 时，它虽存在于函数体（因为 a 已经被声明），但仍然是 undefined。换言之，上面的代码等同于下面的代码：</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> test</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">   var</span><span style="color:#E06C75;"> a</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">   function</span><span style="color:#61AFEF;"> foo</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">      return</span><span style="color:#D19A66;"> 2</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">   }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">   console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">   console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">foo</span><span style="color:#ABB2BF;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">   a</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">test</span><span style="color:#ABB2BF;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h4 id="问题-4-在-javascript-中-this是如何工作的" tabindex="-1">问题 4: 在 javascript 中，<code>this</code>是如何工作的 <a class="header-anchor" href="#问题-4-在-javascript-中-this是如何工作的" aria-label="Permalink to &quot;问题 4: 在 javascript 中，\`this\`是如何工作的&quot;">​</a></h4><p>以下代码的结果是什么？请解释你的答案。</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> fullname</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &#39;John Doe&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> obj</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">   fullname</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;Colin Ihrig&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">   prop</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">      fullname</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;Aurelio De Rosa&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#61AFEF;">      getFullname</span><span style="color:#ABB2BF;">: </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">         return</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">fullname</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#ABB2BF;">   }</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">obj</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">prop</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getFullname</span><span style="color:#ABB2BF;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> test</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> obj</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">prop</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">getFullname</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">test</span><span style="color:#ABB2BF;">());</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>答案</p><p>这段代码打印结果是：Aurelio De Rosa 和 John Doe 。原因是，JavaScript 中关键字 this 所引用的是函数上下文，取决于函数是如何调用的，而不是怎么被定义的。</p><p>在第一个 console.log()，getFullname()是作为 obj.prop 对象的函数被调用。因此，当前的上下文指代后者，并且函数返回这个对象的 fullname 属性。相反，当 getFullname()被赋值给 test 变量时，当前的上下文是全局对象 window，这是因为 test 被隐式地作为全局对象的属性。基于这一点，函数返回 window 的 fullname，在本例中即为第一行代码设置的。</p><h4 id="问题-5-call-和-apply" tabindex="-1">问题 5: call() 和 apply() <a class="header-anchor" href="#问题-5-call-和-apply" aria-label="Permalink to &quot;问题 5: call() 和 apply()&quot;">​</a></h4><p>修复前一个问题，让最后一个 console.log() 打印输出 Aurelio De Rosa.</p><p>答案</p><p>这个问题可以通过运用 call()或者 apply()方法强制转换上下文环境。如果你不了解这两个方法及它们的区别，我建议你看看这篇文章 function.call 和 function.apply 之间有和区别?。 下面的代码中，我用了 call(),但 apply()也能产生同样的结果：</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">test</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">call</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">obj</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prop</span><span style="color:#ABB2BF;">));</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>问题 6: 闭包（Closures）</p><p>考虑下面的代码：</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> nodes</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getElementsByTagName</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;button&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> &lt;</span><span style="color:#E5C07B;"> nodes</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E06C75;">   nodes</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">].</span><span style="color:#61AFEF;">addEventListener</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;click&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E5C07B;">      console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;You clicked element #&#39;</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> i</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">   });</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>请问，如果用户点击第一个和第四个按钮的时候，控制台分别打印的结果是什么？为什么？</p><p>答案</p><p>上面的代码考察了一个非常重要的 JavaScript 概念：闭包（Closures）。对于每一个 JavaScript 开发者来说，如果你想在网页中编写 5 行以上的代码，那么准确理解和恰当使用闭包是非常重要的。如果你想开始学习或者只是想简单地温习一下闭包，那么我强烈建议你去阅读 Colin Ihrig 这个教程：JavaScript Closures Demystified</p><p>也就是说，代码打印两次 You clicked element #NODES_LENGTH，其中 NODES_LENGTH 是 nodes 的结点个数。原因是在 for 循环完成后，变量 i 的值等于节点列表的长度。此外，因为 i 在代码添加处理程序的作用域中，该变量属于处理程序的闭包。你会记得，闭包中的变量的值不是静态的，因此 i 的值不是添加处理程序时的值（对于列表来说，第一个按钮为 0，对于第二个按钮为 1，依此类推）。在处理程序将被执行的时候，在控制台上将打印变量 i 的当前值，等于节点列表的长度。</p><h4 id="问题-7-闭包-closures" tabindex="-1">问题 7: 闭包（Closures） <a class="header-anchor" href="#问题-7-闭包-closures" aria-label="Permalink to &quot;问题 7: 闭包（Closures）&quot;">​</a></h4><p>修复上题的问题，使得点击第一个按钮时输出 0，点击第二个按钮时输出 1，依此类推。</p><p>答案</p><p>有多种办法可以解决这个问题，下面主要使用两种方法解决这个问题。</p><p>第一个解决方案使用立即执行函数表达式（IIFE）再创建一个闭包，从而得到所期望的 i 的值。实现此方法的代码如下：</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> nodes</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getElementsByTagName</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;button&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> &lt;</span><span style="color:#E5C07B;"> nodes</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E06C75;">   nodes</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">].</span><span style="color:#61AFEF;">addEventListener</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;click&#39;</span><span style="color:#ABB2BF;">, (</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">i</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">      return</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E5C07B;">         console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;You clicked element #&#39;</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> i</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#ABB2BF;">   })(</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>另一个解决方案不使用 IIFE，而是将函数移到循环的外面。这种方法由下面的代码实现：</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> handlerWrapper</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">i</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">   return</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E5C07B;">      console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;You clicked element #&#39;</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> i</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">   }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> nodes</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getElementsByTagName</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;button&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> &lt;</span><span style="color:#E5C07B;"> nodes</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E06C75;">   nodes</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">].</span><span style="color:#61AFEF;">addEventListener</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;click&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#61AFEF;">handlerWrapper</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>问题 8：数据类型</p><p>考虑如下代码：</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">typeof</span><span style="color:#D19A66;"> null</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">typeof</span><span style="color:#ABB2BF;"> {});</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">typeof</span><span style="color:#ABB2BF;"> []);</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">typeof</span><span style="color:#D19A66;"> undefined</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>答案</p><p>前面的问题似乎有点傻，但它考察 typeof 操作符的知识。很多 JavaScript 开发人员不知道 typeof 的一些特性。在此示例中，控制台将显示以下内容：</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E06C75;">object</span></span>
<span class="line"><span style="color:#E06C75;">object</span></span>
<span class="line"><span style="color:#E06C75;">object</span></span>
<span class="line"><span style="color:#D19A66;">undefined</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>最令人惊讶的输出结果可能是第三个。大多数开发人员认为 typeof []会返回 Array。如果你想测试一个变量是否为数组，您可以执行以下测试：</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> myArray</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> [];</span></span>
<span class="line"><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">myArray</span><span style="color:#C678DD;"> instanceof</span><span style="color:#E5C07B;"> Array</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   // do something...</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="问题-9-事件循环" tabindex="-1">问题 9：事件循环 <a class="header-anchor" href="#问题-9-事件循环" aria-label="Permalink to &quot;问题 9：事件循环&quot;">​</a></h4><p>下面代码运行结果是什么？请解释。</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> printing</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E5C07B;">   console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#61AFEF;">   setTimeout</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">() { </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">); }, </span><span style="color:#D19A66;">1000</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#61AFEF;">   setTimeout</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">() { </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">); }, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">   console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#61AFEF;">printing</span><span style="color:#ABB2BF;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>答案</p><p>输出结果：</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#D19A66;">1</span></span>
<span class="line"><span style="color:#D19A66;">4</span></span>
<span class="line"><span style="color:#D19A66;">3</span></span>
<span class="line"><span style="color:#D19A66;">2</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>想知道为什么输出顺序是这样的，你需要弄了解 setTimeout()做了什么，以及浏览器的事件循环原理。浏览器有一个事件循环用于检查事件队列，处理延迟的事件。UI 事件（例如，点击，滚动等），Ajax 回调，以及提供给 setTimeout()和 setInterval()的回调都会依次被事件循环处理。因此，当调用 setTimeout()函数时，即使延迟的时间被设置为 0，提供的回调也会被排队。回调会呆在队列中，直到指定的时间用完后，引擎开始执行动作（如果它在当前不执行其他的动作）。因此，即使 setTimeout()回调被延迟 0 毫秒，它仍然会被排队，并且直到函数中其他非延迟的语句被执行完了之后，才会执行。</p><p>有了这些认识，理解输出结果为“1”就容易了，因为它是函数的第一句并且没有使用 setTimeout()函数来延迟。接着输出“4”，因为它是没有被延迟的数字，也没有进行排队。然后，剩下了“2”，“3”，两者都被排队，但是前者需要等待一秒，后者等待 0 秒（这意味着引擎完成前两个输出之后马上进行）。这就解释了为什么“3”在“2”之前。</p><h4 id="问题-10-算法" tabindex="-1">问题 10：算法 <a class="header-anchor" href="#问题-10-算法" aria-label="Permalink to &quot;问题 10：算法&quot;">​</a></h4><p>写一个 isPrime()函数，当其为质数时返回 true，否则返回 false。</p><p>答案</p><p>我认为这是面试中最常见的问题之一。然而，尽管这个问题经常出现并且也很简单，但是从被面试人提供的答案中能很好地看出被面试人的数学和算法水平。</p><p>首先， 因为 JavaScript 不同于 C 或者 Java，因此你不能信任传递来的数据类型。如果面试官没有明确地告诉你，你应该询问他是否需要做输入检查，还是不进行检查直接写函数。严格上说，应该对函数的输入进行检查。</p><p>第二点要记住：负数不是质数。同样的，1 和 0 也不是，因此，首先测试这些数字。此外，2 是质数中唯一的偶数。没有必要用一个循环来验证 4,6,8。再则，如果一个数字不能被 2 整除，那么它不能被 4，6，8 等整除。因此，你的循环必须跳过这些数字。如果你测试输入偶数，你的算法将慢 2 倍（你测试双倍数字）。可以采取其他一些更明智的优化手段，我这里采用的是适用于大多数情况的。例如，如果一个数字不能被 5 整除，它也不会被 5 的倍数整除。所以，没有必要检测 10,15,20 等等。如果你深入了解这个问题的解决方案，我建议你去看相关的 Wikipedia 介绍。</p><p>最后一点，你不需要检查比输入数字的开方还要大的数字。我感觉人们会遗漏掉这一点，并且也不会因为此而获得消极的反馈。但是，展示出这一方面的知识会给你额外加分。</p><p>现在你具备了这个问题的背景知识，下面是总结以上所有考虑的解决方案：</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> isPrime</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">number</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   // If your browser doesn&#39;t support the method Number.isInteger of ECMAScript 6,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   // you can implement your own pretty easily</span></span>
<span class="line"><span style="color:#C678DD;">   if</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">typeof</span><span style="color:#E06C75;"> number</span><span style="color:#56B6C2;"> !==</span><span style="color:#98C379;"> &#39;number&#39;</span><span style="color:#56B6C2;"> ||</span><span style="color:#56B6C2;"> !</span><span style="color:#E5C07B;">Number</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">isInteger</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">number</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      // Alternatively you can throw an error.</span></span>
<span class="line"><span style="color:#C678DD;">      return</span><span style="color:#D19A66;"> false</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">   }</span></span>
<span class="line"><span style="color:#C678DD;">   if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">number</span><span style="color:#56B6C2;"> &lt;</span><span style="color:#D19A66;"> 2</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">      return</span><span style="color:#D19A66;"> false</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">   }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">   if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">number</span><span style="color:#56B6C2;"> ===</span><span style="color:#D19A66;"> 2</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">      return</span><span style="color:#D19A66;"> true</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">   } </span><span style="color:#C678DD;">else</span><span style="color:#C678DD;"> if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">number</span><span style="color:#56B6C2;"> %</span><span style="color:#D19A66;"> 2</span><span style="color:#56B6C2;"> ===</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">      return</span><span style="color:#D19A66;"> false</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">   }</span></span>
<span class="line"><span style="color:#C678DD;">   var</span><span style="color:#E06C75;"> squareRoot</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> Math</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">sqrt</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">number</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">   for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 3</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> &lt;=</span><span style="color:#E06C75;"> squareRoot</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> +=</span><span style="color:#D19A66;"> 2</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">      if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">number</span><span style="color:#56B6C2;"> %</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;"> ===</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">         return</span><span style="color:#D19A66;"> false</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#ABB2BF;">   }</span></span>
<span class="line"><span style="color:#C678DD;">   return</span><span style="color:#D19A66;"> true</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h4 id="问题-11-数据类型" tabindex="-1">问题 11：数据类型 <a class="header-anchor" href="#问题-11-数据类型" aria-label="Permalink to &quot;问题 11：数据类型&quot;">​</a></h4><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span><span style="color:#E06C75;">n </span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">};</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> b</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> a</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">a</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">x</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span><span style="color:#E06C75;">n </span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">};</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">a</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">x</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">b</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">x</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>解析：</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span><span style="color:#E06C75;">n </span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">};</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> b</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> a</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 此时b = {n:1};</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//如果此时a.n=4，那么b.n也等于4</span></span>
<span class="line"><span style="color:#E5C07B;">a</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">x</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span><span style="color:#E06C75;">n </span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">};</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 从右往左赋值，a = {n:2}; 新对象</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// b = {n:2}，//此时笔者认为b应该还是{n:1}待考证确认</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// a.x 中的a是{n:1}; {n:1}.x = {n:2}; 旧对象</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 因为b和a是引用的关系所以b.x也等于 {n:2}</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">a</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">x</span><span style="color:#ABB2BF;">); </span><span style="color:#D19A66;">undefined</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 此时的a是新对象，新对象上没有a.x 所以是undefined</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">b</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">x</span><span style="color:#ABB2BF;">); {</span><span style="color:#E06C75;">n</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 10</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> +=</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;"> *=</span><span style="color:#E06C75;"> i</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// i*=i 100</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// i+= 这里的i是 =10不是100</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h4 id="问题-12" tabindex="-1">问题 12 <a class="header-anchor" href="#问题-12" aria-label="Permalink to &quot;问题 12&quot;">​</a></h4><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#56B6C2;">!</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;a&quot;</span><span style="color:#C678DD;"> in</span><span style="color:#E06C75;"> window</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#C678DD;">    var</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>解析：</p><p>在浏览器环境中，全局变量都是 window 的一个属性，即 var a = 1 等价于 window.a = 1。in 操作符用来判断某个属性属于某个对象，可以是对象的直接属性，也可以是通过 prototype 继承的属性。</p><p>再看题目，在浏览器中，如果没有全局变量 a ，则声明一个全局变量 a (ES5 没有块级作用域)，并且赋值为 1。很多人会认为打印的是 1。非也，大家不要忘了变量声明会被前置！什么意思呢？题目也就等价于</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> a</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#56B6C2;">!</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;a&quot;</span><span style="color:#C678DD;"> in</span><span style="color:#E06C75;"> window</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#E06C75;">    a</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>所以其实已经声明了变量 a，只不过 if 语句之前值是 undefined，所以 if 语句压根不会执行。 最后答案就是 undefined</p><h4 id="问题-13" tabindex="-1">问题 13 <a class="header-anchor" href="#问题-13" aria-label="Permalink to &quot;问题 13&quot;">​</a></h4><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#61AFEF;">    b</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#61AFEF;"> a</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">x</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E06C75;">        x</span><span style="color:#56B6C2;"> &amp;&amp;</span><span style="color:#61AFEF;"> a</span><span style="color:#ABB2BF;">(</span><span style="color:#56B6C2;">--</span><span style="color:#E06C75;">x</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    };</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>解析： 这道题有几个需要注意的地方：</p><p>1.变量声明、函数声明会被前置，但是函数表达式并不会，准确说类似变量声明前置，举个栗子：</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;b&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// b undefined</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#61AFEF;"> b</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;">() {}</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;b&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// b function () {}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>2.具名的函数表达式的名字只能在该函数内部取到，举个例子(排除老的 IE?)：</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#61AFEF;"> foo</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#61AFEF;"> bar</span><span style="color:#ABB2BF;"> () {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;foo&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">foo</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// foo function bar(){}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;bar&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">bar</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Uncaught ReferenceError: bar is not defined</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>综合这两点，再看题目，最后输出的内容就为 1</p><h2 id="问题-14" tabindex="-1">问题 14 <a class="header-anchor" href="#问题-14" aria-label="Permalink to &quot;问题 14&quot;">​</a></h2><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> a</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">x</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E06C75;"> x</span><span style="color:#56B6C2;"> *</span><span style="color:#D19A66;"> 2</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> a</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>解析： 函数声明会覆盖变量声明，但不会覆盖变量赋值，举个栗子简单粗暴：</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> foo</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> foo</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">typeof</span><span style="color:#E06C75;"> foo</span><span style="color:#ABB2BF;">);    </span><span style="color:#7F848E;font-style:italic;">// &quot;function&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>函数声明的优先级高于变量声明的优先级，但如果该变量 foo 赋值了，那结果就完全不一样了：</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> foo</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> foo</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">typeof</span><span style="color:#E06C75;"> foo</span><span style="color:#ABB2BF;">);    </span><span style="color:#7F848E;font-style:italic;">// &quot;number&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>变量 foo 赋值以后，变量赋值初始化就覆盖了函数声明。这个需要注意 再看题目</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> a</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">x</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E06C75;"> x</span><span style="color:#56B6C2;"> *</span><span style="color:#D19A66;"> 2</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> a</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// function a(x) {...}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="问题-15" tabindex="-1">问题 15 <a class="header-anchor" href="#问题-15" aria-label="Permalink to &quot;问题 15&quot;">​</a></h2><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> b</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">x</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">y</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">a</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">    arguments</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;"> 10</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">    console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#61AFEF;">b</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>解析： 这题考察 arguments 对象的用法(详看<a href="https://microzz.com/2017/04/28/arguments/" target="_blank" rel="noreferrer">JavaScript 中的 arguments 对象</a>) 一般情况，arguments 与函数参数是动态绑定关系(为什么说是一般稍后会解释)，所以很好理解，最后输出的是 10</p><p>但是但是但是，我们不要忘了一个特殊情况–严格模式，在严格模式中 arguments 与相当于函数参数的一个拷贝，并没有动态绑定关系，举个栗子：</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#98C379;">&#39;use strict&#39;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 严格模式！！</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> b</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">x</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">y</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">a</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">    arguments</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;"> 10</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">    console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#61AFEF;">b</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// 3</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="问题-16" tabindex="-1">问题 16 <a class="header-anchor" href="#问题-16" aria-label="Permalink to &quot;问题 16&quot;">​</a></h2><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> a</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E5C07B;">    console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#E5C07B;">a</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">call</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">null</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>解析：</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> a</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E5C07B;">    console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#E5C07B;">a</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">call</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">null</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>关于 a.call(null); 根据 ECMAScript262 规范规定： 如果第一个参数传入的对象调用者是 null 或者 undefined 的话，call 方法将把全局对象（浏览器上是 window 对象）作为 this 的值。所以，不管你什么时候传入 null 或者 undefined，其 this 都是全局对象 window。所以，在浏览器上答案是输出 window 对象。</p><p>但是但是但是，我们依旧不能忘记一个特殊情况–严格模式，在严格模式中，null 就是 null，undefined 就是 undefined ，举个栗子：</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#98C379;">&#39;use strict&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 严格模式！！</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> a</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E5C07B;">    console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#E5C07B;">a</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">call</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">null</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// null</span></span>
<span class="line"><span style="color:#E5C07B;">a</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">call</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">undefined</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// undefined</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><strong>累加函数 addNum</strong></p><p>实现一个累加函数 addNum，参数为 number 类型，每次返回的结果= 上一次计算的值+ 传入的值</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> addNum</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">    var</span><span style="color:#E06C75;"> result</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> result</span><span style="color:#D19A66;">  0</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">num</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E06C75;">        result</span><span style="color:#56B6C2;"> +=</span><span style="color:#E06C75;"> num</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">        return</span><span style="color:#E06C75;"> result</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    };</span></span>
<span class="line"><span style="color:#ABB2BF;">})();</span></span>
<span class="line"><span style="color:#61AFEF;">addNum</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">);          </span><span style="color:#7F848E;font-style:italic;">// 10</span></span>
<span class="line"><span style="color:#61AFEF;">addNum</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">12</span><span style="color:#ABB2BF;">);          </span><span style="color:#7F848E;font-style:italic;">// 22</span></span>
<span class="line"><span style="color:#61AFEF;">addNum</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">30</span><span style="color:#ABB2BF;">);          </span><span style="color:#7F848E;font-style:italic;">// 52</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>闭包实现即可。addNum 右边为一个立即执行函数，返回了一个函数，此函数在内存中，所以其所依赖的 result 也还在内存中，不会被回收，从而实现缓存的效果。</p><p>灵活的应用闭包，能方便很多问题，再看下面一个例子：</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">    /////////////</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 求斐波那契数列</span><span style="color:#7F848E;font-style:italic;"> //</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    /////////////</span></span>
<span class="line"><span style="color:#C678DD;">    var</span><span style="color:#E06C75;"> count</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 直接递归</span></span>
<span class="line"><span style="color:#C678DD;">    function</span><span style="color:#61AFEF;"> fib</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">n</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E06C75;">        count</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">        if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">n</span><span style="color:#56B6C2;"> &lt;</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">return</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">        if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">n</span><span style="color:#56B6C2;"> ===</span><span style="color:#D19A66;"> 0</span><span style="color:#E06C75;">  n</span><span style="color:#56B6C2;"> ===</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">return</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 大于2时递归</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // arguments.callee 返回正在执行的Function对象</span></span>
<span class="line"><span style="color:#C678DD;">        return</span><span style="color:#E5C07B;"> arguments</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">callee</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">n</span><span style="color:#56B6C2;"> -</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">+</span><span style="color:#E5C07B;"> arguments</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">callee</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">n</span><span style="color:#56B6C2;"> -</span><span style="color:#D19A66;"> 2</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#E5C07B;">    console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">time</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;fib(30)&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">    console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;fib(30),结果为：&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#61AFEF;">fib</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">30</span><span style="color:#ABB2BF;">), </span><span style="color:#98C379;">&#39;，计算次数：&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">count</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">//fib(30),结果为： 1346269 计算次数： 2692537</span></span>
<span class="line"><span style="color:#E5C07B;">    console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">timeEnd</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;fib(30)&#39;</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">//fib(30): 115.944ms</span><span style="color:#7F848E;font-style:italic;"> //本机多次测试100ms以上</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 闭包缓存方式</span></span>
<span class="line"><span style="color:#E06C75;">    count</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">    var</span><span style="color:#E06C75;"> fibWithCache</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">        var</span><span style="color:#E06C75;"> result</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> []; </span><span style="color:#7F848E;font-style:italic;">// 缓存结果</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">        return</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">n</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">            var</span><span style="color:#E06C75;"> res</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> result</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">n</span><span style="color:#ABB2BF;">];</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">            // 存在直接取出，否则递归计算</span></span>
<span class="line"><span style="color:#C678DD;">            if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">res</span><span style="color:#56B6C2;"> !=</span><span style="color:#D19A66;"> undefined</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">                return</span><span style="color:#E06C75;"> res</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">            } </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">                if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">n</span><span style="color:#56B6C2;"> &lt;</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">return</span><span style="color:#D19A66;"> null</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">                if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">n</span><span style="color:#56B6C2;"> ===</span><span style="color:#D19A66;"> 0</span><span style="color:#E06C75;">  n</span><span style="color:#56B6C2;"> ===</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E06C75;">                    res</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">                } </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">                    count</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">                    res</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> arguments</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">callee</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">n</span><span style="color:#56B6C2;"> -</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">+</span><span style="color:#E5C07B;"> arguments</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">callee</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">n</span><span style="color:#56B6C2;"> -</span><span style="color:#D19A66;"> 2</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">                }</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#E06C75;">            result</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">n</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> res</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">            //console.log(result);</span></span>
<span class="line"><span style="color:#C678DD;">            return</span><span style="color:#E06C75;"> result</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">n</span><span style="color:#ABB2BF;">];</span></span>
<span class="line"><span style="color:#ABB2BF;">        };</span></span>
<span class="line"><span style="color:#ABB2BF;">    })();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">    console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">time</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;fibWithCache(30)&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">    console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;fibWithCache(30),结果为：&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#61AFEF;">fibWithCache</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">30</span><span style="color:#ABB2BF;">), </span><span style="color:#98C379;">&#39;，计算次数：&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">count</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    //fibWithCache(30),结果为： 1346269 计算次数： 29</span></span>
<span class="line"><span style="color:#E5C07B;">    console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">timeEnd</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;fibWithCache(30)&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    //fibWithCache(30): 0.312ms</span><span style="color:#7F848E;font-style:italic;"> //本机多次测试均小于1ms</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">       //  之后再调用小于30的项目，将会直接取出，不用计算。</span></span>
<span class="line"><span style="color:#E06C75;">    count</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">    console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">time</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;fibWithCache(9)&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">    console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;fibWithCache(9),结果为：&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#61AFEF;">fibWithCache</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">9</span><span style="color:#ABB2BF;">), </span><span style="color:#98C379;">&#39;，计算次数：&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">count</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">    console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">timeEnd</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;fibWithCache(9)&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // fibWithCache(9),结果为： 55 ，计算次数： 0</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // fibWithCache(9): 0.215ms</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 计算更大的 也变得很高效</span></span>
<span class="line"><span style="color:#E06C75;">    count</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">    console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">time</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;fibWithCache(32)&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">    console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;fibWithCache(32),结果为：&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#61AFEF;">fibWithCache</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">32</span><span style="color:#ABB2BF;">), </span><span style="color:#98C379;">&#39;，计算次数：&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">count</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">    console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">timeEnd</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;fibWithCache(32)&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // fibWithCache(32),结果为： 3524578 ，计算次数： 2</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // fibWithCache(32): 0.224ms</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br></div></div><p>使用闭包，函数所依赖的 result 数组将不会被系统的垃圾回收机制回收，将它用来缓存，使得性能得到大幅得的提升。</p><blockquote><p>关于闭包有以下三个特性：</p></blockquote><ul><li>函数可以引用定义在其外部作用域的变量。</li><li>闭包比创建他们的函数具有更长的生命周期。(即使外部函数已经返回，闭包函数仍然可以引用在外部函数中定义的变量，例如上面两个例子中用来缓存上次累加结果的 result 和斐波拉切数列缓存数列的 result 数组。)</li><li>闭包在内部存储其外部变量的引用，并能读写这些变量。（上两例中，闭包对两个外部函数中的 result 不仅可读，而且可写。）</li></ul><p><strong>实现一个 Person 类</strong></p><p>实现一个 Person 类，有 2 个属性 name，gender（性别），有一个 sayHello 方法.</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">////////////////////////////////////////////////////////</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 实现一个Person 类，有2 个属性name，gender（性别），有一个sayHello 方法.</span><span style="color:#7F848E;font-style:italic;"> //</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">////////////////////////////////////////////////////////</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 构造函数</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> Person</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">name</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">gender</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 避免忘记使用new命令</span></span>
<span class="line"><span style="color:#C678DD;">    if</span><span style="color:#ABB2BF;"> (</span><span style="color:#56B6C2;">!</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">this</span><span style="color:#C678DD;"> instanceof</span><span style="color:#E5C07B;"> Person</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#C678DD;">        return</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Person</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">gender</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#E5C07B;">    this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">name</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> name</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">    this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">gender</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> gender</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#E5C07B;">Person</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">sayHello</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E5C07B;">    console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;Hello,I am&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;. I</span><span style="color:#56B6C2;">\\&#39;</span><span style="color:#98C379;">m a&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">gender</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> zs</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Person</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;zs&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;man&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">zs</span><span style="color:#ABB2BF;">);        </span><span style="color:#7F848E;font-style:italic;">// Person {name: &quot;zs&quot;, gender: &quot;man&quot;}</span></span>
<span class="line"><span style="color:#E5C07B;">zs</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">sayHello</span><span style="color:#ABB2BF;">();          </span><span style="color:#7F848E;font-style:italic;">// Hello,I am zs . I&#39;m a man</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>注意 sayHello 方法不是写在构造函数里面，而是写在构造函数的原型上。这是因为如果写在构造函数里，将会为每个实例对象给添加一个自己的 sayHello 方法，而这是没有必要的，每个实例对象的 sayHello 方法都一样，写在构造函数的原型上就可以使得每个实例对象都能引用到此方法。</p><blockquote><p>关于构造函数的 new 命令，原理是这样的：</p></blockquote><ol><li>创建一个空对象，作为将要返回的对象实例</li><li>将这个空对象的原型，指向构造函数的 prototype 属性</li><li>将这个空对象赋值给函数内部的 this 关键字</li><li>开始执行构造函数内部的代码</li></ol><p>更多关于原型和构造函数的具体知识请访问：<a href="http://javascript.ruanyifeng.com/oop/basic.html#toc1" target="_blank" rel="noreferrer">面向对象编程概述</a></p><p><strong>基于 Person 类，增加一个 static 方法 getNum(), 返回创建的实例数</strong></p><p>为了实现计数功能，只需要在每次调用构造函数的时候，递增 1 即可，构造函数已经存在，不能修改，所以直接重写一遍</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> Person</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">name</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">gender</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 避免忘记使用new命令</span></span>
<span class="line"><span style="color:#C678DD;">    if</span><span style="color:#ABB2BF;"> (</span><span style="color:#56B6C2;">!</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">this</span><span style="color:#C678DD;"> instanceof</span><span style="color:#E5C07B;"> Person</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#C678DD;">        return</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Person</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">gender</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#E5C07B;">    this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">name</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> name</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">    this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">gender</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> gender</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">    Person</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">_count</span><span style="color:#56B6C2;"> +=</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#E5C07B;">Person</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">getNum</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E5C07B;">    Person</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">_count</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">        return</span><span style="color:#E5C07B;"> Person</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">_count</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    };</span></span>
<span class="line"><span style="color:#ABB2BF;">})();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> p1</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Person</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;aaa&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;male&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> p2</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Person</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;bbb&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;female&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">Person</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getNum</span><span style="color:#ABB2BF;">(); </span><span style="color:#7F848E;font-style:italic;">// 2</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> p3</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Person</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;ccc&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;female&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">Person</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getNum</span><span style="color:#ABB2BF;">(); </span><span style="color:#7F848E;font-style:italic;">// 3</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p><strong>实现一个 arrMerge 函数</strong></p><p>实现一个 arrMerge 函数，可传入 2 个以上的数组类型参数，生成一个包含所有数组项，且没有重复项的新数组</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> arrMerge</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">    var</span><span style="color:#E06C75;"> len</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> arguments</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        arr</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> [];</span></span>
<span class="line"><span style="color:#C678DD;">    for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> &lt;</span><span style="color:#E06C75;"> len</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 合并</span></span>
<span class="line"><span style="color:#E06C75;">        arr</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> arr</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">concat</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">arguments</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">]);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 去重</span></span>
<span class="line"><span style="color:#C678DD;">    var</span><span style="color:#E06C75;"> result</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> [],</span></span>
<span class="line"><span style="color:#E06C75;">        hasElem</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {};</span></span>
<span class="line"><span style="color:#C678DD;">    for</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">l</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> arr</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> &lt;</span><span style="color:#E06C75;"> l</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">        if</span><span style="color:#ABB2BF;"> (</span><span style="color:#56B6C2;">!</span><span style="color:#E06C75;">hasElem</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">arr</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">]]) {</span></span>
<span class="line"><span style="color:#E5C07B;">            result</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">push</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">arr</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">]);</span></span>
<span class="line"><span style="color:#E06C75;">            hasElem</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">arr</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">]] </span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;"> true</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">            console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">hasElem</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E06C75;"> result</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>实现可以接收任意个参数，我们需要了解 js 里面在 function 对象中 arguments 这个对象的知识，它代表此函数实参的参数列表，是一个类数组对象。</p><p>合并数组直接使用原生的<code>concat()</code>方法即可。</p><p>去重一步，使用了一个对象来记录此值是不是已经存在，使用对象来标识，效率比用数组来标识要高一点，因为对象是键值对的形式，类似哈希表，直接将数组元素作为此对象的键，用一个布尔值来标识这个数组元素是不是已经存在了，不存在则添加，并记录此元素已存在，存在则直接跳过。</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">arrMerge</span><span style="color:#ABB2BF;">([</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">],[</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">],[</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">456</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">6</span><span style="color:#ABB2BF;">],[</span><span style="color:#D19A66;">222</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">456</span><span style="color:#ABB2BF;">]);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// [0, 1, 3, 2, 456, 6, 222]</span></span>
<span class="line"><span style="color:#61AFEF;">arrMerge</span><span style="color:#ABB2BF;">([</span><span style="color:#98C379;">&#39;a&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;b&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;c&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;d&#39;</span><span style="color:#ABB2BF;">], [</span><span style="color:#98C379;">&#39;a&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;bb&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;ccc&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;d&#39;</span><span style="color:#ABB2BF;">], [</span><span style="color:#98C379;">&#39;11&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;sss&#39;</span><span style="color:#ABB2BF;">]);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;, &quot;bb&quot;, &quot;ccc&quot;, &quot;11&quot;, &quot;sss&quot;]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>实现一个 toCamelStyle 函数</strong></p><p>实现一个 toCamelStyle 函数，把“aaa-bbb-cc”这种形式的命名转换为“aaaBbbCc”</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> toCamelStyle</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">str</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">    var</span><span style="color:#E06C75;"> strArr</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> str</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">split</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;-&#39;</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#E06C75;">        temp</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &#39;&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        result</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &#39;&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">    for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">l</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> strArr</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> &lt;</span><span style="color:#E06C75;"> l</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E06C75;">        result</span><span style="color:#56B6C2;"> +=</span><span style="color:#E06C75;"> strArr</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">].</span><span style="color:#61AFEF;">substr</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">toUpperCase</span><span style="color:#ABB2BF;">() </span><span style="color:#56B6C2;">+</span><span style="color:#E06C75;"> strArr</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">].</span><span style="color:#61AFEF;">substr</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">toLowerCase</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        //console.log(result);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E06C75;"> result</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>使用正则表达式完成</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> toCamelStyle</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">str</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 匹配-以及之后的一个字符，其中这个字符在一个分组内</span></span>
<span class="line"><span style="color:#C678DD;">    var</span><span style="color:#E06C75;"> camelRegExp</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /-(</span><span style="color:#D19A66;">[a-z]</span><span style="color:#E06C75;">)/</span><span style="color:#C678DD;">ig</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E5C07B;"> str</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">replace</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">camelRegExp</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">fcamelCase</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // all为匹配到的内容，letter为组匹配</span></span>
<span class="line"><span style="color:#C678DD;">    function</span><span style="color:#61AFEF;"> fcamelCase</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">all</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">letter</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">        console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">all</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">        console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">letter</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">        return</span><span style="color:#E5C07B;"> letter</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">toUpperCase</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#61AFEF;">toCamelStyle</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;aaa-bbb-cc&#39;</span><span style="color:#ABB2BF;">);    </span><span style="color:#7F848E;font-style:italic;">// aaaBbbCc</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>使用正则表达式效率较高，之前的方法需要对整个字符串进行遍历，而正则表达式一次就把所有匹配内容获取到了，直接替换即可。</p><p><code>String.prototype.replace()</code>方法第二个参数还可以是一个函数，接收多个参数，第一个为匹配到的内容，第二个为匹配到的分组，有多少组就可以传多少个参数，在此之后还可以有两个参数，一个为匹配到内容在原字符串的位置，另一个是原字符串。</p><p>以上在执行<code>toCamelStyle(&#39;aaa-bbb-cc&#39;)</code>时，控制台输出结果分别为：-b b -c c，代表匹配到的内容为：-b 和 -c 对应的分组为：b c</p><p><strong>setTimeout 实现重复调用</strong></p><p>用 setTimeout 实现一个定时循环任务，每隔 200 毫秒，console 输出一句：”I am working ...”</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> showWorking</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">    var</span><span style="color:#E06C75;"> timer</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> timer</span><span style="color:#D19A66;">  1</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">    console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;I am working ...&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 避免重复调用 计时加快</span></span>
<span class="line"><span style="color:#C678DD;">    if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">timer</span><span style="color:#ABB2BF;">) </span><span style="color:#61AFEF;">clearTimeout</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">timer</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E06C75;">    timer</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> setTimeout</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">showWorking</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">200</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><code>setTimeout()</code> 方法本来是迟延指定的时间执行指定的代码，要达到重复调用的效果就需要在方法里面加入它实现递归调用，从而达到效果。</p><p><code>setTimeout()</code> 和<code>setInterval()()</code> 有所不同，后者是每隔指定的时间执行一次指定的代码，不需要递归就能重复调用。</p><p>但是后者不管执行的时间，只负责定时再次调用，比如指定 100 毫秒调用一次，那么每隔 100ms 就会发出一条指令，而不关心，上次的代码有没有执行完毕，假设所指定的代码执行需要一秒才能完成，那么一段时间后，会发现内存中会堆积很多等待执行的指令。 而前者本身就是迟延指定时间，在函数内部递归来实现重复调用，它会等待执行到它才会发出下一次指令，两次间隔的实际时间为执行时间+迟延时间（不考虑其他情况）。</p><p><strong>实现一个 bind 函数</strong></p><p>实现一个 bind 函数，传入一个函数和一个对象，返回一个新的函数，且传入对象为函数执行时的 context，即 this 的指向</p><p>ES6 中可直接使用 bind 方法，类似 call、apply，但是其返回一个改变上下文环境的新函数，而 call 和 apply 是替换上下文环境并运行原函数。</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> bind</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">fun</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">context</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E5C07B;"> fun</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">bind</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">context</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>利用 call 或 apply 来实现一个</p><p>以下都是用 apply 而没有试用 call 的原因是因为，call 第一个参数传递新的上下文环境，之后依次传入其他参数。而 apply 最多接受两个参数，第一个参数为新的上下文环境，第二个参数为数组（参数按顺序放入数组）。使用 call 需要将参数分割出来依次传递进去，而使用 apply 直接传递数组即可较为简单。</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 参数可在生成新函数时传递（即调用bind时），也可以在实际使用时传递</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> bind</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">fun</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">context</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">    var</span><span style="color:#E06C75;"> args</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> [].</span><span style="color:#E5C07B;">slice</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">call</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">arguments</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E5C07B;">        fun</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">apply</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">context</span><span style="color:#E5C07B;">  this</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">args</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">concat</span><span style="color:#ABB2BF;">([].</span><span style="color:#E5C07B;">slice</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">call</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">arguments</span><span style="color:#ABB2BF;">)));</span></span>
<span class="line"><span style="color:#ABB2BF;">    };</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 参数只能在生成新函数时传递</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> bind1</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">fun</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">context</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">    var</span><span style="color:#E06C75;"> args</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> [].</span><span style="color:#E5C07B;">slice</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">call</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">arguments</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E5C07B;">        fun</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">apply</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">context</span><span style="color:#E5C07B;">  this</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">args</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    };</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 参数只能在实际使用时传递</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> bind2</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">fun</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">context</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E5C07B;">        fun</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">apply</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">context</span><span style="color:#E5C07B;">  this</span><span style="color:#ABB2BF;">, [].</span><span style="color:#E5C07B;">slice</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">call</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">arguments</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#ABB2BF;">    };</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>调用测试：</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#61AFEF;"> fun</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">sex</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">age</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">    console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">sex</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">age</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> person</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">    name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;Andrew&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 使用bind方法，可以在任何时候传递参数</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> fun1</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> bind</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">fun</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">person</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 实际使用时传递</span></span>
<span class="line"><span style="color:#61AFEF;">fun1</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;gril&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">);                   </span><span style="color:#7F848E;font-style:italic;">// Andrew gril 20</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 生成新函数时传递</span></span>
<span class="line"><span style="color:#61AFEF;">bind</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">fun</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">person</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;gril&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">)();    </span><span style="color:#7F848E;font-style:italic;">// Andrew gril 20</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 混合传递</span></span>
<span class="line"><span style="color:#61AFEF;">bind</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">fun</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">person</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;gril&#39;</span><span style="color:#ABB2BF;">)(</span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">);      </span><span style="color:#7F848E;font-style:italic;">// Andrew gril 20</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// bind1方法 只能在生成函数时传递 不支持调用时传递参数</span></span>
<span class="line"><span style="color:#61AFEF;">bind1</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">fun</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">person</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;gril&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">)();       </span><span style="color:#7F848E;font-style:italic;">// Andrew gril 20</span></span>
<span class="line"><span style="color:#61AFEF;">bind1</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">fun</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">person</span><span style="color:#ABB2BF;">)(</span><span style="color:#98C379;">&#39;gril&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">);         </span><span style="color:#7F848E;font-style:italic;">// Andrew undefined undefined</span></span>
<span class="line"><span style="color:#61AFEF;">bind1</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">fun</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">person</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;gril&#39;</span><span style="color:#ABB2BF;">)(</span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">);         </span><span style="color:#7F848E;font-style:italic;">// Andrew gril undefined</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// bind2方法 只能在调用时传递，生成时传递无效</span></span>
<span class="line"><span style="color:#61AFEF;">bind2</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">fun</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">person</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;gril&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">)();       </span><span style="color:#7F848E;font-style:italic;">// Andrew undefined undefined</span></span>
<span class="line"><span style="color:#61AFEF;">bind2</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">fun</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">person</span><span style="color:#ABB2BF;">)(</span><span style="color:#98C379;">&#39;gril&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">);         </span><span style="color:#7F848E;font-style:italic;">// Andrew gril 20</span></span>
<span class="line"><span style="color:#61AFEF;">bind2</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">fun</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">person</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;gril&#39;</span><span style="color:#ABB2BF;">)(</span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">);         </span><span style="color:#7F848E;font-style:italic;">// Andrew 20 undefined</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p>第一个方法是参照 jQuery 中<code>$.proxy （）</code> 方法写的，之所以对参数进行了两次处理，原因在于，这样可以使得再调用 bind 方法生成新函数的时候，直接给原函数指定一些参数，达到固定前面一些参数的作用（之后传入的参数会依次后移，例如 <code>bind(fun, person, &#39;gril&#39;)(&#39;boy&#39;,20)</code> 的结果为：Andrew gril boy，相当于在生成新函数的时候，直接把第一个参数固定为 gril 了，实际调用时候参数依次后移）。</p><p>第二个方法 bind1 几乎没有实际意义，仅仅是为了测试。因为根据原函数生成的新函数，不能传递参数了（参数只能在生成新函数的时候直接指定好）。</p><p>第三个方法 bind2 最符合简单的直接需求，bind2 的作用仅仅是根据原函数，替换上下文，生成一个新函数，原函数的参数和新函数的参数相同。</p><p><strong>实现一个 Utils 模块</strong></p><p>实现一个 Utils 模块，有_method1 方法、_method2 方法、methodAll 方法，methodAll 中调用了_method1 和_method2</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">//  简单写法</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> Utils0</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#61AFEF;">    _method1</span><span style="color:#ABB2BF;">: </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E5C07B;">        console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;this is _method1 running&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#61AFEF;">    _method2</span><span style="color:#ABB2BF;">: </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E5C07B;">        console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;this is _method1 running&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#61AFEF;">    methodAll</span><span style="color:#ABB2BF;">: </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E5C07B;">        this</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">_method1</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">        this</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">_method2</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 模块放大式写法</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> Utils</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">Utils</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">    var</span><span style="color:#61AFEF;"> _method1</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E5C07B;">            console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;this is _method1 running&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        },</span></span>
<span class="line"><span style="color:#61AFEF;">        _method2</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E5C07B;">            console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;this is _method1 running&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        },</span></span>
<span class="line"><span style="color:#61AFEF;">        methodAll</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E5C07B;">            this</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">_method1</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">            this</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">_method2</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">        };</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">        _method1</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">_method1</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        _method2</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">_method2</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        methodAll</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">methodAll</span></span>
<span class="line"><span style="color:#ABB2BF;">    };</span></span>
<span class="line"><span style="color:#ABB2BF;">})(</span><span style="color:#E06C75;">Utils</span><span style="color:#ABB2BF;">  {});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><p>可以简单写为一个对象，内部有几个方法的模式。但是这样，外部可以访问并修改这个对象的任何内容。</p><p>采用模块放大模式，对外暴露的仅仅是 return 出来的内容，在函数里面，可以定义很多私有的方法和属性。最后传递 Utils {}的作用是表示此部分代码可能仅是 Utils 模块的一部分，可做合并使用，多传入一个 {}对象能去除加载顺序的依赖（当然要保证此块代码不依赖别的地方的 Utils），此部分代码可以最先加载。</p><p>参考链接：<a href="http://javascript.ruanyifeng.com/oop/pattern.html#toc6" target="_blank" rel="noreferrer">面向对象编程模式</a></p><p><strong>输出一个对象自身的属性</strong></p><p>有一个对象 obj，请输出它自身具有的属性，而非它原型连上的。</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> showOwnProp</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">obj</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">    if</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">typeof</span><span style="color:#E06C75;"> obj</span><span style="color:#56B6C2;"> ==</span><span style="color:#98C379;"> &quot;undefined&quot;</span><span style="color:#C678DD;">  typeof</span><span style="color:#E06C75;"> obj</span><span style="color:#56B6C2;"> !=</span><span style="color:#98C379;"> &#39;object&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">throw</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Error</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;请传入一个对象！&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">    for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> key</span><span style="color:#C678DD;"> in</span><span style="color:#E06C75;"> obj</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // for in循环会遍历整个原型链</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // in运算符返回一个布尔值，表示一个对象是否具有某个属性。它不区分该属性是对象自身的属性，还是继承的属性。</span></span>
<span class="line"><span style="color:#C678DD;">        if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">hasOwnProperty</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">call</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#E5C07B;">            console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;:&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">]);</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>其中 <code>Object.prototype.hasOwnProperty.call(obj, key)</code> 可以替换为 <code>obj.hasOwnProperty(key)</code> 之所以使用 Object 上的是因为防止 obj 对象上重写了 <code>hasOwnProperty()</code>方法对结果的影响。</p><p>另外在 ES5 中可使用 Object.keys 方法和 Object.getOwnPropertyNames 方法 都返回数组，仅含自身属性，keys 只返回可枚举的，而后者包含不可枚举的。</p><p><strong>对象深复制</strong></p><p>在 js 中，对象的赋值，实质是传递指向它内存的引用，请实现一个深度 copy 的方法，传入一个对象 obj，返回一个该对象的复制，而且两者没有任何值引用关联</p><blockquote><p>复制对象需要保证：</p></blockquote><ul><li>确保拷贝后的对象，与原对象具有同样的 prototype 原型对象。</li><li>确保拷贝后的对象，与原对象具有同样的属性。</li></ul><blockquote><p><strong>所以</strong> 1、原型链上的属性不要复制，直接指向即可。2、自身属性一一复制</p></blockquote><p>下面总结了一点简单的复制对象方法：</p><ul><li>简单数组（内部不含符合类型）可直接使用 slice 方法</li><li>不含 json 不支持的值（方法）以及 enumerable 属性不为 false 的对象可转化为 json 字符串，再转化为对象。</li><li>还可以直接及使用 jQuery 的 extend 方法，第一个参数传入 true 即可。</li><li>不考虑不可枚举属性的话 可以遍历分别加入新对象即可。</li></ul><p>以下演示通过属性描述对象拷贝对象。</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 在之前通过Person实例化出的zs对象上添加属性以做测试使用</span></span>
<span class="line"><span style="color:#E5C07B;">zs</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">family</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">    father</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;zsfather&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    mother</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;zsmother&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"><span style="color:#E5C07B;">zs</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">children</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> [{}, {}];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> deepCopyObject</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">obj</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">    var</span><span style="color:#E06C75;"> copy</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">create</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getPrototypeOf</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#61AFEF;">    _copySelfProp</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">copy</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E06C75;"> copy</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 内部使用 拷贝自身属性</span></span>
<span class="line"><span style="color:#C678DD;">    function</span><span style="color:#61AFEF;"> _copySelfProp</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">target</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">source</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E06C75;">        Object</span></span>
<span class="line"><span style="color:#ABB2BF;">            .</span><span style="color:#61AFEF;">getOwnPropertyNames</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">source</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">            .</span><span style="color:#61AFEF;">forEach</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">key</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">                console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                // 获取属性描述对象</span></span>
<span class="line"><span style="color:#C678DD;">                var</span><span style="color:#E06C75;"> desc</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getOwnPropertyDescriptor</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">source</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                // 复合类型再次调用</span></span>
<span class="line"><span style="color:#C678DD;">                if</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">typeof</span><span style="color:#E5C07B;"> desc</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">value</span><span style="color:#56B6C2;"> ==</span><span style="color:#98C379;"> &#39;object&#39;</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                    // function未处理，原因见下描述</span></span>
<span class="line"><span style="color:#E06C75;">                    target</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> deepCopyObject</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">source</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">]);</span></span>
<span class="line"><span style="color:#ABB2BF;">                } </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                    // 将此属性添加到target</span></span>
<span class="line"><span style="color:#E5C07B;">                    Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">defineProperty</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">target</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">desc</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">                }</span></span>
<span class="line"><span style="color:#ABB2BF;">            });</span></span>
<span class="line"><span style="color:#C678DD;">        return</span><span style="color:#E06C75;"> target</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><p>先介绍两个方法</p><blockquote><p>Object.defineProperty(obj, prop, descriptor)</p></blockquote><p>obj 需要定义属性的对象。</p><p>prop 需定义或修改的属性的名字。</p><p>descriptor 将被定义或修改的属性的描述对象。</p><p>Object.defineProperty() 方法会直接在一个对象上定义一个新属性，或者修改一个已经存在的属性， 并返回这个对象。该方法允许精确添加或修改对象的属性。一般情况下，我们为对象添加属性是通过赋值来创建并显示在属性枚举中（for...in 或 Object.keys 方法）， 但这种方式添加的属性值可以被改变，也可以被删除。而使用 Object.defineProperty() 则允许改变这些额外细节的默认设置。例如，默认情况下，使用 Object.defineProperty() 增加的属性值是不可改变的。</p><blockquote><p>Object.getOwnPropertyDescriptor(obj, prop)</p></blockquote><p>obj 要处理的对象</p><p>prop 属性名称，该属性的属性描述对象将被返回</p><p>该方法允许对一个属性的描述进行检索。在 Javascript 中， 属性 由一个字符串类型的“名字”（name）和一个“属性描述符”（property descriptor）对象构成。更多关于属性描述符类型以及他们属性的信息可以查看：<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty" target="_blank" rel="noreferrer">Object.defineProperty</a>。</p><p>这个拷贝方法比把值（即使是简单类型的值）直接给新对象要精确很多。js 中对象的值，可能看起来就是个字符串或者数值，但实际它还有一些属性，我们查看 zs.name 属性，发现他的描述对象为：Object {value: &quot;zs&quot;, writable: true, enumerable: true, configurable: true}。此方法拷贝的对象能保证这个值的属性也都和原对象一直。而直接赋值的方式，其他属性都变成了默认值。</p><p>参考链接：<a href="http://javascript.ruanyifeng.com/stdlib/attributes.html" target="_blank" rel="noreferrer">属性描述对象</a></p><p>但是<code>getOwnPropertyDescriptor</code>、<code>defineProperty</code>、<code>getOwnPropertyNames</code>是在 ES5 和 ES6 中才有的，下面再展示一个只用 ES 写的</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> deepCopy</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">obj</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 通过原对象的构造函数来创建对象，确保类型一致且原型链相同</span></span>
<span class="line"><span style="color:#C678DD;">    var</span><span style="color:#E06C75;"> copy</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> obj</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">constructor</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">call</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#61AFEF;">    _copySelfProp</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">copy</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E06C75;"> copy</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 自身属性拷贝</span></span>
<span class="line"><span style="color:#C678DD;">    function</span><span style="color:#61AFEF;"> _copySelfProp</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">target</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">source</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">        for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> key</span><span style="color:#C678DD;"> in</span><span style="color:#E06C75;"> source</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">            if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">hasOwnProperty</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">call</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">source</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#C678DD;">                if</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">typeof</span><span style="color:#E06C75;"> source</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">==</span><span style="color:#98C379;"> &quot;object&quot;</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                    // function未处理，原因见下描述</span></span>
<span class="line"><span style="color:#E06C75;">                    target</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> deepCopy</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">source</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">]);</span></span>
<span class="line"><span style="color:#ABB2BF;">                } </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">                    target</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> source</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">];</span></span>
<span class="line"><span style="color:#ABB2BF;">                }</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#C678DD;">        return</span><span style="color:#E06C75;"> target</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>需要指出的是，以上两个拷贝函数都没有对复合类型中的 function 进行处理（对象和数组进行 typeof 结果都为 object），原因是函数一旦定义，不能对函数体进行修改，可以直接对齐进行引用。如果重新赋值一个新的函数给这个属性的话，由于新的函数也是一个对象，就切断了原来的联系，可以不用处理。</p><p>比如 obj.a 为一个 function 内存地址记为 N1，对 obj 进行拷贝时，可以直接将 obj1.a 指向 N1，如果修改 obj.a 为一个新的函数，此函数有一个内存地址 N2，那么修改后：obj.a 实际指向 N2，而复制出的 obj1.a 指向 N1。意思就是 function 比较特殊，不能像对象一样直接修改它内部的东西，可以直接拿来引用。</p><p>但是当前可以这么做的前提是：obj.a 值仅仅是一个 function，而没有其他值。实际可能存在的情况是先给 obj.a=function(){},再接着给 obj.a 添加属性，obj.a.prop=[{},{}]，（这就是 js 里面的一切皆对象，你甚至可以先 var mm=&#39;111&#39;，再 mm.a=[{},{}]，此时 typeof mm 仍为 string，但 mm 真的只是个字符串吗？）这种情况虽然不多，但是也是存在的，需要注意。</p><p><strong>使用字面量形式创建对象而不是构造函数</strong></p><p>两者差异是因为其创建的时候不一样，构造函数是在运行时创建，而字面量形式是在编译时创建。</p><p>以下代码可以看出字面量形式创建对象效率要高很多，同时字面量形式创建对象，写的代码也少，而且比较可读。</p><div class="language-JavaScript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">time</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;for&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> arr10000</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> Array</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">10000</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">l</span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;">arr10000</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;">l</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#E06C75;">    arr10000</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">]</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> Object</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">timeEnd</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;for&#39;</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">//for: 4.885ms</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">time</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;for2&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> arr10000</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> Array</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">10000</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">l</span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;">arr10000</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;">l</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#E06C75;">    arr10000</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">]</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">{};</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">timeEnd</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;for2&#39;</span><span style="color:#ABB2BF;">);</span><span style="color:#7F848E;font-style:italic;">//for2: 0.855ms</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 在创建正则表达式时，差别更加明显：</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">time</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;for3&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> arr10000</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> Array</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">10000</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">l</span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;">arr10000</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;">l</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#E06C75;">    arr10000</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">]</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> RegExp</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;.*&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">timeEnd</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;for3&#39;</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">//for3: 10.689ms</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">time</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;for4&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> arr10000</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> Array</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">10000</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">l</span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;">arr10000</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;">l</span><span style="color:#ABB2BF;">;</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#E06C75;">    arr10000</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">]</span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;">/.</span><span style="color:#D19A66;">*</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">timeEnd</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;for4&#39;</span><span style="color:#ABB2BF;">);</span><span style="color:#7F848E;font-style:italic;">//for4: 0.930ms</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h2 id="_14-proxy和object-defineproperty区别" tabindex="-1">14.Proxy和Object.defineProperty区别 <a class="header-anchor" href="#_14-proxy和object-defineproperty区别" aria-label="Permalink to &quot;14.Proxy和Object.defineProperty区别&quot;">​</a></h2><p><code>Proxy</code>的意思是代理，我一般叫他拦截器，可以拦截对象上的一个操作。用法如下，通过<code>new</code>的方式创建对象，第一个参数是被拦截的对象，第二个参数是对象操作的描述。实例化后返回一个新的对象，当我们对这个新的对象进行操作时就会调用我们描述中对应的方法。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> Proxy</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">target</span><span style="color:#ABB2BF;">, {</span></span>
<span class="line"><span style="color:#61AFEF;">    get</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">target</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">property</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#61AFEF;">    set</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">target</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">property</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#61AFEF;">    deleteProperty</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">target</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">property</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p><code>Proxy</code>区别于<code>Object.definedProperty</code>。</p><p><code>Object.defineProperty</code>只能监听到属性的读写，而<code>Proxy</code>除读写外还可以监听属性的删除，方法的调用等。</p><p>通常情况下我们想要监视数组的变化，基本要依靠重写数组方法的方式实现，这也是<code>Vue</code>的实现方式，而<code>Proxy</code>可以直接监视数组的变化。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> list</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> [</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">];</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> listproxy</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Proxy</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">list</span><span style="color:#ABB2BF;">, {</span></span>
<span class="line"><span style="color:#61AFEF;">    set</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">target</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">property</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">value</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E06C75;">        target</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">property</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> value</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">        return</span><span style="color:#D19A66;"> true</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// 标识设置成功</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">list</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">push</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><code>Proxy</code>是以非入侵的方式监管了对象的读写，而<code>defineProperty</code>需要按特定的方式定义对象的属性。</p><h2 id="_15-reflect" tabindex="-1">15.Reflect <a class="header-anchor" href="#_15-reflect" aria-label="Permalink to &quot;15.Reflect&quot;">​</a></h2><p>他是<code>ES2015</code>新增的对象，纯静态对象也就是不能被实例画，只能通过静态方法的方式调用，和<code>Math</code>对象类似，只能类似<code>Math.random()</code>的方式调用。</p><p><code>Reflect</code>内部封装了一系列对对象的底层操作，一共<code>14</code>个，其中<code>1</code>个被废弃，还剩下<code>13</code>个。</p><p><code>Reflect</code>的静态方法和<code>Proxy</code>描述中的方法完全一致。也就是说<code>Reflect</code>成员方法就是<code>Proxy</code>处理对象的默认实现。</p><p><code>Proxy</code>对象默认的方法就是调用了<code>Reflect</code>内部的处理逻辑，也就是如果我们调用<code>get</code>方法，那么在内部，<code>Reflect</code>就是将<code>get</code>原封不动的交给了<code>Reflect</code>，如下。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> proxy</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Proxy</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">, {</span></span>
<span class="line"><span style="color:#61AFEF;">    get</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">target</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">property</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">        return</span><span style="color:#E5C07B;"> Reflect</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">get</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">target</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">property</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><code>Reflect</code>和<code>Proxy</code>没有绝对的关系，我们一般将他们两个放在一起讲是为了方便对二者的理解。</p><p>那为什么会有<code>Reflect</code>对象呢，其实他最大的用处就是提供了一套统一操作<code>Object</code>的<code>API</code>。</p><p>判断对象是否存在某一个属性，可以使用<code>in</code>操作符，但是不够优雅，还可以使用<code>Reflect.has(obj, name)</code>; 删除一个属性可以使用<code>delete</code>，也可以使用<code>Reflect.deleteProperty(obj, name)</code>; 获取所有属性名可以使用<code>Object.keys</code>, 也可以使用<code>Reflect.ownKeys(obj)</code>; 我们更推荐使用<code>Reflect</code>的<code>API</code>来操作对象，因为他才是未来。</p><h2 id="_16-解析get参数" tabindex="-1">16.解析get参数 <a class="header-anchor" href="#_16-解析get参数" aria-label="Permalink to &quot;16.解析get参数&quot;">​</a></h2><p>通过<code>replace</code>方法获取<code>url</code>中的参数键值对，可以快速解析<code>get</code>参数。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> q</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {};</span></span>
<span class="line"><span style="color:#E5C07B;">location</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">search</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">replace</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">/(</span><span style="color:#D19A66;">[</span><span style="color:#ABB2BF;">^</span><span style="color:#D19A66;">?&amp;=]+</span><span style="color:#E06C75;">)=(</span><span style="color:#D19A66;">[</span><span style="color:#ABB2BF;">^</span><span style="color:#D19A66;">&amp;]+</span><span style="color:#E06C75;">)/</span><span style="color:#C678DD;">g</span><span style="color:#ABB2BF;">,(</span><span style="color:#E06C75;font-style:italic;">_</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;font-style:italic;">k</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;font-style:italic;">v</span><span style="color:#ABB2BF;">)</span><span style="color:#C678DD;">=&gt;</span><span style="color:#E06C75;">q</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">k</span><span style="color:#ABB2BF;">]</span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;">v</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">q</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="_17-解析连接url" tabindex="-1">17.解析连接url <a class="header-anchor" href="#_17-解析连接url" aria-label="Permalink to &quot;17.解析连接url&quot;">​</a></h2><p>可以通过创建<code>a</code>标签，给<code>a</code>标签赋值<code>href</code>属性的方式，获取<code>到协议</code>，<code>pathname</code>，<code>origin</code>等<code>location</code>对象上的属性。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 创建a标签</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> aEle</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">createElement</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;a&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 给a标签赋值href路径</span></span>
<span class="line"><span style="color:#E5C07B;">aEle</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">href</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &#39;/test.html&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 访问aEle中的属性</span></span>
<span class="line"><span style="color:#E5C07B;">aEle</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">protocol</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// 获取协议</span></span>
<span class="line"><span style="color:#E5C07B;">aEle</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">pathname</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// 获取path</span></span>
<span class="line"><span style="color:#E5C07B;">aEle</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">origin</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">aEle</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">host</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">aEle</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">search</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">...</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="_18-localstorage" tabindex="-1">18.localStorage <a class="header-anchor" href="#_18-localstorage" aria-label="Permalink to &quot;18.localStorage&quot;">​</a></h2><p><code>localStorage</code>是<code>H5</code>提供的永久存储空间，一般最大可存储<code>5M</code>数据，并且支持跨域隔离，他的出现极大提高了前端开发的可能性。<code>localStorage</code>的使用很多人都知道<code>setItem</code>，<code>getItem</code>,<code>removeItem</code>, 但他也可以直接以成员的方式操作。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 存储</span></span>
<span class="line"><span style="color:#E5C07B;">localStorage</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">name</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &#39;yd&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 获取</span></span>
<span class="line"><span style="color:#E5C07B;">localStorage</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// yd</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 删除</span></span>
<span class="line"><span style="color:#C678DD;">delete</span><span style="color:#E5C07B;"> localStorage</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 清除全部</span></span>
<span class="line"><span style="color:#E5C07B;">localStorage</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">clear</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 遍历</span></span>
<span class="line"><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> &lt;</span><span style="color:#E5C07B;"> localStorage</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">    const</span><span style="color:#E5C07B;"> key</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> localStorage</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">key</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// 获取本地存储的Key</span></span>
<span class="line"><span style="color:#E06C75;">    localStorage</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">]; </span><span style="color:#7F848E;font-style:italic;">// 获取本地存储的value</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p><code>localStorage</code>满了的情况下仍继续存储并不会覆盖其他的值，而是直接报错(<code>QuotaExceededError</code>)，并且当前存储的值也会被清空。浏览器支持每个域名下存储<code>5M</code>数据。</p><h2 id="_19-sessionstorage" tabindex="-1">19.sessionStorage <a class="header-anchor" href="#_19-sessionstorage" aria-label="Permalink to &quot;19.sessionStorage&quot;">​</a></h2><p><code>sessionStorage</code>和<code>localStorage</code>的区别是，存在当前会话，很多人理解的是浏览器关闭，这是不对的，假设你在<code>A</code>页面存储了<code>sessionStorage</code>，新开选项卡将<code>A</code>页面的链接粘贴进去打开页面，<code>sessionStorage</code>也是不存在的。</p><p>所以<code>sessionStorage</code>存在的条件是页面间的跳转，<code>A</code>页面存储了<code>sessionStorage</code>，他要通过<code>超链接</code>或者<code>location.href</code>或者<code>window.open</code>来打开另一个同域页面才能访问<code>sessionStorage</code>。</p><p>这一点在混合开发嵌套<code>H5</code>的开发模式中尤为重要，如果以新开<code>webview</code>的方式打开页面，很可能<code>sessionStorage</code>就没有了。</p><h2 id="_20-会话cookie" tabindex="-1">20.会话cookie <a class="header-anchor" href="#_20-会话cookie" aria-label="Permalink to &quot;20.会话cookie&quot;">​</a></h2><p><code>cookie</code>在设置的时候如果不设置过期时间，就表示是个会话<code>cookie</code>，以前我以为关闭浏览器会话<code>cookie</code>就消失了，然而...喜提<code>bug</code>一个。</p><p>在多数情况下<code>windows</code>系统或者安卓系统确实是这样的。但是在<code>macOS</code>系统或者<code>ios</code>系统中，关闭浏览器并不会清除掉会话<code>cookie</code>，结束浏览器进程才行。</p><h2 id="_21-标签模板字符串" tabindex="-1">21.标签模板字符串 <a class="header-anchor" href="#_21-标签模板字符串" aria-label="Permalink to &quot;21.标签模板字符串&quot;">​</a></h2><p>模板字符串支持在前面添加一个函数，第一个参数是一个有固定内容组成的数组，后面参数依次为传入的变量，函数返回值为模板字符串真正展示的值。不过这个功能个人感觉没啥用。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#61AFEF;"> tag</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">params</span><span style="color:#ABB2BF;">, ...</span><span style="color:#E06C75;font-style:italic;">args</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E06C75;"> params</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">+</span><span style="color:#E06C75;"> args</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">]; </span><span style="color:#7F848E;font-style:italic;">// 返回值为模板字符串的真实值。</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> str</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> tag</span><span style="color:#98C379;">\`hello </span><span style="color:#C678DD;">\${</span><span style="color:#98C379;">&#39;world&#39;</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">\`</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="_22-字符串常用的几个方法" tabindex="-1">22.字符串常用的几个方法 <a class="header-anchor" href="#_22-字符串常用的几个方法" aria-label="Permalink to &quot;22.字符串常用的几个方法&quot;">​</a></h2><h3 id="_1-includes" tabindex="-1">1. includes(); <a class="header-anchor" href="#_1-includes" aria-label="Permalink to &quot;1. includes();&quot;">​</a></h3><p>字符串中是否包含某个字符串，这个不说了，其实就是<code>indexOf</code>的替代方案，用起来更优雅，</p><h3 id="_2-startswith" tabindex="-1">2. startsWith(); <a class="header-anchor" href="#_2-startswith" aria-label="Permalink to &quot;2. startsWith();&quot;">​</a></h3><p>字符串是否为某个字符串开始，我一般用它判断<code>url</code>是否有<code>http</code></p><h3 id="_3-endswith" tabindex="-1">3. endsWith(); <a class="header-anchor" href="#_3-endswith" aria-label="Permalink to &quot;3. endsWith();&quot;">​</a></h3><p>字符串是否为某个字符串结尾。判断后缀名的时候尤其有效。</p><h3 id="_4-repeat-number" tabindex="-1">4. repeat(number); <a class="header-anchor" href="#_4-repeat-number" aria-label="Permalink to &quot;4. repeat(number);&quot;">​</a></h3><p>得到一个重复<code>number</code>次的字符串。额...我也不知道什么时候有用，一般我用它造测试数据。</p><h3 id="_5-abc-padend-5-1-abc11" tabindex="-1">5. &#39;abc&#39;.padEnd(5, &#39;1&#39;); // abc11; <a class="header-anchor" href="#_5-abc-padend-5-1-abc11" aria-label="Permalink to &quot;5. &#39;abc&#39;.padEnd(5, &#39;1&#39;); // abc11;&quot;">​</a></h3><p>用给定的字符串在尾部拼接到指定长度，第一个参数为长度，第二个参数为用于拼接的值。</p><h3 id="_6-abc-padstart-5-1-11abc" tabindex="-1">6. &#39;abc&#39;.padStart(5, &#39;1&#39;); // 11abc; <a class="header-anchor" href="#_6-abc-padstart-5-1-11abc" aria-label="Permalink to &quot;6. &#39;abc&#39;.padStart(5, &#39;1&#39;); // 11abc;&quot;">​</a></h3><p>用给定的字符串在首部拼接到指定长度第一个参数为长度，第二个参数为用于拼接的值。首部补0？</p><h2 id="_23-数组快速去重" tabindex="-1">23.数组快速去重 <a class="header-anchor" href="#_23-数组快速去重" aria-label="Permalink to &quot;23.数组快速去重&quot;">​</a></h2><p>应该很多人都知道这个，数组转换成<code>Set</code>, 再转换为数组，不过这种去重方式只能去除基本数据类型组成的数组。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> arr</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> [</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">6</span><span style="color:#ABB2BF;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> arr2</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Set</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">arr</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> arr3</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> [...</span><span style="color:#E06C75;">arr2</span><span style="color:#ABB2BF;">];</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="_24-object-keys-values-entries" tabindex="-1">24.Object.keys, values, entries <a class="header-anchor" href="#_24-object-keys-values-entries" aria-label="Permalink to &quot;24.Object.keys, values, entries&quot;">​</a></h2><p>一般我们常用<code>Object.keys</code>，返回一个对象的键组成的数组，其实还有<code>Object.values</code>，返回对象值组成的数组，<code>Object.entries</code>将对象转成数组，每个元素是键值对组成的数组，可以使用此功能快速将对象转为<code>Map</code>。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> obj</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;yd&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">age</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">18</span><span style="color:#ABB2BF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">keys</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// [&#39;name&#39;, &#39;age&#39;];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">values</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// [&#39;yd&#39;, 18];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> l</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">entries</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// [[&#39;name&#39;, &#39;yd&#39;], [&#39;age&#39;: 18]];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> m</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Map</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">l</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="_25-object-getownpropertydescriptors" tabindex="-1">25.Object.getOwnPropertyDescriptors <a class="header-anchor" href="#_25-object-getownpropertydescriptors" aria-label="Permalink to &quot;25.Object.getOwnPropertyDescriptors&quot;">​</a></h2><p>获取对象的描述信息</p><p><code>Object.assign</code>复制时，将对象的属性和方法当做普通属性来复制，并不会复制完整的描述信息，比如<code>this</code>。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> p1</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">    a</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;y&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    b</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;d&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#C678DD;">    get</span><span style="color:#61AFEF;"> name</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">        return</span><span style="color:#98C379;"> \`</span><span style="color:#C678DD;">\${</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">a</span><span style="color:#C678DD;">}</span><span style="color:#C678DD;"> \${</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">b</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">\`</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> p2</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">assign</span><span style="color:#ABB2BF;">({}, </span><span style="color:#E06C75;">p1</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">p2</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">a</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &#39;z&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">p2</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// y d; 发现并没有修改p2.a的值，是因为this仍旧指向p1</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>使用<code>Object.getOwnPropertyDescriptors</code>获取完整描述信息</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> description</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getOwnPropertyDescriptors</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">p1</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> p2</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">defineProperty</span><span style="color:#ABB2BF;">({}, </span><span style="color:#E06C75;">description</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">p2</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">a</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &#39;z&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">p2</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// z d</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="_26-bigint" tabindex="-1">26.BigInt <a class="header-anchor" href="#_26-bigint" aria-label="Permalink to &quot;26.BigInt&quot;">​</a></h2><p><code>JavaScript</code>可以处理的最大数字是<code>2</code>的<code>53</code>次方 <code>- 1</code>，这一点我们可以在<code>Number.MAX_SAFE_INTEGER</code>中看到。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">consoel</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Number</span><span style="color:#ABB2BF;">.MAX_SAFE_INTEGER); </span><span style="color:#7F848E;font-style:italic;">//9007199254740991</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>更大的数字则无法处理，<code>ECMAScript2020</code>引入<code>BigInt</code>数据类型来解决这个问题。通过把字母<code>n</code>放在末尾, 可以运算大数据。</p><p><code>BigInt</code>可以使用算数运算符进行加、减、乘、除、余数及幂等运算。它可以由数字和十六进制或二进制字符串构造。此外它还支持<code>AND</code>、<code>OR</code>、<code>NOT</code>和<code>XOR</code>之类的按位运算。唯一无效的位运算是零填充右移运算符。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> bigNum</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 100000000000000000000000000000</span><span style="color:#C678DD;">n</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">bigNum</span><span style="color:#56B6C2;"> *</span><span style="color:#D19A66;"> 2</span><span style="color:#C678DD;">n</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// 200000000000000000000000000000n</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> bigInt</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> BigInt</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">bigInt</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// 1n;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> bigInt2</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> BigInt</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;2222222222222222222&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">bigInt2</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// 2222222222222222222n;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>BigInt是一个大整数，所以他不能用来存储小数。</p><h2 id="_27-合并空运算符" tabindex="-1">27.??合并空运算符 <a class="header-anchor" href="#_27-合并空运算符" aria-label="Permalink to &quot;27.??合并空运算符&quot;">​</a></h2><p>假设变量<code>a</code>不存在，我们希望给系统一个默认值，一般我们会使用<code>||</code>运算符。但是在<code>javascript</code>中空字符串，<code>0</code>，<code>false</code>都会执行<code>||</code>运算符，所以<code>ECMAScript2020</code>引入合并空运算符解决该问题，只允许在值为<code>null</code>或未定义时使用默认值。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> name</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &#39;&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">name</span><span style="color:#56B6C2;"> ||</span><span style="color:#98C379;"> &#39;yd&#39;</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// yd;</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">name</span><span style="color:#56B6C2;"> ??</span><span style="color:#98C379;"> &#39;yd&#39;</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// &#39;&#39;;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="_28-可选链运算符" tabindex="-1">28.?可选链运算符 <a class="header-anchor" href="#_28-可选链运算符" aria-label="Permalink to &quot;28.?可选链运算符&quot;">​</a></h2><p>业务代码中经常会遇到这样的情况，<code>a</code>对象有个属性<code>b</code>,<code>b</code>也是一个对象有个属性<code>c</code>,</p><p>我们需要访问<code>c</code>，经常会写成<code>a.b.c</code>，但是如果<code>f</code>不存在时，就会出错。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> a</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">    b</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">        c</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">123</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">a</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">b</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">c</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// 123;</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">a</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">f</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">c</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// f不存在所以会报错</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><code>ECMAScript2020</code>定义可选链运算符解决该问题，通过在<code>.</code>之前添加一个<code>?</code>将键名变成可选</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> person</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {};</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">person</span><span style="color:#ABB2BF;">?.</span><span style="color:#E5C07B;">profile</span><span style="color:#ABB2BF;">?.</span><span style="color:#E06C75;">age</span><span style="color:#56B6C2;"> ??</span><span style="color:#D19A66;"> 18</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// 18</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="_29-import" tabindex="-1">29.import <a class="header-anchor" href="#_29-import" aria-label="Permalink to &quot;29.import&quot;">​</a></h2><p><code>import</code>是<code>ECMAScript2015</code>当中定义的一套<code>ES Module</code>模块系统，语法特性绝大多数浏览器已经支持了，通过给<code>script</code>标签添加<code>type=module</code>的属性就可以使用<code>ES Module</code>的标准去执行<code>javascript</code>代码了。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">script</span><span style="color:#D19A66;font-style:italic;"> type</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;module&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">console.log(&#39;this is es module&#39;);</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>在<code>ES Module</code>规范下，会采用严格模式(<code>use strict</code>)运行<code>javascript</code>代码。每个<code>ES Module</code>都运行在单独的作用域中，也就意味着变量间不会互相干扰。外部<code>js</code>文件是通过<code>CORS</code>的方式请求的，所以要求我们外部的<code>js</code>文件地址要支持跨域请求，也就是文件服务器要支持<code>CORS</code>。我们可以在任意网站控制台输入下面代码。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> script</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">createElement</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;script&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">script</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">type</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &#39;module&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">script</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">innerHTML</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> \`import React from &#39;https://cdn.bootcdn.net/ajax/libs/react/17.0.1/cjs/react-jsx-dev-runtime.development.js&#39;;\`</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">document</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">body</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">append</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>可以发现在<code>network</code>中请求了<code>https://cdn.bootcdn.net/ajax/libs/react/17.0.1/cjs/react-jsx-dev-runtime.development.js</code>资源。</p><p><code>ES Module</code>的<code>script</code>标签会延迟脚本加载，等待网页请求完资源之后才执行，和使用<code>deffer</code>的方式加载资源相同。</p><p>需要注意的是，<code>import {} from &#39;xx&#39;</code>导入模块的时候，并不是对象的解构，而是<code>import</code>的固定语法，这一点很多人容易弄错。</p><p>并且<code>ECMAScript2020</code>中<code>import</code>开始支持动态导入功能，在此之前<code>import</code>只能写在模块代码的顶部，一开始就要声明模块依赖的其它模块。支持动态引入后就可以按需引入对应的模块，这个功能我们早在<code>SPA</code>中就已经用到了。动态导入返回的是一个<code>Promise</code>。</p><p>a.js</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> a</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 123</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;"> };</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>b.js</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">import</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;./a.js&#39;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">then</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">data</span><span style="color:#C678DD;"> =&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">    console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">data</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// 123;</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="_30-0-1-0-2-0-3-false" tabindex="-1">30. 0.1 + 0.2 === 0.3 // false <a class="header-anchor" href="#_30-0-1-0-2-0-3-false" aria-label="Permalink to &quot;30. 0.1 + 0.2 === 0.3 // false&quot;">​</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">0.1</span><span style="color:#56B6C2;">+</span><span style="color:#D19A66;">0.2</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// 0.30000000000000004</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>在<code>JS</code>当中，<code>Number</code>类型实际上是<code>double</code>类型，运算小数时存在精度问题。因为计算机只认识二进制，在进行运算时，需要将其他进制的数值转换成二进制，然后再进行计算</p><p>小数用二进制表达时是无穷的。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 将0.1转换成二进制</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">0.1</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">toString</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">)); </span><span style="color:#7F848E;font-style:italic;">// 0.0001100110011001100110011001100110011001100110011001101</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 将0.2转换成二进制</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">0.2</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">toString</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">));  </span><span style="color:#7F848E;font-style:italic;">// 0.001100110011001100110011001100110011001100110011001101</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>双精度浮点数的小数部分最多支持<code>53</code>位二进制位，所以两者相加后，因浮点数小数位的限制而截断的二进制数字，再转换为十进制，就成了<code>0.30000000000000004</code>，这样在进行算术计算时会产生误差。</p><p><code>ES6 在Number</code>对象上面，新增一个极小的常量<code>Number.EPSILON</code>。根据规格，它表示<code>1</code>与大于<code>1</code>的最小浮点数之间的差。对于<code>64</code>位浮点数来说，大于<code>1</code>的最小浮点数相当于二进制的<code>1.00..001</code>，小数点后面有连续<code>51</code>个零。这个值减去<code>1</code>之后，就等于<code>2的-52次方</code>。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">Number</span><span style="color:#ABB2BF;">.EPSILON </span><span style="color:#56B6C2;">===</span><span style="color:#E5C07B;"> Math</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">pow</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">, </span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">52</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// true</span></span>
<span class="line"><span style="color:#E5C07B;">Number</span><span style="color:#ABB2BF;">.EPSILON</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 2.220446049250313e-16</span></span>
<span class="line"><span style="color:#E5C07B;">Number</span><span style="color:#ABB2BF;">.EPSILON.</span><span style="color:#61AFEF;">toFixed</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// &quot;0.00000000000000022204&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><code>Number.EPSILON</code>实际上是<code>JavaScript</code>能够表示的最小精度。误差如果小于这个值，就可以认为已经没有意义了，即不存在误差了。</p><p>引入一个这么小的量的目的，在于为浮点数计算，设置一个误差范围。我们知道浮点数计算是不精确的。</p><p><code>Number.EPSILON</code>可以用来设置<code>能够接受的误差范围</code>。比如，误差范围设为<code>2</code>的<code>-50</code>次方（即<code>Number.EPSILON * Math.pow(2, 2)</code>），即如果两个浮点数的差小于这个值，我们就认为这两个浮点数相等。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">0.1</span><span style="color:#56B6C2;"> +</span><span style="color:#D19A66;"> 0.2</span><span style="color:#56B6C2;"> -</span><span style="color:#D19A66;"> 0.3</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">&lt;</span><span style="color:#E5C07B;"> Number</span><span style="color:#ABB2BF;">.EPSILON </span><span style="color:#7F848E;font-style:italic;">// true</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,455)]))}const C=n(o,[["render",e]]);export{b as __pageData,C as default};
