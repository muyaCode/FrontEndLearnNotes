import{_ as n,c as a,o as l,ah as p}from"./chunks/framework.DqD713j2.js";const u=JSON.parse('{"title":"TypeScript中的工程化","description":"","frontmatter":{},"headers":[],"relativePath":"Document/TypeScript/TypeScript语法基础/TypeScript中的工程化.md","filePath":"Document/TypeScript/TypeScript语法基础/TypeScript中的工程化.md","lastUpdated":1750954157000}'),e={name:"Document/TypeScript/TypeScript语法基础/TypeScript中的工程化.md"};function o(t,s,r,c,i,B){return l(),a("div",null,s[0]||(s[0]=[p(`<h1 id="typescript中的工程化" tabindex="-1">TypeScript中的工程化 <a class="header-anchor" href="#typescript中的工程化" aria-label="Permalink to &quot;TypeScript中的工程化&quot;">​</a></h1><ul><li>前端工程化就是通过流程规范化、标准化提升团队协作效率</li><li>通过组件化、模块化提升代码质量</li><li>使用构建工具、自动化工具提升开发效率</li><li>编译 =&gt; 打包(合并) =&gt; 压缩 =&gt; 代码检查 =&gt; 测试 =&gt; 持续集成</li></ul><h2 id="_1-编译参数" tabindex="-1">1. 编译参数 <a class="header-anchor" href="#_1-编译参数" aria-label="Permalink to &quot;1. 编译参数&quot;">​</a></h2><ul><li><a href="https://www.tslang.cn/docs/handbook/compiler-options.html" target="_blank" rel="noreferrer">编译参数</a></li></ul><table tabindex="0"><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">功能</th></tr></thead><tbody><tr><td style="text-align:left;">rootDir,outDir</td><td style="text-align:left;">配置输入输出目录</td></tr><tr><td style="text-align:left;">lib,jsx</td><td style="text-align:left;">添加基础库的能力</td></tr><tr><td style="text-align:left;">noImplicitAny,strict</td><td style="text-align:left;">更严格的模式</td></tr><tr><td style="text-align:left;">module,target,declaration,sourceMap</td><td style="text-align:left;">控制输出的内容</td></tr><tr><td style="text-align:left;">watch</td><td style="text-align:left;">观察模式</td></tr><tr><td style="text-align:left;">allowJs</td><td style="text-align:left;">允许编译javascript文件</td></tr></tbody></table><h2 id="_2-代码检查" tabindex="-1">2. 代码检查 <a class="header-anchor" href="#_2-代码检查" aria-label="Permalink to &quot;2. 代码检查&quot;">​</a></h2><ul><li>ESLint 是一款插件化的 JavaScript 静态代码检查工具，ESLint 通过规则来描述具体的检查行为</li><li><a href="https://eslint.org/" target="_blank" rel="noreferrer">eslint</a></li></ul><h3 id="_2-1-模块安装" tabindex="-1">2.1 模块安装 <a class="header-anchor" href="#_2-1-模块安装" aria-label="Permalink to &quot;2.1 模块安装&quot;">​</a></h3><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E06C75;">cnpm</span><span style="color:#E06C75;"> i</span><span style="color:#E06C75;"> eslint</span><span style="color:#E06C75;"> typescript</span><span style="color:#ABB2BF;"> @</span><span style="color:#E06C75;">typescript</span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">eslint</span><span style="color:#56B6C2;">/</span><span style="color:#E06C75;">parser</span><span style="color:#ABB2BF;"> @</span><span style="color:#E06C75;">typescript</span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">eslint</span><span style="color:#56B6C2;">/</span><span style="color:#E06C75;">eslint</span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">plugin</span><span style="color:#56B6C2;"> --</span><span style="color:#E06C75;">save</span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">dev</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_2-2-eslintrc配置文件" tabindex="-1">2.2 eslintrc配置文件 <a class="header-anchor" href="#_2-2-eslintrc配置文件" aria-label="Permalink to &quot;2.2 eslintrc配置文件&quot;">​</a></h3><ul><li><a href="https://eslint.org/docs/rules/" target="_blank" rel="noreferrer">英文rules</a></li><li><a href="https://cn.eslint.org/docs/rules/" target="_blank" rel="noreferrer">中文rules</a></li><li>需要添加<code>parserOptions</code>以支持模块化的写法</li><li>.eslintrc.js</li></ul><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#98C379;">    &quot;parser&quot;</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;">&quot;@typescript-eslint/parser&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">    &quot;plugins&quot;</span><span style="color:#ABB2BF;">:[</span><span style="color:#98C379;">&quot;@typescript-eslint&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#98C379;">    &quot;rules&quot;</span><span style="color:#ABB2BF;">:{</span></span>
<span class="line"><span style="color:#98C379;">        &quot;no-var&quot;</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;">&quot;error&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">        &quot;no-extra-semi&quot;</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;">&quot;error&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">        &quot;@typescript-eslint/indent&quot;</span><span style="color:#ABB2BF;">:[</span><span style="color:#98C379;">&quot;error&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#98C379;">    &quot;parserOptions&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#98C379;">        &quot;ecmaVersion&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">6</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">        &quot;sourceType&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;module&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">        &quot;ecmaFeatures&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#98C379;">          &quot;modules&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h3 id="_2-3-npm命令" tabindex="-1">2.3 npm命令 <a class="header-anchor" href="#_2-3-npm命令" aria-label="Permalink to &quot;2.3 npm命令&quot;">​</a></h3><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#98C379;">&quot;scripts&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">    &quot;start&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;webpack&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    &quot;build&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;tsc&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    &quot;eslint&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;eslint src --ext .ts&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    &quot;eslint:fix&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;eslint src --ext .ts --fix&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>代码</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> name2</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &#39;zhufeng&#39;</span><span style="color:#ABB2BF;">;;;</span></span>
<span class="line"><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#C678DD;">    let</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 10</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>检查结果</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E06C75;">src</span><span style="color:#ABB2BF;">\\</span><span style="color:#E5C07B;">helloworld</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">ts</span></span>
<span class="line"><span style="color:#D19A66;">  1</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">1</span><span style="color:#E06C75;">   error</span><span style="color:#E06C75;">  Unexpected</span><span style="color:#C678DD;"> var</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">use</span><span style="color:#ABB2BF;"> let or const instead      no-var</span></span>
<span class="line"><span style="color:#D19A66;">  1</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">23</span><span style="color:#E06C75;">  error</span><span style="color:#E06C75;">  Unnecessary</span><span style="color:#E06C75;"> semicolon</span><span style="color:#E06C75;">                         no</span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">extra</span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">semi</span></span>
<span class="line"><span style="color:#D19A66;">  1</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">24</span><span style="color:#E06C75;">  error</span><span style="color:#E06C75;">  Unnecessary</span><span style="color:#E06C75;"> semicolon</span><span style="color:#E06C75;">                         no</span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">extra</span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">semi</span></span>
<span class="line"><span style="color:#D19A66;">  3</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">1</span><span style="color:#E06C75;">   error</span><span style="color:#E06C75;">  Expected</span><span style="color:#E06C75;"> indentation</span><span style="color:#C678DD;"> of</span><span style="color:#D19A66;"> 2</span><span style="color:#E06C75;"> spaces</span><span style="color:#E06C75;"> but</span><span style="color:#E06C75;"> found</span><span style="color:#D19A66;"> 4</span><span style="color:#ABB2BF;">  @</span><span style="color:#E06C75;">typescript</span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">eslint</span><span style="color:#56B6C2;">/</span><span style="color:#E06C75;">inden</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="_2-4-配置自动修复" tabindex="-1">2.4 配置自动修复 <a class="header-anchor" href="#_2-4-配置自动修复" aria-label="Permalink to &quot;2.4 配置自动修复&quot;">​</a></h3><ul><li><p>安装vscode的eslint插件</p></li><li><p>配置参数 .vscode\\settings.json</p></li></ul><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#98C379;">  &quot;eslint.autoFixOnSave&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">  &quot;eslint.validate&quot;</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#98C379;">      &quot;javascript&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">      &quot;javascriptreact&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">      {</span></span>
<span class="line"><span style="color:#98C379;">          &quot;language&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;typescript&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">          &quot;autoFix&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span></span>
<span class="line"><span style="color:#ABB2BF;">      },</span></span>
<span class="line"><span style="color:#ABB2BF;">        {</span></span>
<span class="line"><span style="color:#98C379;">          &quot;language&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;typescriptreact&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">          &quot;autoFix&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span></span>
<span class="line"><span style="color:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#ABB2BF;">  ]</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p><img src="http://img.zhufengpeixun.cn/eslint.png" alt="eslint"></p><h2 id="_3-git-hooks-检查" tabindex="-1">3. Git Hooks 检查 <a class="header-anchor" href="#_3-git-hooks-检查" aria-label="Permalink to &quot;3. Git Hooks 检查&quot;">​</a></h2><ul><li><p>Git 基本已经成为项目开发中默认的版本管理软件，在使用 Git 的项目中，我们可以为项目设置 Git Hooks 来帮我们在提交代码的各个阶段做一些代码检查等工作</p></li><li><p>钩子（Hooks） 都被存储在 Git 目录下的 hooks 子目录中。 也就是绝大部分项目中的 .git/hooks 目录</p></li><li><p>钩子</p><p>分为两大类，客户端的和服务器端的</p><ul><li>客户端钩子主要被提交和合并这样的操作所调用</li><li>而服务器端钩子作用于接收被推送的提交这样的联网操作，这里我们主要介绍客户端钩子</li></ul></li></ul><h3 id="_3-1-pre-commit" tabindex="-1">3.1 pre-commit <a class="header-anchor" href="#_3-1-pre-commit" aria-label="Permalink to &quot;3.1 pre-commit&quot;">​</a></h3><ul><li><code>pre-commit</code> 就是在代码提交之前做些东西，比如代码打包，代码检测，称之为钩子（hook）</li><li>在commit之前执行一个函数（callback）。这个函数成功执行完之后，再继续commit，但是失败之后就阻止commit</li><li>在.git-&gt;hooks-&gt;下面有个pre-commit.sample*，这个里面就是默认的函数(脚本)样本</li></ul><h3 id="_3-2-安装pre-commit" tabindex="-1">3.2 安装pre-commit <a class="header-anchor" href="#_3-2-安装pre-commit" aria-label="Permalink to &quot;3.2 安装pre-commit&quot;">​</a></h3><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E06C75;">npm</span><span style="color:#E06C75;"> install</span><span style="color:#E06C75;"> pre</span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">commit</span><span style="color:#56B6C2;"> --</span><span style="color:#E06C75;">save</span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">dev</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_3-3-配置脚本" tabindex="-1">3.3 配置脚本 <a class="header-anchor" href="#_3-3-配置脚本" aria-label="Permalink to &quot;3.3 配置脚本&quot;">​</a></h3><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#98C379;">&quot;scripts&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">    &quot;build&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;tsc&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    &quot;eslint&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;eslint src --ext .ts&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    &quot;eslint:fix&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;eslint src --ext .ts --fix&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span>
<span class="line"><span style="color:#98C379;">  &quot;pre-commit&quot;</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#98C379;">    &quot;eslint&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">  ]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><blockquote><p>如果没有在<code>.git-&gt;hooks</code>目录下生成<code>pre-commit</code>文件的话，则要手工创建<code>node ./node_modules/pre-commit/install.js</code></p></blockquote><h2 id="_4-单元测试" tabindex="-1">4. 单元测试 <a class="header-anchor" href="#_4-单元测试" aria-label="Permalink to &quot;4. 单元测试&quot;">​</a></h2><ul><li>Mocha是现在最流行的JavaScript测试框架之一，在浏览器和Node环境都可以使用。</li><li>所谓&quot;测试框架&quot;，就是运行测试的工具。通过它，可以为JavaScript应用添加测试，从而保证代码的质量</li></ul><h3 id="_4-1-安装" tabindex="-1">4.1 安装 <a class="header-anchor" href="#_4-1-安装" aria-label="Permalink to &quot;4.1 安装&quot;">​</a></h3><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E06C75;">cnpm</span><span style="color:#E06C75;"> i</span><span style="color:#E06C75;"> mocha</span><span style="color:#ABB2BF;">  @</span><span style="color:#E06C75;">types</span><span style="color:#56B6C2;">/</span><span style="color:#E06C75;">mocha</span><span style="color:#E06C75;"> chai</span><span style="color:#ABB2BF;"> @</span><span style="color:#E06C75;">types</span><span style="color:#56B6C2;">/</span><span style="color:#E06C75;">chai</span><span style="color:#E06C75;"> ts</span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">node</span><span style="color:#ABB2BF;"> @</span><span style="color:#E06C75;">types</span><span style="color:#56B6C2;">/</span><span style="color:#E06C75;">node</span><span style="color:#56B6C2;">  --</span><span style="color:#E06C75;">save</span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">dev</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_4-2-sum-ts" tabindex="-1">4.2 sum.ts <a class="header-anchor" href="#_4-2-sum-ts" aria-label="Permalink to &quot;4.2 sum.ts&quot;">​</a></h3><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> default</span><span style="color:#C678DD;"> function</span><span style="color:#61AFEF;"> sum</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">x</span><span style="color:#ABB2BF;">:</span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;font-style:italic;">y</span><span style="color:#ABB2BF;">:</span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;">):</span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#C678DD;">  return</span><span style="color:#E06C75;"> x</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> y</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> default</span><span style="color:#C678DD;"> function</span><span style="color:#61AFEF;"> sum</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">x</span><span style="color:#ABB2BF;">:</span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;font-style:italic;">y</span><span style="color:#ABB2BF;">:</span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#C678DD;">  return</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">x</span><span style="color:#56B6C2;">+</span><span style="color:#E06C75;">y</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">toPrecision</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="_4-3-sum-test-ts" tabindex="-1">4.3 sum.test.ts <a class="header-anchor" href="#_4-3-sum-test-ts" aria-label="Permalink to &quot;4.3 sum.test.ts&quot;">​</a></h3><ul><li>通常，测试脚本与所要测试的源码脚本同名，但是后缀名为.test.js（表示测试）或者.spec.js（表示规格）。比如，add.js的测试脚本名字就是add.test.js</li><li>测试脚本里面应该包括一个或多个describe块，每个describe块应该包括一个或多个it块</li><li>describe块称为&quot;测试套件&quot;（test suite），表示一组相关的测试。它是一个函数，第一个参数是测试套件的名称（&quot;加法函数的测试&quot;），第二个参数是一个实际执行的函数。</li><li>it块称为&quot;测试用例&quot;（test case），表示一个单独的测试，是测试的最小单位。它也是一个函数，第一个参数是测试用例的名称（&quot;1 加 1 应该等于 2&quot;），第二个参数是一个实际执行的函数。</li></ul><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> sum</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &#39;../src/sum&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#D19A66;"> *</span><span style="color:#C678DD;"> as</span><span style="color:#E06C75;"> assert</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &#39;assert&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#D19A66;"> *</span><span style="color:#C678DD;"> as</span><span style="color:#E06C75;"> chai</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &#39;chai&#39;</span></span>
<span class="line"><span style="color:#61AFEF;">describe</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;test sum&#39;</span><span style="color:#ABB2BF;">,()</span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#61AFEF;">  it</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;1+1=2&#39;</span><span style="color:#ABB2BF;">,()</span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E5C07B;">    assert</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">equal</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">sum</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">),</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">  })</span></span>
<span class="line"><span style="color:#61AFEF;">  it</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;2+2=4&#39;</span><span style="color:#ABB2BF;">,()</span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E5C07B;">    chai</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">expect</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">2</span><span style="color:#56B6C2;">+</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">).</span><span style="color:#E5C07B;">to</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">be</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">equal</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">  })</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"><span style="color:#61AFEF;">it</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;0.1+0.2=0.3&#39;</span><span style="color:#ABB2BF;">,()</span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E5C07B;">    assert</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">equal</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">sum</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">.1</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">.2</span><span style="color:#ABB2BF;">),</span><span style="color:#D19A66;">.3</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="_4-4-断言库" tabindex="-1">4.4 断言库 <a class="header-anchor" href="#_4-4-断言库" aria-label="Permalink to &quot;4.4 断言库&quot;">​</a></h3><ul><li>所谓&quot;断言&quot;，就是判断源码的实际执行结果与预期结果是否一致，如果不一致就抛出一个错误</li><li>所有的测试用例（it块）都应该含有一句或多句的断言。它是编写测试用例的关键。断言功能由断言库来实现，Mocha本身不带断言库，所以必须先引入断言库</li></ul><h4 id="_4-4-1-assert" tabindex="-1">4.4.1 assert <a class="header-anchor" href="#_4-4-1-assert" aria-label="Permalink to &quot;4.4.1 assert&quot;">​</a></h4><ul><li>assert.equal 用于判断两个值是否相等</li></ul><h4 id="_4-4-2-chai" tabindex="-1">4.4.2 chai <a class="header-anchor" href="#_4-4-2-chai" aria-label="Permalink to &quot;4.4.2 chai&quot;">​</a></h4><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 相等或不相等</span></span>
<span class="line"><span style="color:#61AFEF;">expect</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#56B6C2;"> +</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">).</span><span style="color:#E5C07B;">to</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">be</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">equal</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#61AFEF;">expect</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#56B6C2;"> +</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">).</span><span style="color:#E5C07B;">to</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">be</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">not</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">equal</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;">&#39;zhufeng&#39;</span><span style="color:#ABB2BF;">};</span><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> b</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;">&#39;zhufeng&#39;</span><span style="color:#ABB2BF;">};</span></span>
<span class="line"><span style="color:#61AFEF;">expect</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">).</span><span style="color:#E5C07B;">to</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">be</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">deep</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">equal</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 布尔值为true</span></span>
<span class="line"><span style="color:#61AFEF;">expect</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">).</span><span style="color:#E5C07B;">to</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">be</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">ok</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#61AFEF;">expect</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">).</span><span style="color:#E5C07B;">to</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">not</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">be</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">ok</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 类型判断</span></span>
<span class="line"><span style="color:#61AFEF;">expect</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;zhufeng&#39;</span><span style="color:#ABB2BF;">).</span><span style="color:#E5C07B;">to</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">be</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">a</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;string&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#61AFEF;">expect</span><span style="color:#ABB2BF;">({</span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;">&#39;zhufeng&#39;</span><span style="color:#ABB2BF;">}).</span><span style="color:#E5C07B;">to</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">be</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">an</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;object&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> Person</span><span style="color:#ABB2BF;">(){}</span></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> person</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Person</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#61AFEF;">expect</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">person</span><span style="color:#ABB2BF;">).</span><span style="color:#E5C07B;">to</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">be</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">an</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">instanceof</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">Person</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//包含</span></span>
<span class="line"><span style="color:#61AFEF;">expect</span><span style="color:#ABB2BF;">([</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">]).</span><span style="color:#E5C07B;">to</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">include</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#61AFEF;">expect</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;zhufeng&#39;</span><span style="color:#ABB2BF;">).</span><span style="color:#E5C07B;">to</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">contain</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;feng&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#61AFEF;">expect</span><span style="color:#ABB2BF;">({ </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;zhufeng&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">age</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">9</span><span style="color:#ABB2BF;"> }).</span><span style="color:#E5C07B;">to</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">include</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">keys</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;name&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 是否为空</span></span>
<span class="line"><span style="color:#61AFEF;">expect</span><span style="color:#ABB2BF;">([]).</span><span style="color:#E5C07B;">to</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">be</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">empty</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#61AFEF;">expect</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;&#39;</span><span style="color:#ABB2BF;">).</span><span style="color:#E5C07B;">to</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">be</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">empty</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#61AFEF;">expect</span><span style="color:#ABB2BF;">({}).</span><span style="color:#E5C07B;">to</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">be</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">empty</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 正则匹配</span></span>
<span class="line"><span style="color:#61AFEF;">expect</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;zhufengnodejs@126.com&#39;</span><span style="color:#ABB2BF;">).</span><span style="color:#E5C07B;">to</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">match</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">/</span><span style="color:#C678DD;">^</span><span style="color:#E06C75;">zhufeng/</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><blockquote><p>头部是expect方法，尾部是断言方法，比如equal、a/an、ok、match等。两者之间使用to或to.be连接</p></blockquote><h3 id="_4-5-指定测试脚本文件" tabindex="-1">4.5 指定测试脚本文件 <a class="header-anchor" href="#_4-5-指定测试脚本文件" aria-label="Permalink to &quot;4.5 指定测试脚本文件&quot;">​</a></h3><ul><li>mocha命令后面紧跟测试脚本的路径和文件名，可以指定多个测试脚本。</li><li>Mocha默认运行test子目录里面的测试脚本。所以，一般都会把测试脚本放在test目录里面，然后执行mocha就不需要参数了</li><li>加上--recursive参数，就会执行test子目录下面所有的层的测试用例</li><li>命令行指定测试脚本时，可以使用通配符，同时指定多个文件</li></ul><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E06C75;">mocha</span><span style="color:#E06C75;"> spec</span><span style="color:#56B6C2;">/</span><span style="color:#ABB2BF;">{</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">}.</span><span style="color:#E06C75;">js</span><span style="color:#E5C07B;">      执行spec目录下面的a</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">js和b</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">js</span></span>
<span class="line"><span style="color:#E06C75;">mocha</span><span style="color:#E06C75;"> test</span><span style="color:#7F848E;font-style:italic;">/*.js     执行test目录下面的所有文件</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">mocha test/**/</span><span style="color:#56B6C2;">*</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">js</span><span style="color:#E06C75;">   执行test目录下面任何子目录中</span><span style="color:#ABB2BF;">、</span><span style="color:#E06C75;">文件后缀名为js的测试脚本</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="_4-6-tsconfig-json" tabindex="-1">4.6 tsconfig.json <a class="header-anchor" href="#_4-6-tsconfig-json" aria-label="Permalink to &quot;4.6 tsconfig.json&quot;">​</a></h3><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">  &quot;compilerOptions&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">    &quot;module&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;commonjs&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="_4-7-package-json" tabindex="-1">4.7 package.json <a class="header-anchor" href="#_4-7-package-json" aria-label="Permalink to &quot;4.7 package.json&quot;">​</a></h3><ul><li>mocha命令后面紧跟测试脚本的路径和文件名，可以指定多个测试脚本</li><li>Mocha默认运行<code>test</code>子目录里面的测试脚本。所以，一般都会把测试脚本放在<code>test</code>目录里面，然后执行mocha就不需要参数了</li><li>加上--recursive参数可以保证子目录下面所有的测试用例都会执行</li></ul><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#98C379;">  &quot;scripts&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">    &quot;test&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;set TS_NODE_COMPILER_OPTIONS={</span><span style="color:#56B6C2;">\\&quot;</span><span style="color:#98C379;">module</span><span style="color:#56B6C2;">\\&quot;</span><span style="color:#98C379;">:</span><span style="color:#56B6C2;">\\&quot;</span><span style="color:#98C379;">commonjs</span><span style="color:#56B6C2;">\\&quot;</span><span style="color:#98C379;">}  &amp;&amp; mocha --require ts-node/register --watch --watch-extensions ts test/**/*&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><blockquote><p>如果&quot;module&quot;: &quot;es2015&quot;的话则需要在命令行中配置module规范</p></blockquote><h3 id="_4-8-配置文件mocha-opts" tabindex="-1">4.8 配置文件mocha.opts <a class="header-anchor" href="#_4-8-配置文件mocha-opts" aria-label="Permalink to &quot;4.8 配置文件mocha.opts&quot;">​</a></h3><ul><li>Mocha允许在test目录下面，放置配置文件mocha.opts，把命令行参数写在里面</li></ul><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">--require ts-node/register </span></span>
<span class="line"><span style="color:#ABB2BF;">--watch </span></span>
<span class="line"><span style="color:#ABB2BF;">--watch-extensions ts</span></span>
<span class="line"><span style="color:#ABB2BF;">test/sum.test.ts</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="_4-9-方法调用" tabindex="-1">4.9 方法调用 <a class="header-anchor" href="#_4-9-方法调用" aria-label="Permalink to &quot;4.9 方法调用&quot;">​</a></h3><ul><li>Sinon 是用于 JavaScript 的测试框架，适用于任何单元测试框架。</li><li>Sinon 将测试为三种类型： <ul><li>Spies：提供有关函数调用的信息，而不会影响其行为</li><li>Stubs：类似于 Spies，但完全取代了功能。这样就可以使存根函数做任何你喜欢的事情 - 抛出异常，返回一个特定的值等等</li><li>Mocks：通过组合 Spies 和 Stubs，可以更轻松地替换整个对象</li></ul></li></ul><table tabindex="0"><thead><tr><th style="text-align:left;"></th><th style="text-align:left;">监控函数执行</th><th style="text-align:left;">真正执行原函数</th><th style="text-align:left;">替换原有实现</th><th style="text-align:left;">提供行为描述</th></tr></thead><tbody><tr><td style="text-align:left;">spy</td><td style="text-align:left;">是</td><td style="text-align:left;">是</td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">stub</td><td style="text-align:left;">是</td><td style="text-align:left;"></td><td style="text-align:left;">是</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">mock</td><td style="text-align:left;">是</td><td style="text-align:left;"></td><td style="text-align:left;">是</td><td style="text-align:left;">是</td></tr></tbody></table><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E06C75;">npm</span><span style="color:#E06C75;"> install</span><span style="color:#E06C75;"> sinon</span><span style="color:#ABB2BF;"> @</span><span style="color:#E06C75;">types</span><span style="color:#56B6C2;">/</span><span style="color:#E06C75;">sinon</span><span style="color:#56B6C2;"> -</span><span style="color:#E5C07B;">D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="_4-9-1-要测试的类" tabindex="-1">4.9.1 要测试的类 <a class="header-anchor" href="#_4-9-1-要测试的类" aria-label="Permalink to &quot;4.9.1 要测试的类&quot;">​</a></h4><p>src\\todo.ts</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> default</span><span style="color:#C678DD;"> class</span><span style="color:#E5C07B;"> Todos</span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#C678DD;">  private</span><span style="color:#E06C75;"> todos</span><span style="color:#ABB2BF;">:</span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">[]</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">[]</span></span>
<span class="line"><span style="color:#C678DD;">  private</span><span style="color:#E06C75;"> store</span><span style="color:#ABB2BF;">:</span><span style="color:#E5C07B;">any</span></span>
<span class="line"><span style="color:#C678DD;">  constructor</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">store</span><span style="color:#ABB2BF;">:</span><span style="color:#E5C07B;">any</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#E5C07B;">    this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">store</span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;">store</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  }  </span></span>
<span class="line"><span style="color:#61AFEF;">  add</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">todo</span><span style="color:#ABB2BF;">:</span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#E5C07B;">    this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">todos</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">push</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">todo</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#61AFEF;">  print</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"><span style="color:#E5C07B;">    console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">todos</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#61AFEF;">  save</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"><span style="color:#E5C07B;">    this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">store</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">save</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">todos</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h4 id="_4-9-2-spy" tabindex="-1">4.9.2 spy <a class="header-anchor" href="#_4-9-2-spy" aria-label="Permalink to &quot;4.9.2 spy&quot;">​</a></h4><ul><li><p>提供有关函数调用的信息，而不会影响其行为</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#D19A66;"> *</span><span style="color:#C678DD;"> as</span><span style="color:#E06C75;"> sinon</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &quot;sinon&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#D19A66;"> *</span><span style="color:#C678DD;"> as</span><span style="color:#E06C75;">  chai</span><span style="color:#C678DD;">  from</span><span style="color:#98C379;"> &quot;chai&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> Todos</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &quot;../src/todos&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#61AFEF;">describe</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;测试 Todos&quot;</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#61AFEF;">it</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;spy print&quot;</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">  let</span><span style="color:#E06C75;"> store</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span><span style="color:#61AFEF;">save</span><span style="color:#ABB2BF;">(){}};</span></span>
<span class="line"><span style="color:#C678DD;">  const</span><span style="color:#E5C07B;"> t</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Todos</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">store</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // 用 sinon.spy 监控 console.log 函数的执行，并不替换其原有的实现</span></span>
<span class="line"><span style="color:#E5C07B;">  sinon</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">spy</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">console</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;log&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">  t</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;eat&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">  t</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;sleep&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">  t</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">print</span><span style="color:#ABB2BF;">();</span><span style="color:#7F848E;font-style:italic;">//函数真正执行了</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // @ts-ignore console.log.calledOnce 无法识别 注释功能。这些注释是一种轻量级的方法来抑制下一行中出现的任何错误。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // 如果 spy 监控的 console.log 函数刚好被调用一次，则返回 true</span></span>
<span class="line"><span style="color:#E5C07B;">  chai</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">expect</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">log</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">calledOnce</span><span style="color:#ABB2BF;">).</span><span style="color:#E5C07B;">to</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">be</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">true</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div></li></ul><h4 id="_4-9-3-stub" tabindex="-1">4.9.3 stub <a class="header-anchor" href="#_4-9-3-stub" aria-label="Permalink to &quot;4.9.3 stub&quot;">​</a></h4><ul><li>类似于 spy，但完全取代了功能。这样就可以使存根函数做任何你喜欢的事情 - 抛出异常，返回一个特定的值等等</li></ul><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#D19A66;"> *</span><span style="color:#C678DD;"> as</span><span style="color:#E06C75;">  sinon</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &quot;sinon&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">expect</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &quot;chai&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> Todos</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &quot;../src/todos&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#61AFEF;">describe</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;测试 Todos&quot;</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#61AFEF;">  it</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;stub&quot;</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">    let</span><span style="color:#E06C75;"> store</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span><span style="color:#61AFEF;">save</span><span style="color:#ABB2BF;">(){}};</span></span>
<span class="line"><span style="color:#C678DD;">    const</span><span style="color:#E5C07B;"> todos</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Todos</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">store</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 用 stub 模拟 t.add 函数，stubAdd 函数被模拟为一个空函数</span></span>
<span class="line"><span style="color:#C678DD;">    const</span><span style="color:#E5C07B;"> stubAdd</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> sinon</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">stub</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">todos</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;add&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">callsFake</span><span style="color:#ABB2BF;">(() </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {});</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 执行被模拟的 stubAdd 函数，这时候 &#39;eat&#39; 并没有被真正地 push</span></span>
<span class="line"><span style="color:#61AFEF;">    stubAdd</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;eat&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 尝试打印，会打印出 []</span></span>
<span class="line"><span style="color:#E5C07B;">    todos</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">print</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 我们期望 stubAdd 被执行了一次</span></span>
<span class="line"><span style="color:#61AFEF;">    expect</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">stubAdd</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">calledOnce</span><span style="color:#ABB2BF;">).</span><span style="color:#E5C07B;">to</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">be</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">true</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  });</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h4 id="_4-9-4-mock" tabindex="-1">4.9.4 mock <a class="header-anchor" href="#_4-9-4-mock" aria-label="Permalink to &quot;4.9.4 mock&quot;">​</a></h4><ul><li>通过组合 Spies 和 Stubs，可以更轻松地替换整个对象</li></ul><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#D19A66;"> *</span><span style="color:#C678DD;"> as</span><span style="color:#E06C75;">  sinon</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &quot;sinon&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">expect</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &quot;chai&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> Todos</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &quot;../src/todos&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#61AFEF;">describe</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;测试 Todos&quot;</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#61AFEF;">  it</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;mock&quot;</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">    let</span><span style="color:#E06C75;"> store</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span><span style="color:#61AFEF;">save</span><span style="color:#ABB2BF;">(){}};</span></span>
<span class="line"><span style="color:#C678DD;">    const</span><span style="color:#E5C07B;"> todos</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Todos</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">store</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 这时候 console 已经被 mock 完全 mock 了</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 这里可以调用console下的任何方法，但并不会执行</span></span>
<span class="line"><span style="color:#C678DD;">    const</span><span style="color:#E5C07B;"> mock</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> sinon</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">mock</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">console</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 由于 console 已经完全被 mock了，所以我们这里可以提前描述我们预期的行为</span></span>
<span class="line"><span style="color:#E5C07B;">    mock</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">expects</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;log&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#E06C75;">calledOnce</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">    todos</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;eat&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">    todos</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">print</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 校验</span></span>
<span class="line"><span style="color:#E5C07B;">    mock</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">verify</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">  });</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h2 id="_5-为js添加ts支持" tabindex="-1">5. 为JS添加TS支持 <a class="header-anchor" href="#_5-为js添加ts支持" aria-label="Permalink to &quot;5. 为JS添加TS支持&quot;">​</a></h2><h3 id="_5-1-sum-js" tabindex="-1">5.1 sum.js <a class="header-anchor" href="#_5-1-sum-js" aria-label="Permalink to &quot;5.1 sum.js&quot;">​</a></h3><p>src\\sum.js</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * 可以使用注释给参数添加类型</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#E5C07B;font-style:italic;"> {number}</span><span style="color:#E06C75;font-style:italic;"> x</span><span style="color:#7F848E;font-style:italic;">  </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#E5C07B;font-style:italic;"> {number}</span><span style="color:#E06C75;font-style:italic;"> y</span><span style="color:#7F848E;font-style:italic;"> </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> default</span><span style="color:#C678DD;"> function</span><span style="color:#61AFEF;"> sum</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">x</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;font-style:italic;">y</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#C678DD;">  return</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">x</span><span style="color:#56B6C2;">+</span><span style="color:#E06C75;">y</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">toPrecision</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="_5-3-sum-test-ts" tabindex="-1">5.3 sum.test.ts <a class="header-anchor" href="#_5-3-sum-test-ts" aria-label="Permalink to &quot;5.3 sum.test.ts&quot;">​</a></h3><p>test\\sum.test.ts</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> sum</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &#39;../src/sum&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;">  assert</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &#39;assert&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#61AFEF;">describe</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;test sum&#39;</span><span style="color:#ABB2BF;">,()</span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#61AFEF;">  it</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;1+2=3&#39;</span><span style="color:#ABB2BF;">,()</span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E5C07B;">    assert</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">equal</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">sum</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">),</span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">  })</span></span>
<span class="line"><span style="color:#61AFEF;">  it</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;0.1+0.2=0.3&#39;</span><span style="color:#ABB2BF;">,()</span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#61AFEF;">    sum</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">    assert</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">equal</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">sum</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">0.1</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">0.2</span><span style="color:#ABB2BF;">),</span><span style="color:#D19A66;">0.3</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">  })</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="_5-3-tsconfig-json" tabindex="-1">5.3 tsconfig.json <a class="header-anchor" href="#_5-3-tsconfig-json" aria-label="Permalink to &quot;5.3 tsconfig.json&quot;">​</a></h3><div class="language-diff line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">  &quot;compilerOptions&quot;: {</span></span>
<span class="line"><span style="color:#98C379;">+     &quot;checkJs&quot;: true, //允许代码中使用JS</span></span>
<span class="line"><span style="color:#98C379;">+     &quot;checkJs&quot;: true, //可以对JS进行类型检查</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="_6-持续集成" tabindex="-1">6. 持续集成 <a class="header-anchor" href="#_6-持续集成" aria-label="Permalink to &quot;6. 持续集成&quot;">​</a></h2><ul><li><a href="https://travis-ci.com/" target="_blank" rel="noreferrer">Travis CI</a> 提供的是持续集成服务（Continuous Integration，简称 CI）。它绑定 Github 上面的项目，只要有新的代码，就会自动抓取。然后，提供一个运行环境，执行测试，完成构建，还能部署到服务器</li><li>持续集成指的是只要代码有变更，就自动运行构建和测试，反馈运行结果。确保符合预期以后，再将新代码集成到主干</li><li>持续集成的好处在于，每次代码的小幅变更，就能看到运行结果，从而不断累积小的变更，而不是在开发周期结束时，一下子合并一大块代码</li></ul><h3 id="_6-1-登录并创建项目" tabindex="-1">6.1 登录并创建项目 <a class="header-anchor" href="#_6-1-登录并创建项目" aria-label="Permalink to &quot;6.1 登录并创建项目&quot;">​</a></h3><ul><li><a href="https://travis-ci.com/" target="_blank" rel="noreferrer">Travis CI</a> 只支持 Github,所以你要拥有<code>GitHub</code>帐号</li><li>该帐号下面有一个项目,面有可运行的代码,还包含构建或测试脚本</li><li>你需要激活了一个仓库，Travis 会监听这个仓库的所有变化</li></ul><h3 id="_6-2-travis-yml" tabindex="-1">6.2 .travis.yml <a class="header-anchor" href="#_6-2-travis-yml" aria-label="Permalink to &quot;6.2 .travis.yml&quot;">​</a></h3><ul><li><code>Travis</code> 要求项目的根目录下面，必须有一个<code>.travis.yml</code>文件。这是配置文件，指定了 Travis 的行为</li><li>该文件必须保存在 Github 仓库里面，一旦代码仓库有新的 <code>Commit</code>，Travis 就会去找这个文件，执行里面的命令</li><li>这个文件采用 YAML 格式。下面是一个最简单的 Node 项目的<code>.travis.yml</code>文件</li><li>language 字段指定了默认运行环境,<a href="https://docs.travis-ci.com/user/languages" target="_blank" rel="noreferrer">所有的语言在此</a></li><li>node_js: &quot;11&quot; 表示不执行任何脚本，状态直接设为成功</li></ul><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E06C75;">language</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">node_js</span></span>
<span class="line"><span style="color:#E06C75;">node_js</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#56B6C2;">  -</span><span style="color:#98C379;"> &quot;11&quot;</span></span>
<span class="line"><span style="color:#E06C75;">install</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">npm</span><span style="color:#E06C75;"> install</span></span>
<span class="line"><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">:  </span><span style="color:#E06C75;">npm</span><span style="color:#E06C75;"> test</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="_6-3-运行流程" tabindex="-1">6.3 运行流程 <a class="header-anchor" href="#_6-3-运行流程" aria-label="Permalink to &quot;6.3 运行流程&quot;">​</a></h3><h4 id="_6-3-1-运行流程" tabindex="-1">6.3.1 运行流程 <a class="header-anchor" href="#_6-3-1-运行流程" aria-label="Permalink to &quot;6.3.1 运行流程&quot;">​</a></h4><ul><li>Travis 的运行流程很简单，任何项目都会经过两个阶段 <ul><li>install 阶段：安装依赖</li><li>script 阶段：运行脚本</li></ul></li></ul><h4 id="_6-3-2-install" tabindex="-1">6.3.2 install <a class="header-anchor" href="#_6-3-2-install" aria-label="Permalink to &quot;6.3.2 install&quot;">​</a></h4><ul><li><code>install</code>字段用来指定安装脚本 <code>install: npm install -g npm</code></li><li>如果不需要安装，即跳过安装阶段，就直接设为true <code>install: true</code></li></ul><h4 id="_6-3-3-script" tabindex="-1">6.3.3 script <a class="header-anchor" href="#_6-3-3-script" aria-label="Permalink to &quot;6.3.3 script&quot;">​</a></h4><ul><li><p>script字段用来指定构建或测试脚本</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">npm</span><span style="color:#E06C75;"> run</span><span style="color:#E06C75;"> build</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li></ul><h4 id="_6-3-4-钩子方法" tabindex="-1">6.3.4 钩子方法 <a class="header-anchor" href="#_6-3-4-钩子方法" aria-label="Permalink to &quot;6.3.4 钩子方法&quot;">​</a></h4><p>Travis 为上面这些阶段提供了7个钩子</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E06C75;">before_install</span><span style="color:#E06C75;">  安装阶段之前执行</span></span>
<span class="line"><span style="color:#E06C75;">install</span><span style="color:#E06C75;"> 安装</span></span>
<span class="line"><span style="color:#E06C75;">before_script</span><span style="color:#E06C75;"> 脚本阶段之前执行</span></span>
<span class="line"><span style="color:#E06C75;">script</span><span style="color:#E06C75;"> 脚本阶段</span></span>
<span class="line"><span style="color:#E06C75;">aftersuccess</span><span style="color:#E06C75;"> or</span><span style="color:#E06C75;"> afterfailure</span><span style="color:#E06C75;"> 脚本成功或失败</span></span>
<span class="line"><span style="color:#ABB2BF;">[</span><span style="color:#E5C07B;">OPTIONAL</span><span style="color:#ABB2BF;">] </span><span style="color:#E06C75;">before_deploy</span><span style="color:#E06C75;"> 布署之前</span></span>
<span class="line"><span style="color:#ABB2BF;">[</span><span style="color:#E5C07B;">OPTIONAL</span><span style="color:#ABB2BF;">] </span><span style="color:#E06C75;">deploy</span><span style="color:#E06C75;"> 布署</span></span>
<span class="line"><span style="color:#ABB2BF;">[</span><span style="color:#E5C07B;">OPTIONAL</span><span style="color:#ABB2BF;">] </span><span style="color:#E06C75;">after_deploy</span><span style="color:#E06C75;"> 布署之后</span></span>
<span class="line"><span style="color:#E06C75;">after_script</span><span style="color:#E06C75;">  脚本阶段之后</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="_6-4-实战" tabindex="-1">6.4 实战 <a class="header-anchor" href="#_6-4-实战" aria-label="Permalink to &quot;6.4 实战&quot;">​</a></h3><h4 id="_6-4-1-安装hexo" tabindex="-1">6.4.1 安装hexo <a class="header-anchor" href="#_6-4-1-安装hexo" aria-label="Permalink to &quot;6.4.1 安装hexo&quot;">​</a></h4><ul><li><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noreferrer">hexo</a>是一个快速、简洁且高效的博客框架</li></ul><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> install</span><span style="color:#D19A66;"> -g</span><span style="color:#98C379;"> hexo-cli</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="_6-4-2-生成项目" tabindex="-1">6.4.2 生成项目 <a class="header-anchor" href="#_6-4-2-生成项目" aria-label="Permalink to &quot;6.4.2 生成项目&quot;">​</a></h4><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E06C75;">hexo</span><span style="color:#E06C75;"> init</span><span style="color:#E06C75;"> zfblog</span></span>
<span class="line"><span style="color:#E06C75;">cd</span><span style="color:#E06C75;"> zfblog</span></span>
<span class="line"><span style="color:#E06C75;">npm</span><span style="color:#E06C75;"> install</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="_6-4-3-启动项目" tabindex="-1">6.4.3 启动项目 <a class="header-anchor" href="#_6-4-3-启动项目" aria-label="Permalink to &quot;6.4.3 启动项目&quot;">​</a></h4><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E06C75;">hexo</span><span style="color:#E06C75;"> generate</span></span>
<span class="line"><span style="color:#E06C75;">hexo</span><span style="color:#E06C75;"> server</span></span>
<span class="line"><span style="color:#E06C75;">hexo</span><span style="color:#E06C75;"> deploy</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="_6-4-4-布署项目" tabindex="-1">6.4.4 布署项目 <a class="header-anchor" href="#_6-4-4-布署项目" aria-label="Permalink to &quot;6.4.4 布署项目&quot;">​</a></h4><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E06C75;">$</span><span style="color:#E06C75;"> cnpm</span><span style="color:#E06C75;"> install</span><span style="color:#E06C75;"> eslint</span><span style="color:#E06C75;"> hexo</span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">deployer</span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">git</span><span style="color:#56B6C2;"> --</span><span style="color:#E06C75;">save</span></span>
<span class="line"><span style="color:#E06C75;">cnpm</span><span style="color:#E06C75;"> generate</span></span>
<span class="line"><span style="color:#E06C75;">cnpm</span><span style="color:#E06C75;"> deploy</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>_config.yml</p><div class="language-yaml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># Deployment</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">## Docs: https://hexo.io/docs/deployment.html</span></span>
<span class="line"><span style="color:#E06C75;">deploy</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;">  type</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">git</span></span>
<span class="line"><span style="color:#E06C75;">  repo</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">https://github.com/zhufengnodejs/zfblog2.git</span></span>
<span class="line"><span style="color:#E06C75;">  branch</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">gh-pages</span></span>
<span class="line"><span style="color:#E06C75;">  message</span><span style="color:#ABB2BF;">:</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><blockquote><p><a href="https://zhufengnodejs.github.io/zfblog2" target="_blank" rel="noreferrer">https://zhufengnodejs.github.io/zfblog2</a></p></blockquote><h4 id="_6-4-5-同步仓库" tabindex="-1">6.4.5 同步仓库 <a class="header-anchor" href="#_6-4-5-同步仓库" aria-label="Permalink to &quot;6.4.5 同步仓库&quot;">​</a></h4><ul><li>登录<a href="https://travis-ci.com/" target="_blank" rel="noreferrer">travis-ci.com</a>选择同步仓库</li></ul><p><img src="http://img.zhufengpeixun.cn/1.syncrepos.png" alt="syncrepos"></p><h4 id="_6-4-6-设置仓库环境变量" tabindex="-1">6.4.6 设置仓库环境变量 <a class="header-anchor" href="#_6-4-6-设置仓库环境变量" aria-label="Permalink to &quot;6.4.6 设置仓库环境变量&quot;">​</a></h4><table tabindex="0"><thead><tr><th style="text-align:left;">变量名</th><th style="text-align:left;">含义</th><th></th></tr></thead><tbody><tr><td style="text-align:left;">USERNAME</td><td style="text-align:left;">git用户名</td><td>zhufengnodejs</td></tr><tr><td style="text-align:left;">UESREMAIL</td><td style="text-align:left;">git用户邮箱</td><td><a href="mailto:zhufengnodejs@126.com" target="_blank" rel="noreferrer">zhufengnodejs@126.com</a></td></tr><tr><td style="text-align:left;">GH_TOKEN</td><td style="text-align:left;">用户生成的令牌</td><td></td></tr><tr><td style="text-align:left;">GH_REF</td><td style="text-align:left;">仓库地址</td><td>github.com/zhufengnodejs/zfblog3.git</td></tr><tr><td style="text-align:left;">GH_BRANCH</td><td style="text-align:left;">推送的pages分支</td><td>gh-pages</td></tr></tbody></table><p><img src="http://img.zhufengpeixun.cn/2.settings.png" alt="2.settings"></p><h4 id="_6-4-7-github生成访问令牌-即添加授权" tabindex="-1">6.4.7 Github生成访问令牌 (即添加授权) <a class="header-anchor" href="#_6-4-7-github生成访问令牌-即添加授权" aria-label="Permalink to &quot;6.4.7 Github生成访问令牌 (即添加授权)&quot;">​</a></h4><ul><li>访问令牌的作用就是授权仓库操作权限</li><li>Github&gt;settings&gt;Personal access tokens&gt; Generate new token &gt; Generate token&gt; Copy Token</li></ul><h4 id="_6-4-8-travis-yml" tabindex="-1">6.4.8 .travis.yml <a class="header-anchor" href="#_6-4-8-travis-yml" aria-label="Permalink to &quot;6.4.8 .travis.yml&quot;">​</a></h4><div class="language-yaml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E06C75;">language</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">node_js</span></span>
<span class="line"><span style="color:#E06C75;">node_js</span><span style="color:#ABB2BF;">: </span></span>
<span class="line"><span style="color:#ABB2BF;">    - </span><span style="color:#98C379;">&#39;11&#39;</span></span>
<span class="line"><span style="color:#E06C75;">install</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">  - </span><span style="color:#98C379;">npm install</span></span>
<span class="line"><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">  - </span><span style="color:#98C379;">hexo g</span></span>
<span class="line"><span style="color:#E06C75;">after_script</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">  - </span><span style="color:#98C379;">cd ./public</span></span>
<span class="line"><span style="color:#ABB2BF;">  - </span><span style="color:#98C379;">git init</span></span>
<span class="line"><span style="color:#ABB2BF;">  - </span><span style="color:#98C379;">git config user.name &quot;\${USERNAME}&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">  - </span><span style="color:#98C379;">git config user.email &quot;\${UESREMAIL}&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">  - </span><span style="color:#98C379;">git add -A</span></span>
<span class="line"><span style="color:#ABB2BF;">  - </span><span style="color:#98C379;">git commit -m &quot;Update documents&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">  - </span><span style="color:#98C379;">git push --force  &quot;https://\${GH_TOKEN}@\${GH_REF}&quot; &quot;master:\${GH_BRANCH}&quot;</span></span>
<span class="line"><span style="color:#E06C75;">branches</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;">  only</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">    - </span><span style="color:#98C379;">master</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div>`,123)]))}const b=n(e,[["render",o]]);export{u as __pageData,b as default};
