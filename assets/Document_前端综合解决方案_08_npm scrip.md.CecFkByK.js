import{_ as n,c as a,o as p,ah as e}from"./chunks/framework.DqD713j2.js";const m=JSON.parse('{"title":"08_npm scrip","description":"","frontmatter":{},"headers":[],"relativePath":"Document/前端综合解决方案/08_npm scrip.md","filePath":"Document/前端综合解决方案/08_npm scrip.md","lastUpdated":1750954157000}'),r={name:"Document/前端综合解决方案/08_npm scrip.md"};function l(o,s,t,c,i,u){return p(),a("div",null,s[0]||(s[0]=[e(`<h1 id="_08-npm-scrip" tabindex="-1">08_npm scrip <a class="header-anchor" href="#_08-npm-scrip" aria-label="Permalink to &quot;08_npm scrip&quot;">​</a></h1><p><a href="https://juejin.cn/post/6844903982888910855" target="_blank" rel="noreferrer">npm script详解 - 掘金 (juejin.cn)</a></p><p><a href="https://juejin.cn/book/6844723718749421582" target="_blank" rel="noreferrer">用 npm script 打造超溜的前端工作流 - 王仕军 - 掘金小册 (juejin.cn)</a></p><p><a href="http://t.zoukankan.com/ruange-p-10908276.html" target="_blank" rel="noreferrer">npm(script)脚本 - 走看看 (zoukankan.com)</a></p><p><a href="https://copyfuture.com/blogs-details/202112111615205990" target="_blank" rel="noreferrer">玩转npm script (copyfuture.com)</a></p><p><a href="https://blog.csdn.net/liusuyun_1/article/details/117595482" target="_blank" rel="noreferrer">(1条消息) 玩转npm script_旺旺旺小小苏的博客-CSDN博客</a></p><p><a href="https://www.kancloud.cn/sllyli/npm-script/1243451" target="_blank" rel="noreferrer">入门篇 01：创建并运行 npm script 命令 · 用 npm script 打造超溜的前端工作流 · 看云 (kancloud.cn)</a></p><p><a href="https://blog.csdn.net/weixin_46961967/article/details/113904547" target="_blank" rel="noreferrer">(1条消息) 你要知道的 Npm Script 都在这里_weixin_46961967的博客-CSDN博客</a></p><h3 id="什么是-npm-script" tabindex="-1">什么是 npm script <a class="header-anchor" href="#什么是-npm-script" aria-label="Permalink to &quot;什么是 npm script&quot;">​</a></h3><p>npm 允许在 <strong>package.json</strong> 文件里面，使用scripts字段定义脚本命令。</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // ...</span></span>
<span class="line"><span style="color:#E06C75;">  &quot;scripts&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">    &quot;build&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;node build.js&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>使用</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> run</span><span style="color:#98C379;"> build</span><span style="color:#7F848E;font-style:italic;"> # npm run + 定义的命令</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="运行多个命令" tabindex="-1">运行多个命令 <a class="header-anchor" href="#运行多个命令" aria-label="Permalink to &quot;运行多个命令&quot;">​</a></h2><p>在实际开发过程中可能会碰到多个命令一起启动的情况。比如我们前后端一起启动。</p><p>运行多个命令就会涉及到串行和并行问题了</p><h3 id="串行" tabindex="-1">串行 <a class="header-anchor" href="#串行" aria-label="Permalink to &quot;串行&quot;">​</a></h3><p>串行实现方式也比较简单，只需要用 <code>&amp;&amp;</code> 符号把多条 <code>npm script</code> 按先后顺序串起来即可。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#98C379;">&quot;scripts&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#98C379;">  &quot;frotend&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;echo </span><span style="color:#56B6C2;">\\&quot;</span><span style="color:#98C379;">前端服务启动啦</span><span style="color:#56B6C2;">\\&quot;</span><span style="color:#98C379;">&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">  &quot;server&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;echo </span><span style="color:#56B6C2;">\\&quot;</span><span style="color:#98C379;">后端服务启动啦</span><span style="color:#56B6C2;">\\&quot;</span><span style="color:#98C379;">&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">  &quot;all&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;npm run frotend &amp;&amp; npm run server&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">},</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,19)]))}const b=n(r,[["render",l]]);export{m as __pageData,b as default};
