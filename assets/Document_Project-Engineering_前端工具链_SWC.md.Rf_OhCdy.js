import{_ as e,c as t,o as r,ah as c}from"./chunks/framework.DqD713j2.js";const d=JSON.parse('{"title":"SWC：JavaScript 编译器","description":"","frontmatter":{},"headers":[],"relativePath":"Document/Project-Engineering/前端工具链/SWC.md","filePath":"Document/Project-Engineering/前端工具链/SWC.md","lastUpdated":1750954157000}'),o={name:"Document/Project-Engineering/前端工具链/SWC.md"};function s(i,a,n,p,l,h){return r(),t("div",null,a[0]||(a[0]=[c('<h1 id="swc-javascript-编译器" tabindex="-1">SWC：JavaScript 编译器 <a class="header-anchor" href="#swc-javascript-编译器" aria-label="Permalink to &quot;SWC：JavaScript 编译器&quot;">​</a></h1><h2 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">​</a></h2><p>我们比较耳熟能详的就是 Babel 了。Babel 作为一个 JavaScript 编译器，它的重要性不言而喻，它的出现，让我们可以使用 ES6+ 的语法，而不用担心兼容性问题。然而随着项目规模的扩大，Babel 的性能问题也逐渐暴露出来，随后基于 Rust 的 JavaScript 编译器 <code>SWC</code> 也应运而生。</p><p>SWC是一个可扩展的基于Rust的平台，用于下一代快速开发工具。它被Next.js、Parcel和Deno等工具以及Vercel、字节跳动、腾讯、Shopify等公司使用。</p><p>SWC可以用于编译和捆绑。对于编译，它使用现代JavaScript功能获取JavaScript / TypeScript文件，并输出所有主要浏览器支持的有效代码。</p><h2 id="相关网址" tabindex="-1">相关网址 <a class="header-anchor" href="#相关网址" aria-label="Permalink to &quot;相关网址&quot;">​</a></h2><p>SWC开源地址：<a href="https://github.com/swc-project/swc" target="_blank" rel="noreferrer">https://github.com/swc-project/swc</a></p><p>SWC官网：<a href="https://swc.rs/" target="_blank" rel="noreferrer">https://swc.rs/</a></p>',8)]))}const _=e(o,[["render",s]]);export{d as __pageData,_ as default};
