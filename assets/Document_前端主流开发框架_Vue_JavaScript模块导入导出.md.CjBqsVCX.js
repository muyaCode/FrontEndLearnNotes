import{_ as a,c as n,o as l,ah as p}from"./chunks/framework.DqD713j2.js";const d=JSON.parse('{"title":"JavaScript模块导入导出","description":"","frontmatter":{},"headers":[],"relativePath":"Document/前端主流开发框架/Vue/JavaScript模块导入导出.md","filePath":"Document/前端主流开发框架/Vue/JavaScript模块导入导出.md","lastUpdated":1750954157000}'),e={name:"Document/前端主流开发框架/Vue/JavaScript模块导入导出.md"};function o(r,s,t,c,i,y){return l(),n("div",null,s[0]||(s[0]=[p(`<h1 id="javascript模块导入导出" tabindex="-1">JavaScript模块导入导出 <a class="header-anchor" href="#javascript模块导入导出" aria-label="Permalink to &quot;JavaScript模块导入导出&quot;">​</a></h1><h2 id="一、前言" tabindex="-1">一、前言 <a class="header-anchor" href="#一、前言" aria-label="Permalink to &quot;一、前言&quot;">​</a></h2><p>导出模块就是让 .js 文件中的某些值对外可见，导入模块就是将那些对外可见的值导入到当前 .js 文件中。</p><p>模块导入与导出分别使用关键字<code>import </code>、<code>export</code></p><h2 id="二、exports-导出方式" tabindex="-1">二、exports 导出方式 <a class="header-anchor" href="#二、exports-导出方式" aria-label="Permalink to &quot;二、exports 导出方式&quot;">​</a></h2><p>存在两种 exports 导出方式：① 命名导出（每个模块包含任意数量）② 默认导出（每个模块包含一个）</p><h3 id="_1、默认导出-每个模块包含一个" tabindex="-1">1、默认导出（每个模块包含一个） <a class="header-anchor" href="#_1、默认导出-每个模块包含一个" aria-label="Permalink to &quot;1、默认导出（每个模块包含一个）&quot;">​</a></h3><p>默认导出关键字为：default</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 导出变量</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> default</span><span style="color:#E06C75;"> name</span><span style="color:#ABB2BF;">; </span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 导出对象</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> default</span><span style="color:#ABB2BF;"> {</span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;憨瓜&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">age</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">}; </span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 导出函数</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> default</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> (…) { … } </span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> default</span><span style="color:#C678DD;"> function</span><span style="color:#61AFEF;"> name1</span><span style="color:#ABB2BF;">(…) { … } </span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">name1</span><span style="color:#C678DD;"> as</span><span style="color:#C678DD;"> default</span><span style="color:#ABB2BF;">, … };</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="_2、-命名导出" tabindex="-1">2、 命名导出 <a class="header-anchor" href="#_2、-命名导出" aria-label="Permalink to &quot;2、 命名导出&quot;">​</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 导出单个特性</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> let</span><span style="color:#E06C75;"> name1</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">name2</span><span style="color:#ABB2BF;">, …, </span><span style="color:#E06C75;">nameN</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// also var, const</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> let</span><span style="color:#E06C75;"> name1</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> …, </span><span style="color:#E06C75;">name2</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> …, …, </span><span style="color:#E06C75;">nameN</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// also var, const</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> function</span><span style="color:#61AFEF;"> FunctionName</span><span style="color:#ABB2BF;">(){...}</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> class</span><span style="color:#E5C07B;"> ClassName</span><span style="color:#ABB2BF;"> {...}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 导出列表</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">name1</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">name2</span><span style="color:#ABB2BF;">, …, </span><span style="color:#E06C75;">nameN</span><span style="color:#ABB2BF;"> };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 重命名导出</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">variable1</span><span style="color:#C678DD;"> as</span><span style="color:#E06C75;"> name1</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">variable2</span><span style="color:#C678DD;"> as</span><span style="color:#E06C75;"> name2</span><span style="color:#ABB2BF;">, …, </span><span style="color:#E06C75;">nameN</span><span style="color:#ABB2BF;"> };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 解构导出并重命名</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">name1</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">name2</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">bar</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> o</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="注意点" tabindex="-1">注意点 <a class="header-anchor" href="#注意点" aria-label="Permalink to &quot;注意点&quot;">​</a></h3><p>在每一个模块中可以定义多个命名导出，但是只允许有一个默认导出。每种方式对应于上述的一种语法：</p><h2 id="三、import-导入方式" tabindex="-1">三、import 导入方式 <a class="header-anchor" href="#三、import-导入方式" aria-label="Permalink to &quot;三、import 导入方式&quot;">​</a></h2><h3 id="_1、导入默认值" tabindex="-1">1、导入默认值 <a class="header-anchor" href="#_1、导入默认值" aria-label="Permalink to &quot;1、导入默认值&quot;">​</a></h3><p>引入模块可能有一个 default export（无论它是对象，函数，类等）可用。然后可以使用 import 语句来导入这样的默认接口。</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> myDefault</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &#39;@/idnex.js&#39;</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_2、单独导入" tabindex="-1">2、单独导入 <a class="header-anchor" href="#_2、单独导入" aria-label="Permalink to &quot;2、单独导入&quot;">​</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 导入单个接口</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> {</span><span style="color:#E06C75;">getInfo</span><span style="color:#ABB2BF;">} </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;@/index.js&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 导入多个接口</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> {</span><span style="color:#E06C75;">getInfo</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">removeInfo</span><span style="color:#ABB2BF;">} </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;@/index.js&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 导入带有别名的接口</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> {</span><span style="color:#E06C75;">reallyReallyLongModuleExportName</span><span style="color:#C678DD;"> as</span><span style="color:#E06C75;"> shortName</span><span style="color:#ABB2BF;">} </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;@/index.js&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 导入时重命名多个接口</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> {</span><span style="color:#E06C75;">reallyReallyLongModuleMemberName</span><span style="color:#C678DD;"> as</span><span style="color:#E06C75;"> shortName</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">anotherLongModuleName</span><span style="color:#C678DD;"> as</span><span style="color:#E06C75;"> short</span><span style="color:#ABB2BF;">} </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;@/index.js&#39;</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="_3、整体导入" tabindex="-1">3、整体导入 <a class="header-anchor" href="#_3、整体导入" aria-label="Permalink to &quot;3、整体导入&quot;">​</a></h3><p><code>import * as name</code> 语法导入所有导出接口，即导入模块整体 参数 name 参数是“导入模块对象”的名称，它将用一种名称空间来引用导入模块的接口。export 参数指定单个的命名导出</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#D19A66;"> *</span><span style="color:#C678DD;"> as</span><span style="color:#E06C75;"> myModule</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &#39;@/index.js&#39;</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_4、仅为副作用而导入一个模块" tabindex="-1">4、仅为副作用而导入一个模块 <a class="header-anchor" href="#_4、仅为副作用而导入一个模块" aria-label="Permalink to &quot;4、仅为副作用而导入一个模块&quot;">​</a></h3><p>整个模块仅为副作用而导入，这将运行模块中的全局代码，但实际上不导入任何值。</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#98C379;"> &#39;@/index.js&#39;</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,25)]))}const b=a(e,[["render",o]]);export{d as __pageData,b as default};
