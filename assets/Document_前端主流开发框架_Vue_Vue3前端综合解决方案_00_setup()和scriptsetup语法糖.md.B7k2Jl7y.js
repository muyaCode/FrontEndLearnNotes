import{_ as n,c as a,o as p,ah as l}from"./chunks/framework.DqD713j2.js";const u=JSON.parse('{"title":"00_setup()和scriptsetup语法糖","description":"","frontmatter":{},"headers":[],"relativePath":"Document/前端主流开发框架/Vue/Vue3前端综合解决方案/00_setup()和scriptsetup语法糖.md","filePath":"Document/前端主流开发框架/Vue/Vue3前端综合解决方案/00_setup()和scriptsetup语法糖.md","lastUpdated":1750954157000}'),e={name:"Document/前端主流开发框架/Vue/Vue3前端综合解决方案/00_setup()和scriptsetup语法糖.md"};function o(t,s,r,c,B,i){return p(),a("div",null,s[0]||(s[0]=[l(`<h1 id="_00-setup-和scriptsetup语法糖" tabindex="-1">00_setup()和scriptsetup语法糖 <a class="header-anchor" href="#_00-setup-和scriptsetup语法糖" aria-label="Permalink to &quot;00_setup()和scriptsetup语法糖&quot;">​</a></h1><p>1.setup(){} 方法写出来的数据使用过于复杂 ，最后return出来的数据导致代码太长，结构难看且难以维护</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">script</span><span style="color:#D19A66;font-style:italic;"> lang</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;ts&#39;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">import </span><span style="color:#C678DD;">{</span><span style="color:#E06C75;"> reactive</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">toRefs</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">onBeforeMount</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">onMounted</span><span style="color:#C678DD;"> }</span><span style="color:#ABB2BF;"> from &#39;vue&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">export default </span><span style="color:#C678DD;">{</span></span>
<span class="line"><span style="color:#E06C75;">  name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#61AFEF;">  setup</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#ABB2BF;">    const </span><span style="color:#E06C75;">state</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> reactive</span><span style="color:#ABB2BF;">({})</span></span>
<span class="line"><span style="color:#61AFEF;">    onBeforeMount</span><span style="color:#ABB2BF;">(() </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span></span>
<span class="line"><span style="color:#ABB2BF;">    })</span></span>
<span class="line"><span style="color:#61AFEF;">    onMounted</span><span style="color:#ABB2BF;">(() </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span></span>
<span class="line"><span style="color:#ABB2BF;">    })</span></span>
<span class="line"><span style="color:#ABB2BF;">    const </span><span style="color:#E06C75;">refState</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> toRefs</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">state</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    return {</span></span>
<span class="line"><span style="color:#ABB2BF;">      ...</span><span style="color:#E06C75;">refState</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#C678DD;">}</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>2.script-setup 语法糖：源自 2020年10月28号提出的RFC，到2021年08月05日：Vue3.2发布，正式推出全新的语法标准：script-setup，缩减了代码，使编写vue代码跟原生JavaScript一样 （推荐使用script-setup语法糖）</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">script</span><span style="color:#D19A66;font-style:italic;"> setup</span><span style="color:#D19A66;font-style:italic;"> lang</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;ts&#39;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">import </span><span style="color:#C678DD;">{</span><span style="color:#E06C75;"> reactive</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">toRefs</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">onBeforeMount</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">onMounted</span><span style="color:#C678DD;"> }</span><span style="color:#ABB2BF;"> from &#39;vue&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">const state = reactive(</span><span style="color:#C678DD;">{}</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">onBeforeMount(() =&gt; </span><span style="color:#C678DD;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span></span>
<span class="line"><span style="color:#C678DD;">}</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">onMounted(() =&gt; </span><span style="color:#C678DD;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span></span>
<span class="line"><span style="color:#C678DD;">}</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">const refState = toRefs(state)</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div>`,5)]))}const b=n(e,[["render",o]]);export{u as __pageData,b as default};
