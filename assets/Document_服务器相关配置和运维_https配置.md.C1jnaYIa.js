import{_ as a,c as e,o as n,ah as l}from"./chunks/framework.DqD713j2.js";const b=JSON.parse('{"title":"https配置","description":"","frontmatter":{},"headers":[],"relativePath":"Document/服务器相关配置和运维/https配置.md","filePath":"Document/服务器相关配置和运维/https配置.md","lastUpdated":1750954157000}'),p={name:"Document/服务器相关配置和运维/https配置.md"};function o(r,s,t,c,i,d){return n(),e("div",null,s[0]||(s[0]=[l(`<h1 id="https配置" tabindex="-1">https配置 <a class="header-anchor" href="#https配置" aria-label="Permalink to &quot;https配置&quot;">​</a></h1><h2 id="let-s-encrypt-免费-ssl-证书" tabindex="-1">Let&#39;s Encrypt 免费 SSL 证书 <a class="header-anchor" href="#let-s-encrypt-免费-ssl-证书" aria-label="Permalink to &quot;Let&#39;s Encrypt 免费 SSL 证书&quot;">​</a></h2><p>Let&#39;s Encrypt 是当前最常用的免费 HTTPS 证书生成工具之一。</p><p>该服务由非营利组织提供，致力于为全球范围内的网站提供便捷的自动化证书颁发服务。虽然 Let&#39;s Encrypt 证书的有效期只有90天，但是可以自动续期，这使得 Let&#39;s Encrypt 更加易于使用和部署。</p><h3 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h3><p>在使用 Let&#39;s Encrypt 生成证书时，您可以使用 Certbot 工具来执行此任务。下面是一个示例命令，用于生成证书：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">sudo</span><span style="color:#98C379;"> certbot</span><span style="color:#98C379;"> certonly</span><span style="color:#D19A66;"> --email</span><span style="color:#98C379;"> example@qq.com</span><span style="color:#D19A66;"> --server</span><span style="color:#98C379;"> https://acme-v02.api.letsencrypt.org/directory</span><span style="color:#D19A66;"> --agree-tos</span><span style="color:#D19A66;"> --manual</span><span style="color:#D19A66;"> --preferred-challenges=dns</span><span style="color:#D19A66;">  -d</span><span style="color:#98C379;"> example.com</span><span style="color:#D19A66;"> -d</span><span style="color:#98C379;">  www.example.com</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li><code>certbot</code>: Certbot 工具名称。</li><li><code>certonly</code>: Certbot 工具的插件，用于生成 SSL/TLS 证书。</li><li><code>--email example@qq.com</code>: Let&#39;s Encrypt 要求在生成 SSL 证书时提供有效的联系电子邮件地址。</li><li><code>--server https://acme-v02.api.letsencrypt.org/directory</code>：指定 Certbot 生成证书的 ACME 服务器。这里使用 Let&#39;s Encrypt v2 API 端点。</li><li><code>--agree-tos</code>：同意 Let&#39;s Encrypt 的服务条款。</li><li><code>--manual</code>：指定使用手动模式生成证书。这意味着您需要在命令提示符下手动操作来验证您拥有该域名。</li><li><code>--preferred-challenges=dns</code>：指定 Certbot 使用 DNS 验证方式进行证书颁发。这表示您需要将一个特定的 TXT 记录添加到 DNS 进行验证。</li><li><code>-d &#39;example.com&#39;</code>：指定您想要为其生成 SSL 证书的域名。你可以通过添加多个 <code>-d</code> 选项来同时为多个域名生成证书。</li></ul><p>请注意，由于 <code>--manual</code> 选项需要手动操作，因此它可能比其他选项耗费更多时间。另外，使用 DNS 验证时需要在 DNS 服务商处添加 TXT 记录以实现验证，这在某些情况下可能会比较困难，也需要等待 DNS 缓存刷新。在选择选项时，请根据您的需求和特定情况来作出最合适的选择。</p><p>我们可以把 <code>--manual --preferred-challenges=dns</code> 替换成<code>--preferred-challenges http-01</code>并配置 Nginx 服务器的相应设置，使用 HTTP 验证方式生成证书。</p><h3 id="生成证书详细流程" tabindex="-1">生成证书详细流程 <a class="header-anchor" href="#生成证书详细流程" aria-label="Permalink to &quot;生成证书详细流程&quot;">​</a></h3><p>以下是使用Let&#39;s Encrypt生成证书的详细步骤：</p><h4 id="安装certbot" tabindex="-1">安装Certbot <a class="header-anchor" href="#安装certbot" aria-label="Permalink to &quot;安装Certbot&quot;">​</a></h4><p>打开终端并输入以下命令（此示例基于Ubuntu Linux）：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">sudo</span><span style="color:#98C379;"> apt-get</span><span style="color:#98C379;"> update</span></span>
<span class="line"><span style="color:#61AFEF;">sudo</span><span style="color:#98C379;"> apt-get</span><span style="color:#98C379;"> install</span><span style="color:#98C379;"> certbot</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">如果您使用其他操作系统，可以按照此指南</span><span style="color:#ABB2BF;"> [https://certbot.eff.org/instructions](</span><span style="color:#61AFEF;">https://certbot.eff.org/instructions</span><span style="color:#ABB2BF;">) 找到您的操作系统并按照指示进行操作。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="生成证书-使用以下命令生成证书" tabindex="-1">生成证书：使用以下命令生成证书 <a class="header-anchor" href="#生成证书-使用以下命令生成证书" aria-label="Permalink to &quot;生成证书：使用以下命令生成证书&quot;">​</a></h4><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">sudo</span><span style="color:#98C379;"> certbot</span><span style="color:#98C379;"> certonly</span><span style="color:#D19A66;"> --email</span><span style="color:#98C379;"> example@qq.com</span><span style="color:#D19A66;"> --server</span><span style="color:#98C379;"> https://acme-v02.api.letsencrypt.org/directory</span><span style="color:#D19A66;"> --agree-tos</span><span style="color:#D19A66;"> --manual</span><span style="color:#D19A66;"> --preferred-challenges=dns</span><span style="color:#D19A66;">  -d</span><span style="color:#98C379;"> example.com</span><span style="color:#D19A66;"> -d</span><span style="color:#98C379;">  www.example.com</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>请将 <code>example@qq.com</code> 替换为您自己的电子邮件地址，并使用您要生成证书的域名替换 <code>example.com</code> 和 <code>www.example.com</code>。运行此命令后，Certbot将提示您为该域名添加DNS TXT记录。请使用您的DNS提供商或托管服务提供商的管理面板或API添加记录。Certbot将提示您向DNS添加TXT记录的内容。输入它并等待几分钟以允许记录传播并进行验证。一旦您添加了DNS记录，该命令将在 <code>/etc/letsencrypt</code> 目录中生成通配符证书。</p><h4 id="配置https-在生成证书后-使用以下方法之一来配置您的https" tabindex="-1">配置HTTPS：在生成证书后，使用以下方法之一来配置您的HTTPS <a class="header-anchor" href="#配置https-在生成证书后-使用以下方法之一来配置您的https" aria-label="Permalink to &quot;配置HTTPS：在生成证书后，使用以下方法之一来配置您的HTTPS&quot;">​</a></h4><ul><li>对于Apache服务器： 在您的虚拟主机文件中添加以下行：</li></ul><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">SSLEngine</span><span style="color:#98C379;"> on</span><span style="color:#98C379;"> SSLCertificateFile</span><span style="color:#98C379;"> /etc/letsencrypt/live/example.com/cert.pem</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#61AFEF;">SSLCertificateKeyFile</span><span style="color:#98C379;"> /etc/letsencrypt/live/example.com/privkey.pem</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#61AFEF;">SSLCertificateChainFile</span><span style="color:#98C379;"> /etc/letsencrypt/live/example.com/chain.pem</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>对于NGINX服务器： 在您的虚拟主机文件中添加以下行：</li></ul><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">ssl_certificate</span><span style="color:#98C379;"> /etc/letsencrypt/live/example.com/fullchain.pem</span><span style="color:#ABB2BF;">; </span></span>
<span class="line"><span style="color:#61AFEF;">ssl_certificate_key</span><span style="color:#98C379;"> /etc/letsencrypt/live/example.com/privkey.pem</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="验证设置" tabindex="-1"><strong>验证设置</strong> <a class="header-anchor" href="#验证设置" aria-label="Permalink to &quot;**验证设置**&quot;">​</a></h4><p>使用SSL测试工具（例如：<a href="https://www.ssllabs.com/ssltest/%EF%BC%89%E6%88%96%E6%B5%8F%E8%A7%88%E5%99%A8%E6%A3%80%E6%9F%A5%E8%AF%81%E4%B9%A6%E6%98%AF%E5%90%A6%E5%B7%B2%E6%88%90%E5%8A%9F%E6%9B%B4%E6%96%B0%E4%B8%BAHTTPS" target="_blank" rel="noreferrer">https://www.ssllabs.com/ssltest/）或浏览器检查证书是否已成功更新为HTTPS</a></p><h3 id="自动更新证书" tabindex="-1">自动更新证书 <a class="header-anchor" href="#自动更新证书" aria-label="Permalink to &quot;自动更新证书&quot;">​</a></h3><p>自动更新证书时我们使用HTTP 验证方式生成证书会更方便些。</p><h4 id="配置-nginx" tabindex="-1">配置 Nginx <a class="header-anchor" href="#配置-nginx" aria-label="Permalink to &quot;配置 Nginx&quot;">​</a></h4><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">server</span><span style="color:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;">    listen</span><span style="color:#D19A66;"> 80</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#61AFEF;">    server_name</span><span style="color:#98C379;"> example.com</span><span style="color:#98C379;"> www.example.com</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#61AFEF;">    root</span><span style="color:#98C379;">  /home/letsencrypt</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>配置访问<a href="http://example.xn--com-cj4e" target="_blank" rel="noreferrer">http://example.com和</a> <a href="http://www.example.com" target="_blank" rel="noreferrer">http://www.example.com</a> 域名 80端口(http请求)root目录为<code>/home/letsencrypt</code></p><h4 id="配置dns解析" tabindex="-1">配置dns解析 <a class="header-anchor" href="#配置dns解析" aria-label="Permalink to &quot;配置dns解析&quot;">​</a></h4><p>域名<a href="http://example.xn--com-cj4e" target="_blank" rel="noreferrer">http://example.com和</a> <a href="http://www.example.com" target="_blank" rel="noreferrer">http://www.example.com</a> A记录，指向当前机器Ip</p><h4 id="利用http验证方式生成证书生成证书" tabindex="-1">利用http验证方式生成证书生成证书 <a class="header-anchor" href="#利用http验证方式生成证书生成证书" aria-label="Permalink to &quot;利用http验证方式生成证书生成证书&quot;">​</a></h4><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">sudo</span><span style="color:#98C379;"> certbot</span><span style="color:#98C379;"> certonly</span><span style="color:#D19A66;">   --email</span><span style="color:#98C379;"> hustyjy@qq.com</span><span style="color:#D19A66;"> --webroot</span><span style="color:#D19A66;"> -w</span><span style="color:#98C379;"> /home/letsencrypt</span><span style="color:#D19A66;"> -d</span><span style="color:#98C379;"> example.com</span><span style="color:#D19A66;"> -d</span><span style="color:#98C379;">  www.example.com</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>注意<code>--webroot -w /home/letsencrypt</code>,就是告诉certbot用http做域名验证时，在目录<code>/home/letsencrypt</code>目录下产生对应文件，然后<a href="https://www.zhihu.com/search?q=certbot&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A3170809888%7D" target="_blank" rel="noreferrer">certbot</a>通过<code>http://example.com/.well-known/acme-challenge/r4IpkhD-0oD1QGaPWeO6X5_IV8A9WmhfPDWe_ILHhDg</code>便能访问到对应内容完成验证。</p><p>运行完成这条命令后，<code>/etc/letsencrypt/live/example.com/</code>就会看到证书文件：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">cert.pem</span><span style="color:#98C379;">  chain.pem</span><span style="color:#98C379;">  fullchain.pem</span><span style="color:#98C379;">  privkey.pem</span><span style="color:#98C379;">  README</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="配置网站https-访问" tabindex="-1">配置网站https 访问 <a class="header-anchor" href="#配置网站https-访问" aria-label="Permalink to &quot;配置网站https 访问&quot;">​</a></h4><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">server</span><span style="color:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;">    listen</span><span style="color:#D19A66;"> 80</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#61AFEF;">    server_name</span><span style="color:#98C379;"> example.com</span><span style="color:#98C379;"> www.example.com</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#61AFEF;">    location</span><span style="color:#98C379;"> ^~</span><span style="color:#98C379;">  /.well-known/acme-challenge/</span><span style="color:#98C379;"> {</span><span style="color:#7F848E;font-style:italic;">  #后面做自动更新使用</span></span>
<span class="line"><span style="color:#61AFEF;">                allow</span><span style="color:#98C379;"> all</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#61AFEF;">                root</span><span style="color:#98C379;">  /home/letsencrypt</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#D19A66;"> 301</span><span style="color:#98C379;"> https://</span><span style="color:#E06C75;">$server_name$request_uri</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">#http跳转为https</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">server</span><span style="color:#98C379;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        #配置使用证书</span></span>
<span class="line"><span style="color:#61AFEF;">        ssl_certificate</span><span style="color:#98C379;"> /etc/letsencrypt/live/example.com/fullchain.pem</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#61AFEF;">        ssl_certificate_key</span><span style="color:#98C379;"> /etc/letsencrypt/live/example.com/privkey.pem</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">         # Other SSL settings</span></span>
<span class="line"><span style="color:#61AFEF;">        ssl_protocols</span><span style="color:#98C379;"> TLSv1.2</span><span style="color:#98C379;"> TLSv1.3</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#61AFEF;">        ssl_prefer_server_ciphers</span><span style="color:#98C379;"> on</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#61AFEF;">        ssl_ciphers</span><span style="color:#98C379;"> ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:...</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">#监听端口80 即当访问服务器的端口是80时，进入这个server块处理</span></span>
<span class="line"><span style="color:#61AFEF;">        listen</span><span style="color:#D19A66;"> 443</span><span style="color:#98C379;"> ssl</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#61AFEF;">        server_name</span><span style="color:#98C379;"> example.com</span><span style="color:#98C379;"> www.example.com</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">        root</span><span style="color:#98C379;"> /home/lighthouse/www</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">#网站真正根目录</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p><code>location ^~ /.well-known/acme-challenge/</code> 独立配置是用于做自动更新用的</p><h4 id="手动更新证书" tabindex="-1">手动更新证书 <a class="header-anchor" href="#手动更新证书" aria-label="Permalink to &quot;手动更新证书&quot;">​</a></h4><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">sudo</span><span style="color:#98C379;"> certbot</span><span style="color:#98C379;"> renew</span></span>
<span class="line"><span style="color:#61AFEF;">如果证书不需要更新，Certbot</span><span style="color:#98C379;"> 不会更改现有证书的任何内容。如果证书即将到期，Certbot</span><span style="color:#98C379;"> 会使用相同的证书和配置文件生成新的证书。如果证书已经过期或者将在</span><span style="color:#D19A66;"> 30</span><span style="color:#98C379;"> 天内过期，Certbot</span><span style="color:#98C379;"> 会尝试立即更新证书。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="自动更新证书-1" tabindex="-1">自动更新证书 <a class="header-anchor" href="#自动更新证书-1" aria-label="Permalink to &quot;自动更新证书&quot;">​</a></h4><p>如果想为 SSL 证书设置自动续订，可以设置一个 cron 作业以在证书到期之前自动运行 <code>certbot renew</code> 命令。例如：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">0</span><span style="color:#D19A66;"> 0</span><span style="color:#E5C07B;"> *</span><span style="color:#E5C07B;"> *</span><span style="color:#D19A66;"> 1</span><span style="color:#98C379;"> /usr/bin/certbot</span><span style="color:#98C379;"> renew</span><span style="color:#ABB2BF;"> &gt;&gt; </span><span style="color:#98C379;">/var/log/certbot-renew.log</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="腾讯20个免费-ssl" tabindex="-1">腾讯20个免费 SSL <a class="header-anchor" href="#腾讯20个免费-ssl" aria-label="Permalink to &quot;腾讯20个免费 SSL&quot;">​</a></h2>`,46)]))}const m=a(p,[["render",o]]);export{b as __pageData,m as default};
