import{_ as n,c as a,o as l,ah as p}from"./chunks/framework.DqD713j2.js";const F=JSON.parse('{"title":"TCP服务器","description":"","frontmatter":{},"headers":[],"relativePath":"Document/Web协议和其他原理/TCP服务器.md","filePath":"Document/Web协议和其他原理/TCP服务器.md","lastUpdated":1750954157000}'),o={name:"Document/Web协议和其他原理/TCP服务器.md"};function e(r,s,c,t,B,y){return l(),a("div",null,s[0]||(s[0]=[p(`<h1 id="tcp服务器" tabindex="-1">TCP服务器 <a class="header-anchor" href="#tcp服务器" aria-label="Permalink to &quot;TCP服务器&quot;">​</a></h1><p>文档笔记：<a href="http://www.zhufengpeixun.com/strong/html/13.tcp.html" target="_blank" rel="noreferrer">http://www.zhufengpeixun.com/strong/html/13.tcp.html</a></p><p>在Node.js中，提供了net模块用来实现TCP服务器和客户端的通信。</p><h2 id="_1-tcp" tabindex="-1">1. TCP <a class="header-anchor" href="#_1-tcp" aria-label="Permalink to &quot;1. TCP&quot;">​</a></h2><h3 id="_1-1-tcp服务器" tabindex="-1">1.1 TCP服务器 <a class="header-anchor" href="#_1-1-tcp服务器" aria-label="Permalink to &quot;1.1 TCP服务器&quot;">​</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">net</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">createServer</span><span style="color:#ABB2BF;">([</span><span style="color:#E06C75;">options</span><span style="color:#ABB2BF;">][, </span><span style="color:#E06C75;">connectionListener</span><span style="color:#ABB2BF;">])</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>options.allowHalfOpen 是否允许单方面连接,默认值为false</li><li>connectionListener参数用于指定当客户端与服务器建立连接时所要调用的回调函数，回调中有一个参数socket,指的是TCP服务器监听的socket端口对象</li></ul><p>也可以通过监听connection事件的方式来指定监听函数</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">server</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;connection&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">socket</span><span style="color:#ABB2BF;">){});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="_1-1-1-启动tcp服务器" tabindex="-1">1.1.1 启动TCP服务器 <a class="header-anchor" href="#_1-1-1-启动tcp服务器" aria-label="Permalink to &quot;1.1.1 启动TCP服务器&quot;">​</a></h4><p>可以使用listen方法通知服务器开始监听客户端的连接</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">server</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">listen</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">port</span><span style="color:#ABB2BF;">,[</span><span style="color:#E06C75;">host</span><span style="color:#ABB2BF;">],[</span><span style="color:#E06C75;">backlog</span><span style="color:#ABB2BF;">],[</span><span style="color:#E06C75;">callback</span><span style="color:#ABB2BF;">])</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>port 必须指定的端口号</li><li>host 指定需要监听的IP地址或主机名，如果省略的话服务器将监听来自于任何客户端的连接</li><li>backlog指定位于等待队列中的客户端连接的最大数量，默认值为511</li></ul><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">server</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;listening&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">(){});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="_1-1-2-使用tcp服务器" tabindex="-1">1.1.2 使用TCP服务器 <a class="header-anchor" href="#_1-1-2-使用tcp服务器" aria-label="Permalink to &quot;1.1.2 使用TCP服务器&quot;">​</a></h4><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> net</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;net&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> server</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> net</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">createServer</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">socket</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#E5C07B;">  console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;客户端已连接&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"><span style="color:#E5C07B;">server</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">listen</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">8080</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&#39;localhost&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"><span style="color:#E5C07B;">    console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;服务器开始监听&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h4 id="_1-1-3-address" tabindex="-1">1.1.3 address <a class="header-anchor" href="#_1-1-3-address" aria-label="Permalink to &quot;1.1.3 address&quot;">​</a></h4><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">server</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">address</span><span style="color:#ABB2BF;">()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>port 端口号</li><li>address TCP服务器监听的地址</li><li>family 协议的版本</li></ul><h4 id="_1-1-4-getconnections" tabindex="-1">1.1.4 getConnections <a class="header-anchor" href="#_1-1-4-getconnections" aria-label="Permalink to &quot;1.1.4 getConnections&quot;">​</a></h4><p>查看当前与TCP服务器建立连接的客户端的连接数量以及设置最大连接数量</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">server</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getConnections</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">callback</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;"> server</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">maxConnections</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 2</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="_1-1-5-close" tabindex="-1">1.1.5 close <a class="header-anchor" href="#_1-1-5-close" aria-label="Permalink to &quot;1.1.5 close&quot;">​</a></h4><p>使用close方法可以显式拒绝所有的客户端的连接请求,当所有已连接的客户端关闭后服务器会自动关闭,并触发服务器的close事件。</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">server</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">close</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">server</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;close&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">callback</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_1-2-socket" tabindex="-1">1.2 socket <a class="header-anchor" href="#_1-2-socket" aria-label="Permalink to &quot;1.2 socket&quot;">​</a></h3><h4 id="_1-2-1-address" tabindex="-1">1.2.1 address <a class="header-anchor" href="#_1-2-1-address" aria-label="Permalink to &quot;1.2.1 address&quot;">​</a></h4><p>net.Socket代表一个socket端口对象,它是一个可读可写流。</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> net</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;net&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> util</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;util&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> server</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> net</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">createServer</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">socket</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#E5C07B;">  server</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getConnections</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">err</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;font-style:italic;">count</span><span style="color:#ABB2BF;">)</span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E5C07B;">      server</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">maxConnections</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">      console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;最大连接数量%d,当前连接数量%d&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;">server</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">maxConnections</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">count</span><span style="color:#ABB2BF;">); </span></span>
<span class="line"><span style="color:#ABB2BF;">  });  </span></span>
<span class="line"><span style="color:#C678DD;">  let</span><span style="color:#E06C75;"> address</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">address</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">  console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;客户端地址 %s&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;">util</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">inspect</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">address</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h4 id="_1-2-2-读取数据" tabindex="-1">1.2.2 读取数据 <a class="header-anchor" href="#_1-2-2-读取数据" aria-label="Permalink to &quot;1.2.2 读取数据&quot;">​</a></h4><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> server</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> net</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">createServer</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">socket</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">    socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setEncoding</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;utf8&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">    socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;data&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">data</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">        console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;本次收到的内容为%s,累计收到的字节数是%d&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">data</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">socket</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">bytesRead</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    });</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h4 id="_1-2-3-监听关闭事件" tabindex="-1">1.2.3 监听关闭事件 <a class="header-anchor" href="#_1-2-3-监听关闭事件" aria-label="Permalink to &quot;1.2.3 监听关闭事件&quot;">​</a></h4><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> server</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> net</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">createServer</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">socket</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">    socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;end&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#E5C07B;">        console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;客户端已经关闭&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    });</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="_1-2-4-pipe" tabindex="-1">1.2.4 pipe <a class="header-anchor" href="#_1-2-4-pipe" aria-label="Permalink to &quot;1.2.4 pipe&quot;">​</a></h4><p>pipe方法可以将客户端发送的数据写到文件或其它目标中。</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">pipe</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">destinatin</span><span style="color:#ABB2BF;">,[</span><span style="color:#E06C75;">options</span><span style="color:#ABB2BF;">]);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>options.end 设置为false时当客户端结束写操作或关闭后并不会关闭目标对象，还可以继续写入数据</li></ul><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> net</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;net&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> path</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;path&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> ws</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;fs&#39;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">createWriteStream</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">resolve</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">__dirname</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;msg.txt&#39;</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> server</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> net</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">createServer</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">socket</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">    socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;data&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">data</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">        console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">data</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    });</span></span>
<span class="line"><span style="color:#E5C07B;">    socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">pipe</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">ws</span><span style="color:#ABB2BF;">, { </span><span style="color:#E06C75;">end</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;"> });</span></span>
<span class="line"><span style="color:#E5C07B;">    socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;end&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#E5C07B;">        ws</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">end</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;over&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#E5C07B;">            socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">unpipe</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">ws</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        });</span></span>
<span class="line"><span style="color:#ABB2BF;">    });</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h4 id="_1-2-5-unpipe" tabindex="-1">1.2.5 unpipe <a class="header-anchor" href="#_1-2-5-unpipe" aria-label="Permalink to &quot;1.2.5 unpipe&quot;">​</a></h4><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> net</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;net&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> path</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;path&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> file</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;fs&#39;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">createWriteStream</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">join</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">__dirname</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;msg.txt&#39;</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> server</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> net</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">createServer</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">socket</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">    socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">pipe</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">file</span><span style="color:#ABB2BF;">, {</span></span>
<span class="line"><span style="color:#E06C75;">        end</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span></span>
<span class="line"><span style="color:#ABB2BF;">    });</span></span>
<span class="line"><span style="color:#61AFEF;">    setTimeout</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#E5C07B;">        file</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">end</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;bye bye&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">        socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">unpipe</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">file</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }, </span><span style="color:#D19A66;">5000</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // socket.on(&#39;end&#39;, function () {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    //     file.end(&#39;bye bye&#39;);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // });</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"><span style="color:#E5C07B;">server</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">listen</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">8080</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h4 id="_1-2-5-pause-resume" tabindex="-1">1.2.5 pause&amp;resume <a class="header-anchor" href="#_1-2-5-pause-resume" aria-label="Permalink to &quot;1.2.5 pause&amp;resume&quot;">​</a></h4><p><code>pause</code>可以暂停<code>data</code>事件触发，服务器会把客户端发送的数据暂存在缓存区里</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> net</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;net&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> net</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;net&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> path</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;path&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> file</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;fs&#39;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">createWriteStream</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">join</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">__dirname</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;msg.txt&#39;</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> server</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> net</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">createServer</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">socket</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">    socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">pause</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#61AFEF;">    setTimeout</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#E5C07B;">        socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">resume</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">        socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">pipe</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">file</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }, </span><span style="color:#D19A66;">10</span><span style="color:#56B6C2;"> *</span><span style="color:#D19A66;"> 1000</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"><span style="color:#E5C07B;">server</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">listen</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">8080</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h4 id="_1-2-6-settimeout" tabindex="-1">1.2.6 setTimeout <a class="header-anchor" href="#_1-2-6-settimeout" aria-label="Permalink to &quot;1.2.6 setTimeout&quot;">​</a></h4><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> net</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;net&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> path</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;path&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> ws</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;fs&#39;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">createWriteStream</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">resolve</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">__dirname</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;msg.txt&#39;</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> server</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> net</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">createServer</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">socket</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">    socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setTimeout</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">5</span><span style="color:#56B6C2;"> *</span><span style="color:#D19A66;"> 1000</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">    socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">pause</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">    socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;timeout&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#E5C07B;">        socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">pipe</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">ws</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    //socket.setTimeout(0);取消超时时间的设置</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"><span style="color:#E5C07B;">server</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">listen</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">8080</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="_1-2-tcp客户端" tabindex="-1">1.2 TCP客户端 <a class="header-anchor" href="#_1-2-tcp客户端" aria-label="Permalink to &quot;1.2 TCP客户端&quot;">​</a></h3><h4 id="_1-2-1-创建tcp客户端" tabindex="-1">1.2.1 创建TCP客户端 <a class="header-anchor" href="#_1-2-1-创建tcp客户端" aria-label="Permalink to &quot;1.2.1 创建TCP客户端&quot;">​</a></h4><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> socket</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#E5C07B;"> net</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">Socket</span><span style="color:#ABB2BF;">([</span><span style="color:#E06C75;">options</span><span style="color:#ABB2BF;">])</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>fd socket文件描述符</li><li>type 客户端所有协议</li><li>allowHalfOpen 是否允许半连接,服务器收到FIN包时不回发FIN包，可以使服务器可以继续向客户端发数据</li></ul><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">connect</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">port</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">host</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">callback</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;connect&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">callback</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="_1-2-2-向服务器端写入数据、end-、error、destroy-close" tabindex="-1">1.2.2 向服务器端写入数据、end 、error、destroy,close <a class="header-anchor" href="#_1-2-2-向服务器端写入数据、end-、error、destroy-close" aria-label="Permalink to &quot;1.2.2 向服务器端写入数据、end 、error、destroy,close&quot;">​</a></h4><ul><li><p>write表示向服务器写入数据</p></li><li><p>end 用于结束连接</p></li><li><p>error 连接发生错误</p></li><li><p>destroy 销毁流</p></li><li><p>close 表示连接关闭成功，hasError=true代表有可能有错误</p></li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">data</span><span style="color:#ABB2BF;">,[</span><span style="color:#E06C75;">encoding</span><span style="color:#ABB2BF;">],[</span><span style="color:#E06C75;">callback</span><span style="color:#ABB2BF;">]);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> net</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;net&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> server</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> net</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">createServer</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">socket</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">    console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;客户端已经连接&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">    socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setEncoding</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;utf8&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">    socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;data&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">data</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">        console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;已接收客户端发送的数据:%s&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">data</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">        socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;服务器:&#39;</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> data</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    })</span></span>
<span class="line"><span style="color:#E5C07B;">    socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;error&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">err</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">        console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;与客户端通信过程中发生了错误，错误编码为%s&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">err</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">code</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">        socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">destroy</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    });</span></span>
<span class="line"><span style="color:#E5C07B;">    socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;end&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">err</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">        console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;客户端已经关闭连接&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">        socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">destroy</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    });</span></span>
<span class="line"><span style="color:#E5C07B;">    socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;close&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">hasError</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">        console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">hasError</span><span style="color:#C678DD;"> ?</span><span style="color:#98C379;"> &#39;异常关闭&#39;</span><span style="color:#C678DD;"> :</span><span style="color:#98C379;"> &#39;正常关闭&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    });</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"><span style="color:#E5C07B;">server</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">listen</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">808</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#C678DD;">    let</span><span style="color:#E06C75;"> client</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#E5C07B;"> net</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">Socket</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">    client</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setEncoding</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;utf8&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">    client</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">connect</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">808</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;127.0.0.1&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#E5C07B;">        console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;客户端已连接&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">        client</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;hello&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#61AFEF;">        setTimeout</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#E5C07B;">            client</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">end</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;byebye&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        }, </span><span style="color:#D19A66;">5000</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    });</span></span>
<span class="line"><span style="color:#E5C07B;">    client</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;data&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">data</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">        console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;已经接收到客户端发过来的数据:%s&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">data</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    });</span></span>
<span class="line"><span style="color:#E5C07B;">    client</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;error&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">err</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">        console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;与服务器通信过程中发生了错误，错误编码为%s&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">err</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">code</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">        client</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">destroy</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br></div></div><h4 id="_1-2-3-close" tabindex="-1">1.2.3 close <a class="header-anchor" href="#_1-2-3-close" aria-label="Permalink to &quot;1.2.3 close&quot;">​</a></h4><p>停止server接受建立新的connections并保持已经存在的connections</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">  server</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getConnections</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">err</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">count</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">      if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">count</span><span style="color:#56B6C2;"> ==</span><span style="color:#D19A66;"> 2</span><span style="color:#ABB2BF;">) </span><span style="color:#E5C07B;">server</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">close</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;"> });</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="_1-2-4-unref-ref" tabindex="-1">1.2.4 unref&amp;ref <a class="header-anchor" href="#_1-2-4-unref-ref" aria-label="Permalink to &quot;1.2.4 unref&amp;ref&quot;">​</a></h4><p>unref方法指定发客户端连接被全部关闭时退出应用程序 如果将allowHalfOpen方法，必须使用与客户端连接的socket端口对象的end 方法主动关闭服务器端连接</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> net</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;net&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> server</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> net</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">createServer</span><span style="color:#ABB2BF;">({ </span><span style="color:#E06C75;">allowHalfOpen</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;"> }, </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">socket</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">    console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;客户端已经连接&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">    socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setEncoding</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;utf8&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">    socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;data&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">data</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">        console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;已接收客户端发送的数据:%s&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">data</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">        socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;服务器确认数据:&#39;</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> data</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    })</span></span>
<span class="line"><span style="color:#E5C07B;">    socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;error&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">err</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">        console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;与客户端通信过程中发生了错误，错误编码为%s&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">err</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">code</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">        socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">destroy</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    });</span></span>
<span class="line"><span style="color:#E5C07B;">    socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;end&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">err</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">        console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;客户端已经关闭连接&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">        socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">end</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">        server</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">unref</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    });</span></span>
<span class="line"><span style="color:#E5C07B;">    socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;close&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">hasError</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">        if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">hasError</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">            console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;由于错误导致socket关闭&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">            server</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">unref</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">        } </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">            console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;端口正常关闭&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">    });</span></span>
<span class="line"><span style="color:#E5C07B;">    server</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getConnections</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">err</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">count</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">        if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">count</span><span style="color:#56B6C2;"> ==</span><span style="color:#D19A66;"> 2</span><span style="color:#ABB2BF;">) </span><span style="color:#E5C07B;">server</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">close</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    });</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"><span style="color:#E5C07B;">server</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">listen</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">808</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> () { });</span></span>
<span class="line"><span style="color:#E5C07B;">server</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;close&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#E5C07B;">    console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;服务器关闭&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><h4 id="_1-2-5-buffersize" tabindex="-1">1.2.5 bufferSize <a class="header-anchor" href="#_1-2-5-buffersize" aria-label="Permalink to &quot;1.2.5 bufferSize&quot;">​</a></h4><p>write的返回值和bufferSize属性值</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> server</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> net</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">createServer</span><span style="color:#ABB2BF;">({ </span><span style="color:#E06C75;">allowHalfOpen</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;"> }, </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">socket</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">    console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;客户端已经连接&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">    socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setEncoding</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;utf8&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">    let</span><span style="color:#E06C75;"> rs</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> fs</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">createReadStream</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">resolve</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">__dirname</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;a.txt&#39;</span><span style="color:#ABB2BF;">), { </span><span style="color:#E06C75;">highWaterMark</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;"> });</span></span>
<span class="line"><span style="color:#E5C07B;">    rs</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;data&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">data</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">        let</span><span style="color:#E06C75;"> flag</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">data</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">        console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;flag:&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">flag</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">        console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;缓存字节:&#39;</span><span style="color:#56B6C2;"> +</span><span style="color:#E5C07B;"> socket</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">bufferSize</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">        console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;已发送字节:&#39;</span><span style="color:#56B6C2;"> +</span><span style="color:#E5C07B;"> socket</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">bytesWritten</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    })</span></span>
<span class="line"><span style="color:#E5C07B;">    socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;data&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">data</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">        console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;data&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">data</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    });</span></span>
<span class="line"><span style="color:#E5C07B;">    socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;drain&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">err</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#98C379;">        &quot;缓存区已全部发送&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">    });</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h4 id="_1-2-6-keepalive" tabindex="-1">1.2.6 keepAlive <a class="header-anchor" href="#_1-2-6-keepalive" aria-label="Permalink to &quot;1.2.6 keepAlive&quot;">​</a></h4><p>当服务器和客户端建立连接后，当一方主机突然断电、重启、系统崩溃等意外情况时，将来不及向另一方发送FIN包，这样另一方将永远处于连接状态。 可以使用setKeepAlive方法来解决这一个问题</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setKeepAlive</span><span style="color:#ABB2BF;">([</span><span style="color:#E06C75;">enaable</span><span style="color:#ABB2BF;">],[</span><span style="color:#E06C75;">initialDelay</span><span style="color:#ABB2BF;">]);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>enable 是否启用嗅探，为true时会不但向对方发送探测包，没有响应则认为对方已经关闭连接，自己则关闭连接</li><li>initialDelay 多久发送一次探测包，单位是毫秒</li></ul><h2 id="_1-2-7-聊天室1-0" tabindex="-1">1.2.7 聊天室1.0 <a class="header-anchor" href="#_1-2-7-聊天室1-0" aria-label="Permalink to &quot;1.2.7 聊天室1.0&quot;">​</a></h2><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * 1.创建一个服务器</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * 2. 客户端可以连接服务器</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * 3.客户端可以发言，然后广播给大家</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * 4.客户端连接和退出后都要通知大家。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * 5.显示当前的在线人数</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> net</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;net&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> util</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;util&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> clients</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {};</span></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> server</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> net</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">createServer</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">socket</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">    server</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getConnections</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">err</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">count</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">        socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">\`weclome,there is </span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">count</span><span style="color:#C678DD;">}</span><span style="color:#98C379;"> users now,please input your username</span><span style="color:#56B6C2;">\\r\\n</span><span style="color:#98C379;">\`</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    });</span></span>
<span class="line"><span style="color:#C678DD;">    let</span><span style="color:#E06C75;"> nickname</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">    socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setEncoding</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;utf8&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">    socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;data&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">data</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E06C75;">        data</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> data</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">replace</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">/\\r\\n/</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">        if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">data</span><span style="color:#56B6C2;"> ==</span><span style="color:#98C379;"> &#39;byebye&#39;</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">            socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">end</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">        } </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">            if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">nickname</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#61AFEF;">                broadcast</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">nickname</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">\`</span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">nickname</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">:</span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">data</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">\`</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">            } </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">                nickname</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> data</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">                clients</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">nickname</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> socket</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#61AFEF;">                broadcast</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">nickname</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">\`welcome </span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">nickname</span><span style="color:#C678DD;">}</span><span style="color:#98C379;"> joined us!\`</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    });</span></span>
<span class="line"><span style="color:#E5C07B;">    socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;close&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#E5C07B;">        socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">destroy</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    });</span></span>
<span class="line"><span style="color:#ABB2BF;">}).</span><span style="color:#61AFEF;">listen</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">8088</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> broadcast</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">nickname</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">msg</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">    for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> key</span><span style="color:#C678DD;"> in</span><span style="color:#E06C75;"> clients</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">        if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">key</span><span style="color:#56B6C2;"> !=</span><span style="color:#E06C75;"> nickname</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E06C75;">            clients</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">].</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">msg</span><span style="color:#56B6C2;"> +</span><span style="color:#98C379;"> &#39;</span><span style="color:#56B6C2;">\\r\\n</span><span style="color:#98C379;">&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E06C75;">            clients</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">nickname</span><span style="color:#ABB2BF;">].</span><span style="color:#61AFEF;">destroy</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#C678DD;">            delete</span><span style="color:#E06C75;"> clients</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">nickname</span><span style="color:#ABB2BF;">];</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br></div></div><h2 id="_1-2-8-聊天室2-0" tabindex="-1">1.2.8 聊天室2.0 <a class="header-anchor" href="#_1-2-8-聊天室2-0" aria-label="Permalink to &quot;1.2.8 聊天室2.0&quot;">​</a></h2><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> key</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> scoket</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">remoteAddress</span><span style="color:#56B6C2;">+</span><span style="color:#98C379;">&#39;:&#39;</span><span style="color:#56B6C2;">+</span><span style="color:#E5C07B;">socket</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">remotePort</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">users</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> {</span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;">&#39;匿名&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">socket</span><span style="color:#ABB2BF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;data&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"><span style="color:#61AFEF;">    parse</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">data</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> parse</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">msg</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#61AFEF;">  swtich</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">msg</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">type</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#C678DD;">   case</span><span style="color:#98C379;"> &#39;secret&#39;</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#61AFEF;">     secret</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">msg</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">user</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;">msg</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">text</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">     break</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#C678DD;">  case</span><span style="color:#98C379;"> &#39;boardcast&#39;</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#61AFEF;">     boardcast</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">message</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">text</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">     break</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">  case</span><span style="color:#98C379;"> &#39;cname&#39;</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#61AFEF;">     cname</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">messsage</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">text</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">     break</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">  case</span><span style="color:#98C379;"> &#39;list&#39;</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#61AFEF;">     list</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#C678DD;">     break</span><span style="color:#ABB2BF;">;   </span></span>
<span class="line"><span style="color:#C678DD;">  default</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E5C07B;">     socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;不能识别命令&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">     break</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> secret</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">user</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;font-style:italic;">text</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> boardcast</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">text</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> cname</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">text</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> list</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;">text</span><span style="color:#E06C75;"> 广播</span></span>
<span class="line"><span style="color:#E06C75;">c</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;">nickname</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;">text</span><span style="color:#E06C75;"> 私聊</span></span>
<span class="line"><span style="color:#E06C75;">n</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;">nickname</span><span style="color:#E06C75;"> 改名</span></span>
<span class="line"><span style="color:#E06C75;">l</span><span style="color:#E06C75;"> 列出在线用户列表</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;data&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">data</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#C678DD;">   if</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">data</span><span style="color:#56B6C2;"> ==</span><span style="color:#98C379;"> &#39;quit)</span><span style="color:#FFFFFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">   }</span><span style="color:#E06C75;">else</span><span style="color:#61AFEF;"> if</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">data</span><span style="color:#56B6C2;"> ==</span><span style="color:#98C379;"> &#39;help&#39;</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">   }</span><span style="color:#61AFEF;">else</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"><span style="color:#61AFEF;">     write</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">data</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">   }</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> convert</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br></div></div><h3 id="_1-3-类方法" tabindex="-1">1.3 类方法 <a class="header-anchor" href="#_1-3-类方法" aria-label="Permalink to &quot;1.3 类方法&quot;">​</a></h3><ul><li>isIP 判断字符串是否是IP</li><li>isIPv4 判断字符串是否是IPv4地址</li><li>isIPv6 判断字符串是否是IPv6地址</li></ul><h2 id="_2-udp" tabindex="-1">2. UDP <a class="header-anchor" href="#_2-udp" aria-label="Permalink to &quot;2. UDP&quot;">​</a></h2><h3 id="_2-1-创建socket" tabindex="-1">2.1 创建socket <a class="header-anchor" href="#_2-1-创建socket" aria-label="Permalink to &quot;2.1 创建socket&quot;">​</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> socket</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> dgram</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">createSocket</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">type</span><span style="color:#ABB2BF;">,[</span><span style="color:#E06C75;">callback</span><span style="color:#ABB2BF;">]);</span></span>
<span class="line"><span style="color:#E5C07B;">socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;messsage&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">msg</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;font-style:italic;">rinfo</span><span style="color:#ABB2BF;">){});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li>type 必须输入，制定时udp4还是udp6</li><li>callback 从该接口接收到数据时调用的回调函数 <ul><li>msg 接收到的数据</li><li>rinfo 信息对象 <ul><li>address 发送着的地址</li><li>family ipv4还是ipv6</li><li>port 发送者的socket端口号</li><li>size 发送者所发送的数据字节数</li></ul></li></ul></li></ul><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">bind</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">port</span><span style="color:#ABB2BF;">,[</span><span style="color:#E06C75;">address</span><span style="color:#ABB2BF;">],[</span><span style="color:#E06C75;">callback</span><span style="color:#ABB2BF;">]);</span></span>
<span class="line"><span style="color:#E5C07B;">socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;listening&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">callabck</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li>port 绑定的端口号</li><li>address 监听的地址</li><li>callback 监听成功后的回调函数</li></ul><h3 id="_2-2-向外发送数据" tabindex="-1">2.2 向外发送数据 <a class="header-anchor" href="#_2-2-向外发送数据" aria-label="Permalink to &quot;2.2 向外发送数据&quot;">​</a></h3><p>如果发送数据前还没有绑定过地址和端口号，操作系统将为其分配一个随机端口并可以接收任何地址的数据</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;"> socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">send</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">buf</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">offset</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">port</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">address</span><span style="color:#ABB2BF;">,[</span><span style="color:#E06C75;">callback</span><span style="color:#ABB2BF;">]);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li><p>buffer 代表缓存区</p></li><li><p>offset 从缓存区第几个字节开始发</p></li><li><p>length 要发送的字节数</p></li><li><p>port 对方的端口号</p></li><li><p>address 接收数据的socket地址</p></li><li><p>callback 制定当数据发送完毕时所需要的回调函数</p><ul><li>err 错误对象</li><li>byets 实际发送的字节数</li></ul></li></ul><h3 id="_2-3-address" tabindex="-1">2.3 address <a class="header-anchor" href="#_2-3-address" aria-label="Permalink to &quot;2.3 address&quot;">​</a></h3><p>获取此socket相关的地址信息</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> address</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">address</span><span style="color:#ABB2BF;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li><p>port</p></li><li><p>address</p></li><li><p>family</p></li></ul><h3 id="_2-5-udp服务器" tabindex="-1">2.5 UDP服务器 <a class="header-anchor" href="#_2-5-udp服务器" aria-label="Permalink to &quot;2.5 UDP服务器&quot;">​</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> dgram</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;dgram&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> socket</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> dgram</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">createSocket</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;udp4&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;message&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">msg</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;font-style:italic;">rinfo</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#E5C07B;">  console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">msg</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">toString</span><span style="color:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#E5C07B;">  console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">rinfo</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">   socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">send</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">msg</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;">msg</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;">rinfo</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">port</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;">rinfo</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">address</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"><span style="color:#E5C07B;">socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">bind</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">41234</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&#39;localhost&#39;</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="_2-6-udp客户端" tabindex="-1">2.6 UDP客户端 <a class="header-anchor" href="#_2-6-udp客户端" aria-label="Permalink to &quot;2.6 UDP客户端&quot;">​</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> dgram</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;dgram&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> socket</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> dgram</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">createSocket</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;udp4&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;message&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">msg</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;font-style:italic;">rinfo</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#E5C07B;">    console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">msg</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">toString</span><span style="color:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#E5C07B;">    console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">rinfo</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"><span style="color:#E5C07B;">socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setTTL</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">128</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">send</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> Buffer</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;珠峰培训&#39;</span><span style="color:#ABB2BF;">),</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">6</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">41234</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&#39;localhost&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">err</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;font-style:italic;">bytes</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#E5C07B;">    console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;发送了个%d字节&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">bytes</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"><span style="color:#E5C07B;">socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;error&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">err</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#E5C07B;">    console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">error</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">err</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="_2-7-广播" tabindex="-1">2.7 广播 <a class="header-anchor" href="#_2-7-广播" aria-label="Permalink to &quot;2.7 广播&quot;">​</a></h3><p>创建一个UDP服务器并通过该服务器进行数据的广播</p><h4 id="_2-7-1-服务器" tabindex="-1">2.7.1 服务器 <a class="header-anchor" href="#_2-7-1-服务器" aria-label="Permalink to &quot;2.7.1 服务器&quot;">​</a></h4><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> dgram</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;dgram&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> server</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> dgram</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">createSocket</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;udp4)</span><span style="color:#FFFFFF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">server</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;message&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">msg</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#C678DD;">  let</span><span style="color:#E06C75;"> buf</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Bufffer</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;已经接收客户端发送的数据&#39;</span><span style="color:#56B6C2;">+</span><span style="color:#E06C75;">msg</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">  server</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setBroadcast</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">  server</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">send</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">buf</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;">buf</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">41235</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&quot;192.168.1.255&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"><span style="color:#E5C07B;">server</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">bind</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">41234</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&#39;192.168.1.100&#39;</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h4 id="_2-7-2-客户端" tabindex="-1">2.7.2 客户端 <a class="header-anchor" href="#_2-7-2-客户端" aria-label="Permalink to &quot;2.7.2 客户端&quot;">​</a></h4><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> dgram</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;dgram&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> client</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> dgram</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">createSocket</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;udp4)</span><span style="color:#FFFFFF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">client</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">bind</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">41235</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&#39;192.168.1.102)</span><span style="color:#FFFFFF;">;</span></span>
<span class="line"><span style="color:#E06C75;">let</span><span style="color:#E06C75;"> buf</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Buffer</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;hello&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">client</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">send</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">buf</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;">buf</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">41234</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&#39;192.168.1.100&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">client</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;message&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">msg</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;font-style:italic;">rinfo</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#E5C07B;">  console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;received : &#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">msg</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="_2-8-组播" tabindex="-1">2.8 组播 <a class="header-anchor" href="#_2-8-组播" aria-label="Permalink to &quot;2.8 组播&quot;">​</a></h3><ul><li>所谓的组播，就是将网络中同一业务类型进行逻辑上的分组，从某个socket端口上发送的数据只能被该组中的其他主机所接收，不被组外的任何主机接收。</li><li>实现组播时，并不直接把数据发送给目标地址，而是将数据发送到组播主机，操作系统将把该数据组播给组内的其他所有成员。</li><li>在网络中，使用D类地址作为组播地址。范围是指 224.0.0.0 ~ 239.255.255.255,分为三类 <ul><li>局部组播地址: 224.0.0.0 ~ 224.0.0.255 为路由协议和其他用途保留</li><li>预留组播地址: 224.0.1.0 ~ 238.255.255.255 可用于全球范围或网络协议</li><li>管理权限组播地址 ： 239.0.0.0 ～ 239.255.255.255 组织内部使用，不可用于Internet</li></ul></li></ul><p>把该socket端口对象添加到组播组中。</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">addMembership</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">multicastAddress</span><span style="color:#ABB2BF;">,[</span><span style="color:#E06C75;">multicastInterface</span><span style="color:#ABB2BF;">]);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>multicastAddress 必须指定，需要加入的组播组地址</li><li>multicastInterface 可选参数，需要加入的组播组地址</li></ul><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">dropMembership</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">multicastAddress</span><span style="color:#ABB2BF;">,[</span><span style="color:#E06C75;">multicastInterface</span><span style="color:#ABB2BF;">]);</span></span>
<span class="line"><span style="color:#E5C07B;">socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setMulticastTTL</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">ttl</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setMulticastLoopback</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">flag</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="_2-8-1-服务器" tabindex="-1">2.8.1 服务器 <a class="header-anchor" href="#_2-8-1-服务器" aria-label="Permalink to &quot;2.8.1 服务器&quot;">​</a></h4><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> dgram</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;dgram&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> server</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> dgram</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">createSocket</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;udp4&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">server</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;listening&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"><span style="color:#E5C07B;">  server</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">MulticastTTL</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">128</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">  server</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setMulticastLoopback</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">  server</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">addMembership</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;230.185.192.108&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"><span style="color:#61AFEF;">setInterval</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">broadcast</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">1000</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> broadcast</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"><span style="color:#C678DD;">  let</span><span style="color:#E06C75;"> buffer</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> Buffer</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">from</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> Date</span><span style="color:#ABB2BF;">().</span><span style="color:#61AFEF;">toLocaleString</span><span style="color:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#E5C07B;">  server</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">send</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">buffer</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;">buffer</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">8080</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&quot;230.185.192.108&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h4 id="_2-8-2-客户端" tabindex="-1">2.8.2 客户端 <a class="header-anchor" href="#_2-8-2-客户端" aria-label="Permalink to &quot;2.8.2 客户端&quot;">​</a></h4><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> dgram</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;dgram&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> client</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> dgram</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">createSocket</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;udp4&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">client</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;listening&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"><span style="color:#E5C07B;">    client</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">addMembership</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;230.185.192.108&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"><span style="color:#E5C07B;">client</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;message&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">message</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;font-style:italic;">remote</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#E5C07B;">  console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">message</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">toString</span><span style="color:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"><span style="color:#E5C07B;">client</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">bind</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">8080</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&#39;192.168.1.103&#39;</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="附录" tabindex="-1">附录 <a class="header-anchor" href="#附录" aria-label="Permalink to &quot;附录&quot;">​</a></h2><h3 id="软件" tabindex="-1">软件 <a class="header-anchor" href="#软件" aria-label="Permalink to &quot;软件&quot;">​</a></h3><ul><li>putty <a href="https://www.putty.org/" target="_blank" rel="noreferrer">https://www.putty.org/</a></li><li>window用户装 科来网络分析系统 <a href="http://www.colasoft.com.cn/" target="_blank" rel="noreferrer">http://www.colasoft.com.cn/</a></li><li>mac用户装 wireshark <a href="https://www.wireshark.org/download.html" target="_blank" rel="noreferrer">https://www.wireshark.org/download.html</a></li></ul><h3 id="telnet" tabindex="-1">telnet <a class="header-anchor" href="#telnet" aria-label="Permalink to &quot;telnet&quot;">​</a></h3><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">FF</span><span style="color:#98C379;"> FB</span><span style="color:#98C379;"> 1F</span><span style="color:#98C379;"> FF</span><span style="color:#98C379;"> FB</span><span style="color:#D19A66;"> 20</span><span style="color:#98C379;"> FF</span><span style="color:#98C379;"> FB</span><span style="color:#D19A66;"> 18</span><span style="color:#98C379;"> FF</span><span style="color:#98C379;"> FB</span><span style="color:#D19A66;"> 27</span><span style="color:#98C379;"> FF</span><span style="color:#98C379;"> FD</span><span style="color:#D19A66;"> 01</span><span style="color:#98C379;"> FF</span><span style="color:#98C379;"> FB</span><span style="color:#D19A66;"> 03</span><span style="color:#98C379;"> FF</span><span style="color:#98C379;"> FD</span><span style="color:#D19A66;"> 03</span></span>
<span class="line"><span style="color:#61AFEF;">FF</span><span style="color:#98C379;"> FB</span><span style="color:#98C379;"> 1F</span><span style="color:#98C379;"> window</span><span style="color:#98C379;"> size</span></span>
<span class="line"><span style="color:#61AFEF;">FF</span><span style="color:#98C379;"> FB</span><span style="color:#D19A66;"> 20</span><span style="color:#98C379;"> terminal</span><span style="color:#98C379;"> speed</span></span>
<span class="line"><span style="color:#61AFEF;">FF</span><span style="color:#98C379;"> FB</span><span style="color:#D19A66;"> 18</span><span style="color:#98C379;"> terminal</span><span style="color:#98C379;"> type</span></span>
<span class="line"><span style="color:#61AFEF;">FF</span><span style="color:#98C379;"> FB</span><span style="color:#D19A66;"> 27</span><span style="color:#98C379;"> Telnet</span><span style="color:#98C379;"> Environment</span><span style="color:#98C379;"> Option</span></span>
<span class="line"><span style="color:#61AFEF;">FF</span><span style="color:#98C379;"> FD</span><span style="color:#D19A66;"> 01</span><span style="color:#98C379;"> echo</span></span>
<span class="line"><span style="color:#61AFEF;">FF</span><span style="color:#98C379;"> FB</span><span style="color:#D19A66;"> 03</span><span style="color:#98C379;"> suppress</span><span style="color:#98C379;"> go</span><span style="color:#98C379;"> ahead</span></span>
<span class="line"><span style="color:#61AFEF;">FF</span><span style="color:#98C379;"> FD</span><span style="color:#D19A66;"> 03</span><span style="color:#98C379;"> suppress</span><span style="color:#98C379;"> go</span><span style="color:#98C379;"> ahead</span></span>
<span class="line"><span style="color:#61AFEF;">如果不需要這些,</span><span style="color:#98C379;"> 改用RAW模式就可以了</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="打开telnet功能" tabindex="-1">打开telnet功能 <a class="header-anchor" href="#打开telnet功能" aria-label="Permalink to &quot;打开telnet功能&quot;">​</a></h2><p><a href="https://jingyan.baidu.com/article/6181c3e0b7cc4a152ef153b4.html" target="_blank" rel="noreferrer">打开telnet功能</a></p>`,114)]))}const A=n(o,[["render",e]]);export{F as __pageData,A as default};
