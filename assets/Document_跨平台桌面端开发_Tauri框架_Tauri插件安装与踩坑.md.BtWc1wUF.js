import{_ as a,c as e,o as r,ah as s}from"./chunks/framework.DqD713j2.js";const h=JSON.parse('{"title":"Tauri插件安装与踩坑","description":"","frontmatter":{},"headers":[],"relativePath":"Document/跨平台桌面端开发/Tauri框架/Tauri插件安装与踩坑.md","filePath":"Document/跨平台桌面端开发/Tauri框架/Tauri插件安装与踩坑.md","lastUpdated":1750954157000}'),p={name:"Document/跨平台桌面端开发/Tauri框架/Tauri插件安装与踩坑.md"};function n(o,t,i,l,d,u){return r(),e("div",null,t[0]||(t[0]=[s(`<h1 id="tauri插件安装与踩坑" tabindex="-1">Tauri插件安装与踩坑 <a class="header-anchor" href="#tauri插件安装与踩坑" aria-label="Permalink to &quot;Tauri插件安装与踩坑&quot;">​</a></h1><p>文档：<a href="https://tauri.app/zh-cn/v1/guides/features/plugin" target="_blank" rel="noreferrer">Tauri 插件 | Tauri Apps</a></p><h2 id="tauri-plugin" tabindex="-1">Tauri-plugin <a class="header-anchor" href="#tauri-plugin" aria-label="Permalink to &quot;Tauri-plugin&quot;">​</a></h2><p>Tauri-plugin是Tauri API的扩展，是对于基础api的一些补充，现在官方推出的插件已有：</p><table tabindex="0"><thead><tr><th></th><th></th></tr></thead><tbody><tr><td><a href="https://github.com/tauri-apps/plugins-workspace/tree/dev/plugins/authenticator" target="_blank" rel="noreferrer">authenticator</a></td><td>与硬件安全密钥的api。</td></tr><tr><td><a href="https://github.com/tauri-apps/plugins-workspace/tree/dev/plugins/autostart" target="_blank" rel="noreferrer">autostart</a></td><td>在系统启动时自动启动应用。</td></tr><tr><td><a href="https://github.com/tauri-apps/plugins-workspace/tree/dev/plugins/fs-extra" target="_blank" rel="noreferrer">fs-extra</a></td><td>核心API中不包含的额外文件系统api。</td></tr><tr><td><a href="https://github.com/tauri-apps/plugins-workspace/tree/dev/plugins/fs-watch" target="_blank" rel="noreferrer">fs-watch</a></td><td>观察文件系统的变化。</td></tr><tr><td><a href="https://github.com/tauri-apps/plugins-workspace/tree/dev/plugins/localhost" target="_blank" rel="noreferrer">localhost</a></td><td>在生产端中使用localhost。(默认为tauri://)</td></tr><tr><td><a href="https://github.com/tauri-apps/plugins-workspace/tree/dev/plugins/log" target="_blank" rel="noreferrer">log</a></td><td>日志模块</td></tr><tr><td><a href="https://github.com/tauri-apps/plugins-workspace/tree/dev/plugins/persisted-scope" target="_blank" rel="noreferrer">persisted-scope</a></td><td>持久化运行时状态到文件</td></tr><tr><td><a href="https://github.com/tauri-apps/plugins-workspace/tree/dev/plugins/positioner" target="_blank" rel="noreferrer">positioner</a></td><td>窗口位置记忆</td></tr><tr><td><a href="https://github.com/tauri-apps/plugins-workspace/tree/dev/plugins/single-instance" target="_blank" rel="noreferrer">single-instance</a></td><td>确保tauri应用程序只有一个实例在运行。</td></tr><tr><td><a href="https://github.com/tauri-apps/plugins-workspace/tree/dev/plugins/sql" target="_blank" rel="noreferrer">sql</a></td><td>与SQL数据库的接口</td></tr><tr><td><a href="https://github.com/tauri-apps/plugins-workspace/tree/dev/plugins/store" target="_blank" rel="noreferrer">store</a></td><td>持久化键值数据（纯异步）</td></tr><tr><td><a href="https://github.com/tauri-apps/plugins-workspace/tree/dev/plugins/stronghold" target="_blank" rel="noreferrer">stronghold</a></td><td>加密的安全数据库</td></tr><tr><td><a href="https://github.com/tauri-apps/plugins-workspace/tree/dev/plugins/upload" target="_blank" rel="noreferrer">upload</a></td><td>用于通过HTTP上传文件的Tauri插件</td></tr><tr><td><a href="https://github.com/tauri-apps/plugins-workspace/tree/dev/plugins/websocket" target="_blank" rel="noreferrer">websocket</a></td><td>使用JS绑定的Rust的打开WebSocket连接。</td></tr><tr><td><a href="https://github.com/tauri-apps/plugins-workspace/tree/dev/plugins/window-state" target="_blank" rel="noreferrer">window-state</a></td><td>持久化窗口大小和位置</td></tr></tbody></table><h2 id="tauri插件安装" tabindex="-1">Tauri插件安装 <a class="header-anchor" href="#tauri插件安装" aria-label="Permalink to &quot;Tauri插件安装&quot;">​</a></h2><p>tauri官方提供三种安装方式：</p><ol><li>使用<code>crates.io</code>和<code>npm/yarn/pnpm</code>（最简单，并且需要您相信其的发布管道工作正常）</li><li>使用 <code>git tags</code> / <code>revision hashe</code>直接从Github拉取源代码（最安全）</li><li>Git子模块在你的tauri项目中安装这个repo，然后使用文件协议来摄取源代码（最安全，但是使用起来不方便，没尝试过文件导入，比较麻烦）</li></ol><p>常用的方式就是1和2，先在Cargo.toml添加rust依赖，再通过npm/pnpm等安装js绑定， 但是由于国内安装包要通过github，以安装 store 为例子, 有以下解决方案：</p><h3 id="_1-无魔法-不用github-action" tabindex="-1">1. 无魔法，不用github-action <a class="header-anchor" href="#_1-无魔法-不用github-action" aria-label="Permalink to &quot;1. 无魔法，不用github-action&quot;">​</a></h3><p><strong>cargo:</strong> 随便找个能拉git的镜像网站，这里用的 <code>hub.fgit.ml</code><code>Cargo.toml</code>:</p><div class="language-toml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">[</span><span style="color:#61AFEF;">dependencies</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#E06C75;">tauri-plugin-store</span><span style="color:#ABB2BF;"> = { </span><span style="color:#E06C75;">git</span><span style="color:#ABB2BF;"> = </span><span style="color:#98C379;">&quot;https://hub.fgit.ml/tauri-apps/plugins-workspace&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">branch</span><span style="color:#ABB2BF;"> = </span><span style="color:#98C379;">&quot;dev&quot;</span><span style="color:#ABB2BF;"> }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><code>pnpm</code>: 由于直接gitee导入仓库，远程导入github的plugin地址到你的gitee仓库中（或者搜别人拉取的）</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">pnpm</span><span style="color:#98C379;"> add</span><span style="color:#98C379;"> git+https://gitee.com/你的仓库/tauri-plugin-store</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_2-有魔法" tabindex="-1">2. 有魔法 <a class="header-anchor" href="#_2-有魔法" aria-label="Permalink to &quot;2. 有魔法&quot;">​</a></h3><p>如果需要在github-action中进行自动构建那么： <code>git+https://gitee.com/...</code> 这种npm包在github-action中会访问不了报错， 需要将其换成原始的即可：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">pnpm</span><span style="color:#98C379;"> add</span><span style="color:#98C379;"> https://github.com/tauri-apps/tauri-plugin-store</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>本地安装连接不上，需要走代理（用<strong>管理员</strong>打开cmd）：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#56B6C2;">set</span><span style="color:#98C379;"> http_proxy=http://127.0.0.1:XXXX</span><span style="color:#ABB2BF;"> &amp; </span><span style="color:#56B6C2;">set</span><span style="color:#98C379;"> https_proxy=http://127.0.0.1:XXXX</span></span>
<span class="line"><span style="color:#61AFEF;">pnpm</span><span style="color:#98C379;"> add</span><span style="color:#98C379;"> https://github.com/tauri-apps/tauri-plugin-store</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>`,19)]))}const g=a(p,[["render",n]]);export{h as __pageData,g as default};
