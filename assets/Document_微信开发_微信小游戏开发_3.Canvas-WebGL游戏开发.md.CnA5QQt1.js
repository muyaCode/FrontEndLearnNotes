import{_ as s,c as e,o as n,ah as l}from"./chunks/framework.DqD713j2.js";const r="/FrontEndLearnNotes/assets/image-20240227204302755.D7WnL8bU.png",t="/FrontEndLearnNotes/assets/image-20240227204837373.B3J022Nw.png",p="/FrontEndLearnNotes/assets/image-20240227205156770.o5JN7H-y.png",y=JSON.parse('{"title":"Canvas-WebGL游戏开发","description":"","frontmatter":{},"headers":[],"relativePath":"Document/微信开发/微信小游戏开发/3.Canvas-WebGL游戏开发.md","filePath":"Document/微信开发/微信小游戏开发/3.Canvas-WebGL游戏开发.md","lastUpdated":1750954157000}'),o={name:"Document/微信开发/微信小游戏开发/3.Canvas-WebGL游戏开发.md"};function c(i,a,d,b,h,m){return n(),e("div",null,a[0]||(a[0]=[l('<h1 id="canvas-webgl游戏开发" tabindex="-1">Canvas-WebGL游戏开发 <a class="header-anchor" href="#canvas-webgl游戏开发" aria-label="Permalink to &quot;Canvas-WebGL游戏开发&quot;">​</a></h1><h2 id="如何对gpu进行编程" tabindex="-1">如何对GPU进行编程 <a class="header-anchor" href="#如何对gpu进行编程" aria-label="Permalink to &quot;如何对GPU进行编程&quot;">​</a></h2><p>OPENGL--The Industry Standard for High Performance Graphics 不同显卡对于OPENGL的支持程度不同</p><p><img src="'+r+`" alt="image-20240227204302755"></p><table tabindex="0"><thead><tr><th style="text-align:center;">类型</th><th>API</th></tr></thead><tbody><tr><td style="text-align:center;">WebGL</td><td>glTranslate、glRotatef</td></tr><tr><td style="text-align:center;">GLSL</td><td>顶点着色器——gl_Position<br>片元着色器——gl_FragColor</td></tr></tbody></table><p>代码示例</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 顶点着色器</span></span>
<span class="line"><span style="color:#E06C75;">varying</span><span style="color:#E06C75;"> vec4</span><span style="color:#E06C75;"> v_Color</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> main</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#ABB2BF;">    ...</span></span>
<span class="line"><span style="color:#E06C75;">    v_Color</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> vec4</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1.</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1.</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1.</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 片元着色器</span></span>
<span class="line"><span style="color:#E06C75;">varying</span><span style="color:#E06C75;"> vec4</span><span style="color:#E06C75;"> v_Color</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> main</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#ABB2BF;">    ...</span></span>
<span class="line"><span style="color:#E06C75;">    gl_FragColor</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> v_Color</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#ABB2BF;">...</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="webgl渲染管线" tabindex="-1">webGL渲染管线 <a class="header-anchor" href="#webgl渲染管线" aria-label="Permalink to &quot;webGL渲染管线&quot;">​</a></h3><p><img src="`+t+'" alt="image-20240227204837373"></p><p>例子2</p><p><img src="'+p+'" alt="image-20240227205156770"></p><h2 id="webgl管线实战" tabindex="-1">WebGL管线实战 <a class="header-anchor" href="#webgl管线实战" aria-label="Permalink to &quot;WebGL管线实战&quot;">​</a></h2><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/WebGL_API" target="_blank" rel="noreferrer">WebGL 是一种 JavaScript API，可以在浏览器中渲染高性能的交互式 3D 和 2D 图形，而无需使用插件。</a></p><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/WebGL_API/Tutorial/Getting_started_with_WebGL" target="_blank" rel="noreferrer">WebGL 基于 OpenGL ES 2.0，使用 HTML 的 <code>canvas</code> 元素作为绘图容器</a>。</p><p>要使用 WebGL 进行 3D 渲染，您需要以下几个步骤：</p><ul><li>获取 <code>canvas</code> 元素的引用，并调用 <code>getContext(&quot;webgl&quot;)</code> 方法来获取 WebGL 上下文对象。</li><li>编写顶点着色器和片段着色器，使用 GLSL 语言描述图形的顶点属性和颜色输出。</li><li>创建着色器程序对象，并将着色器附加到它上面，然后链接并使用它。</li><li>创建缓冲区对象，并将顶点数据和索引数据传输到 GPU 中。</li><li>指定着色器程序中的顶点属性变量和缓冲区对象之间的对应关系。</li><li>设置视图矩阵、投影矩阵和模型矩阵，以控制图形的视角、大小和位置。</li><li>设置清除颜色和深度测试等渲染状态。</li><li>调用 <code>drawElements()</code> 或 <code>drawArrays()</code> 方法来绘制图形。</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="three-js" tabindex="-1">Three.js <a class="header-anchor" href="#three-js" aria-label="Permalink to &quot;Three.js&quot;">​</a></h2><p>Three.js 是一个基于 WebGL 的 JavaScript 库，它可以让您在浏览器中轻松创建和显示 3D 场景。</p><p>Three.js 提供了一些高级的抽象和组件，如几何体，材质，灯光，相机，动画，后期处理等，让您无需编写复杂的底层代码，就可以快速构建出各种精彩的 3D 作品：<a href="https://threejs-journey.com/%E3%80%82" target="_blank" rel="noreferrer">https://threejs-journey.com/。</a></p><p>关于 Three.js 的教程和示例，您可以参考以下链接：</p><ul><li><a href="https://www.npmjs.com/package/three" target="_blank" rel="noreferrer">Three.js 官网</a>：提供了 Three.js 的下载，文档，API，示例，论坛等资源。</li><li><a href="https://threejs-journey.com/" target="_blank" rel="noreferrer">Three.js Journey</a>：一个全面的 Three.js 课程，包含了 72 小时的视频教程，如何使用 Three.js 创建 3D 场景。从基础知识，经典技巧，到高级技术，着色器，Blender，React Three Fiber 等，应有尽有。</li></ul>',22)]))}const g=s(o,[["render",c]]);export{y as __pageData,g as default};
