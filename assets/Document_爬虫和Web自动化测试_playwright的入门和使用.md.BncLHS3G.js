import{_ as e,c as r,o as s,ah as n}from"./chunks/framework.DqD713j2.js";const g=JSON.parse('{"title":"playwright 的入门和使用","description":"","frontmatter":{},"headers":[],"relativePath":"Document/爬虫和Web自动化测试/playwright的入门和使用.md","filePath":"Document/爬虫和Web自动化测试/playwright的入门和使用.md","lastUpdated":1750954157000}'),l={name:"Document/爬虫和Web自动化测试/playwright的入门和使用.md"};function t(o,a,i,p,h,c){return s(),r("div",null,a[0]||(a[0]=[n(`<h1 id="playwright-的入门和使用" tabindex="-1">playwright 的入门和使用 <a class="header-anchor" href="#playwright-的入门和使用" aria-label="Permalink to &quot;playwright 的入门和使用&quot;">​</a></h1><p>python 自动化：<a href="https://blog.csdn.net/m0_52409770/article/details/124673714" target="_blank" rel="noreferrer">「自动化测试」新一代 Web 前端自动化测试框架 —— playwright 快速上手，轻松带入项目_playwright 测试框架_wincheshe 的博客-CSDN 博客</a></p><h2 id="playwright简介" tabindex="-1">playwright简介 <a class="header-anchor" href="#playwright简介" aria-label="Permalink to &quot;playwright简介&quot;">​</a></h2><p><strong>Playwright</strong> 是由微软公司于 2020 年初发布的新一代自动化测试工具。相较于目前最常用的 <strong>Selenium</strong>，它仅用一个 API 即可自动执行 <strong>Chromium</strong>、<strong>Firefox</strong>、<strong>WebKit</strong> 等主流浏览器的自动化操作。作为针对 <strong>Python</strong> 语言纯自动化的工具，在回归测试中能更快地实现自动化。</p><h3 id="playwright-的优势包括" tabindex="-1">Playwright 的优势包括： <a class="header-anchor" href="#playwright-的优势包括" aria-label="Permalink to &quot;Playwright 的优势包括：&quot;">​</a></h3><ol><li><strong>不需要安装各种 Driver</strong>：与 <strong>Selenium</strong> 需要通过 WebDriver 操作浏览器不同，<strong>Playwright</strong> 通过开发者工具与浏览器交互，安装简洁，不需要安装各种 Driver。</li><li><strong>跨语言支持</strong>：<strong>Playwright</strong> 几乎支持所有语言，且不依赖于各种 Driver，通过调用内置浏览器启动速度更快。</li><li><strong>基于 Websocket 的通讯</strong>：Playwright 基于 Websocket 可自动获取浏览器实际情况。</li><li><strong>自动等待</strong>：<strong>Playwright</strong> 支持自动等待元素出现和等待事件发生。</li><li><strong>网络拦截（Mock 接口）</strong>：可以拦截网络请求，方便测试。</li></ol><h3 id="局限性" tabindex="-1"><strong>局限性</strong>： <a class="header-anchor" href="#局限性" aria-label="Permalink to &quot;**局限性**：&quot;">​</a></h3><ol><li>不支持旧版 Microsoft Edge 或 IE11。</li><li>需要 SSL 证书的网站可能无法录制。</li><li>移动端测试是通过桌面浏览器模拟，无法控制真机</li></ol><p>如果你想要快速上手 <strong>Playwright</strong>，可以尝试录制自己的自动化脚本，或者直接使用 <strong>Playwright</strong> 的 API 进行定制化编写。</p><h3 id="相比于-selenium-它有一些独特的优势" tabindex="-1">相比于 Selenium，它有一些独特的优势： <a class="header-anchor" href="#相比于-selenium-它有一些独特的优势" aria-label="Permalink to &quot;相比于 Selenium，它有一些独特的优势：&quot;">​</a></h3><ol><li><strong>多浏览器和多语言支持</strong>：Playwright适用于多种浏览器和多种编程语言，包括 Python、Java、Node.js 和 .NET。这对于准备切换到 Playwright 的用户非常友好。</li><li><strong>元素定位方式</strong>：Playwright支持基于 CSS、XPath 和文本等常用的元素定位方式，可以大幅减少编写代码的时间，并保证代码的稳定性。</li><li><strong>操作浏览器内核</strong>：Playwright使用 API 方式操作浏览器内核，速度快且稳定。它还可以与浏览器双向沟通，元素操作可以在元素准备就绪的情况下进行。</li><li><strong>支持 UI 和非 UI 运行</strong>：Playwright支持在 UI 和非 UI 模式下运行，节省了调试和运行时间。</li></ol><p>总之，Playwright为现代 Web 应用提供了可靠的端到端测试能力，是一个值得关注的自动化工具。如果你之前使用过 Selenium，你甚至可以同时使用 Selenium 和 Playwright，以充分利用它们的优势。</p><h2 id="基于-nodejs-使用-playwright-的教程" tabindex="-1">基于 NodeJS 使用 Playwright 的教程： <a class="header-anchor" href="#基于-nodejs-使用-playwright-的教程" aria-label="Permalink to &quot;基于 NodeJS 使用 Playwright 的教程：&quot;">​</a></h2><ul><li><a href="https://blog.csdn.net/Marlene_Jiang/article/details/121199434" target="_blank" rel="noreferrer">Playwright-Node.js 自动化办公_Marlene_Jiang 的博客-CSDN 博客_nodejs playwright</a></li><li><a href="https://jeremyxu2010.github.io/2020/11/web%E6%B5%8F%E8%A7%88%E5%99%A8%E8%87%AA%E5%8A%A8%E5%8C%96%E4%B9%8Bplaywright/" target="_blank" rel="noreferrer">web 浏览器自动化之 playwright - jeremy 的技术点滴 (jeremyxu2010.github.io)</a></li><li><a href="https://blog.csdn.net/u013014254/article/details/124096804" target="_blank" rel="noreferrer">Nodejs Playwright 自动识别验证码登陆 B 站_地域男孩的博客-CSDN 博客_nodejs 验证码识别</a></li><li><a href="https://www.freesion.com/article/16461562313/" target="_blank" rel="noreferrer">使用 playwright 在 Nodejs 环境下自动控制浏览器！ - 灰信网（软件开发博客聚合） (freesion.com)</a></li></ul><hr><h2 id="相关网址" tabindex="-1">相关网址 <a class="header-anchor" href="#相关网址" aria-label="Permalink to &quot;相关网址&quot;">​</a></h2><p>官网：<a href="https://playwright.dev/" target="_blank" rel="noreferrer">https://playwright.dev/</a></p><p>文档：<a href="https://playwright.dev/docs/intro" target="_blank" rel="noreferrer">https://playwright.dev/docs/intro</a></p><p>命令行：<a href="https://playwright.dev/docs/cli#preserve-authenticated-state" target="_blank" rel="noreferrer">Command line tools | Playwright</a></p><p>程序调试(代码调试)：<a href="https://playwright.dev/docs/debug-selectors" target="_blank" rel="noreferrer">Debugging Selectors | Playwright</a></p><p>UI 可视化工具调试：<a href="https://playwright.dev/docs/debug" target="_blank" rel="noreferrer">Debugging Tests | Playwright</a></p><p>测试代码生成器：<a href="https://playwright.dev/docs/codegen" target="_blank" rel="noreferrer">Test Generator | Playwright</a></p><p>跟踪查看器：<a href="https://playwright.dev/docs/trace-viewer" target="_blank" rel="noreferrer">Trace Viewer | Playwright</a></p><h2 id="使用步骤" tabindex="-1">使用步骤 <a class="header-anchor" href="#使用步骤" aria-label="Permalink to &quot;使用步骤&quot;">​</a></h2><h3 id="_1-安装" tabindex="-1">1.安装： <a class="header-anchor" href="#_1-安装" aria-label="Permalink to &quot;1.安装：&quot;">​</a></h3><p>安装 Playwright 依赖库：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># npm</span></span>
<span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> install</span><span style="color:#98C379;"> playwright</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># python</span></span>
<span class="line"><span style="color:#61AFEF;">pip</span><span style="color:#98C379;"> install</span><span style="color:#98C379;"> playwright</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>安装 Chromium、Firefox、WebKit 等浏览器的驱动文件：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># npm</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># python</span></span>
<span class="line"><span style="color:#61AFEF;">python</span><span style="color:#D19A66;"> -m</span><span style="color:#98C379;"> playwright</span><span style="color:#98C379;"> install</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="_2-自动录制" tabindex="-1">2.自动录制： <a class="header-anchor" href="#_2-自动录制" aria-label="Permalink to &quot;2.自动录制：&quot;">​</a></h3><p>从起始页开始录制：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># npm</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># python</span></span>
<span class="line"><span style="color:#61AFEF;">python</span><span style="color:#D19A66;"> -m</span><span style="color:#98C379;"> playwright</span><span style="color:#98C379;"> codegen</span><span style="color:#ABB2BF;"> [URL] --target python -o </span><span style="color:#98C379;">&#39;my.py&#39;</span><span style="color:#ABB2BF;"> -b chromium</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="_3-定制化编写" tabindex="-1">3.定制化编写： <a class="header-anchor" href="#_3-定制化编写" aria-label="Permalink to &quot;3.定制化编写：&quot;">​</a></h3><ul><li>元素定位：使用选择器规则如 CSS、XPath、Text。</li><li>元素操作：下拉选择框、文件上传、鼠标点击、截屏等。</li></ul><h3 id="_4-网络拦截-mock-接口" tabindex="-1">4.网络拦截（Mock 接口）： <a class="header-anchor" href="#_4-网络拦截-mock-接口" aria-label="Permalink to &quot;4.网络拦截（Mock 接口）：&quot;">​</a></h3><p>可以拦截网络请求并自定义处理。</p><h3 id="_5-同步执行" tabindex="-1">5.同步执行： <a class="header-anchor" href="#_5-同步执行" aria-label="Permalink to &quot;5.同步执行：&quot;">​</a></h3><p>依次打开多个浏览器，访问网页并截图。</p><h3 id="_6-异步执行" tabindex="-1">6.异步执行： <a class="header-anchor" href="#_6-异步执行" aria-label="Permalink to &quot;6.异步执行：&quot;">​</a></h3><p>同时进行多个浏览器操作。</p><h2 id="调试方式" tabindex="-1">调试方式 <a class="header-anchor" href="#调试方式" aria-label="Permalink to &quot;调试方式&quot;">​</a></h2><h4 id="代码断点调试" tabindex="-1">代码断点调试 <a class="header-anchor" href="#代码断点调试" aria-label="Permalink to &quot;代码断点调试&quot;">​</a></h4><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">await</span><span style="color:#E5C07B;"> page</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">pause</span><span style="color:#ABB2BF;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>运行之后会在那一步弹出 UI 工具：Playwright Inspector 窗口</p><p>在这个窗口里面可以录制操作，或者定位单个元素</p><h2 id="页面的调试" tabindex="-1">页面的调试 <a class="header-anchor" href="#页面的调试" aria-label="Permalink to &quot;页面的调试&quot;">​</a></h2><p>文档：</p><p>F12 或右键-检查：打开页面的调试工具---【Console】选项：</p><p><code>$(&#39;name=&quot;username&quot;&#39;);</code> 或 <code>$x(&#39;.//*[name=&quot;username&quot;]&#39;);</code> 或<code>$$(&#39;.//*[name=&quot;username&quot;]&#39;);</code> 选择定位元素</p><p>调试选择器文档：<a href="https://playwright.dev/docs/debug-selectors" target="_blank" rel="noreferrer">Debugging Selectors | Playwright</a></p><p><code>playwright.$(&#39;.auth-form &gt;&gt; text=Log in&#39;);</code></p><hr><h2 id="开发技巧" tabindex="-1">开发技巧 <a class="header-anchor" href="#开发技巧" aria-label="Permalink to &quot;开发技巧&quot;">​</a></h2><p>判断页面是否有该元素：使用$，使用 locator 会等待定位元素，如果定位不到，便超时响应</p>`,54)]))}const b=e(l,[["render",t]]);export{g as __pageData,b as default};
