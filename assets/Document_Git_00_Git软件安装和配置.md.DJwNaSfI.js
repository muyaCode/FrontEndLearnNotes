import{_ as n,c as a,o as l,ah as e}from"./chunks/framework.DqD713j2.js";const p="/FrontEndLearnNotes/assets/%E5%AF%86%E5%8C%99%E7%94%9F%E6%88%90%E6%96%87%E4%BB%B6%E5%A4%B9.DB0vkpgn.jpg",i="/FrontEndLearnNotes/assets/github%E6%B7%BB%E5%8A%A0%E5%AF%86%E9%92%A5.DNcNputq.jpg",m=JSON.parse('{"title":"Git软件安装和配置","description":"","frontmatter":{},"headers":[],"relativePath":"Document/Git/00_Git软件安装和配置.md","filePath":"Document/Git/00_Git软件安装和配置.md","lastUpdated":1750954157000}'),t={name:"Document/Git/00_Git软件安装和配置.md"};function r(o,s,c,b,d,u){return l(),a("div",null,s[0]||(s[0]=[e(`<h1 id="git软件安装和配置" tabindex="-1">Git软件安装和配置 <a class="header-anchor" href="#git软件安装和配置" aria-label="Permalink to &quot;Git软件安装和配置&quot;">​</a></h1><p><strong>Git软件下载</strong>：<a href="https://git-scm.com/downloads" target="_blank" rel="noreferrer">Git - Downloads (git-scm.com)</a></p><h2 id="一、安装git软件" tabindex="-1">一、安装Git软件 <a class="header-anchor" href="#一、安装git软件" aria-label="Permalink to &quot;一、安装Git软件&quot;">​</a></h2><h2 id="二、下载安装完git软件后" tabindex="-1">二、下载安装完Git软件后 <a class="header-anchor" href="#二、下载安装完git软件后" aria-label="Permalink to &quot;二、下载安装完Git软件后&quot;">​</a></h2><p>是否安装成功，可以使用查看git版本命令</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">git</span><span style="color:#D19A66;"> --version</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="三、桌面右键菜单git功能" tabindex="-1">三、桌面右键菜单Git功能 <a class="header-anchor" href="#三、桌面右键菜单git功能" aria-label="Permalink to &quot;三、桌面右键菜单Git功能&quot;">​</a></h2><p><strong>Git GUI</strong>：图形界面的Git，不建议初学者使用，尽量先熟悉常用命令</p><p><strong>Git Bash</strong>：Unix与Linux风格的命令行，使用最多，推荐最多</p><h3 id="git-bash命令-基本和shell命令一样" tabindex="-1">Git Bash命令(基本和shell命令一样) <a class="header-anchor" href="#git-bash命令-基本和shell命令一样" aria-label="Permalink to &quot;Git Bash命令(基本和shell命令一样)&quot;">​</a></h3><h4 id="基本文件操作命令" tabindex="-1">基本文件操作命令 <a class="header-anchor" href="#基本文件操作命令" aria-label="Permalink to &quot;基本文件操作命令&quot;">​</a></h4><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 改变目录</span></span>
<span class="line"><span style="color:#56B6C2;">cd</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 回退到上一个目录，直接cd进入默认目录</span></span>
<span class="line"><span style="color:#56B6C2;">cd</span><span style="color:#98C379;"> ..</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 回到默认路径下</span></span>
<span class="line"><span style="color:#56B6C2;">cd</span><span style="color:#98C379;"> ~</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># tab键：补全文件夹名称</span></span>
<span class="line"><span style="color:#56B6C2;">cd</span><span style="color:#98C379;"> Deskt</span><span style="color:#98C379;"> +</span><span style="color:#98C379;"> tab键</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 显示当前所在的目录路径</span></span>
<span class="line"><span style="color:#56B6C2;">pwd</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 都是列出当前目录中的所有文件，只不过ll(两个ll)列出的内容更为详细</span></span>
<span class="line"><span style="color:#61AFEF;">ls(ll</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 显示隐藏文件</span></span>
<span class="line"><span style="color:#61AFEF;">ls</span><span style="color:#D19A66;"> -la</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 删除一个文件, rm index.js 就会把index.js文件删除</span></span>
<span class="line"><span style="color:#61AFEF;">rm</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 新建一个文件 如 touch index.js 就会在当前目录下新建一个index.js文件</span></span>
<span class="line"><span style="color:#61AFEF;">touch</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 新建一个目录，就是新建一个文件夹</span></span>
<span class="line"><span style="color:#61AFEF;">mkdir</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 删除一个文件夹, rm -r src 删除src目录， 好像不能用通配符</span></span>
<span class="line"><span style="color:#61AFEF;">rm</span><span style="color:#D19A66;"> -r</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 移动文件, mv index.html src index.html 是我们要移动的文件, src 是目标文件夹,当然, 这样写,必须保证文件和目标文件夹在同一目录下</span></span>
<span class="line"><span style="color:#61AFEF;">mv</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 重新初始化终端/清屏</span></span>
<span class="line"><span style="color:#61AFEF;">reset</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 清屏</span></span>
<span class="line"><span style="color:#61AFEF;">clear</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 查看命令历史</span></span>
<span class="line"><span style="color:#56B6C2;">history</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 帮助</span></span>
<span class="line"><span style="color:#61AFEF;">help</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 退出</span></span>
<span class="line"><span style="color:#56B6C2;">exit</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br></div></div><h2 id="四、初始化git" tabindex="-1">四、初始化Git <a class="header-anchor" href="#四、初始化git" aria-label="Permalink to &quot;四、初始化Git&quot;">​</a></h2><h3 id="_1、配置用户" tabindex="-1">1、配置用户 <a class="header-anchor" href="#_1、配置用户" aria-label="Permalink to &quot;1、配置用户&quot;">​</a></h3><p>安装号Git后，若没有配置git的账户/邮箱和密码，项目代码提交时，会提示配置用户：初始化用户名和邮箱命令</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> config</span><span style="color:#D19A66;"> --global</span><span style="color:#98C379;"> user.name</span><span style="color:#98C379;"> &quot;用户名&quot;</span><span style="color:#7F848E;font-style:italic;"> # user.name是你的git账号用户名</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> config</span><span style="color:#D19A66;"> --global</span><span style="color:#98C379;"> user.email</span><span style="color:#98C379;"> &quot;邮箱地址&quot;</span><span style="color:#7F848E;font-style:italic;"> # user.email是你的git邮箱</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 显示所有配置列表</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> config</span><span style="color:#D19A66;"> -list</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">#查看全部config</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> config</span><span style="color:#D19A66;"> -l</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">#查看系统config</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> config</span><span style="color:#D19A66;"> --system</span><span style="color:#D19A66;"> --list</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">#查看当前用户全局config</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> config</span><span style="color:#D19A66;"> --global</span><span style="color:#D19A66;"> --list</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 获取配置的用户名</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> config</span><span style="color:#98C379;"> user.name</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 显示命令帮助</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> help</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h3 id="_2、添加ssh密钥" tabindex="-1">2、添加SSH密钥 <a class="header-anchor" href="#_2、添加ssh密钥" aria-label="Permalink to &quot;2、添加SSH密钥&quot;">​</a></h3><h4 id="_2-1、git-bash-下-输入-ssh-keygen" tabindex="-1">2.1、git bash 下 输入 ssh-keygen <a class="header-anchor" href="#_2-1、git-bash-下-输入-ssh-keygen" aria-label="Permalink to &quot;2.1、git bash 下 输入 ssh-keygen&quot;">​</a></h4><p>首先 ssh-keygen 会确认 密钥的存储位置（默认是 .ssh/id_rsa），然后它会要求你输入两次密钥口令。 如果你不想在使用密钥时输入口令，将其留空即可。</p><p>然而，如果你使用了密码，那么请确保添加了 -o 选项，它会以比默认格式更能抗暴力破解的格式保存私钥。 你也可以用 ssh-agent 工具来避免每次都要输入密码。</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">ssh-keygen</span><span style="color:#D19A66;"> -t</span><span style="color:#98C379;"> rsa</span><span style="color:#D19A66;"> -C</span><span style="color:#98C379;"> &quot;邮箱名称&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>生成后的文件，保存在 C:/Users/电脑当前用户名/.ssh文件夹下；</p><p><img src="`+p+'" alt="密匙生成文件夹"></p><h4 id="_2-2、查看密钥" tabindex="-1">2.2、查看密钥 <a class="header-anchor" href="#_2-2、查看密钥" aria-label="Permalink to &quot;2.2、查看密钥&quot;">​</a></h4><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#56B6C2;">cd</span><span style="color:#98C379;">  ~/.ssh</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="_2-3、输出密钥" tabindex="-1">2.3、输出密钥 <a class="header-anchor" href="#_2-3、输出密钥" aria-label="Permalink to &quot;2.3、输出密钥&quot;">​</a></h4><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">cat</span><span style="color:#98C379;"> id_rsa.pub</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="_2-4、复制密钥" tabindex="-1">2.4、复制密钥 <a class="header-anchor" href="#_2-4、复制密钥" aria-label="Permalink to &quot;2.4、复制密钥&quot;">​</a></h4><p>打开给gitlab，点击自己头像<code>Settings</code>选项 =&gt;左边选项：<code>SSH and GPG keys</code> =&gt; 在SSH key创建中添加密钥</p><p>用文本工具打开之前生成的id_rsa.pub文件，把内容拷贝到key下面的输入框，并为这个key定义一个名称（通常用来区分不同主机），然后保存；</p><p><img src="'+i+'" alt="github添加密钥"></p><h2 id="五、初始化项目" tabindex="-1">五、初始化项目 <a class="header-anchor" href="#五、初始化项目" aria-label="Permalink to &quot;五、初始化项目&quot;">​</a></h2><p>1、选择一个合适的地方，创建一个项目目录：</p><p>2、当前项目目录下，使用命令窗口，输入 <code>git init</code> 命令，对项目初始化一个Git仓库。</p><p>远程创建仓库，把本地项目添加到远程Git仓库，分两步：</p><ul><li>使用命令 <code>git add [file文件]</code>，注意，可反复多次使用，添加多个文件；添加所有文件暂存：<code>git add .</code></li><li>提交并输入描述：使用命令 <code>git commit -m ‘message’</code>，完成。</li></ul><p>3、或者 <code>git clone</code> 命令克隆项目看看是否成功配置和 ssh key</p>',37)]))}const h=n(t,[["render",r]]);export{m as __pageData,h as default};
