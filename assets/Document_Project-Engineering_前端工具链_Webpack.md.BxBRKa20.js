import{_ as n,c as a,o as l,ah as p}from"./chunks/framework.DqD713j2.js";const b=JSON.parse('{"title":"webpack","description":"","frontmatter":{},"headers":[],"relativePath":"Document/Project-Engineering/前端工具链/Webpack.md","filePath":"Document/Project-Engineering/前端工具链/Webpack.md","lastUpdated":1750954157000}'),e={name:"Document/Project-Engineering/前端工具链/Webpack.md"};function o(r,s,c,t,i,B){return l(),a("div",null,s[0]||(s[0]=[p(`<h1 id="webpack" tabindex="-1">webpack <a class="header-anchor" href="#webpack" aria-label="Permalink to &quot;webpack&quot;">​</a></h1><p><a href="https://mp.weixin.qq.com/s/511qRlsnDlaK_9UW0N8PlQ" target="_blank" rel="noreferrer">前端项目打包构建演进史 (qq.com)</a></p><p>官网：<a href="https://webpack.docschina.org/" target="_blank" rel="noreferrer">webpack (docschina.org)</a></p><p>loader 文档：<a href="https://webpack.docschina.org/loaders#root" target="_blank" rel="noreferrer">webpack 中文文档 (docschina.org)</a></p><p>配置文档：<a href="https://webpack.docschina.org/concepts/" target="_blank" rel="noreferrer">概念 | webpack 中文文档 (docschina.org)</a></p><hr><p>webpack 是一个打包模块化 JS(静态模块打包工具)的工具，在 webpack 里一切文件都是模块，通过 loader 转换文件，通过 plugin 注入钩子，最后输出由多个模块组合成的文件。webpack 专注于构建模块化项目。</p><p>打包器(构建工具)会将所有依赖关系按照规则合并为单个 JS 文件，一次加载； 最终，生成浏览器能够使用的静态资源</p><h2 id="webpack-的安装" tabindex="-1">webpack 的安装 <a class="header-anchor" href="#webpack-的安装" aria-label="Permalink to &quot;webpack 的安装&quot;">​</a></h2><p>在 Node 环境下：</p><p>1.全局安装，需要两个：webpack 核心模块、webpack-cli 命令行工具；</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> i</span><span style="color:#98C379;"> webpack</span><span style="color:#98C379;"> webpack-cli</span><span style="color:#D19A66;"> -g</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>2.在本地的项目中安装 webpack，--save-dev 可以简写为-D；</p><p>本地安装，就只能在本项目中使用 webpack 命令，并且需要 npx 命令;</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> i</span><span style="color:#98C379;"> webpack</span><span style="color:#98C379;"> webpack-cli</span><span style="color:#D19A66;"> -D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>PS：官方推荐使用本地安装，这样如果有多版本的话，不会导致冲突。</p><h2 id="webpack-的配置和使用" tabindex="-1">webpack 的配置和使用 <a class="header-anchor" href="#webpack-的配置和使用" aria-label="Permalink to &quot;webpack 的配置和使用&quot;">​</a></h2><p>官网配置文档：<a href="https://webpack.docschina.org/concepts/" target="_blank" rel="noreferrer">概念 | webpack 中文文档 (docschina.org)</a></p><h3 id="webpack-五个核心概念" tabindex="-1">webpack 五个核心概念 <a class="header-anchor" href="#webpack-五个核心概念" aria-label="Permalink to &quot;webpack 五个核心概念&quot;">​</a></h3><p><strong>1.Entry</strong></p><p>入口(Entry)指示 webpack 以哪个文件为入口起点开始打包，分析构建内部依赖图。</p><p><strong>2.Output</strong></p><p>输出(Output)指示 webpack 打包后的资源 bundles 输出到哪里去，以及如何命名。</p><p><strong>3.Loader</strong></p><p>Loader 让 webpack 能 够 去 处 理 那 些 非 JavaScript 文 件 (webpack 自 身 只 理 解</p><p>JavaScript)</p><p><strong>4.Plugins</strong></p><p>插件(Plugins)可以用于执行范围更广的任务。插件的范围包括，从打包优化和压缩，</p><p>一直到重新定义环境中的变量等。</p><p><strong>5.Mode</strong></p><p>模式(Mode)指示 webpack 使用相应模式的配置。</p><table tabindex="0"><thead><tr><th>选项</th><th>描述</th><th>特点</th></tr></thead><tbody><tr><td>development</td><td>会将 DefinePlugin 中 process.env.NODE_ENV 的值设置 为 development。启用 NamedChunksPlugin 和 NamedModulesPlugin。</td><td>能让代码本地调试 运行的环境</td></tr><tr><td>production</td><td>会将 DefinePlugin 中 process.env.NODE_ENV 的值设置 为 production。启用 FlagDependencyUsagePlugin, FlagIncludedChunksPlugin, ModuleConcatenationPlugin, NoEmitOnErrorsPlugin, OccurrenceOrderPlugin, SideEffectsFlagPlugin 和 TerserPlugin。</td><td>能让代码优化上线 运行的环境</td></tr></tbody></table><h3 id="演示需求和配置" tabindex="-1">演示需求和配置 <a class="header-anchor" href="#演示需求和配置" aria-label="Permalink to &quot;演示需求和配置&quot;">​</a></h3><p>配置文档：<a href="https://webpack.docschina.org/configuration/#use-different-configuration-file" target="_blank" rel="noreferrer">配置 | webpack 中文文档 (docschina.org)</a></p><h4 id="_1-初始化配置" tabindex="-1">(1) 初始化配置 <a class="header-anchor" href="#_1-初始化配置" aria-label="Permalink to &quot;(1) 初始化配置&quot;">​</a></h4><h5 id="_1-初始化-package-json" tabindex="-1">1.初始化 package.json <a class="header-anchor" href="#_1-初始化-package-json" aria-label="Permalink to &quot;1.初始化 package.json&quot;">​</a></h5><p>项目根目录终端入命令:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> init</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h5 id="_2-下载并安装-webpack" tabindex="-1">2.下载并安装 webpack <a class="header-anchor" href="#_2-下载并安装-webpack" aria-label="Permalink to &quot;2.下载并安装 webpack&quot;">​</a></h5><p>项目根目录终端入命令:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> install</span><span style="color:#98C379;"> webpack</span><span style="color:#98C379;"> webpack-cli</span><span style="color:#D19A66;"> -g</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> install</span><span style="color:#98C379;"> webpack</span><span style="color:#98C379;"> webpack-cli</span><span style="color:#D19A66;"> -D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="_2-webpack-编译打包应用" tabindex="-1">(2) webpack 编译打包应用 <a class="header-anchor" href="#_2-webpack-编译打包应用" aria-label="Permalink to &quot;(2) webpack 编译打包应用&quot;">​</a></h4><h5 id="_1-创建文件" tabindex="-1">1.创建文件 <a class="header-anchor" href="#_1-创建文件" aria-label="Permalink to &quot;1.创建文件&quot;">​</a></h5><h5 id="_2-运行指令" tabindex="-1">2.运行指令 <a class="header-anchor" href="#_2-运行指令" aria-label="Permalink to &quot;2.运行指令&quot;">​</a></h5><p>开发环境指令：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">webpack</span><span style="color:#98C379;"> src/js/index.js</span><span style="color:#D19A66;"> -o</span><span style="color:#98C379;"> build/js/built.js</span><span style="color:#D19A66;"> --mode=development</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>功能：webpack 能够编译打包 js 和 json 文件，并且能将 es6 的模块化语法转换成</p><p>浏览器能识别的语法。</p><p>生产环境指令：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">webpack</span><span style="color:#98C379;"> src/js/index.js</span><span style="color:#D19A66;"> -o</span><span style="color:#98C379;"> build/js/built.js</span><span style="color:#D19A66;"> --mode=production</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>功能：在开发配置功能上多一个功能，压缩代码。</p><blockquote><p>这些指令可以在 <code>pacakage.json </code>的&quot;script&quot;里配置好方便执行</p></blockquote><h5 id="_3-结论" tabindex="-1">3.结论 <a class="header-anchor" href="#_3-结论" aria-label="Permalink to &quot;3.结论&quot;">​</a></h5><p>webpack 能够编译打包 js 和 json 文件。</p><p>能将 es6 的模块化语法转换成浏览器能识别的语法。</p><p>能压缩代码。</p><h5 id="_4-问题" tabindex="-1">4.问题 <a class="header-anchor" href="#_4-问题" aria-label="Permalink to &quot;4.问题&quot;">​</a></h5><p>不能编译打包 css、img 等文件。</p><p>不能将 js 的 es6 基本语法转化为 es5 以下语法。</p><h4 id="_3-webpack-开发环境的基本配置" tabindex="-1">(3) webpack 开发环境的基本配置 <a class="header-anchor" href="#_3-webpack-开发环境的基本配置" aria-label="Permalink to &quot;(3) webpack 开发环境的基本配置&quot;">​</a></h4><p><strong>1</strong> <strong>创建配置文件</strong></p><p>1.创建文件 webpack.config.js</p><p>2.配置内容如下</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">resolve</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;path&quot;</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// node 内置核心模块，用来处理路径问题。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">	entry</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;./src/js/index.js&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 入口文件</span></span>
<span class="line"><span style="color:#E06C75;">	output</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// 输出配置</span></span>
<span class="line"><span style="color:#E06C75;">		filename</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;./built.js&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 输出文件名</span></span>
<span class="line"><span style="color:#E06C75;">		path</span><span style="color:#ABB2BF;">: </span><span style="color:#61AFEF;">resolve</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">__dirname</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;build/js&quot;</span><span style="color:#ABB2BF;">), </span><span style="color:#7F848E;font-style:italic;">// 输出文件路径配置</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#E06C75;">	mode</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;development&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">//开发环境</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>终端运行指令：<code>webpack</code></p><h4 id="一-模块打包" tabindex="-1">一．模块打包 <a class="header-anchor" href="#一-模块打包" aria-label="Permalink to &quot;一．模块打包&quot;">​</a></h4><p>1.我们创建 02 目录，在其创建约定俗成的两个子目录 <code>src</code> 和 <code>dist</code>；</p><p>2.其中：src 表示源文件，dist 表示生成发布的文件；</p><p>3.在 src 中建立两个 js 文件，用 node 环境支持的 CommonJS 规范的模块化；</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// module.js</span></span>
<span class="line"><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#98C379;">  &#39;Mr.Lee&#39;</span></span>
<span class="line"><span style="color:#E06C75;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// index.js</span></span>
<span class="line"><span style="color:#E06C75;">const name = require(</span><span style="color:#98C379;">&#39;./module.js&#39;</span><span style="color:#E06C75;">).name;</span></span>
<span class="line"><span style="color:#E06C75;">console.log(name);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>4.建立 02.html 文件，引入 src 中的 index.js 文件，但浏览器是无法运行的；</p><p>5.此时，我们需要进行打包来解决两个问题：浏览器兼容和导入导出 js 文件的合并；</p><p>6.使用<strong>打包命令</strong>，注意目录的问题，如果在根目录带上子目录路径；</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># -o 表示输出</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># --mode= 值development 表示开发模式，production 表示生产模式，压缩成一行；</span></span>
<span class="line"><span style="color:#61AFEF;">webpack</span><span style="color:#98C379;"> ./02/src/index.js</span><span style="color:#D19A66;"> -o</span><span style="color:#98C379;"> ./02/dist/bundle.js</span><span style="color:#D19A66;"> --mode=development</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>PS：只要打包入口文件即可，依赖的文件会自动合并；</p><h4 id="二-配置文件" tabindex="-1">二．配置文件 <a class="header-anchor" href="#二-配置文件" aria-label="Permalink to &quot;二．配置文件&quot;">​</a></h4><p>打包一次的命令太过于冗长，且特别容易出错，所以要对这些路径参数进行存储；</p><h5 id="package-json-的-node-配置文件" tabindex="-1">package.json 的 Node 配置文件 <a class="header-anchor" href="#package-json-的-node-配置文件" aria-label="Permalink to &quot;package.json 的 Node 配置文件&quot;">​</a></h5><p>1.我们可以创建 package.json 文件，来配置 scripts 属性来部署生成路径；</p><p>生成 package.json 配置文件命令</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> init</span><span style="color:#D19A66;"> -y</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>2.然后在 package.json 配置文件中的 <code>scripts</code> 属性里添加子属性：build，属性值具体如下：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">&quot;build&quot;</span><span style="color:#98C379;"> :</span><span style="color:#98C379;"> &quot;webpack ./02/src/index.js -o ./02/dist/bundle.js --mode=development&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>3.然后使用 npm 命令自动执行这个属性值的路径；</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> run</span><span style="color:#98C379;"> build</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>如果是比较简单的打包，package.json 还行，当参数越发复杂维护将变得困难；</p><h5 id="webpack-config-js-配置文件" tabindex="-1">webpack.config.js 配置文件 <a class="header-anchor" href="#webpack-config-js-配置文件" aria-label="Permalink to &quot;webpack.config.js 配置文件&quot;">​</a></h5><p>1.Webpack 还提供了一个 webpack.config.js 配置文件，解决 package.json 当参数越发复杂维护将变得困难的问题；</p><p>2.由于我们是子目录 01,02 这种，完全可以直接存放子目录中即可；</p><p>3.也就是说，配置文件不一定非要存放在根目录，可以根据自己目录结构进行调整；</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/* </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">webpack 构建时，会自动读取此文件 </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">*/</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//获取当前路径</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> path</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;path&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 入口文件</span></span>
<span class="line"><span style="color:#E06C75;">	entry</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;./src/index.js&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 出口文件</span></span>
<span class="line"><span style="color:#E06C75;">	output</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// 文件名</span></span>
<span class="line"><span style="color:#E06C75;">		filename</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;bundle.js&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// 路径，要绝对路径</span></span>
<span class="line"><span style="color:#E06C75;">		path</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">resolve</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">__dirname</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;./dist&quot;</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 生成模式: &#39;production&#39;: &#39;none&#39; | &#39;development&#39; | &#39;production&#39;</span></span>
<span class="line"><span style="color:#E06C75;">	mode</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;development&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h4 id="三-webpack-config-js-配置文件后的打包命令" tabindex="-1">三.webpack.config.js 配置文件后的打包命令 <a class="header-anchor" href="#三-webpack-config-js-配置文件后的打包命令" aria-label="Permalink to &quot;三.webpack.config.js 配置文件后的打包命令&quot;">​</a></h4><p>PS：在哪个目录，就进入哪个目录，直接执行命名：<code>webpack</code>，即执行打包</p><h3 id="devserver-服务整合" tabindex="-1">DevServer 服务整合 <a class="header-anchor" href="#devserver-服务整合" aria-label="Permalink to &quot;DevServer 服务整合&quot;">​</a></h3><p>文档：<a href="https://webpack.docschina.org/configuration/dev-server/" target="_blank" rel="noreferrer">DevServer | webpack 中文文档 (docschina.org)</a></p><p>将 DevServer 服务工具整合部署到 Webpack</p><h4 id="一-问题需求" tabindex="-1">一．问题需求 <a class="header-anchor" href="#一-问题需求" aria-label="Permalink to &quot;一．问题需求&quot;">​</a></h4><ul><li>1.由于代码可能有 CommonJS 等非浏览器支持的语法，每次都必须打包才行运行；</li><li>2.虽然借助 Webstorm 等工具可以构建服务器环境，但实际上不能时时监控刷新；</li><li>3.IDE 提供的服务器之间访问的是打包后的文件，是否监听时时刷新看个人习惯；</li><li>4.以上：如果要方便的话，开发者需求的想法是，开发时方便调试，最后再打包；</li><li>5.所以，官方提供了 <code>Webpack-dev-Server</code> 工具来解决这个问题，支持特性： <ul><li>(1) .支持 HTTP 服务访问：localhost、127.0.0.1 这种</li><li>(2) .监听变化时时刷新网页，时时预览</li><li>(3) .支持 Source Map</li></ul></li></ul><h4 id="二-安装和使用配置" tabindex="-1">二．安装和使用配置 <a class="header-anchor" href="#二-安装和使用配置" aria-label="Permalink to &quot;二．安装和使用配置&quot;">​</a></h4><p>1.DevServer 只要安装到本地即可使用，命令如下:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> i</span><span style="color:#98C379;"> webpack-dev-server</span><span style="color:#D19A66;"> -D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>2.在 <code>webpack.config.js</code> 配置一些最基本的参数，方便运行；</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// devServer 自动化</span></span>
<span class="line"><span style="color:#E06C75;">devServer</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 访问路径</span></span>
<span class="line"><span style="color:#E06C75;">	publicPath</span><span style="color:#ABB2BF;"> : </span><span style="color:#98C379;">&#39;/dist&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 独立端口</span></span>
<span class="line"><span style="color:#E06C75;">	port</span><span style="color:#ABB2BF;"> : </span><span style="color:#D19A66;">3000</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 迷你型服务启动信息</span></span>
<span class="line"><span style="color:#E06C75;">	stats</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;minimal&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">},</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><ul><li><p>本地我们可以删除 dist 目录，还原打包之前再启动 devServer，测试效果；</p></li><li><p>此时我们可以发现并不需要打包到本地，它是自动打包到内存让你时时预览调试的；</p></li><li><p>也就是说：调试阶段，可以用 devServer，完成了，再最终打包到本地即可；</p><p>3.我们可以在子目录生成一个 package.json 文件，在 scripts 设置 dev 属性；</p></li></ul><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#98C379;">&quot;dev&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;webpack-dev-server&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>运行命令</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> run</span><span style="color:#98C379;"> dev</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>7.目前这个版本，火狐还是会有断开服务器的提醒，不过完全不影响我们调试；</p><p>8.如果强迫症的同学，有两种解决方案：</p><p>(1) .注释掉输出的错误信息，或者把错误提醒改成信息提醒；</p><p>(2) .或者在 devServer 设置错误级别：</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">clientLogLevel: &#39;none&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>PS：还有火狐还会出现 <code>sockjs.js.map</code> 的警告，可以设置 devTool 解决；</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">devtool: &#39;source-map&#39;,</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>PS：以上问题，谷歌浏览器均不存在！</p><h3 id="plugin-部署-html-插件" tabindex="-1">Plugin 部署 HTML 插件 <a class="header-anchor" href="#plugin-部署-html-插件" aria-label="Permalink to &quot;Plugin 部署 HTML 插件&quot;">​</a></h3><h4 id="一-问题需求-1" tabindex="-1">一．问题需求 <a class="header-anchor" href="#一-问题需求-1" aria-label="Permalink to &quot;一．问题需求&quot;">​</a></h4><p>1.目前为止，我们只能打包 js 文件模块，事实上：HTML 文件也需要打包到一起；</p><p>2.也就是说，我们需要把.js 和.html 文件都要打包到 dist 目录中去；</p><p>可以使用 HTML 插件解决路径问题</p><h4 id="二-安装和使用配置-1" tabindex="-1">二．安装和使用配置 <a class="header-anchor" href="#二-安装和使用配置-1" aria-label="Permalink to &quot;二．安装和使用配置&quot;">​</a></h4><ol><li>首先，安装 html-webpack-plugin 插件，本地安装即可；</li></ol><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> i</span><span style="color:#98C379;"> html-webpack-plugin</span><span style="color:#D19A66;"> -D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>PS：安装好后，可以在 package.json 中看到版本号；</p><ol start="2"><li><p>我们删除掉 src 外面的.html 文件，在 src 建立 index.html 文件，用于打包；</p></li><li><p>我们并不需要在.html 文件中使用<code>script</code>标签引入.js 文件，让插件处理；</p></li><li><p>在 webpack.config.js 中，引入插件，具体如下：</p></li></ol><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// html 插件</span></span>
<span class="line"><span style="color:#ABB2BF;">const HtmlWebpackPlugin = require(&#39;html-webpack-plugin&#39;);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 插件</span></span>
<span class="line"><span style="color:#ABB2BF;">plugins: [</span></span>
<span class="line"><span style="color:#FFFFFF;">	new</span><span style="color:#FFFFFF;"> HtmlWebpackPlugin(</span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 值为默认值(可以不写)，源文件</span></span>
<span class="line"><span style="color:#FFFFFF;">		template</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;./src/index.html&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// 值为默认值(可以不写)，打包生成的文件名</span></span>
<span class="line"><span style="color:#FFFFFF;">		filename</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;index.html&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span><span style="color:#FFFFFF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">],</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 运行配置：devServer，publicPath 可以忽略</span></span>
<span class="line"><span style="color:#ABB2BF;">devServer: {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // publicPath : &#39;/dist&#39;,</span></span>
<span class="line"><span style="color:#FFFFFF;">    port</span><span style="color:#ABB2BF;"> : </span><span style="color:#D19A66;">3000</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#FFFFFF;">    stats</span><span style="color:#ABB2BF;"> : </span><span style="color:#98C379;">&quot;minimal&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">},</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><ol start="5"><li><p>经过上述的一系列操作，解决了两个问题，打包后引入.js 文件，会自动引入；</p></li><li><p>在使用 DevServer 时，<code>localhost:3000</code> 直接访问的就是 index.html；</p></li><li><p>如果想要.html 和.js 打包后存在不同目录，可设置，并会自动链接；</p></li></ol><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">filename: &#39;js/bundle.js&#39;,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">filename: </span><span style="color:#98C379;">&quot;html/index.html&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">script</span><span style="color:#D19A66;"> src</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;../js/bundle.js&quot;</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>PS：打包后，上节课的 source map 生成了一个.map，这个在火狐刷新会引起弹窗；</p><p>PS：只要使用 inline-source-map，不生成文件，在最后生成一行文本即可；</p><h3 id="loader-打包-css-文件" tabindex="-1">Loader 打包 CSS 文件 <a class="header-anchor" href="#loader-打包-css-文件" aria-label="Permalink to &quot;Loader 打包 CSS 文件&quot;">​</a></h3><h4 id="一-问题需求-2" tabindex="-1">一．问题需求 <a class="header-anchor" href="#一-问题需求-2" aria-label="Permalink to &quot;一．问题需求&quot;">​</a></h4><ul><li>1.通过之前的学习，我们知道如何打包 js 模块和 html 页面，并融合；</li><li>2.还有一种东西需要处理，就是 css 样式以及 less、sass 等预处理样式；</li><li>3.思路也是一样的，调试的时候可以试试监听，打包的时候也能融合；</li><li>4.这里需要使用 module 这个属性，并需要安装使用以下三种<strong>CSS 相关插件</strong>： <ul><li>(1).<code>css-loader</code>：读取和编译 css 文件，转换为样式字符模块；</li><li>(2).<code>style-loader</code>：将 css 插入到 JavaScript 中；</li><li>(3).<code>less-loader</code>：读取和编译 less 预处理样式，转换为 css 文件；</li></ul></li></ul><h4 id="二-打包普通-css-文件" tabindex="-1">二. 打包普通.css 文件 <a class="header-anchor" href="#二-打包普通-css-文件" aria-label="Permalink to &quot;二. 打包普通.css 文件&quot;">​</a></h4><p>1.首先，我们先创建两个基本的 css 文件，另一个引入其中一个；</p><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/*font.css*/</span></span>
<span class="line"><span style="color:#E06C75;">h1</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">	color: </span><span style="color:#D19A66;">blue</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">	font-size: </span><span style="color:#D19A66;">200</span><span style="color:#E06C75;">px</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/*base.css*/</span></span>
<span class="line"><span style="color:#C678DD;">@import</span><span style="color:#98C379;"> &quot;font.css&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">	background-color: </span><span style="color:#D19A66;">gray</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>PS：和打包 html 文件一样，css 文件并不需要你手动去 link 引入，让插件处理；</p><p>2.然后在.js 文件中，把.css 文件通过 require 引入进来；</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;./base.css&quot;</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>3.安装所需的 <code>css-loader</code> 插件和 <code>style-loader</code> 插件；</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> i</span><span style="color:#98C379;"> css-loader</span><span style="color:#D19A66;"> -D</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> i</span><span style="color:#98C379;"> style-loader</span><span style="color:#D19A66;"> -D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>PS：安装完成后，可以在 package.json 检查版本号，确认已安装；</p><p>4.在 <code>webpack.config.js</code> 中，使用 module 进行 css 文件部署工作；</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 模块</span></span>
<span class="line"><span style="color:#ABB2BF;">module: {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 规则</span></span>
<span class="line"><span style="color:#FFFFFF;">    rules</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#ABB2BF;">        {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">            // 规则获取需要部署的文件后缀</span></span>
<span class="line"><span style="color:#FFFFFF;">            test</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">/\\.css$/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">            // style-loader 将 css 字符串插入到 javascript</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">            // 通过浏览器工具样式被动态插入到&lt;style&gt;标签内</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">            // css-loader 将 css 文件编译成字符串给 style-loader 处理</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">            // 所以，这里数组的执行顺序是从右到左执行，否则失败</span></span>
<span class="line"><span style="color:#FFFFFF;">            use</span><span style="color:#ABB2BF;"> : [</span><span style="color:#FFFFFF;">&#39;style-loader&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#FFFFFF;">&#39;css-loader&#39;</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#ABB2BF;">        },</span></span>
<span class="line"><span style="color:#ABB2BF;">        {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">        },</span></span>
<span class="line"><span style="color:#ABB2BF;">    ]</span></span>
<span class="line"><span style="color:#ABB2BF;">},</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h4 id="三-打包预处理样式" tabindex="-1">三. 打包预处理样式 <a class="header-anchor" href="#三-打包预处理样式" aria-label="Permalink to &quot;三. 打包预处理样式&quot;">​</a></h4><p>还有一种 css 编码方式是：预处理样式，比如 Less，sass 等；</p><p>1.首先创建一个 less.less 预处理样式文件，代码 css 一样即可，然后引入；</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;./less.less&quot;</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>2.我们这里简单使用一下 Less 先做一个基础了解，先安装 less-loader；</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> i</span><span style="color:#98C379;"> less-loader</span><span style="color:#D19A66;"> -D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>配置</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#FFFFFF;">    test</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">/\\.less$/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    //less-loader 会先将.less 文件转换为.css 文件，然后再向左边处理</span></span>
<span class="line"><span style="color:#FFFFFF;">    use</span><span style="color:#ABB2BF;"> : [</span><span style="color:#FFFFFF;">&#39;style-loader&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#FFFFFF;">&#39;css-loader&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#FFFFFF;">&#39;less-loader&#39;</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="loader-打包图片资源" tabindex="-1">Loader 打包图片资源 <a class="header-anchor" href="#loader-打包图片资源" aria-label="Permalink to &quot;Loader 打包图片资源&quot;">​</a></h3><p>文档：<a href="https://webpack.docschina.org/guides/asset-modules#root" target="_blank" rel="noreferrer">webpack 中文文档 (docschina.org)</a></p><h4 id="一-打包思路" tabindex="-1">一．打包思路 <a class="header-anchor" href="#一-打包思路" aria-label="Permalink to &quot;一．打包思路&quot;">​</a></h4><p>1.继续打包文件：<code>图片文件</code>，分为 css 引入图片和 html 插入图片；</p><p>2.如果是 css 加载图片，都是背景图，总所周知小图片采用 base64 转换字符串；</p><p>3.而大图片和 html 插图图片，则都需要单独的 loader 插件来完成；</p><p>4.本节课用到的 <strong>loader 插件</strong>如下：</p><p>(1).<code>file-loader</code>：解析 JavaScipt 和 css 插入的图片；</p><p>(2).<code>url-loader</code>：将图片转换为 base64 编码字符串；</p><p>(3).<code>html-loader</code>：将.html 进行打包，从而解析 img 插入问题；</p><h4 id="二-安装和使用配置-2" tabindex="-1">二．安装和使用配置 <a class="header-anchor" href="#二-安装和使用配置-2" aria-label="Permalink to &quot;二．安装和使用配置&quot;">​</a></h4><h5 id="file-loader-插件-解析-javascipt-和-css-插入的图片" tabindex="-1">file-loader 插件：解析 JavaScipt 和 css 插入的图片 <a class="header-anchor" href="#file-loader-插件-解析-javascipt-和-css-插入的图片" aria-label="Permalink to &quot;file-loader 插件：解析 JavaScipt 和 css 插入的图片&quot;">​</a></h5><p>1.安装并配置</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> i</span><span style="color:#98C379;"> file-loader</span><span style="color:#D19A66;"> -D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>2.在 <code>webpack.config.js</code> 中配置</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#FFFFFF;">    test</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">/\\.(png|jpg|gif)/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#FFFFFF;">    use</span><span style="color:#ABB2BF;"> : [</span><span style="color:#FFFFFF;">&#39;file-loader&#39;</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>CSS 文件</p><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">#loading</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">	width: </span><span style="color:#D19A66;">780</span><span style="color:#E06C75;">px</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">	height: </span><span style="color:#D19A66;">422</span><span style="color:#E06C75;">px</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">	background-image: </span><span style="color:#56B6C2;">url</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;./loading.gif&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#61AFEF;">#ts</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">	width: </span><span style="color:#D19A66;">609</span><span style="color:#E06C75;">px</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">	height: </span><span style="color:#D19A66;">609</span><span style="color:#E06C75;">px</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">	background-image: </span><span style="color:#56B6C2;">url</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;./ts.png&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>PS：也可以在.js 文件引入图片，会被自动解析</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> img</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;./ts.png&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">img</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>2.现在，我们要扩展这个插件内容，要求自定义目录和名称，继续在 <code>webpack.config.js</code> 中配置：</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#FFFFFF;">    test</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">/\\.(png|jpg|gif)/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#FFFFFF;">    loader</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">&#39;file-loader&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 加载一个 loader</span></span>
<span class="line"><span style="color:#FFFFFF;">    options</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#FFFFFF;">        name</span><span style="color:#ABB2BF;"> : </span><span style="color:#FFFFFF;">&#39;./img/</span><span style="color:#ABB2BF;">[</span><span style="color:#FFFFFF;">name</span><span style="color:#ABB2BF;">]</span><span style="color:#FFFFFF;">.</span><span style="color:#ABB2BF;">[</span><span style="color:#FFFFFF;">ext</span><span style="color:#ABB2BF;">]</span><span style="color:#FFFFFF;">&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 写入 img 目录，且按原名和后缀,</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">},</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h5 id="url-loader-将图片转换为-base64-编码字符串" tabindex="-1">url-loader：将图片转换为 base64 编码字符串； <a class="header-anchor" href="#url-loader-将图片转换为-base64-编码字符串" aria-label="Permalink to &quot;url-loader：将图片转换为 base64 编码字符串；&quot;">​</a></h5><p>1.插件：<code>url-loader</code>，我们限定小于 10kb 的，直接用 base64 编码保存图片；</p><p>具体为何要用这么做：扩展要探讨很多，直接搜索相关关键字了解；</p><p>总结就是一句话：小图片用 base64 性比价收益最高，反之一样；</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> i</span><span style="color:#98C379;"> url-loader</span><span style="color:#D19A66;"> -D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>2.在 <code>webpack.config.js</code> 中配置</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#FFFFFF;">    test</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">/\\.(png|jpg|gif)$/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 这里使用 url-loader，它依赖 file-loader</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 通过先判断图片大小，小的采用 base64，大的采用 file-loader</span></span>
<span class="line"><span style="color:#FFFFFF;">    loader</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">&#39;url-loader&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#FFFFFF;">    options</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 限定 10kg 一下采用 base64 编码</span></span>
<span class="line"><span style="color:#FFFFFF;">        limit</span><span style="color:#ABB2BF;"> : </span><span style="color:#D19A66;">10240</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#FFFFFF;">        name</span><span style="color:#ABB2BF;"> : </span><span style="color:#FFFFFF;">&#39;./img/</span><span style="color:#ABB2BF;">[</span><span style="color:#FFFFFF;">name</span><span style="color:#ABB2BF;">]</span><span style="color:#FFFFFF;">.</span><span style="color:#ABB2BF;">[</span><span style="color:#FFFFFF;">ext</span><span style="color:#ABB2BF;">]</span><span style="color:#FFFFFF;">&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">},</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h5 id="html-loader-将-html-进行打包-从而解析-img-插入问题" tabindex="-1">html-loader：将.html 进行打包，从而解析 img 插入问题 <a class="header-anchor" href="#html-loader-将-html-进行打包-从而解析-img-插入问题" aria-label="Permalink to &quot;html-loader：将.html 进行打包，从而解析 img 插入问题&quot;">​</a></h5><p>1.安装</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> i</span><span style="color:#98C379;"> html-loader</span><span style="color:#D19A66;"> -D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>2.在 <code>webpack.config.js</code> 中配置</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#FFFFFF;">    test</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">/\\.html$/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 自动交给 url-loader 处理</span></span>
<span class="line"><span style="color:#FFFFFF;">    use</span><span style="color:#ABB2BF;"> : [</span><span style="color:#FFFFFF;">&#39;html-loader&#39;</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#ABB2BF;">},</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="打包其他资源-字体图标" tabindex="-1">打包其他资源-字体图标 <a class="header-anchor" href="#打包其他资源-字体图标" aria-label="Permalink to &quot;打包其他资源-字体图标&quot;">​</a></h3><p>如在阿里图标库下载到项目中使用的图标文件</p><p>1.文件加载插件<code>file-loader</code>，如果安装了就不用再安装</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> i</span><span style="color:#98C379;"> file-loader</span><span style="color:#D19A66;"> -D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>2.在 <code>webpack.config.js</code> 中<code>module: { rules: [ ]}</code>配置</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 模块</span></span>
<span class="line"><span style="color:#E06C75;">	module</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// 规则</span></span>
<span class="line"><span style="color:#E06C75;">		rules</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#ABB2BF;">			{</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				// 使用法</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				// test: /\\.(ttf|svg)$/,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				// 排除法</span></span>
<span class="line"><span style="color:#E06C75;">				exclude</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;"> /</span><span style="color:#56B6C2;">\\.</span><span style="color:#E06C75;">(js</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">json</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">html</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">css</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">less</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">scss</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">png</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">gif</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">jpg</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">jpeg)</span><span style="color:#C678DD;">$</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">				loader</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;file-loader&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 插件加载</span></span>
<span class="line"><span style="color:#E06C75;">				options</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">					outputPath</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;font/&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">					publicPath</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;./font&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">					name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;[name][hash:8].[ext]&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">				},</span></span>
<span class="line"><span style="color:#ABB2BF;">			},</span></span>
<span class="line"><span style="color:#ABB2BF;">		],</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h3 id="分离-css-分类打包" tabindex="-1">分离 CSS 分类打包 <a class="header-anchor" href="#分离-css-分类打包" aria-label="Permalink to &quot;分离 CSS 分类打包&quot;">​</a></h3><p>1.虽然之前我们使用 <code>style-loader</code> 和 <code>css-loader</code> 进行打包；</p><p>2.但这种打包是融入到.js 里面最终生成的，并不是独立的.css 文件；</p><p>3.之前使用了 html 插件进行.html 打包，这次使用 css 打包的插件为<code>mini-css-extract-plugin</code>：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> i</span><span style="color:#98C379;"> mini-css-extract-plugin</span><span style="color:#D19A66;"> -D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>在 <code>webpack.config.js</code> 中配置</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 获取 css 插件</span></span>
<span class="line"><span style="color:#ABB2BF;">const MiniCssExtractPlugin = require(&#39;mini-css-extract-plugin&#39;);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 插件</span></span>
<span class="line"><span style="color:#ABB2BF;">plugins: [</span></span>
<span class="line"><span style="color:#FFFFFF;">    new</span><span style="color:#FFFFFF;"> MiniCssExtractPlugin(</span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#FFFFFF;">    	filename</span><span style="color:#ABB2BF;"> : </span><span style="color:#FFFFFF;">&#39;./css/</span><span style="color:#ABB2BF;">[</span><span style="color:#FFFFFF;">name</span><span style="color:#ABB2BF;">]</span><span style="color:#FFFFFF;">.css&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span><span style="color:#FFFFFF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 模块</span></span>
<span class="line"><span style="color:#ABB2BF;">module: {</span></span>
<span class="line"><span style="color:#FFFFFF;">  rules</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#FFFFFF;">      use:</span><span style="color:#ABB2BF;"> [</span></span>
<span class="line"><span style="color:#ABB2BF;">        {</span></span>
<span class="line"><span style="color:#FFFFFF;">            loader</span><span style="color:#ABB2BF;"> : </span><span style="color:#FFFFFF;">MiniCssExtractPlugin.loader</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#FFFFFF;">            options</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      			// 设置绝对路径：和其他静态处理插件配置的 outputPath 配置加上 img、js、css 等相结合</span></span>
<span class="line"><span style="color:#FFFFFF;">                publicPath</span><span style="color:#ABB2BF;"> : </span><span style="color:#FFFFFF;">&#39;../&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#ABB2BF;">        },</span></span>
<span class="line"><span style="color:#FFFFFF;">        &#39;css-loader&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">      ]</span></span>
<span class="line"><span style="color:#ABB2BF;">  ]</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p>PS：使用<code>域名/img</code> 这种模式，方便把 img,js,css 等静态资源部署到 cdn 上；</p><p>PS：也可以设置开发 src 和 dist 目录结构保持相同，这样更加清晰。</p><h3 id="postcss-兼容性转换" tabindex="-1">PostCss 兼容性转换 <a class="header-anchor" href="#postcss-兼容性转换" aria-label="Permalink to &quot;PostCss 兼容性转换&quot;">​</a></h3><h4 id="一-兼容处理-postcss-loader" tabindex="-1">一．兼容处理-postcss-loader <a class="header-anchor" href="#一-兼容处理-postcss-loader" aria-label="Permalink to &quot;一．兼容处理-postcss-loader&quot;">​</a></h4><p>1.CSS 尤其是很多 CSS3，在部分浏览器是有兼容处理的，需要进行设置；</p><p>2.可以使用 <code>postcss-loader</code> 来实现 CSS 语法的兼容性处理；</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> i</span><span style="color:#98C379;"> postcss-loader</span><span style="color:#D19A66;"> -D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>在 <code>webpack.config.js</code> 中<code>module: { rules: [ ]}</code>配置</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 放在最右边</span></span>
<span class="line"><span style="color:#ABB2BF;">use : [</span></span>
<span class="line"><span style="color:#FFFFFF;">	...</span></span>
<span class="line"><span style="color:#FFFFFF;">	&#39;postcss-loader&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h5 id="autoprefixer-转换插件" tabindex="-1">autoprefixer 转换插件 <a class="header-anchor" href="#autoprefixer-转换插件" aria-label="Permalink to &quot;autoprefixer 转换插件&quot;">​</a></h5><p>npm：<a href="https://www.npmjs.com/package/autoprefixer" target="_blank" rel="noreferrer">autoprefixer - npm (npmjs.com)</a></p><p>3.单有 postcss-loader 还不行，需要搭配创建 <code>autoprefixer</code> 插件转换；</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> i</span><span style="color:#98C379;"> autoprefixer</span><span style="color:#D19A66;"> -D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>4.这个插件会在需要兼容性的样式加上 CSS 前缀，比如：-ms、-webkit 等；</p><p>5.我们在 base.css 和 font.css(被@import 导入)，增加需要兼容的 css；</p><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">display: flex;</span></span>
<span class="line"><span style="color:#C678DD;">transform: rotateY(130deg</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>6.在当前目录创建 postcss.config.js，用来配置兼容的浏览器；</p><p>配置文档：</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">const AutoPreFixer = require(&#39;autoprefixer&#39;);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">module.exports = {</span></span>
<span class="line"><span style="color:#FFFFFF;">	plugins</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#FFFFFF;">   		new</span><span style="color:#FFFFFF;"> AutoPreFixer(</span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">            // 配置文档：https://github.com/browserslist/browserslist#queries</span></span>
<span class="line"><span style="color:#FFFFFF;">        	overrideBrowserslist</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                // 可以写多个列表</span></span>
<span class="line"><span style="color:#FFFFFF;">                &#39;&gt;</span><span style="color:#D19A66;"> 0.15</span><span style="color:#FFFFFF;">%</span><span style="color:#FFFFFF;"> in</span><span style="color:#FFFFFF;"> CN&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">       		]</span></span>
<span class="line"><span style="color:#ABB2BF;">       }</span><span style="color:#FFFFFF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">	]</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>采用了@import，被导入的 css 无法解析：webpack.config.js</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 由于采用了@import，被导入的 css 无法解析，需要设置 importLoaders=1 即可</span></span>
<span class="line"><span style="color:#E06C75;">    loader</span><span style="color:#ABB2BF;"> : </span><span style="color:#98C379;">&#39;css-loader&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    options</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">        importLoaders</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">1</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h4 id="二-css4-代码兼容" tabindex="-1">二．CSS4 代码兼容 <a class="header-anchor" href="#二-css4-代码兼容" aria-label="Permalink to &quot;二．CSS4 代码兼容&quot;">​</a></h4><p>1.除了兼容浏览器之外，还可以通过 <code>postcss-preset-env</code> 实现 CSS4 代码兼容；</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> i</span><span style="color:#98C379;"> postcss-preset-env</span><span style="color:#D19A66;"> -D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>CSS</p><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#56B6C2;">:root</span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">	--green</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">green</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#E06C75;">h1</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">	color: </span><span style="color:#56B6C2;">var</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">--green</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>webpack.config.js 配置</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 请注意：如果使用 postcss-preset-env，就删除 autoprefixer</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 因为 post-preset-env 集成了 autoprefixer，不需要再引入设置</span></span>
<span class="line"><span style="color:#ABB2BF;">const PostPresetEnv = require(&#39;postcss-preset-env);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">module.exports = {</span></span>
<span class="line"><span style="color:#FFFFFF;">    plugins</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#FFFFFF;">        new</span><span style="color:#FFFFFF;"> PostPresetEnv(</span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#FFFFFF;">            browsers</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#FFFFFF;">            	&#39;&gt;</span><span style="color:#D19A66;"> 0.15</span><span style="color:#FFFFFF;">%</span><span style="color:#FFFFFF;"> in</span><span style="color:#FFFFFF;"> CN&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">            ]</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span><span style="color:#FFFFFF;">)</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    ]</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="babel-转换-es6-语法" tabindex="-1">Babel 转换 ES6 语法 <a class="header-anchor" href="#babel-转换-es6-语法" aria-label="Permalink to &quot;Babel 转换 ES6 语法&quot;">​</a></h3><p>1.我们有时需要将 ES6+的语法转换成 ES5，让兼容性更好一些；</p><p>2.这时需要有三个模块需要安装，具体如下：</p><ul><li><p>(1).<code>babel-loader</code>：与 Webpack 协同工作的模块，加载处理 js 文件；</p></li><li><p>(2).<code>@babel/core</code>：Babel 编译器的核心模块，是 babel-loader 依赖；</p></li><li><p>(3).<code>@babel/preset-env</code>：Babel 预置器，用于分析 ES6 语法；</p><p>3.我们安装上述三个模块，然后进行配置，具体方法如下：</p></li></ul><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> i</span><span style="color:#98C379;"> babel-loader</span><span style="color:#98C379;"> @babel/core</span><span style="color:#98C379;"> @babel/preset-env</span><span style="color:#D19A66;"> -D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>在 <code>webpack.config.js</code> 中<code>module: { rules: [ ]}</code>配置</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#FFFFFF;">    test</span><span style="color:#ABB2BF;"> : </span><span style="color:#FFFFFF;">/\\.js$/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#FFFFFF;">    loader</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">&#39;babel-loader&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#FFFFFF;">    options</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#FFFFFF;">        presets</span><span style="color:#ABB2BF;"> : [</span></span>
<span class="line"><span style="color:#FFFFFF;">            &#39;@babel/preset-env&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">        ]</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>4.我们在 src 中的 js 文件，使用 ES6 的箭头函数来尝试一下；</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">let</span><span style="color:#61AFEF;"> fn</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">x</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">y</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#E06C75;"> x</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> y</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">fn</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">));</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li>在没有使用 Babel 时，它打包会原封不动的使用 ES6 语法；</li><li>在使用 Babel 之后，编译后的代码如下：</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#61AFEF;"> fn</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#61AFEF;"> fn</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">x</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">y</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">	return</span><span style="color:#E06C75;"> x</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> y</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">fn</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">));</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>5.如果你使用了未纳入标准(提案中)的代码，打包时，它会提醒你安装相关插件；</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 提案中，尚未纳入标准的语法</span></span>
<span class="line"><span style="color:#ABB2BF;">class Person {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 新语法私有属性</span></span>
<span class="line"><span style="color:#FFFFFF;">    #name;</span></span>
<span class="line"><span style="color:#FFFFFF;">    constructor()</span><span style="color:#FFFFFF;"> {</span></span>
<span class="line"><span style="color:#FFFFFF;">        this.#name</span><span style="color:#FFFFFF;"> =</span><span style="color:#FFFFFF;"> &#39;Mr.Lee&#39;;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>安装报错提示安装的插件</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> i</span><span style="color:#98C379;"> @babel/plugin-proposal-class-properties</span><span style="color:#D19A66;"> -D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>配置</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#FFFFFF;">    test</span><span style="color:#ABB2BF;"> : </span><span style="color:#FFFFFF;">/\\.js$/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#FFFFFF;">    loader</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">&#39;babel-loader&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#FFFFFF;">    options</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#FFFFFF;">        presets</span><span style="color:#ABB2BF;"> : [</span></span>
<span class="line"><span style="color:#FFFFFF;">            &#39;@babel/preset-env&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">        ],</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 新的插件配置</span></span>
<span class="line"><span style="color:#FFFFFF;">        plugins</span><span style="color:#ABB2BF;"> : [</span></span>
<span class="line"><span style="color:#FFFFFF;">        	&#39;@babel/plugin-proposal-class-properties&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">    	]</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="eslint-校验-javascript-代码" tabindex="-1">ESLint 校验 JavaScript 代码 <a class="header-anchor" href="#eslint-校验-javascript-代码" aria-label="Permalink to &quot;ESLint 校验 JavaScript 代码&quot;">​</a></h3><h4 id="一-安装模块" tabindex="-1">一．安装模块 <a class="header-anchor" href="#一-安装模块" aria-label="Permalink to &quot;一．安装模块&quot;">​</a></h4><p>1.基本的 ESLint 实现，需要一下安装以下模块：</p><ul><li><p>(1).<code>eslint</code>：JS 代码检查工具核心模块；</p></li><li><p>(2).<code>eslint-loader</code>：webpack 协同模块；</p><p>2.首先，先安装 eslint，然后安装配置信息；</p></li></ul><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> i</span><span style="color:#98C379;"> eslint</span><span style="color:#D19A66;"> -D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>生成文件 eslint 配置文件<code>.eslintrc.js</code>命令</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">eslint</span><span style="color:#D19A66;"> --init</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>PS：网上也会别人生成的配置信息可以拿来用，也可以去官网：<a href="http://eslint.cn/demo/%EF%BC%8C%E5%8F%82%E8%80%83%E7%94%9F%E6%88%90%E4%BF%A1%E6%81%AF%EF%BC%9B" target="_blank" rel="noreferrer">http://eslint.cn/demo/，参考生成信息；</a></p><p>3.我们安装 <code>eslint-loader</code> 模块；</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> i</span><span style="color:#98C379;"> eslint-loader</span><span style="color:#D19A66;"> -D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>4.最后，我们在 <code>webpack.config.js</code> 中<code>module: { rules: [ ]}</code>配置；</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#FFFFFF;">    test</span><span style="color:#ABB2BF;"> : </span><span style="color:#FFFFFF;">/.js$/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#FFFFFF;">    loader</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">&#39;eslint-loader&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 编译前执行</span></span>
<span class="line"><span style="color:#FFFFFF;">    enforce</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">&#39;pre&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 不检查的目录</span></span>
<span class="line"><span style="color:#FFFFFF;">    exclude</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">/node_modules/</span></span>
<span class="line"><span style="color:#ABB2BF;">},</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>5.防止错误飘红太多，干扰演示，我们注释掉大部分代码，写上示例；</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> foo</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> bar</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>最后，需要测试打包和预览提示校验；</p><h3 id="多页面配置打包" tabindex="-1">多页面配置打包 <a class="header-anchor" href="#多页面配置打包" aria-label="Permalink to &quot;多页面配置打包&quot;">​</a></h3><h4 id="一-多页面配置" tabindex="-1">一．多页面配置 <a class="header-anchor" href="#一-多页面配置" aria-label="Permalink to &quot;一．多页面配置&quot;">​</a></h4><p>1.如果我们想生成多个.html 文件，比如 index.html 和 main.html；</p><p>2.此时，我们需要修改一下入口文件和出口文件；</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 入口文件</span></span>
<span class="line"><span style="color:#ABB2BF;">entry: {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 把需要加载的 js 以键值对 方式</span></span>
<span class="line"><span style="color:#FFFFFF;">    index</span><span style="color:#ABB2BF;"> : </span><span style="color:#FFFFFF;">&#39;./src/js/index.js&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#FFFFFF;">    main</span><span style="color:#ABB2BF;"> : </span><span style="color:#FFFFFF;">&#39;./src/js/main.js&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">},</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>或</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 入口文件，也支持 ES6 的箭头函数</span></span>
<span class="line"><span style="color:#ABB2BF;">entry: () =&gt; ({</span></span>
<span class="line"><span style="color:#FFFFFF;">    index</span><span style="color:#ABB2BF;"> : </span><span style="color:#FFFFFF;">&#39;./src/js/index.js&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#FFFFFF;">    main</span><span style="color:#ABB2BF;"> : </span><span style="color:#FFFFFF;">&#39;./src/js/main.js&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">}),</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>3.出口文件，需要按照入口文件的名称进行打包，否则只会打包一个；</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 出口文件</span></span>
<span class="line"><span style="color:#ABB2BF;">output: {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 文件名</span></span>
<span class="line"><span style="color:#FFFFFF;">    filename</span><span style="color:#ABB2BF;"> : </span><span style="color:#FFFFFF;">&#39;js/</span><span style="color:#ABB2BF;">[</span><span style="color:#FFFFFF;">name</span><span style="color:#ABB2BF;">]</span><span style="color:#FFFFFF;">.js&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">}),</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>4.最后，我们要使用 HtmlWebpackPlugin 插件来设置自己想要的打包方案；</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 插件</span></span>
<span class="line"><span style="color:#ABB2BF;">plugins: [</span></span>
<span class="line"><span style="color:#FFFFFF;">    new</span><span style="color:#FFFFFF;"> HtmlWebpackPlugin(</span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 默认值</span></span>
<span class="line"><span style="color:#FFFFFF;">        template</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;./src/index.html&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 默认值</span></span>
<span class="line"><span style="color:#FFFFFF;">        filename</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;index.html&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#FFFFFF;">        chunks</span><span style="color:#ABB2BF;">: [</span><span style="color:#FFFFFF;">&#39;index&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#FFFFFF;">&#39;main&#39;</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span><span style="color:#FFFFFF;">)</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#FFFFFF;">    new</span><span style="color:#FFFFFF;"> HtmlWebpackPlugin(</span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#FFFFFF;">        template</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;./src/main.html&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#FFFFFF;">        filename</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;main.html&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#FFFFFF;">        chunks</span><span style="color:#ABB2BF;">: [</span><span style="color:#FFFFFF;">&#39;main&#39;</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span><span style="color:#FFFFFF;">)</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="压缩-html-和-css-代码" tabindex="-1">压缩 HTML 和 CSS 代码 <a class="header-anchor" href="#压缩-html-和-css-代码" aria-label="Permalink to &quot;压缩 HTML 和 CSS 代码&quot;">​</a></h3><h4 id="一-压缩代码" tabindex="-1">一．压缩代码 <a class="header-anchor" href="#一-压缩代码" aria-label="Permalink to &quot;一．压缩代码&quot;">​</a></h4><p>为何要压缩代码？什么情况下要压缩？答：在生产环境下打包时节约资源；</p><h5 id="_1-压缩配置" tabindex="-1">1. 压缩配置 <a class="header-anchor" href="#_1-压缩配置" aria-label="Permalink to &quot;1. 压缩配置&quot;">​</a></h5><p>既然在生产环境，那首先要把打包的配置更改为生产环境；</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 生产环境模式</span></span>
<span class="line"><span style="color:#ABB2BF;">mode: </span><span style="color:#98C379;">&quot;production&quot;</span><span style="color:#ABB2BF;">,</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>PS：调节为生产环境打包，就会自动将 js 代码进行打包，不需要单独设置；</p><h5 id="_2-html-代码压缩" tabindex="-1">2. HTML 代码压缩 <a class="header-anchor" href="#_2-html-代码压缩" aria-label="Permalink to &quot;2. HTML 代码压缩&quot;">​</a></h5><p>对于 HTML 文件打包，通过 <code>HtmlWebpackPlugin</code> 插件，生产环境会自动压缩；</p><p>如果在开发环境中压缩，可以通过配置来设置要压缩的选项：</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">minify: {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 是否去除空格，默认 false</span></span>
<span class="line"><span style="color:#FFFFFF;">	collapseWhitespace</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 是否移除注释 默认 false</span></span>
<span class="line"><span style="color:#FFFFFF;">	removeComments</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">},</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h5 id="_3-css-代码压缩" tabindex="-1">3. CSS 代码压缩 <a class="header-anchor" href="#_3-css-代码压缩" aria-label="Permalink to &quot;3. CSS 代码压缩&quot;">​</a></h5><p>对于 CSS 文件，就算设置了生成环境，它也不会自动压缩，此时需要另外设置；</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> i</span><span style="color:#98C379;"> optimize-css-assets-webpack-plugin</span><span style="color:#D19A66;"> -D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>webpack.config.js 配置</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 获取 css 压缩插件</span></span>
<span class="line"><span style="color:#ABB2BF;">const OptimizeCssAssetsWebpackPlugin = require(&#39;optimize-css-assets-webpack-plugin&#39;)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 插件</span></span>
<span class="line"><span style="color:#ABB2BF;">plugins: [</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 压缩 css</span></span>
<span class="line"><span style="color:#FFFFFF;">	new</span><span style="color:#FFFFFF;"> OptimizeCssAssetsWebpackPlugin()</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">],</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="编译打包-scss-和-typescript" tabindex="-1">编译打包 Scss 和 TypeScript <a class="header-anchor" href="#编译打包-scss-和-typescript" aria-label="Permalink to &quot;编译打包 Scss 和 TypeScript&quot;">​</a></h3><h4 id="一-scss-编译打包" tabindex="-1">一．Scss 编译打包 <a class="header-anchor" href="#一-scss-编译打包" aria-label="Permalink to &quot;一．Scss 编译打包&quot;">​</a></h4><p>1.和 Less 一样，Scss 也是 Sass 的一种使用较多的语法；</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> install</span><span style="color:#98C379;"> sass</span><span style="color:#98C379;"> sass-loader</span><span style="color:#98C379;"> node-sass</span><span style="color:#D19A66;"> -D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>2.具体配置基本和 Less 一样，先创建.scss 文件，并引入；</p><p>在 <code>webpack.config.js</code> 中<code>module: { rules: [ ]}</code>配置</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#FFFFFF;">    test</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">/\\.scss$/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 从右向左执行</span></span>
<span class="line"><span style="color:#FFFFFF;">    use</span><span style="color:#ABB2BF;"> : [</span></span>
<span class="line"><span style="color:#FFFFFF;">        MiniCssExtractPlugin.loader</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#FFFFFF;">        &#39;css-loader&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#FFFFFF;">        &#39;sass-loader&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">    ]</span></span>
<span class="line"><span style="color:#ABB2BF;">},</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h4 id="二-typescript-编译打包" tabindex="-1">二．TypeScript 编译打包 <a class="header-anchor" href="#二-typescript-编译打包" aria-label="Permalink to &quot;二．TypeScript 编译打包&quot;">​</a></h4><p>官网：<a href="https://www.typescriptlang.org/zh/" target="_blank" rel="noreferrer">TypeScript: JavaScript With Syntax For Types. (typescriptlang.org)</a></p><p>1.越来越流行的 TypeScript，是 JavaScript 的超集；</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> i</span><span style="color:#98C379;"> typescript</span><span style="color:#98C379;"> ts-loader</span><span style="color:#D19A66;"> -D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>在 <code>webpack.config.js</code> 中<code>module: { rules: [ ]}</code>配置</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#FFFFFF;">    test</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">/\\.ts$/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#FFFFFF;">    use</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">&#39;ts-loader&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">},</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>2.创建 <code>tsconfig.js</code>文件，是 TypeScript 配置文件，配置好 TypeScript 语言的编写配置；</p><p>参考配置：<a href="https://juejin.cn/post/6844904093568221191" target="_blank" rel="noreferrer">typeScript tsconfig 配置详解 - 掘金 (juejin.cn)</a></p><p>3.再编写一个.ts 文件，然后通过 import 导入到 index.js；</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// type.ts</span></span>
<span class="line"><span style="color:#ABB2BF;">export const output = (content : string) =&gt; {</span></span>
<span class="line"><span style="color:#FFFFFF;">	return</span><span style="color:#FFFFFF;"> content</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// import ts</span></span>
<span class="line"><span style="color:#ABB2BF;">import { </span><span style="color:#FFFFFF;">output</span><span style="color:#ABB2BF;"> } from &#39;./type.ts&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">console.log(output(&#39;Mr.Lee&#39;))</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>3.如果要省略掉 import 中文件后缀，需要在 webpack.config.js 中配置；</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">module.exports = {</span></span>
<span class="line"><span style="color:#FFFFFF;">    resolve</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#FFFFFF;">    	extensions</span><span style="color:#ABB2BF;">: [</span><span style="color:#FFFFFF;">&#39;.ts&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#FFFFFF;">&#39;.js&#39;</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="resolve-模块解析配置" tabindex="-1">Resolve 模块解析配置 <a class="header-anchor" href="#resolve-模块解析配置" aria-label="Permalink to &quot;Resolve 模块解析配置&quot;">​</a></h3><p>文档：<a href="https://webpack.docschina.org/configuration/resolve/" target="_blank" rel="noreferrer">解析(Resolve) | webpack 中文文档 (docschina.org)</a></p><h4 id="一-模块解析" tabindex="-1">一．模块解析 <a class="header-anchor" href="#一-模块解析" aria-label="Permalink to &quot;一．模块解析&quot;">​</a></h4><p>1.我们使用了 typescript，在 import 不限定后缀会出现无法载入；</p><p>2.所以，我们使用了 Resolve 模块解析的中 extensions 来进行配置，如果没有配置会报错；</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 模块解析</span></span>
<span class="line"><span style="color:#ABB2BF;">resolve: {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 导入文件查找的限定后缀，默认.js 和.js</span></span>
<span class="line"><span style="color:#FFFFFF;">    extensions</span><span style="color:#ABB2BF;">: [</span><span style="color:#FFFFFF;">&#39;.ts&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#FFFFFF;">&#39;.js&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#FFFFFF;">&#39;.js&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#FFFFFF;">&#39;less&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#FFFFFF;">&#39;scss&#39;</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#ABB2BF;">},</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>3.alias 配置可以用别名的方式，将导入路径映射成一个新的路径；</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 模块解析</span></span>
<span class="line"><span style="color:#ABB2BF;">resolve: {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 导入文件查找的限定后缀，默认.js 和.js</span></span>
<span class="line"><span style="color:#FFFFFF;">    extensions</span><span style="color:#ABB2BF;">: [</span><span style="color:#FFFFFF;">&#39;.ts&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#FFFFFF;">&#39;.js&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#FFFFFF;">&#39;.js&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#FFFFFF;">&#39;less&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#FFFFFF;">&#39;scss&#39;</span><span style="color:#ABB2BF;">]</span><span style="color:#FFFFFF;">，</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 设置一个别名路径(绝对路径)</span></span>
<span class="line"><span style="color:#FFFFFF;">    alias:</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#FFFFFF;">        css</span><span style="color:#ABB2BF;"> : </span><span style="color:#FFFFFF;">path.resolve(__dirname</span><span style="color:#ABB2BF;">, </span><span style="color:#FFFFFF;">&#39;./src/css&#39;)</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">},</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>在其他 js 文件中便可以这样引入</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;css/base.css&quot;</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>4.modules 配置可以指定 webpack 的解析模块目录；</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 模块解析</span></span>
<span class="line"><span style="color:#ABB2BF;">resolve: {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 导入文件查找的限定后缀，默认.js 和.js</span></span>
<span class="line"><span style="color:#FFFFFF;">    extensions</span><span style="color:#ABB2BF;">: [</span><span style="color:#FFFFFF;">&#39;.ts&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#FFFFFF;">&#39;.js&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#FFFFFF;">&#39;.js&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#FFFFFF;">&#39;less&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#FFFFFF;">&#39;scss&#39;</span><span style="color:#ABB2BF;">]</span><span style="color:#FFFFFF;">，</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 设置一个别名路径(绝对路径)</span></span>
<span class="line"><span style="color:#FFFFFF;">    alias:</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#FFFFFF;">        css</span><span style="color:#ABB2BF;"> : </span><span style="color:#FFFFFF;">path.resolve(__dirname</span><span style="color:#ABB2BF;">, </span><span style="color:#FFFFFF;">&#39;./src/css&#39;)</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 解析模块目录：找到解析模块目录，如果当前找不到就不断往上一层找</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // modules: [&#39;node_modules&#39;]</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 解析模块目录：也可以设置指定目录直接查找，检查查找次数</span></span>
<span class="line"><span style="color:#FFFFFF;">    modules:</span><span style="color:#ABB2BF;"> [</span><span style="color:#FFFFFF;">path.resolve(__dirname</span><span style="color:#ABB2BF;">, </span><span style="color:#FFFFFF;">&#39;../node_modules&#39;)</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 也可以设置第二参数，防止第一参数找不到报错；</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// modules: [path.resolve(__dirname, &#39;../node_modules&#39;), &#39;node_modules&#39;]</span></span>
<span class="line"><span style="color:#ABB2BF;">},</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="source-map-配置" tabindex="-1">Source-Map 配置 <a class="header-anchor" href="#source-map-配置" aria-label="Permalink to &quot;Source-Map 配置&quot;">​</a></h3><p>文档：<a href="https://webpack.docschina.org/configuration/devtool#development" target="_blank" rel="noreferrer">webpack 中文文档 (docschina.org)</a></p><p>1.<strong>Source-map 可以将编译、打包、压缩后的代码映射到源代码上</strong>；</p><p>2.比如你打包或运行的代码是编译后的，报错后，它能指向你源代码的位置上；</p><p>webpack.config.js 配置</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 会生成一个.map 文件</span></span>
<span class="line"><span style="color:#ABB2BF;">devtool: &#39;source-map&#39;,</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>3.根据不同的方式，有下面几种类型：</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 打包后会生成一个对应的.map 文件</span></span>
<span class="line"><span style="color:#ABB2BF;">source-map</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 打包后会在 js 文件的内部最后生成 map 内容</span></span>
<span class="line"><span style="color:#ABB2BF;">inline-source-map</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 打包后会在每个模块都执行 eval</span></span>
<span class="line"><span style="color:#ABB2BF;">eval-source-map</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 打包后会生成.map 文件但不会追踪原始文件的错误代码</span></span>
<span class="line"><span style="color:#ABB2BF;">hidden-source-map</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 打包后会生成.map 并只能精确到行</span></span>
<span class="line"><span style="color:#ABB2BF;">cheap-source-map</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 合并方法</span></span>
<span class="line"><span style="color:#ABB2BF;">eval-cheap-source-map</span></span>
<span class="line"><span style="color:#ABB2BF;">...</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>4.在开发环境和生产环境，我们该如何选择？开发要求速度快，调试方便推荐：</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 开发环境</span></span>
<span class="line"><span style="color:#ABB2BF;">eval-source-map 或 eval-cheap-source-map</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 生产环境</span></span>
<span class="line"><span style="color:#ABB2BF;">source-map</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="watch-监听和-clean-清理" tabindex="-1">watch 监听和 clean 清理 <a class="header-anchor" href="#watch-监听和-clean-清理" aria-label="Permalink to &quot;watch 监听和 clean 清理&quot;">​</a></h3><h4 id="一-watch-监听" tabindex="-1">一.watch 监听 <a class="header-anchor" href="#一-watch-监听" aria-label="Permalink to &quot;一.watch 监听&quot;">​</a></h4><p>1.每次打包，都比较烦，耗时耗力，有一种解决方案：watch 文件监听；</p><p>2.这种解决方案，就是你打包时，就挂着监听你项目原始文件的变化，从而自动更新；</p><p>webpack.config.js 配置</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 文件监听，默认 false</span></span>
<span class="line"><span style="color:#ABB2BF;">watch: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 监听选项：当 watch: true, 才有效</span></span>
<span class="line"><span style="color:#ABB2BF;">watchOptions: {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 不监听解析模块目录</span></span>
<span class="line"><span style="color:#FFFFFF;">    ignored</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">/node_modules/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 防止更新频率太快，默认 300 毫秒，意味监听到变化后 500 毫秒再编译</span></span>
<span class="line"><span style="color:#FFFFFF;">    aggregateTimeout</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">500</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 轮询间隔时间，1 秒，询问系统指定文件是否变化了</span></span>
<span class="line"><span style="color:#FFFFFF;">    poll</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">1000</span></span>
<span class="line"><span style="color:#ABB2BF;">},</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h4 id="二-clean-清理" tabindex="-1">二.clean 清理 <a class="header-anchor" href="#二-clean-清理" aria-label="Permalink to &quot;二.clean 清理&quot;">​</a></h4><p>1.每次打包，都要手动删除生成文件的<code>dist</code>目录，因为不删除的话，改了配置目录就会多出废目录或文件；</p><p>2.所以，使用 clean-webpack-plugin 插件，来处理这个问题；</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> i</span><span style="color:#98C379;"> clean-webpack-plugin</span><span style="color:#D19A66;"> -D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>webpack.config.js 配置</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 获取 clean 清理插件</span></span>
<span class="line"><span style="color:#ABB2BF;">const { </span><span style="color:#FFFFFF;">CleanWebpackPlugin</span><span style="color:#ABB2BF;"> } = require(&#39;clean-webpack-plugin&#39;);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">module.exports = {</span></span>
<span class="line"><span style="color:#FFFFFF;">    plugins</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 清理打包目录插件</span></span>
<span class="line"><span style="color:#FFFFFF;">        new</span><span style="color:#FFFFFF;"> CleanWebpackPlugin()</span></span>
<span class="line"><span style="color:#ABB2BF;">    ]</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="hmr-热替换" tabindex="-1">HMR 热替换 <a class="header-anchor" href="#hmr-热替换" aria-label="Permalink to &quot;HMR 热替换&quot;">​</a></h3><ul><li>1.页面调试有一个问题，就是当我们编辑了 css 或 js，它会自动刷新；</li><li>2.但如果有大量的 css 或 js，一个小修改，就要全部刷新，影响开发性能；</li><li>3.而 HMR 热替换就是解决这个问题，当 css 或 js 修改时，只刷新修改的部分；</li><li>4.对于 html 文件，不需要热替换，就一个文件；</li></ul><h4 id="开启-hmr-热替换" tabindex="-1">开启 HMR 热替换 <a class="header-anchor" href="#开启-hmr-热替换" aria-label="Permalink to &quot;开启 HMR 热替换&quot;">​</a></h4><p>在使用命令启动服务时加上<code>--hot</code>，或者在 webpack.config.js 的 devServer 配置；</p><p>webpack.config.js 配置</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">module.exports = {</span></span>
<span class="line"><span style="color:#FFFFFF;">    devServer</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#FFFFFF;">        hot</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="css-的热替换" tabindex="-1">css 的热替换 <a class="header-anchor" href="#css-的热替换" aria-label="Permalink to &quot;css 的热替换&quot;">​</a></h4><p>对于 css 的热替换，需要使用 style-loader，而现在被抽离 css 插件替换了；</p><p>所以，我们先要注释掉这个插件，改为 style-loader；</p><p>在 <code>webpack.config.js</code> 中<code>module: { rules: [ ]}</code>配置</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">test: /\\.scss$/,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 从右向左执行</span></span>
<span class="line"><span style="color:#ABB2BF;">use : [</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// MiniCssExtractPlugin.loader,</span></span>
<span class="line"><span style="color:#FFFFFF;">&#39;style-loader&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#FFFFFF;">&#39;css-loader&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#FFFFFF;">&#39;sass-loader&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h4 id="html-文件修改自动更新" tabindex="-1">html 文件修改自动更新 <a class="header-anchor" href="#html-文件修改自动更新" aria-label="Permalink to &quot;html 文件修改自动更新&quot;">​</a></h4><p>当开启了 HMR 热替换之后，发现 html 文件修改后无法自动更新了；</p><p>此时，我们需要在入口文件加入这个 html 文件，即可；</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">entry: [</span></span>
<span class="line"><span style="color:#FFFFFF;">    &#39;./src/js/index.js&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#FFFFFF;">    &#39;./src/index.html&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">],</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="js-的热替换" tabindex="-1">js 的热替换 <a class="header-anchor" href="#js-的热替换" aria-label="Permalink to &quot;js 的热替换&quot;">​</a></h4><p>对于 js 的热替换，只要在入口文件，对 <code>加载的其它的js 文件</code>进行设置即可；</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> name</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &quot;./module&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">hot</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">	module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">hot</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">accept</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;./module&quot;</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">		console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">	});</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="axios-跨域请求" tabindex="-1">Axios 跨域请求 <a class="header-anchor" href="#axios-跨域请求" aria-label="Permalink to &quot;Axios 跨域请求&quot;">​</a></h3><p>文档：<a href="https://webpack.docschina.org/configuration/dev-server/" target="_blank" rel="noreferrer">DevServer | webpack 中文文档 (docschina.org)</a></p><p>1.这里提供两个远程 js 文件，会返回一些数据用于测试跨域问题；</p><p><a href="https://cdn.liyanhui.com/data.js" target="_blank" rel="noreferrer">https://cdn.liyanhui.com/data.js</a> (可跨域，设置过)</p><p><a href="https://cdn.ycku.com/data.js" target="_blank" rel="noreferrer">https://cdn.ycku.com/data.js</a> (不可跨域，默认)</p><p>2.安装 axios，用于 ajax 测试；</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> install</span><span style="color:#98C379;"> axios</span><span style="color:#D19A66;"> -D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>3.编写代码，测试数据；</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> axios</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &quot;axios&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">axios</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">get</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;https://cdn.liyanhui.com/data.js&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">then</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">res</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">res</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">data</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>PS：如果把地址中的 <code>liyanhui</code> 换成 <code>ycku</code> 的话，会出现跨域的问题；</p><p>4.通过 devServer 设置代理模式，来解决跨域问题；</p><p>webpack.config.js 配置</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">	devServer</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// 设置代理</span></span>
<span class="line"><span style="color:#E06C75;">		proxy</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// 匹配前缀为/api</span></span>
<span class="line"><span style="color:#98C379;">			&quot;/api&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				// 目标域名 ip</span></span>
<span class="line"><span style="color:#E06C75;">				target</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;https://cdn.ycku.com&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				// 改变源</span></span>
<span class="line"><span style="color:#E06C75;">				changeOrigin</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				// 重写 url， 去掉 /api</span></span>
<span class="line"><span style="color:#E06C75;">				pathRewrite</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#98C379;">					&quot;^/api&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">				},</span></span>
<span class="line"><span style="color:#ABB2BF;">			},</span></span>
<span class="line"><span style="color:#ABB2BF;">		},</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h3 id="环境分离设置" tabindex="-1">环境分离设置 <a class="header-anchor" href="#环境分离设置" aria-label="Permalink to &quot;环境分离设置&quot;">​</a></h3><p>文档：<a href="https://webpack.docschina.org/guides/production#setup" target="_blank" rel="noreferrer">webpack 中文文档 (docschina.org)</a></p><ul><li><p>1.当配置文件写的越发繁杂时，发现生产环境的配置和开发环境配置有冲突；</p></li><li><p>2.此时，我们希望有两套配置文件，一套用于开发环境，一套用于生产环境；</p><p>1.这里使用 js 合并插件 webpack-merge 来实现配置文件的分离保存</p></li></ul><p>安装环境分离插件<code>webpack-merge</code></p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> i</span><span style="color:#98C379;"> webpack-merge</span><span style="color:#D19A66;"> -D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>2.将原先的 <code>webpack.config.js</code> 改为 <code>base.config.js</code></p><p>3.我们项目根目录下创建另外两个文件 <code>dev.config.js</code>(开发)和 <code>prod.config.js</code>(生产)</p><p>dev.config.js 文件：开发环境配置<code>webpack-merge</code>插件</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 合并 js 插件</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">merge</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;webpack-merge&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 基础配置</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> base</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;./base.config&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 开发环境配置</span></span>
<span class="line"><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> merge</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">base</span><span style="color:#ABB2BF;">, {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 把 \`webpack.config.js\` 改为 \`base.config.js\` 文件的配置复制过来</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	//devServer</span></span>
<span class="line"><span style="color:#E06C75;">	devServer</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">		port</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">3000</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		stats</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;minimal&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		//代理</span></span>
<span class="line"><span style="color:#E06C75;">		proxy</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#98C379;">			&quot;/api&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">				target</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;https://cdn.ycku.com&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">				changeOrigin</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">				pathRewrite</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#98C379;">					&quot;^/api&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">				},</span></span>
<span class="line"><span style="color:#ABB2BF;">			},</span></span>
<span class="line"><span style="color:#ABB2BF;">		},</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	//devTool</span></span>
<span class="line"><span style="color:#E06C75;">	devtool</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;eval-source-map&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	//开发模式</span></span>
<span class="line"><span style="color:#E06C75;">	mode</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;development&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><p>prod.config.js 文件：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 合并js插件</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">merge</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;webpack-merge&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 公共基础配置</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> base</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;./base.config&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// css压缩插件</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> OptimizeCssAssetsWebpackPlugin</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;optimize-css-assets-webpack-plugin&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 清理插件</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">CleanWebpackPlugin</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;clean-webpack-plugin&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 生产环境配置</span></span>
<span class="line"><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> merge</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">base</span><span style="color:#ABB2BF;">, {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 把 \`webpack.config.js\` 改为 \`base.config.js\` 文件的配置复制过来</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	//监听</span></span>
<span class="line"><span style="color:#E06C75;">	watch</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	//监听选项，当true时才有效</span></span>
<span class="line"><span style="color:#E06C75;">	watchOptions</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		//不监听解析模块目录</span></span>
<span class="line"><span style="color:#E06C75;">		ignored</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;"> /node_modules/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		//更新频率</span></span>
<span class="line"><span style="color:#E06C75;">		aggregateTimeout</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">500</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		//轮询</span></span>
<span class="line"><span style="color:#E06C75;">		poll</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">1000</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	//插件</span></span>
<span class="line"><span style="color:#E06C75;">	plugins</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		//清理打包</span></span>
<span class="line"><span style="color:#C678DD;">		new</span><span style="color:#61AFEF;"> CleanWebpackPlugin</span><span style="color:#ABB2BF;">(),</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		//压缩css</span></span>
<span class="line"><span style="color:#C678DD;">		new</span><span style="color:#61AFEF;"> OptimizeCssAssetsWebpackPlugin</span><span style="color:#ABB2BF;">(),</span></span>
<span class="line"><span style="color:#ABB2BF;">	],</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	//devTool</span></span>
<span class="line"><span style="color:#E06C75;">	devtool</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;source-map&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	//生产模式</span></span>
<span class="line"><span style="color:#E06C75;">	mode</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;production&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br></div></div><p>剩下的<code>base.config.js</code>文件配置</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 路径</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> path</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;path&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// html插件</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> HtmlWebpackPlugin</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;html-webpack-plugin&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// css插件</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> MiniCssExtractPlugin</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;mini-css-extract-plugin&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 出口文件</span></span>
<span class="line"><span style="color:#E06C75;">	entry</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;./src/js/index.js&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 出口文件</span></span>
<span class="line"><span style="color:#E06C75;">	output</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// 文件名</span></span>
<span class="line"><span style="color:#E06C75;">		filename</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;js/bundle.js&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// 路径，绝对路径</span></span>
<span class="line"><span style="color:#E06C75;">		path</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">resolve</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">__dirname</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;./dist&quot;</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 模块解析</span></span>
<span class="line"><span style="color:#E06C75;">	resolve</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// 导入语句省略后缀</span></span>
<span class="line"><span style="color:#E06C75;">		extensions</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;.ts&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;.js&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;.json&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;.css&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;.less&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;.scss&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// 导入路径的别名</span></span>
<span class="line"><span style="color:#E06C75;">		alias</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">			css</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">resolve</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">__dirname</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;./src/css&quot;</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">		},</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// 解析模块目录</span></span>
<span class="line"><span style="color:#E06C75;">		modules</span><span style="color:#ABB2BF;">: [</span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">resolve</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">__dirname</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;../node_modules&quot;</span><span style="color:#ABB2BF;">), </span><span style="color:#98C379;">&quot;node_modules&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 模块</span></span>
<span class="line"><span style="color:#E06C75;">	module</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// 规则</span></span>
<span class="line"><span style="color:#E06C75;">		rules</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#ABB2BF;">			{</span></span>
<span class="line"><span style="color:#E06C75;">				test</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;"> /</span><span style="color:#56B6C2;">\\.</span><span style="color:#E06C75;">css</span><span style="color:#C678DD;">$</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				// 执行顺序是从右往左边</span></span>
<span class="line"><span style="color:#E06C75;">				use</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#ABB2BF;">					{</span></span>
<span class="line"><span style="color:#E06C75;">						loader</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">MiniCssExtractPlugin</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">loader</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">						options</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">							publicPath</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;../&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">						},</span></span>
<span class="line"><span style="color:#ABB2BF;">					},</span></span>
<span class="line"><span style="color:#ABB2BF;">					{</span></span>
<span class="line"><span style="color:#E06C75;">						loader</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;css-loader&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">						options</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">							importLoaders</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">						},</span></span>
<span class="line"><span style="color:#ABB2BF;">					},</span></span>
<span class="line"><span style="color:#98C379;">					&quot;postcss-loader&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">				],</span></span>
<span class="line"><span style="color:#ABB2BF;">			},</span></span>
<span class="line"><span style="color:#ABB2BF;">			{</span></span>
<span class="line"><span style="color:#E06C75;">				test</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;"> /</span><span style="color:#56B6C2;">\\.</span><span style="color:#E06C75;">less</span><span style="color:#C678DD;">$</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">				use</span><span style="color:#ABB2BF;">: [</span><span style="color:#E5C07B;">MiniCssExtractPlugin</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">loader</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;css-loader&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;less-loader&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">			},</span></span>
<span class="line"><span style="color:#ABB2BF;">			{</span></span>
<span class="line"><span style="color:#E06C75;">				test</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;"> /</span><span style="color:#56B6C2;">\\.</span><span style="color:#E06C75;">scss</span><span style="color:#C678DD;">$</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">				use</span><span style="color:#ABB2BF;">: [</span><span style="color:#E5C07B;">MiniCssExtractPlugin</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">loader</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;css-loader&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;sass-loader&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">			},</span></span>
<span class="line"><span style="color:#ABB2BF;">			{</span></span>
<span class="line"><span style="color:#E06C75;">				test</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;"> /</span><span style="color:#56B6C2;">\\.</span><span style="color:#E06C75;">(png</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">jpg</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">gif)</span><span style="color:#C678DD;">$</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">				loader</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;url-loader&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">				options</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">					limit</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">10240</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">					name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;[name].[ext]&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">					outputPath</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;img&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">				},</span></span>
<span class="line"><span style="color:#ABB2BF;">			},</span></span>
<span class="line"><span style="color:#ABB2BF;">			{</span></span>
<span class="line"><span style="color:#E06C75;">				test</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;"> /</span><span style="color:#56B6C2;">\\.</span><span style="color:#E06C75;">html</span><span style="color:#C678DD;">$</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">				use</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;html-loader&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">			},</span></span>
<span class="line"><span style="color:#ABB2BF;">			{</span></span>
<span class="line"><span style="color:#E06C75;">				test</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;"> /</span><span style="color:#56B6C2;">\\.</span><span style="color:#E06C75;">js</span><span style="color:#C678DD;">$</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">				loader</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;babel-loader&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">				options</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">					presets</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;@babel/preset-env&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#E06C75;">					plugins</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;@babel/plugin-proposal-class-properties&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">				},</span></span>
<span class="line"><span style="color:#ABB2BF;">			},</span></span>
<span class="line"><span style="color:#ABB2BF;">			{</span></span>
<span class="line"><span style="color:#E06C75;">				test</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;"> /</span><span style="color:#56B6C2;">\\.</span><span style="color:#E06C75;">ts</span><span style="color:#C678DD;">$</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">				use</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;ts-loader&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">			},</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//     test : /\\.js$/,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//     loader : &#39;eslint-loader&#39;,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//</span><span style="color:#7F848E;font-style:italic;">     // 编译前执行</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//     enforce: &#39;pre&#39;,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//</span><span style="color:#7F848E;font-style:italic;">     // 不检查指定目录</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//     exclude: /node_modules/</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// }</span></span>
<span class="line"><span style="color:#ABB2BF;">		],</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 插件</span></span>
<span class="line"><span style="color:#E06C75;">	plugins</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#C678DD;">		new</span><span style="color:#61AFEF;"> HtmlWebpackPlugin</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">			template</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;./src/index.html&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 默认</span></span>
<span class="line"><span style="color:#E06C75;">			filename</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;index.html&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">			minify</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">				collapseWhitespace</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 去掉空格</span></span>
<span class="line"><span style="color:#E06C75;">				removeComments</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 去掉注释</span></span>
<span class="line"><span style="color:#ABB2BF;">			},</span></span>
<span class="line"><span style="color:#ABB2BF;">		}),</span></span>
<span class="line"><span style="color:#C678DD;">		new</span><span style="color:#61AFEF;"> MiniCssExtractPlugin</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">			filename</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;css/[name].css&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">		}),</span></span>
<span class="line"><span style="color:#ABB2BF;">	],</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br></div></div><p>4.分离好了之后，我们需要修改<code>package.json</code>，把&quot;scripts&quot;的启动命令修改成以下：</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#98C379;">&quot;dev&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;webpack-dev-server --config dev.config.js&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">&quot;build&quot;</span><span style="color:#ABB2BF;"> : </span><span style="color:#98C379;">&quot;webpack --config prod.config.js&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>PS：打包命名更改为 npm run build 即可；其它不变；</p><h3 id="打包优化和-dist-服务" tabindex="-1">打包优化和 dist 服务 <a class="header-anchor" href="#打包优化和-dist-服务" aria-label="Permalink to &quot;打包优化和 dist 服务&quot;">​</a></h3><p>optimiztion 选项文档：<a href="https://webpack.docschina.org/configuration/optimization/#root" target="_blank" rel="noreferrer">优化(Optimization) | webpack 中文文档 (docschina.org)</a></p><h4 id="一-打包优化" tabindex="-1">一．打包优化 <a class="header-anchor" href="#一-打包优化" aria-label="Permalink to &quot;一．打包优化&quot;">​</a></h4><p>1.webpack 提供了一个选项：<code>optimiztion</code> 来帮助我们优化；</p><p>2.只不过开启了生产环境，就自动开启了压缩，除了 css 需要我们自己弄；</p><p>3.我们使用自带的 <code>Terser-webpack-plugin</code> 插件来设置自己的压缩选项；</p><p>在<code>prod.config.js</code>生产环境文件配置</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 打包优化插件</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> TerserWebpackPlugin</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;terser-webpack-plugin&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> merge</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">base</span><span style="color:#ABB2BF;">, {</span></span>
<span class="line"><span style="color:#ABB2BF;">    ...</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 优化</span></span>
<span class="line"><span style="color:#E06C75;">    optimization</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 如果是生成模式，自动为 true</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // minimize : true,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 配置 TW 插件</span></span>
<span class="line"><span style="color:#E06C75;">        minimizer </span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#C678DD;">            new</span><span style="color:#61AFEF;"> TerserWebpackPlugin</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                // 是否开启缓存，开启缓存加速</span></span>
<span class="line"><span style="color:#E06C75;">                cache </span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                // 插件选项</span></span>
<span class="line"><span style="color:#E06C75;">                terserOptions </span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                    // 压缩方式</span></span>
<span class="line"><span style="color:#E06C75;">                    compress </span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                        // 剔除无用代码</span></span>
<span class="line"><span style="color:#E06C75;">                        unused </span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                        // 剔除死代码</span></span>
<span class="line"><span style="color:#E06C75;">                        dead_code </span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                        // 剔除 console.log</span></span>
<span class="line"><span style="color:#E06C75;">                        drop_console </span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                        // 剔除 debugger</span></span>
<span class="line"><span style="color:#E06C75;">                        drop_debugger </span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">                    }</span></span>
<span class="line"><span style="color:#ABB2BF;">                }</span></span>
<span class="line"><span style="color:#ABB2BF;">            })</span></span>
<span class="line"><span style="color:#ABB2BF;">        ]</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><h4 id="二-运行-dist-服务" tabindex="-1">二．运行 dist 服务 <a class="header-anchor" href="#二-运行-dist-服务" aria-label="Permalink to &quot;二．运行 dist 服务&quot;">​</a></h4><p>1.打包后，我们想要在静态服务器上测试，先要安装静态服务器；</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> i</span><span style="color:#98C379;"> serve</span><span style="color:#D19A66;"> -g</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>基于 dist 目录运行服务命令</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">serve</span><span style="color:#98C379;"> dist</span><span style="color:#D19A66;"> -s</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="以上案例全部示例代码" tabindex="-1">以上案例全部示例代码 <a class="header-anchor" href="#以上案例全部示例代码" aria-label="Permalink to &quot;以上案例全部示例代码&quot;">​</a></h3><p>在当前文档目录：./示例代码/webpack</p><h2 id="webpack-优化环境配置" tabindex="-1">webpack 优化环境配置 <a class="header-anchor" href="#webpack-优化环境配置" aria-label="Permalink to &quot;webpack 优化环境配置&quot;">​</a></h2><p><strong>示例代码目录</strong>：docs\\Document\\Project-Engineering\\PackToBuild\\示例代码\\webpack 代码\\4.webpack 优化环境配置</p><h3 id="开发环境性能优化" tabindex="-1">开发环境性能优化 <a class="header-anchor" href="#开发环境性能优化" aria-label="Permalink to &quot;开发环境性能优化&quot;">​</a></h3><ul><li><p>优化打包构建速度</p><ul><li><p>HMR</p></li><li><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  HMR: hot module replacement 热模块替换 / 模块热替换</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    作用：一个模块发生变化，只会重新打包这一个模块（而不是打包所有模块） </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      极大提升构建速度</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      样式文件：可以使用HMR功能：因为style-loader内部实现了~</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      js文件：默认不能使用HMR功能 --&gt; 需要修改js代码，添加支持HMR功能的代码</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        注意：HMR功能对js的处理，只能处理非入口js文件的其他文件。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      html文件: 默认不能使用HMR功能.同时会导致问题：html文件不能热更新了~ （不用做HMR功能）</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        解决：修改entry入口，将html文件引入</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">resolve</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;path&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> HtmlWebpackPlugin</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;html-webpack-plugin&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">	entry</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;./src/js/index.js&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;./src/index.html&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#E06C75;">	output</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">		filename</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;js/built.js&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		path</span><span style="color:#ABB2BF;">: </span><span style="color:#61AFEF;">resolve</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">__dirname</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;build&quot;</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#E06C75;">	module</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">		rules</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// loader的配置</span></span>
<span class="line"><span style="color:#ABB2BF;">			{</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				// 处理less资源</span></span>
<span class="line"><span style="color:#E06C75;">				test</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;"> /</span><span style="color:#56B6C2;">\\.</span><span style="color:#E06C75;">less</span><span style="color:#C678DD;">$</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">				use</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;style-loader&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;css-loader&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;less-loader&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">			},</span></span>
<span class="line"><span style="color:#ABB2BF;">			{</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				// 处理css资源</span></span>
<span class="line"><span style="color:#E06C75;">				test</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;"> /</span><span style="color:#56B6C2;">\\.</span><span style="color:#E06C75;">css</span><span style="color:#C678DD;">$</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">				use</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;style-loader&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;css-loader&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">			},</span></span>
<span class="line"><span style="color:#ABB2BF;">			{</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				// 处理图片资源</span></span>
<span class="line"><span style="color:#E06C75;">				test</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;"> /</span><span style="color:#56B6C2;">\\.</span><span style="color:#E06C75;">(jpg</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">png</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">gif)</span><span style="color:#C678DD;">$</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">				loader</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;url-loader&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">				options</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">					limit</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">8</span><span style="color:#56B6C2;"> *</span><span style="color:#D19A66;"> 1024</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">					name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;[hash:10].[ext]&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">					// 关闭es6模块化</span></span>
<span class="line"><span style="color:#E06C75;">					esModule</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">					outputPath</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;imgs&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">				},</span></span>
<span class="line"><span style="color:#ABB2BF;">			},</span></span>
<span class="line"><span style="color:#ABB2BF;">			{</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				// 处理html中img资源</span></span>
<span class="line"><span style="color:#E06C75;">				test</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;"> /</span><span style="color:#56B6C2;">\\.</span><span style="color:#E06C75;">html</span><span style="color:#C678DD;">$</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">				loader</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;html-loader&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">			},</span></span>
<span class="line"><span style="color:#ABB2BF;">			{</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				// 处理其他资源</span></span>
<span class="line"><span style="color:#E06C75;">				exclude</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;"> /</span><span style="color:#56B6C2;">\\.</span><span style="color:#E06C75;">(html</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">js</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">css</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">less</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">jpg</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">png</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">gif)/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">				loader</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;file-loader&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">				options</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">					name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;[hash:10].[ext]&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">					outputPath</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;media&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">				},</span></span>
<span class="line"><span style="color:#ABB2BF;">			},</span></span>
<span class="line"><span style="color:#ABB2BF;">		],</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#E06C75;">	plugins</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// plugins的配置</span></span>
<span class="line"><span style="color:#C678DD;">		new</span><span style="color:#61AFEF;"> HtmlWebpackPlugin</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">			template</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;./src/index.html&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">		}),</span></span>
<span class="line"><span style="color:#ABB2BF;">	],</span></span>
<span class="line"><span style="color:#E06C75;">	mode</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;development&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">	devServer</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">		contentBase</span><span style="color:#ABB2BF;">: </span><span style="color:#61AFEF;">resolve</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">__dirname</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;build&quot;</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#E06C75;">		compress</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		port</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">3000</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		open</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// 开启HMR功能</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// 当修改了webpack配置，新配置要想生效，必须重新webpack服务</span></span>
<span class="line"><span style="color:#E06C75;">		hot</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br></div></div></li></ul></li><li><p>优化代码调试</p><ul><li><p>source-map（上面笔记也有详细说配置）</p></li><li><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">resolve</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;path&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> HtmlWebpackPlugin</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;html-webpack-plugin&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">	entry</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;./src/js/index.js&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;./src/index.html&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#E06C75;">	output</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">		filename</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;js/built.js&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		path</span><span style="color:#ABB2BF;">: </span><span style="color:#61AFEF;">resolve</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">__dirname</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;build&quot;</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#E06C75;">	module</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">		rules</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// loader的配置</span></span>
<span class="line"><span style="color:#ABB2BF;">			{</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				// 处理less资源</span></span>
<span class="line"><span style="color:#E06C75;">				test</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;"> /</span><span style="color:#56B6C2;">\\.</span><span style="color:#E06C75;">less</span><span style="color:#C678DD;">$</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">				use</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;style-loader&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;css-loader&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;less-loader&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">			},</span></span>
<span class="line"><span style="color:#ABB2BF;">			{</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				// 处理css资源</span></span>
<span class="line"><span style="color:#E06C75;">				test</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;"> /</span><span style="color:#56B6C2;">\\.</span><span style="color:#E06C75;">css</span><span style="color:#C678DD;">$</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">				use</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;style-loader&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;css-loader&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">			},</span></span>
<span class="line"><span style="color:#ABB2BF;">			{</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				// 处理图片资源</span></span>
<span class="line"><span style="color:#E06C75;">				test</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;"> /</span><span style="color:#56B6C2;">\\.</span><span style="color:#E06C75;">(jpg</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">png</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">gif)</span><span style="color:#C678DD;">$</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">				loader</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;url-loader&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">				options</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">					limit</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">8</span><span style="color:#56B6C2;"> *</span><span style="color:#D19A66;"> 1024</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">					name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;[hash:10].[ext]&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">					// 关闭es6模块化</span></span>
<span class="line"><span style="color:#E06C75;">					esModule</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">					outputPath</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;imgs&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">				},</span></span>
<span class="line"><span style="color:#ABB2BF;">			},</span></span>
<span class="line"><span style="color:#ABB2BF;">			{</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				// 处理html中img资源</span></span>
<span class="line"><span style="color:#E06C75;">				test</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;"> /</span><span style="color:#56B6C2;">\\.</span><span style="color:#E06C75;">html</span><span style="color:#C678DD;">$</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">				loader</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;html-loader&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">			},</span></span>
<span class="line"><span style="color:#ABB2BF;">			{</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				// 处理其他资源</span></span>
<span class="line"><span style="color:#E06C75;">				exclude</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;"> /</span><span style="color:#56B6C2;">\\.</span><span style="color:#E06C75;">(html</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">js</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">css</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">less</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">jpg</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">png</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">gif)/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">				loader</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;file-loader&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">				options</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">					name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;[hash:10].[ext]&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">					outputPath</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;media&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">				},</span></span>
<span class="line"><span style="color:#ABB2BF;">			},</span></span>
<span class="line"><span style="color:#ABB2BF;">		],</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#E06C75;">	plugins</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// plugins的配置</span></span>
<span class="line"><span style="color:#C678DD;">		new</span><span style="color:#61AFEF;"> HtmlWebpackPlugin</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">			template</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;./src/index.html&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">		}),</span></span>
<span class="line"><span style="color:#ABB2BF;">	],</span></span>
<span class="line"><span style="color:#E06C75;">	mode</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;development&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">	devServer</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">		contentBase</span><span style="color:#ABB2BF;">: </span><span style="color:#61AFEF;">resolve</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">__dirname</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;build&quot;</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#E06C75;">		compress</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		port</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">3000</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		open</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		hot</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 开启source-map功能</span></span>
<span class="line"><span style="color:#E06C75;">	devtool</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;eval-source-map&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  source-map: 一种 提供源代码到构建后代码映射 技术 （如果构建后代码出错了，通过映射可以追踪源代码错误）</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    [inline-|hidden-|eval-][nosources-][cheap-[module-]]source-map</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    source-map：外部</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      错误代码准确信息 和 源代码的错误位置</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    inline-source-map：内联</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      只生成一个内联source-map</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      错误代码准确信息 和 源代码的错误位置</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    hidden-source-map：外部</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      错误代码错误原因，但是没有错误位置</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      不能追踪源代码错误，只能提示到构建后代码的错误位置</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    eval-source-map：内联</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      每一个文件都生成对应的source-map，都在eval</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      错误代码准确信息 和 源代码的错误位置</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    nosources-source-map：外部</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      错误代码准确信息, 但是没有任何源代码信息</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    cheap-source-map：外部</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      错误代码准确信息 和 源代码的错误位置 </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      只能精确的行</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    cheap-module-source-map：外部</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      错误代码准确信息 和 源代码的错误位置 </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      module会将loader的source map加入</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    内联 和 外部的区别：1. 外部生成了文件，内联没有 2. 内联构建速度更快</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    开发环境：速度快，调试更友好</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      速度快(eval&gt;inline&gt;cheap&gt;...)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        eval-cheap-souce-map</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        eval-source-map</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      调试更友好  </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        souce-map</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        cheap-module-souce-map</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        cheap-souce-map</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      --&gt; eval-source-map  / eval-cheap-module-souce-map</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    生产环境：源代码要不要隐藏? 调试要不要更友好</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      内联会让代码体积变大，所以在生产环境不用内联</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      nosources-source-map 全部隐藏</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      hidden-source-map 只隐藏源代码，会提示构建后代码错误信息</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      --&gt; source-map / cheap-module-souce-map</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">*/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br></div></div></li></ul></li></ul><h3 id="生产环境性能优化" tabindex="-1">生产环境性能优化 <a class="header-anchor" href="#生产环境性能优化" aria-label="Permalink to &quot;生产环境性能优化&quot;">​</a></h3><h4 id="优化打包构建速度" tabindex="-1">优化打包构建速度 <a class="header-anchor" href="#优化打包构建速度" aria-label="Permalink to &quot;优化打包构建速度&quot;">​</a></h4><ul><li><p><strong>oneOf</strong>：从<code>module: {rules:[{oneOf: []}]}</code>，前面的配置：CSS 和预处理器，html 和 js，图片等静态资源文件配置，都可以放置 oneOf 下，达到不会反复被编译，提升生产环境构建速度</p></li><li><p><strong>babel 缓存</strong>：js 代码兼容化编译(如 ES6 转 ES5)缓存：<code>cacheDirectory: true</code></p></li><li><p><strong>多进程打包</strong>：多进程打包，依赖库：<code>thread-loader</code></p><ul><li><p>安装：<code>npm i thread-loader -D</code></p></li><li><p>给<code>babel-loader</code>插件使用</p><ul><li>开启多进程打包。</li><li>进程启动大概为 600ms，进程通信也有开销（请勿滥用）。</li><li>只有工作消耗时间比较长，才需要多进程打包</li></ul></li><li><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">resolve</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;path&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> MiniCssExtractPlugin</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;mini-css-extract-plugin&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> OptimizeCssAssetsWebpackPlugin</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;optimize-css-assets-webpack-plugin&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> HtmlWebpackPlugin</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;html-webpack-plugin&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> WorkboxWebpackPlugin</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;workbox-webpack-plugin&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  PWA: 渐进式网络开发应用程序(离线可访问)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    workbox --&gt; workbox-webpack-plugin</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 定义nodejs环境变量：决定使用browserslist的哪个环境</span></span>
<span class="line"><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">env</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">NODE_ENV</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;production&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 复用loader</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> commonCssLoader</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> [</span></span>
<span class="line"><span style="color:#E5C07B;">	MiniCssExtractPlugin</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">loader</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">	&quot;css-loader&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">	{</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// 还需要在package.json中定义browserslist</span></span>
<span class="line"><span style="color:#E06C75;">		loader</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;postcss-loader&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		options</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">			ident</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;postcss&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#61AFEF;">			plugins</span><span style="color:#ABB2BF;">: () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> [</span><span style="color:#61AFEF;">require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;postcss-preset-env&quot;</span><span style="color:#ABB2BF;">)()],</span></span>
<span class="line"><span style="color:#ABB2BF;">		},</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#ABB2BF;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">	entry</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;./src/js/index.js&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">	output</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">		filename</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;js/built.[contenthash:10].js&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		path</span><span style="color:#ABB2BF;">: </span><span style="color:#61AFEF;">resolve</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">__dirname</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;build&quot;</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#E06C75;">	module</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">		rules</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#ABB2BF;">			{</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				// 在package.json中eslintConfig --&gt; airbnb</span></span>
<span class="line"><span style="color:#E06C75;">				test</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;"> /</span><span style="color:#56B6C2;">\\.</span><span style="color:#E06C75;">js</span><span style="color:#C678DD;">$</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">				exclude</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;"> /node_modules/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				// 优先执行</span></span>
<span class="line"><span style="color:#E06C75;">				enforce</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;pre&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">				loader</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;eslint-loader&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">				options</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">					fix</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">				},</span></span>
<span class="line"><span style="color:#ABB2BF;">			},</span></span>
<span class="line"><span style="color:#ABB2BF;">			{</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				// 以下loader只会匹配一个</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				// 注意：不能有两个配置处理同一种类型文件</span></span>
<span class="line"><span style="color:#E06C75;">				oneOf</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#ABB2BF;">					{</span></span>
<span class="line"><span style="color:#E06C75;">						test</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;"> /</span><span style="color:#56B6C2;">\\.</span><span style="color:#E06C75;">css</span><span style="color:#C678DD;">$</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">						use</span><span style="color:#ABB2BF;">: [...</span><span style="color:#E06C75;">commonCssLoader</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">					},</span></span>
<span class="line"><span style="color:#ABB2BF;">					{</span></span>
<span class="line"><span style="color:#E06C75;">						test</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;"> /</span><span style="color:#56B6C2;">\\.</span><span style="color:#E06C75;">less</span><span style="color:#C678DD;">$</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">						use</span><span style="color:#ABB2BF;">: [...</span><span style="color:#E06C75;">commonCssLoader</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;less-loader&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">					},</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">					/*</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">            正常来讲，一个文件只能被一个loader处理。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">            当一个文件要被多个loader处理，那么一定要指定loader执行的先后顺序：</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">              先执行eslint 在执行babel</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">          */</span></span>
<span class="line"><span style="color:#ABB2BF;">					{</span></span>
<span class="line"><span style="color:#E06C75;">						test</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;"> /</span><span style="color:#56B6C2;">\\.</span><span style="color:#E06C75;">js</span><span style="color:#C678DD;">$</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">						exclude</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;"> /node_modules/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">						use</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">							/* </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                开启多进程打包。 </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                进程启动大概为600ms，进程通信也有开销（请勿滥用）。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                只有工作消耗时间比较长，才需要多进程打包</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">              */</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">							// &#39;thread-loader&#39;,</span><span style="color:#7F848E;font-style:italic;"> // 直接写便是默认配置</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">							// 自定义配置</span></span>
<span class="line"><span style="color:#ABB2BF;">							{</span></span>
<span class="line"><span style="color:#E06C75;">								loader</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;thread-loader&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">								options</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">									workers</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 进程2个</span></span>
<span class="line"><span style="color:#ABB2BF;">								},</span></span>
<span class="line"><span style="color:#ABB2BF;">							},</span></span>
<span class="line"><span style="color:#ABB2BF;">							{</span></span>
<span class="line"><span style="color:#E06C75;">								loader</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;babel-loader&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">								options</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">									presets</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#ABB2BF;">										[</span></span>
<span class="line"><span style="color:#98C379;">											&quot;@babel/preset-env&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">											{</span></span>
<span class="line"><span style="color:#E06C75;">												useBuiltIns</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;usage&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">												corejs</span><span style="color:#ABB2BF;">: { </span><span style="color:#E06C75;">version</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;"> },</span></span>
<span class="line"><span style="color:#E06C75;">												targets</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">													chrome</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;60&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">													firefox</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;50&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">												},</span></span>
<span class="line"><span style="color:#ABB2BF;">											},</span></span>
<span class="line"><span style="color:#ABB2BF;">										],</span></span>
<span class="line"><span style="color:#ABB2BF;">									],</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">									// 开启babel缓存</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">									// 第二次构建时，会读取之前的缓存</span></span>
<span class="line"><span style="color:#E06C75;">									cacheDirectory</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">								},</span></span>
<span class="line"><span style="color:#ABB2BF;">							},</span></span>
<span class="line"><span style="color:#ABB2BF;">						],</span></span>
<span class="line"><span style="color:#ABB2BF;">					},</span></span>
<span class="line"><span style="color:#ABB2BF;">					{</span></span>
<span class="line"><span style="color:#E06C75;">						test</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;"> /</span><span style="color:#56B6C2;">\\.</span><span style="color:#E06C75;">(jpg</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">png</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">gif)/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">						loader</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;url-loader&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">						options</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">							limit</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">8</span><span style="color:#56B6C2;"> *</span><span style="color:#D19A66;"> 1024</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">							name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;[hash:10].[ext]&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">							outputPath</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;imgs&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">							esModule</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">						},</span></span>
<span class="line"><span style="color:#ABB2BF;">					},</span></span>
<span class="line"><span style="color:#ABB2BF;">					{</span></span>
<span class="line"><span style="color:#E06C75;">						test</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;"> /</span><span style="color:#56B6C2;">\\.</span><span style="color:#E06C75;">html</span><span style="color:#C678DD;">$</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">						loader</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;html-loader&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">					},</span></span>
<span class="line"><span style="color:#ABB2BF;">					{</span></span>
<span class="line"><span style="color:#E06C75;">						exclude</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;"> /</span><span style="color:#56B6C2;">\\.</span><span style="color:#E06C75;">(js</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">css</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">less</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">html</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">jpg</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">png</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">gif)/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">						loader</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;file-loader&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">						options</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">							outputPath</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;media&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">						},</span></span>
<span class="line"><span style="color:#ABB2BF;">					},</span></span>
<span class="line"><span style="color:#ABB2BF;">				],</span></span>
<span class="line"><span style="color:#ABB2BF;">			},</span></span>
<span class="line"><span style="color:#ABB2BF;">		],</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#E06C75;">	plugins</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#C678DD;">		new</span><span style="color:#61AFEF;"> MiniCssExtractPlugin</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">			filename</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;css/built.[contenthash:10].css&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">		}),</span></span>
<span class="line"><span style="color:#C678DD;">		new</span><span style="color:#61AFEF;"> OptimizeCssAssetsWebpackPlugin</span><span style="color:#ABB2BF;">(),</span></span>
<span class="line"><span style="color:#C678DD;">		new</span><span style="color:#61AFEF;"> HtmlWebpackPlugin</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">			template</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;./src/index.html&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">			minify</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">				collapseWhitespace</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">				removeComments</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">			},</span></span>
<span class="line"><span style="color:#ABB2BF;">		}),</span></span>
<span class="line"><span style="color:#C678DD;">		new</span><span style="color:#E5C07B;"> WorkboxWebpackPlugin</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">GenerateSW</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			/*</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        1. 帮助serviceworker快速启动</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        2. 删除旧的 serviceworker</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        生成一个 serviceworker 配置文件~</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      */</span></span>
<span class="line"><span style="color:#E06C75;">			clientsClaim</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">			skipWaiting</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">		}),</span></span>
<span class="line"><span style="color:#ABB2BF;">	],</span></span>
<span class="line"><span style="color:#E06C75;">	mode</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;production&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">	devtool</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;source-map&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br></div></div></li></ul></li><li><p><strong>externals</strong>：忽略文件，不会被编译打包进构建好的代码</p><ul><li><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">resolve</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;path&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> HtmlWebpackPlugin</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;html-webpack-plugin&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">	entry</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;./src/js/index.js&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">	output</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">		filename</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;js/built.js&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		path</span><span style="color:#ABB2BF;">: </span><span style="color:#61AFEF;">resolve</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">__dirname</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;build&quot;</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#E06C75;">	plugins</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#C678DD;">		new</span><span style="color:#61AFEF;"> HtmlWebpackPlugin</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">			template</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;./src/index.html&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">		}),</span></span>
<span class="line"><span style="color:#ABB2BF;">	],</span></span>
<span class="line"><span style="color:#E06C75;">	mode</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;production&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">	externals</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// 忽略库名:&#39;npm包名&#39;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// 拒绝jQuery被打包进来</span></span>
<span class="line"><span style="color:#E06C75;">		jquery</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;jQuery&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div></li></ul></li><li><p><strong>dll</strong>：动态链接库，将不同的库打包成不同的 chunk</p><ul><li><p>webpack.dll.js</p></li><li><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  使用dll技术，对某些库（第三方库：jquery、react、vue...）进行单独打包</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    当你运行 webpack 时，默认查找 webpack.config.js 配置文件</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    需求：需要运行 webpack.dll.js 文件</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      --&gt; webpack --config webpack.dll.js</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">resolve</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;path&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> webpack</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;webpack&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">	entry</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// 最终打包生成的[name] --&gt; jquery</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// [&#39;jquery&#39;] --&gt; 要打包的库是jquery</span></span>
<span class="line"><span style="color:#E06C75;">		jquery</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;jquery&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#E06C75;">	output</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">		filename</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;[name].js&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		path</span><span style="color:#ABB2BF;">: </span><span style="color:#61AFEF;">resolve</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">__dirname</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;dll&quot;</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#E06C75;">		library</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;[name]_[hash]&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 打包的库里面向外暴露出去的内容叫什么名字</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#E06C75;">	plugins</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// 打包生成一个 manifest.json --&gt; 提供和jquery映射</span></span>
<span class="line"><span style="color:#C678DD;">		new</span><span style="color:#E5C07B;"> webpack</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">DllPlugin</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">			name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;[name]_[hash]&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 映射库的暴露的内容名称</span></span>
<span class="line"><span style="color:#E06C75;">			path</span><span style="color:#ABB2BF;">: </span><span style="color:#61AFEF;">resolve</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">__dirname</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;dll/manifest.json&quot;</span><span style="color:#ABB2BF;">), </span><span style="color:#7F848E;font-style:italic;">// 输出文件路径</span></span>
<span class="line"><span style="color:#ABB2BF;">		}),</span></span>
<span class="line"><span style="color:#ABB2BF;">	],</span></span>
<span class="line"><span style="color:#E06C75;">	mode</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;production&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div></li><li><p>webpack.config.js</p></li><li><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">resolve</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;path&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> HtmlWebpackPlugin</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;html-webpack-plugin&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> webpack</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;webpack&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> AddAssetHtmlWebpackPlugin</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;add-asset-html-webpack-plugin&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">  entry</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;./src/index.js&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">  output</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">    filename</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;built.js&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    path</span><span style="color:#ABB2BF;">: </span><span style="color:#61AFEF;">resolve</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">__dirname</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;build&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span>
<span class="line"><span style="color:#E06C75;">  plugins</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#C678DD;">    new</span><span style="color:#61AFEF;"> HtmlWebpackPlugin</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">      template</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;./src/index.html&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }),</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 告诉webpack哪些库不参与打包，同时使用时的名称也得变~</span></span>
<span class="line"><span style="color:#C678DD;">    new</span><span style="color:#E5C07B;"> webpack</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">DllReferencePlugin</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">      manifest</span><span style="color:#ABB2BF;">: </span><span style="color:#61AFEF;">resolve</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">__dirname</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;dll/manifest.json&#39;</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// 打包输出</span></span>
<span class="line"><span style="color:#ABB2BF;">    }),</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 将某个文件打包输出去，并在html中自动引入该资源</span></span>
<span class="line"><span style="color:#C678DD;">    new</span><span style="color:#61AFEF;"> AddAssetHtmlWebpackPlugin</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">      filepath</span><span style="color:#ABB2BF;">: </span><span style="color:#61AFEF;">resolve</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">__dirname</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;dll/jquery.js&#39;</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// 打包输出</span></span>
<span class="line"><span style="color:#ABB2BF;">    })</span></span>
<span class="line"><span style="color:#ABB2BF;">  ],</span></span>
<span class="line"><span style="color:#E06C75;">  mode</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;production&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div></li></ul></li></ul><h4 id="优化代码运行的性能" tabindex="-1">优化代码运行的性能 <a class="header-anchor" href="#优化代码运行的性能" aria-label="Permalink to &quot;优化代码运行的性能&quot;">​</a></h4><ul><li><p><strong>缓存(hash-chunkhash-contenthash)</strong>：</p></li><li><p><strong>tree shaking</strong>：去除无用(只写了，未引用)代码，不用其他配置，但有前提</p><ul><li><strong>使用前提</strong>： <ul><li>1.必须使用 ES6 模块化</li><li>2.开启 production 环境</li></ul></li><li>package.json 中的 sideEffects 属性：默认是 false，<code>&quot;sideEffects&quot;: false</code>， <ul><li>所有代码都没有副作用（都可以进行 tree shaking），问题：可能会把 css / @babel/polyfill （副作用）文件干掉</li></ul></li><li>需要在 package.json 中把 sideEffects 配置： <code>&quot;sideEffects&quot;: [&quot;*.css&quot;, &quot;*.less&quot;]</code></li><li>之后这些文件就不会进行 tree shaking</li></ul></li><li><p><strong>code split</strong>：代码分割</p><ul><li><p>第一种做法：多入口和单入口方式拆分文件，和输出的文件名</p><ul><li><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">resolve</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;path&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> HtmlWebpackPlugin</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;html-webpack-plugin&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 单入口</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// entry: &#39;./src/js/index.js&#39;,</span></span>
<span class="line"><span style="color:#E06C75;">	entry</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// 多入口：有一个入口，最终输出就有一个bundle</span></span>
<span class="line"><span style="color:#E06C75;">		index</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;./src/js/index.js&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		test</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;./src/js/test.js&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#E06C75;">	output</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// [name]：取文件名</span></span>
<span class="line"><span style="color:#E06C75;">		filename</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;js/[name].[contenthash:10].js&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		path</span><span style="color:#ABB2BF;">: </span><span style="color:#61AFEF;">resolve</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">__dirname</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;build&quot;</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#E06C75;">	plugins</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#C678DD;">		new</span><span style="color:#61AFEF;"> HtmlWebpackPlugin</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">			template</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;./src/index.html&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">			minify</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">				collapseWhitespace</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">				removeComments</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">			},</span></span>
<span class="line"><span style="color:#ABB2BF;">		}),</span></span>
<span class="line"><span style="color:#ABB2BF;">	],</span></span>
<span class="line"><span style="color:#E06C75;">	mode</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;production&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div></li></ul></li><li><p>第二种做法：optimization.splitChunks 配置：将 node_modules 中代码单独打包一个 chunk 最终输出</p><ul><li><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">resolve</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;path&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> HtmlWebpackPlugin</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;html-webpack-plugin&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 单入口</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// entry: &#39;./src/js/index.js&#39;,</span></span>
<span class="line"><span style="color:#E06C75;">	entry</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">		index</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;./src/js/index.js&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		test</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;./src/js/test.js&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#E06C75;">	output</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// [name]：取文件名</span></span>
<span class="line"><span style="color:#E06C75;">		filename</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;js/[name].[contenthash:10].js&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		path</span><span style="color:#ABB2BF;">: </span><span style="color:#61AFEF;">resolve</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">__dirname</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;build&quot;</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#E06C75;">	plugins</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#C678DD;">		new</span><span style="color:#61AFEF;"> HtmlWebpackPlugin</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">			template</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;./src/index.html&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">			minify</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">				collapseWhitespace</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">				removeComments</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">			},</span></span>
<span class="line"><span style="color:#ABB2BF;">		}),</span></span>
<span class="line"><span style="color:#ABB2BF;">	],</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	/*</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    1. 设置单入口，可以将node_modules中代码单独打包一个chunk最终输出</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    2. 设置多入口，自动分析多入口chunk中，有没有公共的文件。如果有会打包成单独一个chunk</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  */</span></span>
<span class="line"><span style="color:#E06C75;">	optimization</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">		splitChunks</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">			chunks</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;all&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">		},</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#E06C75;">	mode</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;production&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div></li></ul></li><li><p>第三种做法：通过 js 代码，让某个文件被单独打包成一个 chunk</p><ul><li><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  通过js代码，让某个文件被单独打包成一个chunk</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  import动态导入语法：能将某个文件单独打包</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">*/</span></span>
<span class="line"><span style="color:#61AFEF;">import</span><span style="color:#ABB2BF;">(</span><span style="color:#7F848E;font-style:italic;">/* webpackChunkName: &#39;test&#39; */</span><span style="color:#98C379;">&#39;./test&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">  .</span><span style="color:#61AFEF;">then</span><span style="color:#ABB2BF;">(({ </span><span style="color:#E06C75;font-style:italic;">mul</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">count</span><span style="color:#ABB2BF;"> }) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 文件加载成功~</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // eslint-disable-next-line</span></span>
<span class="line"><span style="color:#E5C07B;">    console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">mul</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#ABB2BF;">  })</span></span>
<span class="line"><span style="color:#ABB2BF;">  .</span><span style="color:#61AFEF;">catch</span><span style="color:#ABB2BF;">(() </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // eslint-disable-next-line</span></span>
<span class="line"><span style="color:#E5C07B;">    console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;文件加载失败~&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">  });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// eslint-disable-next-line</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">sum</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">));</span><span style="color:#E06C75;">rue</span></span>
<span class="line"><span style="color:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#ABB2BF;">    })</span></span>
<span class="line"><span style="color:#ABB2BF;">  ],</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  /*</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    1. 设置单入口，可以将node_modules中代码单独打包一个chunk最终输出</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  */</span></span>
<span class="line"><span style="color:#E06C75;">  optimization</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">    splitChunks</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">      chunks</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;all&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span>
<span class="line"><span style="color:#E06C75;">  mode</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;production&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div></li><li><p>webpack.config.js 是单入口设置</p></li><li><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">resolve</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;path&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> HtmlWebpackPlugin</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;html-webpack-plugin&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 单入口</span></span>
<span class="line"><span style="color:#E06C75;">	entry</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;./src/js/index.js&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">	output</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// [name]：取文件名</span></span>
<span class="line"><span style="color:#E06C75;">		filename</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;js/[name].[contenthash:10].js&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		path</span><span style="color:#ABB2BF;">: </span><span style="color:#61AFEF;">resolve</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">__dirname</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;build&quot;</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#E06C75;">	plugins</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#C678DD;">		new</span><span style="color:#61AFEF;"> HtmlWebpackPlugin</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">			template</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;./src/index.html&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">			minify</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">				collapseWhitespace</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">				removeComments</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">			},</span></span>
<span class="line"><span style="color:#ABB2BF;">		}),</span></span>
<span class="line"><span style="color:#ABB2BF;">	],</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	/*</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    1. 可以将node_modules中代码单独打包一个chunk最终输出</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    2. 自动分析多入口chunk中，有没有公共的文件。如果有会打包成单独一个chunk</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  */</span></span>
<span class="line"><span style="color:#E06C75;">	optimization</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">		splitChunks</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">			chunks</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;all&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">		},</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#E06C75;">	mode</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;production&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div></li></ul></li></ul></li><li><p><strong>懒加载/预加载</strong>：js 代码实现懒加载/预加载</p><ul><li><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 点击按钮后再懒加载/预加载</span></span>
<span class="line"><span style="color:#E5C07B;">document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getElementById</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;btn&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">onclick</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 懒加载~：当文件需要使用时才加载~</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 预加载 webpackPrefetch：会在使用之前，提前加载js文件</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 正常加载可以认为是并行加载（同一时间加载多个文件）</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 预加载 webpackPrefetch：等其他资源加载完毕，浏览器空闲了，再偷偷加载资源</span></span>
<span class="line"><span style="color:#61AFEF;">	import</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		/* webpackChunkName: &#39;test&#39;, webpackPrefetch: true */</span><span style="color:#98C379;"> &quot;./test&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">	).</span><span style="color:#61AFEF;">then</span><span style="color:#ABB2BF;">(({ </span><span style="color:#E06C75;font-style:italic;">mul</span><span style="color:#ABB2BF;"> }) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">		console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">mul</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#ABB2BF;">	});</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div></li></ul></li><li><p><strong>PWA</strong>：渐进式网络开发应用程序(网页离线可访问)，性能也更好（淘宝的网页也使用这个技术）</p><ul><li><p>webpack 的 PWA 插件 workbox-webpack-plugin</p></li><li><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">resolve</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;path&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> MiniCssExtractPlugin</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;mini-css-extract-plugin&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> OptimizeCssAssetsWebpackPlugin</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;optimize-css-assets-webpack-plugin&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> HtmlWebpackPlugin</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;html-webpack-plugin&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> WorkboxWebpackPlugin</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;workbox-webpack-plugin&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  PWA: 渐进式网络开发应用程序(离线可访问)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    workbox --&gt; workbox-webpack-plugin</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 定义nodejs环境变量：决定使用browserslist的哪个环境</span></span>
<span class="line"><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">env</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">NODE_ENV</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;production&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 复用loader</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> commonCssLoader</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> [</span></span>
<span class="line"><span style="color:#E5C07B;">	MiniCssExtractPlugin</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">loader</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">	&quot;css-loader&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">	{</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// 还需要在package.json中定义browserslist</span></span>
<span class="line"><span style="color:#E06C75;">		loader</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;postcss-loader&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		options</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">			ident</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;postcss&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#61AFEF;">			plugins</span><span style="color:#ABB2BF;">: () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> [</span><span style="color:#61AFEF;">require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;postcss-preset-env&quot;</span><span style="color:#ABB2BF;">)()],</span></span>
<span class="line"><span style="color:#ABB2BF;">		},</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#ABB2BF;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">	entry</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;./src/js/index.js&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">	output</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">		filename</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;js/built.[contenthash:10].js&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		path</span><span style="color:#ABB2BF;">: </span><span style="color:#61AFEF;">resolve</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">__dirname</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;build&quot;</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#E06C75;">	module</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">		rules</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#ABB2BF;">			{</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				// 在package.json中eslintConfig --&gt; airbnb</span></span>
<span class="line"><span style="color:#E06C75;">				test</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;"> /</span><span style="color:#56B6C2;">\\.</span><span style="color:#E06C75;">js</span><span style="color:#C678DD;">$</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">				exclude</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;"> /node_modules/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				// 优先执行</span></span>
<span class="line"><span style="color:#E06C75;">				enforce</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;pre&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">				loader</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;eslint-loader&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">				options</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">					fix</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">				},</span></span>
<span class="line"><span style="color:#ABB2BF;">			},</span></span>
<span class="line"><span style="color:#ABB2BF;">			{</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				// 以下loader只会匹配一个</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				// 注意：不能有两个配置处理同一种类型文件</span></span>
<span class="line"><span style="color:#E06C75;">				oneOf</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#ABB2BF;">					{</span></span>
<span class="line"><span style="color:#E06C75;">						test</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;"> /</span><span style="color:#56B6C2;">\\.</span><span style="color:#E06C75;">css</span><span style="color:#C678DD;">$</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">						use</span><span style="color:#ABB2BF;">: [...</span><span style="color:#E06C75;">commonCssLoader</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">					},</span></span>
<span class="line"><span style="color:#ABB2BF;">					{</span></span>
<span class="line"><span style="color:#E06C75;">						test</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;"> /</span><span style="color:#56B6C2;">\\.</span><span style="color:#E06C75;">less</span><span style="color:#C678DD;">$</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">						use</span><span style="color:#ABB2BF;">: [...</span><span style="color:#E06C75;">commonCssLoader</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;less-loader&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">					},</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">					/*</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">            正常来讲，一个文件只能被一个loader处理。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">            当一个文件要被多个loader处理，那么一定要指定loader执行的先后顺序：</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">              先执行eslint 在执行babel</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">          */</span></span>
<span class="line"><span style="color:#ABB2BF;">					{</span></span>
<span class="line"><span style="color:#E06C75;">						test</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;"> /</span><span style="color:#56B6C2;">\\.</span><span style="color:#E06C75;">js</span><span style="color:#C678DD;">$</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">						exclude</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;"> /node_modules/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">						loader</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;babel-loader&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">						options</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">							presets</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#ABB2BF;">								[</span></span>
<span class="line"><span style="color:#98C379;">									&quot;@babel/preset-env&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">									{</span></span>
<span class="line"><span style="color:#E06C75;">										useBuiltIns</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;usage&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">										corejs</span><span style="color:#ABB2BF;">: { </span><span style="color:#E06C75;">version</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;"> },</span></span>
<span class="line"><span style="color:#E06C75;">										targets</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">											chrome</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;60&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">											firefox</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;50&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">										},</span></span>
<span class="line"><span style="color:#ABB2BF;">									},</span></span>
<span class="line"><span style="color:#ABB2BF;">								],</span></span>
<span class="line"><span style="color:#ABB2BF;">							],</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">							// 开启babel缓存</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">							// 第二次构建时，会读取之前的缓存</span></span>
<span class="line"><span style="color:#E06C75;">							cacheDirectory</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">						},</span></span>
<span class="line"><span style="color:#ABB2BF;">					},</span></span>
<span class="line"><span style="color:#ABB2BF;">					{</span></span>
<span class="line"><span style="color:#E06C75;">						test</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;"> /</span><span style="color:#56B6C2;">\\.</span><span style="color:#E06C75;">(jpg</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">png</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">gif)/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">						loader</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;url-loader&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">						options</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">							limit</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">8</span><span style="color:#56B6C2;"> *</span><span style="color:#D19A66;"> 1024</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">							name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;[hash:10].[ext]&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">							outputPath</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;imgs&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">							esModule</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">						},</span></span>
<span class="line"><span style="color:#ABB2BF;">					},</span></span>
<span class="line"><span style="color:#ABB2BF;">					{</span></span>
<span class="line"><span style="color:#E06C75;">						test</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;"> /</span><span style="color:#56B6C2;">\\.</span><span style="color:#E06C75;">html</span><span style="color:#C678DD;">$</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">						loader</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;html-loader&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">					},</span></span>
<span class="line"><span style="color:#ABB2BF;">					{</span></span>
<span class="line"><span style="color:#E06C75;">						exclude</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;"> /</span><span style="color:#56B6C2;">\\.</span><span style="color:#E06C75;">(js</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">css</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">less</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">html</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">jpg</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">png</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">gif)/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">						loader</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;file-loader&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">						options</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">							outputPath</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;media&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">						},</span></span>
<span class="line"><span style="color:#ABB2BF;">					},</span></span>
<span class="line"><span style="color:#ABB2BF;">				],</span></span>
<span class="line"><span style="color:#ABB2BF;">			},</span></span>
<span class="line"><span style="color:#ABB2BF;">		],</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#E06C75;">	plugins</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#C678DD;">		new</span><span style="color:#61AFEF;"> MiniCssExtractPlugin</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">			filename</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;css/built.[contenthash:10].css&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">		}),</span></span>
<span class="line"><span style="color:#C678DD;">		new</span><span style="color:#61AFEF;"> OptimizeCssAssetsWebpackPlugin</span><span style="color:#ABB2BF;">(),</span></span>
<span class="line"><span style="color:#C678DD;">		new</span><span style="color:#61AFEF;"> HtmlWebpackPlugin</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">			template</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;./src/index.html&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">			minify</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">				collapseWhitespace</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">				removeComments</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">			},</span></span>
<span class="line"><span style="color:#ABB2BF;">		}),</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// PWA配置</span></span>
<span class="line"><span style="color:#C678DD;">		new</span><span style="color:#E5C07B;"> WorkboxWebpackPlugin</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">GenerateSW</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			/*</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        1. 帮助serviceworker快速启动</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        2. 删除旧的 serviceworker</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        生成一个 serviceworker 配置文件~</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      */</span></span>
<span class="line"><span style="color:#E06C75;">			clientsClaim</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">			skipWaiting</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">		}),</span></span>
<span class="line"><span style="color:#ABB2BF;">	],</span></span>
<span class="line"><span style="color:#E06C75;">	mode</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;production&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">	devtool</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;source-map&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br></div></div></li><li><p>在 index.js 入口文件中配置</p><ul><li>1.eslint 不认识 window、navigator 全局变量</li><li>2.sw 代码必须运行在服务器上</li></ul></li><li><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  1. eslint不认识 window、navigator全局变量</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    解决：需要修改package.json中 eslintConfig 配置</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      &quot;env&quot;: {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        &quot;browser&quot;: true</span><span style="color:#7F848E;font-style:italic;"> // 支持浏览器端全局变量</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   2. sw代码必须运行在服务器上</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      --&gt; nodejs</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      --&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        npm i serve -g</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        serve -s build 启动服务器，将build目录下所有资源作为静态资源暴露出去</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">*/</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 注册serviceWorker</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 处理兼容性问题</span></span>
<span class="line"><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#98C379;">&quot;serviceWorker&quot;</span><span style="color:#C678DD;"> in</span><span style="color:#E06C75;"> navigator</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">	window</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">addEventListener</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;load&quot;</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">		navigator</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">serviceWorker</span></span>
<span class="line"><span style="color:#ABB2BF;">			.</span><span style="color:#61AFEF;">register</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;/service-worker.js&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">			.</span><span style="color:#61AFEF;">then</span><span style="color:#ABB2BF;">(() </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">				console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;sw注册成功了~&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">			})</span></span>
<span class="line"><span style="color:#ABB2BF;">			.</span><span style="color:#61AFEF;">catch</span><span style="color:#ABB2BF;">(() </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">				console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;sw注册失败了~&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">			});</span></span>
<span class="line"><span style="color:#ABB2BF;">	});</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div></li></ul></li></ul><h2 id="webpack5" tabindex="-1">Webpack5 <a class="header-anchor" href="#webpack5" aria-label="Permalink to &quot;Webpack5&quot;">​</a></h2><p>此版本重点关注以下内容:</p><ul><li>通过持久缓存提高构建性能.</li><li>使用更好的算法和默认值来改善长期缓存.</li><li>通过更好的树摇和代码生成来改善捆绑包大小.</li><li>清除处于怪异状态的内部结构，同时在 v4 中实现功能而不引入任何重大更改.</li><li>通过引入重大更改来为将来的功能做准备，以使我们能够尽可能长时间地使用 v5.</li></ul><h3 id="自动删除-node-js-polyfills" tabindex="-1">自动删除 Node.js Polyfills <a class="header-anchor" href="#自动删除-node-js-polyfills" aria-label="Permalink to &quot;自动删除 Node.js Polyfills&quot;">​</a></h3><p>早期，webpack 的目标是允许在浏览器中运行大多数 node.js 模块，但是模块格局发生了变化，许多模块用途现在主要是为前端目的而编写的。webpack &lt;= 4 附带了许多 node.js 核心模块的 polyfill，一旦模块使用任何核心模块（即 crypto 模块），这些模块就会自动应用。</p><p>尽管这使使用为 node.js 编写的模块变得容易，但它会将这些巨大的 polyfill 添加到包中。在许多情况下，这些 polyfill 是不必要的。</p><p>webpack 5 会自动停止填充这些核心模块，并专注于与前端兼容的模块。</p><p>迁移：</p><ul><li>尽可能尝试使用与前端兼容的模块。</li><li>可以为 node.js 核心模块手动添加一个 polyfill。错误消息将提示如何实现该目标。</li></ul><h3 id="chunk-和模块-id" tabindex="-1">Chunk 和模块 ID <a class="header-anchor" href="#chunk-和模块-id" aria-label="Permalink to &quot;Chunk 和模块 ID&quot;">​</a></h3><p>添加了用于长期缓存的新算法。在生产模式下默认情况下启用这些功能。</p><p><code>chunkIds: &quot;deterministic&quot;, moduleIds: &quot;deterministic&quot;</code></p><h3 id="chunk-id" tabindex="-1">Chunk ID <a class="header-anchor" href="#chunk-id" aria-label="Permalink to &quot;Chunk ID&quot;">​</a></h3><p>你可以不用使用 <code>import(/* webpackChunkName: &quot;name&quot; */ &quot;module&quot;)</code> 在开发环境来为 chunk 命名，生产环境还是有必要的</p><p>webpack 内部有 chunk 命名规则，不再是以 id(0, 1, 2)命名了</p><h3 id="tree-shaking" tabindex="-1">Tree Shaking <a class="header-anchor" href="#tree-shaking" aria-label="Permalink to &quot;Tree Shaking&quot;">​</a></h3><ol><li>webpack 现在能够处理对嵌套模块的 tree shaking</li></ol><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// inner.js</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> const</span><span style="color:#E5C07B;"> a</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> const</span><span style="color:#E5C07B;"> b</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 2</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// module.js</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#D19A66;"> *</span><span style="color:#C678DD;"> as</span><span style="color:#E06C75;"> inner</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &quot;./inner&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">inner</span><span style="color:#ABB2BF;"> };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// user.js</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#D19A66;"> *</span><span style="color:#C678DD;"> as</span><span style="color:#E06C75;"> module</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &quot;./module&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">inner</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>在生产环境中, inner 模块暴露的 <code>b</code> 会被删除</p><ol start="2"><li>webpack 现在能够多个模块之前的关系</li></ol><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">something</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &quot;./something&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> usingSomething</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">	return</span><span style="color:#E06C75;"> something</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> function</span><span style="color:#61AFEF;"> test</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">	return</span><span style="color:#61AFEF;"> usingSomething</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>当设置了<code>&quot;sideEffects&quot;: false</code>时，一旦发现<code>test</code>方法没有使用，不但删除<code>test</code>，还会删除<code>&quot;./something&quot;</code></p><ol start="3"><li>webpack 现在能处理对 Commonjs 的 tree shaking</li></ol><h3 id="output" tabindex="-1">Output <a class="header-anchor" href="#output" aria-label="Permalink to &quot;Output&quot;">​</a></h3><p>webpack 4 默认只能输出 ES5 代码</p><p>webpack 5 开始新增一个属性 output.ecmaVersion, 可以生成 ES5 和 ES6 / ES2015 代码.</p><p>如：<code>output.ecmaVersion: 2015</code></p><h3 id="splitchunk" tabindex="-1">SplitChunk <a class="header-anchor" href="#splitchunk" aria-label="Permalink to &quot;SplitChunk&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// webpack4</span></span>
<span class="line"><span style="color:#E06C75;">minSize</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">30000</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// webpack5</span></span>
<span class="line"><span style="color:#E06C75;">minSize</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">  javascript</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">30000</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">  style</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">50000</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="caching" tabindex="-1">Caching <a class="header-anchor" href="#caching" aria-label="Permalink to &quot;Caching&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 配置缓存</span></span>
<span class="line"><span style="color:#E06C75;">cache</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // 磁盘存储</span></span>
<span class="line"><span style="color:#E06C75;">  type</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;filesystem&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">  buildDependencies</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 当配置修改时，缓存失效</span></span>
<span class="line"><span style="color:#E06C75;">    config</span><span style="color:#ABB2BF;">: [</span><span style="color:#E06C75;">__filename</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>缓存将存储到 <code>node_modules/.cache/webpack</code></p><h3 id="监视输出文件" tabindex="-1">监视输出文件 <a class="header-anchor" href="#监视输出文件" aria-label="Permalink to &quot;监视输出文件&quot;">​</a></h3><p>之前 webpack 总是在第一次构建时输出全部文件，但是监视重新构建时会只更新修改的文件。</p><p>此次更新在第一次构建时会找到输出文件看是否有变化，从而决定要不要输出全部文件。</p><h3 id="默认值" tabindex="-1">默认值 <a class="header-anchor" href="#默认值" aria-label="Permalink to &quot;默认值&quot;">​</a></h3><ul><li><code>entry: &quot;./src/index.js</code></li><li><code>output.path: path.resolve(__dirname, &quot;dist&quot;)</code></li><li><code>output.filename: &quot;[name].js&quot;</code></li></ul><h3 id="更多内容" tabindex="-1">更多内容 <a class="header-anchor" href="#更多内容" aria-label="Permalink to &quot;更多内容&quot;">​</a></h3><p><a href="https://github.com/webpack/changelog-v5" target="_blank" rel="noreferrer">https://github.com/webpack/changelog-v5</a></p>`,451)]))}const u=n(e,[["render",o]]);export{b as __pageData,u as default};
