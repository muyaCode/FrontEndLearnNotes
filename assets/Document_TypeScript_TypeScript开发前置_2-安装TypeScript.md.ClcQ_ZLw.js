import{_ as n,c as a,o as l,ah as p}from"./chunks/framework.DqD713j2.js";const y=JSON.parse('{"title":"2-安装TypeScript","description":"","frontmatter":{},"headers":[],"relativePath":"Document/TypeScript/TypeScript开发前置/2-安装TypeScript.md","filePath":"Document/TypeScript/TypeScript开发前置/2-安装TypeScript.md","lastUpdated":1750954157000}'),e={name:"Document/TypeScript/TypeScript开发前置/2-安装TypeScript.md"};function o(t,s,r,i,c,u){return l(),a("div",null,s[0]||(s[0]=[p(`<h1 id="_2-安装typescript" tabindex="-1">2-安装TypeScript <a class="header-anchor" href="#_2-安装typescript" aria-label="Permalink to &quot;2-安装TypeScript&quot;">​</a></h1><p>命令行运行如下命令，全局安装 TypeScript：</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> install</span><span style="color:#D19A66;"> -g</span><span style="color:#98C379;"> typescript</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>安装完成后，在控制台运行如下命令，检查安装是否成功(3.x)：</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 查看 tsc 版本</span></span>
<span class="line"><span style="color:#61AFEF;">tsc</span><span style="color:#D19A66;"> -v</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 编译 ts 文件</span></span>
<span class="line"><span style="color:#61AFEF;">tsc</span><span style="color:#98C379;"> fileName.ts</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="typescript配置文件" tabindex="-1">typescript配置文件 <a class="header-anchor" href="#typescript配置文件" aria-label="Permalink to &quot;typescript配置文件&quot;">​</a></h2><p>生成配置文件</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">tsc</span><span style="color:#D19A66;"> --init</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>配置文件例子</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">  &quot;compilerOptions&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    /* Basic Options */</span></span>
<span class="line"><span style="color:#E06C75;">    &quot;target&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;es5&quot;</span><span style="color:#ABB2BF;">,                          </span><span style="color:#7F848E;font-style:italic;">/* Specify ECMAScript target version: &#39;ES3&#39; (default), &#39;ES5&#39;, &#39;ES2015&#39;, &#39;ES2016&#39;, &#39;ES2017&#39;,&#39;ES2018&#39; or &#39;ESNEXT&#39;. 指定ECMAScript的目标版本*/</span></span>
<span class="line"><span style="color:#E06C75;">    &quot;module&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;commonjs&quot;</span><span style="color:#ABB2BF;">,                     </span><span style="color:#7F848E;font-style:italic;">/* Specify module code generation: &#39;none&#39;, &#39;commonjs&#39;, &#39;amd&#39;, &#39;system&#39;, &#39;umd&#39;, &#39;es2015&#39;, or &#39;ESNext&#39;. 指定模块代码的生成方式*/</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // &quot;lib&quot;: [],                             /* Specify library files to be included in the compilation. 指定编译的时候用来包含的编译文件*/</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // &quot;allowJs&quot;: true,                       /* Allow javascript files to be compiled. 允许编译JS文件*/</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // &quot;checkJs&quot;: true,                       /* Report errors in .js files. 在JS中包括错误*/</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // &quot;jsx&quot;: &quot;preserve&quot;,                     /* Specify JSX code generation: &#39;preserve&#39;, &#39;react-native&#39;, or &#39;react&#39;. 指定JSX代码的生成方式 是保留还是react-native或者react*/</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // &quot;declaration&quot;: true,                   /* Generates corresponding &#39;.d.ts&#39; file.生成相应的类型声明文件 */</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // &quot;declarationMap&quot;: true,                /* Generates a sourcemap for each corresponding &#39;.d.ts&#39; file. 为每个类型声明文件生成相应的sourcemap*/</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // &quot;sourceMap&quot;: true,                     /* Generates corresponding &#39;.map&#39; file. 生成对应的map文件 */</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // &quot;outFile&quot;: &quot;./&quot;,                       /* Concatenate and emit output to single file. 合并并且把编译后的内容输出 到一个文件里*/</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // &quot;outDir&quot;: &quot;./&quot;,                        /* Redirect output structure to the directory.按原始结构输出到目标目录 */</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // &quot;rootDir&quot;: &quot;./&quot;,                       /* Specify the root directory of input files. Use to control the output directory structure with --outDir. 指定输入文件的根目录，用--outDir来控制输出的目录结构*/</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // &quot;composite&quot;: true,                     /* Enable project compilation 启用项目编译*/</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // &quot;removeComments&quot;: true,                /* Do not emit comments to output. 移除注释*/</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // &quot;noEmit&quot;: true,                        /* Do not emit outputs. 不要输出*/</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // &quot;importHelpers&quot;: true,                 /* Import emit helpers from &#39;tslib&#39;. */</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // &quot;downlevelIteration&quot;: true,            /* Provide full support for iterables in &#39;for-of&#39;, spread, and destructuring when targeting &#39;ES5&#39; or &#39;ES3&#39;. 当目标是ES5或ES3的时候提供对for-of、扩展运算符和解构赋值中对于迭代器的完整支持*/</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // &quot;isolatedModules&quot;: true,               /* Transpile each file as a separate module (similar to &#39;ts.transpileModule&#39;).r把每一个文件转译成一个单独的模块 */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    /* Strict Type-Checking Options */</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    //&quot;strict&quot;: true,                           /* Enable all strict type-checking options. 启用完全的严格类型检查 */</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // &quot;noImplicitAny&quot;: true,                 /* Raise error on expressions and declarations with an implied &#39;any&#39; type. 不能使用隐式的any类型*/</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // &quot;strictNullChecks&quot;: true,              /* Enable strict null checks. 启用严格的NULL检查*/</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // &quot;strictFunctionTypes&quot;: true,           /* Enable strict checking of function types. 启用严格的函数类型检查*/</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // &quot;strictBindCallApply&quot;: true,           /* Enable strict &#39;bind&#39;, &#39;call&#39;, and &#39;apply&#39; methods on functions.启用函数上严格的bind call 和apply方法 */</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // &quot;strictPropertyInitialization&quot;: true,  /* Enable strict checking of property initialization in classes. 启用类上初始化属性检查*/</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // &quot;noImplicitThis&quot;: true,                /* Raise error on &#39;this&#39; expressions with an implied &#39;any&#39; type.在默认的any中调用 this表达式报错 */</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // &quot;alwaysStrict&quot;: true,                  /* Parse in strict mode and emit &quot;use strict&quot; for each source file. 在严格模式下解析并且向每个源文件中发射use strict*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    /* Additional Checks */</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // &quot;noUnusedLocals&quot;: true,                /* Report errors on unused locals. 有未使用到的本地变量时报错 */</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // &quot;noUnusedParameters&quot;: true,            /* Report errors on unused parameters. 有未使用到的参数时报错*/</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // &quot;noImplicitReturns&quot;: true,             /* Report error when not all code paths in function return a value. 当不是所有的代码路径都有返回值的时候报错*/</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // &quot;noFallthroughCasesInSwitch&quot;: true,    /* Report errors for fallthrough cases in switch statement. 在switch表达式中没有替代的case会报错 */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    /* Module Resolution Options */</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // &quot;moduleResolution&quot;: &quot;node&quot;,            /* Specify module resolution strategy: &#39;node&#39; (Node.js) or &#39;classic&#39; (TypeScript pre-1.6). 指定模块的解析策略 node classic*/</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // &quot;baseUrl&quot;: &quot;./&quot;,                       /* Base directory to resolve non-absolute module names. 在解析非绝对路径模块名的时候的基准路径*/</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // &quot;paths&quot;: {},                           /* A series of entries which re-map imports to lookup locations relative to the &#39;baseUrl&#39;. 一些路径的集合*/</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // &quot;rootDirs&quot;: [],                        /* List of root folders whose combined content represents the structure of the project at runtime. 根目录的列表，在运行时用来合并内容*/</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // &quot;typeRoots&quot;: [],                       /* List of folders to include type definitions from. 用来包含类型声明的文件夹列表*/</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // &quot;types&quot;: [],                           /* Type declaration files to be included in compilation.在编译的时候被包含的类型声明 */</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // &quot;allowSyntheticDefaultImports&quot;: true,  /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking.当没有默认导出的时候允许默认导入，这个在代码执行的时候没有作用，只是在类型检查的时候生效 */</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    //&quot;esModuleInterop&quot;: true                   /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies &#39;allowSyntheticDefaultImports&#39;.*/</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // &quot;preserveSymlinks&quot;: true,              /* Do not resolve the real path of symlinks.不要symlinks解析的真正路径 */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    /* Source Map Options */</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // &quot;sourceRoot&quot;: &quot;&quot;,                      /* Specify the location where debugger should locate TypeScript files instead of source locations. 指定ts文件位置*/</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // &quot;mapRoot&quot;: &quot;&quot;,                         /* Specify the location where debugger should locate map files instead of generated locations. 指定 map文件存放的位置 */</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // &quot;inlineSourceMap&quot;: true,               /* Emit a single file with source maps instead of having a separate file. 源文件和sourcemap 文件在同一文件中，而不是把map文件放在一个单独的文件里*/</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // &quot;inlineSources&quot;: true,                 /* Emit the source alongside the sourcemaps within a single file; requires &#39;--inlineSourceMap&#39; or &#39;--sourceMap&#39; to be set. 源文件和sourcemap 文件在同一文件中*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    /* Experimental Options */</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // &quot;experimentalDecorators&quot;: true,        /* Enables experimental support for ES7 decorators. 启动装饰器*/</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // &quot;emitDecoratorMetadata&quot;: true,         /* Enables experimental support for emitting type metadata for decorators. */</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br></div></div><h2 id="工具平台" tabindex="-1">工具平台 <a class="header-anchor" href="#工具平台" aria-label="Permalink to &quot;工具平台&quot;">​</a></h2><p>开源地址：<a href="https://github.com/Microsoft/TypeScript" target="_blank" rel="noreferrer">https://github.com/Microsoft/TypeScript</a></p><p>官网</p><ul><li><p><a href="https://www.tslang.cn/" target="_blank" rel="noreferrer">https://www.tslang.cn/</a></p></li><li><p><a href="http://www.typescriptlang.org/" target="_blank" rel="noreferrer">http://www.typescriptlang.org/</a></p></li></ul><p>演练场：<a href="https://www.typescriptlang.org/zh/play" target="_blank" rel="noreferrer">https://www.typescriptlang.org/zh/play</a></p><p>运行Viewer：te-ast-viewer.com</p><h2 id="环境搭建和编译" tabindex="-1">环境搭建和编译 <a class="header-anchor" href="#环境搭建和编译" aria-label="Permalink to &quot;环境搭建和编译&quot;">​</a></h2><h3 id="_0-安装node" tabindex="-1">0.安装node <a class="header-anchor" href="#_0-安装node" aria-label="Permalink to &quot;0.安装node&quot;">​</a></h3><h3 id="_1-安装typescript" tabindex="-1">1.安装TypeScript <a class="header-anchor" href="#_1-安装typescript" aria-label="Permalink to &quot;1.安装TypeScript&quot;">​</a></h3><p>nodejs环境下</p><ul><li><p>npm install -g typescript</p></li><li><p>npm i -g typescript</p></li></ul><p>homebrew环境</p><ul><li>ruby -e &quot;url&quot;</li></ul><h3 id="_2-安装node-运行ts文件-依赖" tabindex="-1">2.安装node 运行ts文件 依赖 <a class="header-anchor" href="#_2-安装node-运行ts文件-依赖" aria-label="Permalink to &quot;2.安装node 运行ts文件 依赖&quot;">​</a></h3><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> install</span><span style="color:#D19A66;"> -g</span><span style="color:#98C379;"> ts-node</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_3-typescript项目配置文件初始化-生成tsconfig-json文件" tabindex="-1">3.TypeScript项目配置文件初始化 生成tsconfig.json文件 <a class="header-anchor" href="#_3-typescript项目配置文件初始化-生成tsconfig-json文件" aria-label="Permalink to &quot;3.TypeScript项目配置文件初始化 生成tsconfig.json文件&quot;">​</a></h3><ul><li><p>tsc --init</p></li><li><p>配置文档：<a href="https://www.tslang.cn/docs/handbook/tsconfig-json.html" target="_blank" rel="noreferrer">https://www.tslang.cn/docs/handbook/tsconfig-json.html</a></p></li></ul><h3 id="_4-运行调试" tabindex="-1">4.运行调试 <a class="header-anchor" href="#_4-运行调试" aria-label="Permalink to &quot;4.运行调试&quot;">​</a></h3><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">ts-node</span><span style="color:#98C379;"> hello.ts</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_5-编译文件和相关选项" tabindex="-1">5.编译文件和相关选项 <a class="header-anchor" href="#_5-编译文件和相关选项" aria-label="Permalink to &quot;5.编译文件和相关选项&quot;">​</a></h3><h4 id="编译成js命令" tabindex="-1">编译成js命令 <a class="header-anchor" href="#编译成js命令" aria-label="Permalink to &quot;编译成js命令&quot;">​</a></h4><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">tsc</span><span style="color:#98C379;"> hello.ts</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="保存自动编译" tabindex="-1">保存自动编译 <a class="header-anchor" href="#保存自动编译" aria-label="Permalink to &quot;保存自动编译&quot;">​</a></h4><h5 id="单个监视" tabindex="-1">单个监视 <a class="header-anchor" href="#单个监视" aria-label="Permalink to &quot;单个监视&quot;">​</a></h5><ul><li>tsc hello.ts -w <ul><li>监视编译</li></ul></li></ul><h5 id="多个监视" tabindex="-1">多个监视 <a class="header-anchor" href="#多个监视" aria-label="Permalink to &quot;多个监视&quot;">​</a></h5><ul><li><p>1.根目录新建tsconfig.json 配置文件</p><ul><li><p><a href="https://www.tslang.cn/docs/handbook/tsconfig-json.html" target="_blank" rel="noreferrer">https://www.tslang.cn/docs/handbook/tsconfig-json.html</a></p></li><li><p>配置可以只写空对象</p><ul><li>{ }</li></ul></li><li><p>详细配置</p><ul><li><p>&quot;compilerOptions&quot;</p><ul><li><p>​ // 编译器选项 &quot;compilerOptions&quot;: { &quot;target&quot;: &quot;ES5&quot;, // 编译成的ES版本 &quot;module&quot;: &quot;commonjs&quot;, // 模块化规范 ... },</p></li><li><p>子选项</p><ul><li><p>常用</p><ul><li><p>target</p><ul><li><p>设置ts代码编译的目标版本</p></li><li><p>可选值：</p><ul><li>ES3（默认）、ES5、ES6/ES2015、ES7/ES2016、ES2017、ES2018、ES2019、ES2020、ESNext</li></ul></li><li><p>示例：</p><ul><li>&quot;compilerOptions&quot;: { &quot;target&quot;: &quot;ES6&quot; } <ul><li>编译成ES6版本的js</li></ul></li></ul></li></ul></li><li><p>lib</p><ul><li><p>指定代码运行时所包含的库（宿主环境）</p></li><li><p>可选值：</p><ul><li>ES5、ES6/ES2015、ES7/ES2016、ES2017、ES2018、ES2019、ES2020、ESNext、DOM、WebWorker、ScriptHost ......</li></ul></li><li><p>示例：</p><ul><li>&quot;compilerOptions&quot;: { &quot;target&quot;: &quot;ES6&quot;, &quot;lib&quot;: [&quot;ES6&quot;, &quot;DOM&quot;], &quot;outDir&quot;: &quot;dist&quot;, &quot;outFile&quot;: &quot;dist/aa.js&quot; }</li></ul></li></ul></li><li><p>module</p><ul><li><p>设置编译后代码使用的模块化系统</p></li><li><p>可选值：</p><ul><li>CommonJS、UMD、AMD、System、ES2020、ESNext、None</li></ul></li><li><p>示例：</p><ul><li>&quot;compilerOptions&quot;: { &quot;module&quot;: &quot;CommonJS&quot; }</li></ul></li></ul></li><li><p>outDir</p><ul><li><p>编译后文件的所在目录</p></li><li><p>默认情况下，编译后的js文件会和ts文件位于相同的目录，设置outDir后可以改变编译后文件的位置</p></li><li><p>示例：</p><ul><li>&quot;compilerOptions&quot;: { &quot;outDir&quot;: &quot;dist&quot; } <ul><li>设置后编译后的js文件将会生成到dist目录</li></ul></li></ul></li></ul></li><li><p>outFile</p><ul><li><p>将所有的文件编译为一个js文件</p></li><li><p>默认会将所有的编写在全局作用域中的代码合并为一个js文件，如果module制定了None、System或AMD则会将模块一起合并到文件之中</p></li><li><p>示例：</p><ul><li>&quot;compilerOptions&quot;: { &quot;outFile&quot;: &quot;dist/app.js&quot; }</li></ul></li></ul></li><li><p>rootDir</p><ul><li><p>指定代码的根目录，默认情况下编译后文件的目录结构会以最长的公共目录为根目录，通过rootDir可以手动指定根目录</p></li><li><p>示例：</p><ul><li>&quot;compilerOptions&quot;: { &quot;rootDir&quot;: &quot;./src&quot; }</li></ul></li></ul></li><li><p>allowJs</p><ul><li>是否对js文件编译</li></ul></li><li><p>checkJs</p><ul><li><p>是否对js文件进行检查</p></li><li><p>示例：</p><ul><li>&quot;compilerOptions&quot;: { &quot;allowJs&quot;: true, &quot;checkJs&quot;: true }</li></ul></li></ul></li><li><p>removeComments</p><ul><li><p>是否删除注释</p></li><li><p>默认值：false</p></li></ul></li><li><p>noEmit</p><ul><li><p>不对代码进行编译</p></li><li><p>默认值：false</p></li></ul></li><li><p>sourceMap</p><ul><li><p>是否生成sourceMap</p></li><li><p>默认值：false</p></li></ul></li></ul></li><li><p>严格检查</p><ul><li><p>- strict</p><ul><li>- 启用所有的严格检查，默认值为true，设置后相当于开启了所有的严格检查</li></ul></li><li><p>- alwaysStrict</p><ul><li>- 总是以严格模式对代码进行编译</li></ul></li><li><p>- noImplicitAny</p><ul><li>- 禁止隐式的any类型</li></ul></li><li><p>- noImplicitThis</p><ul><li>- 禁止类型不明确的this</li></ul></li><li><p>- strictBindCallApply</p><ul><li>- 严格检查bind、call和apply的参数列表</li></ul></li><li><p>- strictFunctionTypes</p><ul><li>- 严格检查函数的类型</li></ul></li><li><p>- strictNullChecks</p><ul><li>- 严格的空值检查</li></ul></li><li><p>- strictPropertyInitialization</p><ul><li>- 严格检查属性是否初始化</li></ul></li></ul></li><li><p>额外检查</p><ul><li><p>- noFallthroughCasesInSwitch</p><ul><li>- 检查switch语句包含正确的break</li></ul></li><li><p>- noImplicitReturns</p><ul><li>- 检查函数没有隐式的返回值</li></ul></li><li><p>- noUnusedLocals</p><ul><li>- 检查未使用的局部变量</li></ul></li><li><p>- noUnusedParameters</p><ul><li>- 检查未使用的参数</li></ul></li></ul></li><li><p>高级</p><ul><li><p>- allowUnreachableCode</p><ul><li><p>- 检查不可达代码</p></li><li><p>- 可选值：</p></li><li><p>​ - true，忽略不可达代码</p></li><li><p>​ - false，不可达代码将引起错误</p></li></ul></li><li><p>- noEmitOnError</p><ul><li><p>- 有错误的情况下不进行编译</p></li><li><p>- 默认值：false</p></li></ul></li></ul></li></ul></li><li><p>compilerOptions 选项大全</p><ul><li><a href="https://www.tslang.cn/docs/handbook/compiler-options.html" target="_blank" rel="noreferrer">https://www.tslang.cn/docs/handbook/compiler-options.html</a></li></ul></li></ul></li><li><p>&quot;files&quot;</p><ul><li><p><code> // &quot;files&quot;: [ &quot;core.ts&quot;, &quot;sys.ts&quot;, ]</code></p></li><li><p>指定被编译文件的列表，只有需要编译的文件少时才会用到</p></li></ul></li><li><p>&quot;include&quot;</p><ul><li>​ <code>// 指定编译的目录下的ts文件 &quot;include&quot;: [ // ** 表示任意目录 *表示任意文件 &quot;src/**/*&quot; ],</code></li></ul></li><li><p>&quot;exclude&quot;</p><ul><li>​ <code>// 被排除的：不需要被编译的文件目录 &quot;exclude&quot;: [ &quot;node_modules&quot;, &quot;**/*.spec.ts&quot; ]</code></li></ul></li><li><p>&quot;extends&quot;</p><ul><li><code>&quot;extends&quot;: &quot;./configs/base&quot;,</code></li></ul></li></ul></li></ul></li><li><p>2.执行命令</p><ul><li><p>tsc</p></li><li><p>tsc -w</p><ul><li>监视所有ts文件，自动编译</li></ul></li></ul></li></ul><h3 id="_6-使用webpack打包ts代码" tabindex="-1">6.使用webpack打包ts代码 <a class="header-anchor" href="#_6-使用webpack打包ts代码" aria-label="Permalink to &quot;6.使用webpack打包ts代码&quot;">​</a></h3><h4 id="_1-运行项目初始化命令生成package-json文件" tabindex="-1">1.运行项目初始化命令生成package.json文件 <a class="header-anchor" href="#_1-运行项目初始化命令生成package-json文件" aria-label="Permalink to &quot;1.运行项目初始化命令生成package.json文件&quot;">​</a></h4><ul><li>npm init -y</li></ul><h4 id="_2-安装webpack和其他相关依赖" tabindex="-1">2.安装webpack和其他相关依赖 <a class="header-anchor" href="#_2-安装webpack和其他相关依赖" aria-label="Permalink to &quot;2.安装webpack和其他相关依赖&quot;">​</a></h4><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> i</span><span style="color:#D19A66;"> -D</span><span style="color:#98C379;"> webpack</span><span style="color:#98C379;"> webpack-cli</span><span style="color:#98C379;"> webpack-dev-server</span><span style="color:#98C379;"> typescript</span><span style="color:#98C379;"> ts-loader</span><span style="color:#98C379;"> html-webpack-plugin</span><span style="color:#98C379;"> clean-webpack-plugin</span><span style="color:#98C379;"> cross-env</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li><p>-D 开发依赖</p></li><li><p>依赖说明</p><ul><li><p>- webpack</p><ul><li>- 构建工具webpack</li></ul></li><li><p>- webpack-cli</p><ul><li>- webpack的命令行工具</li></ul></li><li><p>- webpack-dev-server</p><ul><li>- webpack的开发服务器</li></ul></li><li><p>- typescript</p><ul><li>- ts编译器</li></ul></li><li><p>- ts-loader</p><ul><li>- ts加载器，用于在webpack中编译ts文件</li></ul></li><li><p>- html-webpack-plugin</p><ul><li>- webpack中html插件，用来自动创建html文件</li></ul></li><li><p>- clean-webpack-plugin</p><ul><li>- webpack中的清除插件，每次构建都会先清除目录</li></ul></li><li><p>cross-env</p><ul><li><p>环境配置</p><ul><li><p>生产环境</p></li><li><p>开发环境</p></li></ul></li></ul></li></ul></li></ul><h4 id="_3-根目录下创建webpack的配置文件webpack-config-js" tabindex="-1">3.根目录下创建webpack的配置文件webpack.config.js <a class="header-anchor" href="#_3-根目录下创建webpack的配置文件webpack-config-js" aria-label="Permalink to &quot;3.根目录下创建webpack的配置文件webpack.config.js&quot;">​</a></h4><p>网上查找相关配置</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> path</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;path&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> HtmlWebpackPlugin</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;html-webpack-plugin&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">CleanWebpackPlugin</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;clean-webpack-plugin&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">    optimization</span><span style="color:#ABB2BF;">:{</span></span>
<span class="line"><span style="color:#E06C75;">        minimize</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#7F848E;font-style:italic;"> // 关闭代码压缩，可选</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">    entry</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;./src/index.ts&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#E06C75;">    devtool</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;inline-source-map&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#E06C75;">    devServer</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">        contentBase</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;./dist&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">    output</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">        path</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">resolve</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">__dirname</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;dist&quot;</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#E06C75;">        filename</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;bundle.js&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        environment</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">            arrowFunction</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#7F848E;font-style:italic;"> // 关闭webpack的箭头函数，可选</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">    resolve</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">        extensions</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;.ts&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;.js&quot;</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#E06C75;">    module</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">        rules</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#ABB2BF;">            {</span></span>
<span class="line"><span style="color:#E06C75;">                test</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;"> /</span><span style="color:#56B6C2;">\\.</span><span style="color:#E06C75;">ts</span><span style="color:#C678DD;">$</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">                use</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">                   loader</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;ts-loader&quot;</span><span style="color:#ABB2BF;">     </span></span>
<span class="line"><span style="color:#ABB2BF;">                },</span></span>
<span class="line"><span style="color:#E06C75;">                exclude</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;"> /node_modules/</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#ABB2BF;">        ]</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">    plugins</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#C678DD;">        new</span><span style="color:#61AFEF;"> CleanWebpackPlugin</span><span style="color:#ABB2BF;">(),</span></span>
<span class="line"><span style="color:#C678DD;">        new</span><span style="color:#61AFEF;"> HtmlWebpackPlugin</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">            title</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;">&#39;TS测试&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">        }),</span></span>
<span class="line"><span style="color:#ABB2BF;">    ]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br></div></div><h4 id="_4-根目录下创建tsconfig-json-配置可以根据自己需要" tabindex="-1">4.根目录下创建tsconfig.json，配置可以根据自己需要 <a class="header-anchor" href="#_4-根目录下创建tsconfig-json-配置可以根据自己需要" aria-label="Permalink to &quot;4.根目录下创建tsconfig.json，配置可以根据自己需要&quot;">​</a></h4><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#98C379;">    &quot;compilerOptions&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#98C379;">        &quot;target&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;ES2015&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">        &quot;module&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;ES2015&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">        &quot;strict&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h4 id="_5-修改package-json添加如下配置" tabindex="-1">5.修改package.json添加如下配置 <a class="header-anchor" href="#_5-修改package-json添加如下配置" aria-label="Permalink to &quot;5.修改package.json添加如下配置&quot;">​</a></h4><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">  ...</span><span style="color:#E06C75;">略</span><span style="color:#ABB2BF;">...</span></span>
<span class="line"><span style="color:#98C379;">  &quot;scripts&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#98C379;">    &quot;test&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;echo </span><span style="color:#56B6C2;">\\&quot;</span><span style="color:#98C379;">Error: no test specified</span><span style="color:#56B6C2;">\\&quot;</span><span style="color:#98C379;"> &amp;&amp; exit 1&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">    &quot;build&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;webpack&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">    &quot;start&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;webpack serve --open chrome.exe&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span>
<span class="line"><span style="color:#ABB2BF;">  ...</span><span style="color:#E06C75;">略</span><span style="color:#ABB2BF;">...</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h4 id="_6-在src下创建ts文件-并在并命令行执行npm-run-build对代码进行编译-或者执行npm-start来启动开发服务器" tabindex="-1">6.在src下创建ts文件，并在并命令行执行<code>npm run build</code>对代码进行编译，或者执行<code>npm start</code>来启动开发服务器 <a class="header-anchor" href="#_6-在src下创建ts文件-并在并命令行执行npm-run-build对代码进行编译-或者执行npm-start来启动开发服务器" aria-label="Permalink to &quot;6.在src下创建ts文件，并在并命令行执行\`\`\`npm run build\`\`\`对代码进行编译，或者执行\`\`\`npm start\`\`\`来启动开发服务器&quot;">​</a></h4><h3 id="_7-babel" tabindex="-1">7.babel <a class="header-anchor" href="#_7-babel" aria-label="Permalink to &quot;7.babel&quot;">​</a></h3><h4 id="作用" tabindex="-1">作用 <a class="header-anchor" href="#作用" aria-label="Permalink to &quot;作用&quot;">​</a></h4><p>1.新ES语法转成兼容的旧语法</p><h4 id="_1-安装依赖包" tabindex="-1">1.安装依赖包： <a class="header-anchor" href="#_1-安装依赖包" aria-label="Permalink to &quot;1.安装依赖包：&quot;">​</a></h4><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> i</span><span style="color:#D19A66;"> -D</span><span style="color:#98C379;"> @babel/core</span><span style="color:#98C379;"> @babel/preset-env</span><span style="color:#98C379;"> babel-loader</span><span style="color:#98C379;"> core-js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li><p>共安装了4个包，分别是：</p><ul><li><p>@babel/core</p><ul><li>babel的核心工具</li></ul></li><li><p>@babel/preset-env</p><ul><li>babel的预定义环境</li></ul></li><li><p>@babel-loader</p><ul><li>babel在webpack中的加载器</li></ul></li><li><p>core-js</p><ul><li>core-js用来使老版本的浏览器支持新版ES语法</li></ul></li></ul></li></ul><h4 id="_2-修改webpack配置文件" tabindex="-1">2.修改webpack配置文件 <a class="header-anchor" href="#_2-修改webpack配置文件" aria-label="Permalink to &quot;2.修改webpack配置文件&quot;">​</a></h4><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 引入一个包</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> path</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;path&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 引入html插件</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> HTMLWebpackPlugin</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;html-webpack-plugin&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 引入clean插件</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">CleanWebpackPlugin</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;clean-webpack-plugin&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// webpack中的所有的配置信息都应该写在module.exports中</span></span>
<span class="line"><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 指定入口文件</span></span>
<span class="line"><span style="color:#E06C75;">    entry</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;./src/index.ts&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 指定打包文件所在目录</span></span>
<span class="line"><span style="color:#E06C75;">    output</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 指定打包文件的目录</span></span>
<span class="line"><span style="color:#E06C75;">        path</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">resolve</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">__dirname</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;dist&#39;</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 打包后文件的文件</span></span>
<span class="line"><span style="color:#E06C75;">        filename</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;bundle.js&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 告诉webpack不使用箭头</span></span>
<span class="line"><span style="color:#E06C75;">        environment</span><span style="color:#ABB2BF;">:{</span></span>
<span class="line"><span style="color:#E06C75;">            arrowFunction</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 指定webpack打包时要使用模块</span></span>
<span class="line"><span style="color:#E06C75;">    module</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 指定要加载的规则</span></span>
<span class="line"><span style="color:#E06C75;">        rules</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#ABB2BF;">            {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                // test指定的是规则生效的文件</span></span>
<span class="line"><span style="color:#E06C75;">                test</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;"> /</span><span style="color:#56B6C2;">\\.</span><span style="color:#E06C75;">ts</span><span style="color:#C678DD;">$</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                // 要使用的loader</span></span>
<span class="line"><span style="color:#E06C75;">                use</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                     // 配置babel</span></span>
<span class="line"><span style="color:#ABB2BF;">                     {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                         // 指定加载器</span></span>
<span class="line"><span style="color:#E06C75;">                         loader</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;">&quot;babel-loader&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                         // 设置babel</span></span>
<span class="line"><span style="color:#E06C75;">                         options</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                             // 设置预定义的环境</span></span>
<span class="line"><span style="color:#E06C75;">                             presets</span><span style="color:#ABB2BF;">:[</span></span>
<span class="line"><span style="color:#ABB2BF;">                                 [</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                                     // 指定环境的插件</span></span>
<span class="line"><span style="color:#98C379;">                                     &quot;@babel/preset-env&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                                     // 配置信息</span></span>
<span class="line"><span style="color:#ABB2BF;">                                     {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                                         // 要兼容的目标浏览器</span></span>
<span class="line"><span style="color:#E06C75;">                                         targets</span><span style="color:#ABB2BF;">:{</span></span>
<span class="line"><span style="color:#98C379;">                                             &quot;chrome&quot;</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;">&quot;58&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">                                             &quot;ie&quot;</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;">&quot;11&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">                                         },</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                                         // 指定corejs的版本</span></span>
<span class="line"><span style="color:#98C379;">                                         &quot;corejs&quot;</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;">&quot;3&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                                         // 使用corejs的方式 &quot;usage&quot; 表示按需加载</span></span>
<span class="line"><span style="color:#98C379;">                                         &quot;useBuiltIns&quot;</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;">&quot;usage&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">                                     }</span></span>
<span class="line"><span style="color:#ABB2BF;">                                 ]</span></span>
<span class="line"><span style="color:#ABB2BF;">                             ]</span></span>
<span class="line"><span style="color:#ABB2BF;">                         }</span></span>
<span class="line"><span style="color:#ABB2BF;">                     },</span></span>
<span class="line"><span style="color:#98C379;">                    &#39;ts-loader&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">                ],</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                // 要排除的文件</span></span>
<span class="line"><span style="color:#E06C75;">                exclude</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;"> /node-modules/</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#ABB2BF;">        ]</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 配置Webpack插件</span></span>
<span class="line"><span style="color:#E06C75;">    plugins</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#C678DD;">        new</span><span style="color:#61AFEF;"> CleanWebpackPlugin</span><span style="color:#ABB2BF;">(),</span></span>
<span class="line"><span style="color:#C678DD;">        new</span><span style="color:#61AFEF;"> HTMLWebpackPlugin</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">            // title: &quot;这是一个自定义的title&quot;</span></span>
<span class="line"><span style="color:#E06C75;">            template</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;./src/index.html&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">        }),</span></span>
<span class="line"><span style="color:#ABB2BF;">    ],</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 用来设置引用模块</span></span>
<span class="line"><span style="color:#E06C75;">    resolve</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">        extensions</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&#39;.ts&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;.js&#39;</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br></div></div>`,59)]))}const B=n(e,[["render",o]]);export{y as __pageData,B as default};
