import{_ as l,c as t,o as a,ah as r}from"./chunks/framework.DqD713j2.js";const _=JSON.parse('{"title":"gulp","description":"","frontmatter":{},"headers":[],"relativePath":"Document/Project-Engineering/前端工具链/gulp.md","filePath":"Document/Project-Engineering/前端工具链/gulp.md","lastUpdated":1750954157000}'),p={name:"Document/Project-Engineering/前端工具链/gulp.md"};function n(o,e,i,u,c,s){return a(),t("div",null,e[0]||(e[0]=[r('<h1 id="gulp" tabindex="-1">gulp <a class="header-anchor" href="#gulp" aria-label="Permalink to &quot;gulp&quot;">​</a></h1><p>官网：<a href="https://www.gulpjs.com.cn/" target="_blank" rel="noreferrer">https://www.gulpjs.com.cn/</a></p><h2 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">​</a></h2><p>gulp 是一个基于流的自动化构建工具。</p><p>除了可以管理和执行任务，还支持监听文件、读写文件。基于内存实现的，其构建速度比 Grunt 快，而且，Gulp 的生态也很完善，插件质量很高。目前最为流行。</p><p>它不仅能对网站资源进行优化，而且在开发过程中很多重复的任务能够使用正确的工具自动完成 Gulp 的核⼼概念：流</p><ul><li>流，简单来说就是建立在面向对象基础上的一种抽象的处理数据的工具。在流中，定义了一些处理数据的基本操作，如读取数据，写入数据等，程序员是对流进行所有操作的，而不用关⼼流的另一头数据的真正流向</li><li>gulp 正是通过流和代码优于配置的策略来尽量简化任务编写的工作</li></ul><p>Gulp 的特点：</p><ul><li>易于使用：通过代码优于配置的策略，gulp 让简单的任务简单，复杂的任务可管理</li><li>构建快速 利用 Node.js 流的威⼒，你可以快速构建项目并减少频繁的 IO 操作</li><li>易于学习 通过最少的 API ，掌握 gulp 毫不费⼒，构建工作尽在掌握：如同一系列流管道</li></ul>',9)]))}const d=l(p,[["render",n]]);export{_ as __pageData,d as default};
