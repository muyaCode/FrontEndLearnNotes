import{_ as l,c as i,o as e,ah as p}from"./chunks/framework.DqD713j2.js";const r="/FrontEndLearnNotes/assets/%E6%9E%B6%E6%9E%84%E5%9B%BE%E4%BE%8B.B9vdUpRZ.jpg",b=JSON.parse('{"title":"项目系统架构","description":"","frontmatter":{},"headers":[],"relativePath":"Document/Project-Engineering/项目系统架构/项目系统架构.md","filePath":"Document/Project-Engineering/项目系统架构/项目系统架构.md","lastUpdated":1750954157000}'),t={name:"Document/Project-Engineering/项目系统架构/项目系统架构.md"};function o(h,a,n,u,d,s){return e(),i("div",null,a[0]||(a[0]=[p('<h1 id="项目系统架构" tabindex="-1">项目系统架构 <a class="header-anchor" href="#项目系统架构" aria-label="Permalink to &quot;项目系统架构&quot;">​</a></h1><h2 id="怎么成为一名前端架构师" tabindex="-1">怎么成为一名前端架构师？ <a class="header-anchor" href="#怎么成为一名前端架构师" aria-label="Permalink to &quot;怎么成为一名前端架构师？&quot;">​</a></h2><ul><li>真实的架构设计过程</li><li>真实的商业级项目</li><li>大型复杂业务</li><li>完善的工程体系</li><li>完善的运维体系</li><li>研发流程+项目管理</li><li>前沿+全面的前端技术栈</li></ul><h3 id="架构师思维分析需求" tabindex="-1">架构师思维分析需求 <a class="header-anchor" href="#架构师思维分析需求" aria-label="Permalink to &quot;架构师思维分析需求&quot;">​</a></h3><p>你作为前端负责人，来开发一个 h5 页，某个抽奖功能的运营活动。假定 PM(产品经理) 和后端 RD 都是实习生，技术和业务都不熟练，你要从 0 开发这个页面，你会要求 server 端给你哪些接口和能力?</p><h4 id="多数人的答案" tabindex="-1">多数人的答案 <a class="header-anchor" href="#多数人的答案" aria-label="Permalink to &quot;多数人的答案&quot;">​</a></h4><p>所有人都能想到，需要一个抽奖接口。否则，他就不是一个合格的程序员了。</p><p>很少部分人能想到，需要一个用户信息接口，否则都不知道奖品给谁，总得登录以下。或者直接输入手机号抽奖也行，但需求没有说这里有手机号。</p><p>还有，加入刚刚抽了奖，再重新进入界面，是否要禁用抽奖？是否要限制每个人抽奖一次？这些需求没说，但这些很重要，这些可都需要后端支持。</p><h3 id="项目浅层需求" tabindex="-1">项目浅层需求 <a class="header-anchor" href="#项目浅层需求" aria-label="Permalink to &quot;项目浅层需求&quot;">​</a></h3><p>解读需求、去深入理解业务。请大家记住：需求指导设计，设计指导开发。</p><p>表面的需求其实很简单:</p><ul><li>登录</li><li>创建一个作品，编辑，发布</li><li>访问作品 h5</li></ul><p>细心的同学估计会继续补充和分组</p><p>用户信息</p><ul><li>登录(短信验证码登录)</li><li>注册</li><li>获取用户信息</li></ul><p>作品</p><ul><li>创建</li><li>保存</li><li>发布</li><li>获取作品信息</li><li>获取作品列表</li></ul><p>模板</p><ul><li>模板列表</li><li>使用模板创建</li></ul><h3 id="深度需求分析" tabindex="-1">深度需求分析 <a class="header-anchor" href="#深度需求分析" aria-label="Permalink to &quot;深度需求分析&quot;">​</a></h3><p>不容易一眼看到，但却很重要的需求</p><p>PS：如果真如“浅层需求“那么简单，那我们也没必要建那么多代码仓库，可能一两个就搞定了。</p><h4 id="作品的管理" tabindex="-1">作品的管理 <a class="header-anchor" href="#作品的管理" aria-label="Permalink to &quot;作品的管理&quot;">​</a></h4><ul><li>删除和恢复</li><li>转赠(例如，员工离职交接工作)</li><li>复制</li></ul><h4 id="作品统计" tabindex="-1">作品统计 <a class="header-anchor" href="#作品统计" aria-label="Permalink to &quot;作品统计&quot;">​</a></h4><p>我们一再强调需求闭环，统计就能很好的体现这一点——有输入有输出，创建发布了作品，当然要看一看统计结果。</p><ul><li>统计</li><li>分渠道统计，渠道对于运营人员非常重要</li></ul><h4 id="作品发布" tabindex="-1">作品发布 <a class="header-anchor" href="#作品发布" aria-label="Permalink to &quot;作品发布&quot;">​</a></h4><ul><li>url 不能变</li><li>支持多渠道</li></ul><h4 id="h5" tabindex="-1">H5 <a class="header-anchor" href="#h5" aria-label="Permalink to &quot;H5&quot;">​</a></h4><ul><li>分享-对业务增长负责，这里就能体现</li></ul><h4 id="后台管理" tabindex="-1">后台管理 <a class="header-anchor" href="#后台管理" aria-label="Permalink to &quot;后台管理&quot;">​</a></h4><p>全局把控，让一切尽在掌握之中</p><ul><li>数据统计</li><li>作品管理，能快速下线作品，防止有违规内容</li><li>用户管理，能快速冻结用户，防止有违规用户</li><li>模板管理，能控制哪些模块展示、哪些不展示</li></ul><h4 id="小结" tabindex="-1">小结 <a class="header-anchor" href="#小结" aria-label="Permalink to &quot;小结&quot;">​</a></h4><ul><li>作品管理</li><li>统计</li><li>发布</li><li>h5</li><li>后台管理</li></ul><h4 id="主要内容" tabindex="-1">主要内容 <a class="header-anchor" href="#主要内容" aria-label="Permalink to &quot;主要内容&quot;">​</a></h4><ul><li>如何以架构师思维分析需求</li><li>项目的浅层需求</li><li>项目的深度需求</li><li>需求总揽</li></ul><h4 id="主要产出" tabindex="-1">主要产出 <a class="header-anchor" href="#主要产出" aria-label="Permalink to &quot;主要产出&quot;">​</a></h4><ul><li>熟悉产品需求</li><li>学会以架构师的思维分析需求</li><li>全局思维、整体思维、闭环思维</li></ul><h4 id="附-和-pm-的关系" tabindex="-1">附:和 PM 的关系 <a class="header-anchor" href="#附-和-pm-的关系" aria-label="Permalink to &quot;附:和 PM 的关系&quot;">​</a></h4><ul><li>程序员和 PM(产品经理) 的关系：水火不容，势不两立</li><li>架构师和 PM(产品经理) 的关系：统一战线，对业务负责</li></ul><p>所以，建议各位程序员，在遇到需求时，都要学着以架构师的思维去理解，和 PM 做朋友</p><h2 id="架构设计" tabindex="-1">架构设计 <a class="header-anchor" href="#架构设计" aria-label="Permalink to &quot;架构设计&quot;">​</a></h2><blockquote><p>任何看似复杂的设计，都是让整个系统变的更简单</p></blockquote><p>熟悉了需求之后，就要考虑如何把他做出来</p><p>其实架构师的职责，就是在深入理解业务需求之后，能用软件把业务给模拟出来。并且保证稳定执行，和后续增长。只要能满足这个条件即可，不一定非得用上什么看似高大上的技术和框架。技术永远都是为业务服务的。</p><p>&quot;很多程序员学了大量的算法和计算机基础，然而在工作中却派不上用场。这是非常正常的，因为这些内容是为了在科学领域做研究准备的。而在业务领域，大多是如何把现有业务在软件中模拟出来的问题，并没有太高深的数学问题。并且现在的计算机硬件，比如 CPU、内存、存储都很便宜，也不需要斤斤计较的去抠空间和时间复杂度。这些都导致所学不能致用。反而如何能够高效的把业务用软件表达出来，并能够随着业务的增长，让软件也快速长大，则变成了一个更重要的问题。这一点可能是当前计算机软件教育需要思考的问题。&quot;——《聊聊架构》</p><h3 id="主要产出-1" tabindex="-1">主要产出 <a class="header-anchor" href="#主要产出-1" aria-label="Permalink to &quot;主要产出&quot;">​</a></h3><ul><li>《整体技术方案设计》文档</li><li>学会如何写技术方案设计(很多同学可能一次都没写过技术方案，上来就写代码，这其实很不好)</li></ul><h3 id="主要内容-1" tabindex="-1">主要内容 <a class="header-anchor" href="#主要内容-1" aria-label="Permalink to &quot;主要内容&quot;">​</a></h3><ul><li>需要哪些项目，各项目之间的关系</li><li>独立的业务组件库</li><li>为何要自研”自定义事件统计”服务?</li><li>作品的数据结构设计</li><li>写《技术方案设计》文档</li></ul><h3 id="注意事项" tabindex="-1">注意事项 <a class="header-anchor" href="#注意事项" aria-label="Permalink to &quot;注意事项&quot;">​</a></h3><ul><li>不要关注细节，要看整体，看范围</li><li>考虑扩展性 (这就需要深入理解业务，否则你也不知道未来将如何扩展)</li><li>考虑可行性，不确定的就调研一下</li><li>考虑实现成本，不要为了设计而设计，技术要永远服务于业务——永远都要选择最简单的实现方案</li></ul><h3 id="分析需求-确定需要创建的项目" tabindex="-1">分析需求，确定需要创建的项目 <a class="header-anchor" href="#分析需求-确定需要创建的项目" aria-label="Permalink to &quot;分析需求，确定需要创建的项目&quot;">​</a></h3><ul><li>先不看细节，看整体，这一步就是确定项目的范围。确定范围是做任何事情的第一步</li><li>范围确定好了，剩下的事情，即便有问题，也属于&quot;人民内部矛盾&quot;。该购买第三方服务，还是该自研，或者该放弃，就看实际情况了</li></ul><h3 id="需要哪些项目" tabindex="-1">需要哪些项目 <a class="header-anchor" href="#需要哪些项目" aria-label="Permalink to &quot;需要哪些项目&quot;">​</a></h3><p>从需求来看，比较重要的几个方面: B 端和编辑器，H5，管理后台</p><p>B 端和编辑器，做前后端分离</p><ul><li>biz-editor-fe</li><li>biz-editor-server</li></ul><p>H5 适合做 SSR，因为要考虑性能</p><ul><li>H5-server</li></ul><p>管理后台，做前端分析</p><ul><li>admin-fe</li><li>admin-server</li></ul><p>[注意] 大家都到处嚷嚷 SSR，方案，不要为了设计而设计。使用还是得分场景。 一般来讲，toB 的不适合用，toC 的适合用。 所以，架构设计要考虑成本，要用最简单</p><h3 id="独立的业务组件库" tabindex="-1">独立的业务组件库 <a class="header-anchor" href="#独立的业务组件库" aria-label="Permalink to &quot;独立的业务组件库&quot;">​</a></h3><p>画布使用的组件和渲染逻辑，和 H5 页面是完全一样的。所以，两边不应该有几余，应该复用。所以，就把业务组件库给抽离出来 H5 使用</p><h3 id="为何自研统计服务" tabindex="-1">为何自研统计服务 <a class="header-anchor" href="#为何自研统计服务" aria-label="Permalink to &quot;为何自研统计服务&quot;">​</a></h3><h4 id="熟悉需求很重要" tabindex="-1">熟悉需求很重要 <a class="header-anchor" href="#熟悉需求很重要" aria-label="Permalink to &quot;熟悉需求很重要&quot;">​</a></h4><p>回顾一下作品的渠道，以及分渠道统计，这个需求。</p><p>而且，我们非常明确，这个需求是我们业务环节中非常重要的一部分，没有它，我们业务就无法闭环，就跑不通。随意，这肯定是不能的</p><h4 id="为何自研" tabindex="-1">为何自研 <a class="header-anchor" href="#为何自研" aria-label="Permalink to &quot;为何自研&quot;">​</a></h4><p>要实现这个功能，我们就需要自定义事件统计。普通的 pv 统计，是无法满足要求的。</p><ul><li>支持自定义事件统计</li><li>支持 Open API--重要</li></ul><p>一开始我们以为会有一些第三方的统计服务：如友盟、百度统计、arms，可以支持。但后来调研发现，他们要么不支持，要么收费很贵统计一年好几万)</p><p>所以，需求又不能砍掉，我们综合对比，只能选择自研一个。包括</p><ul><li>日志收集</li><li>日志分析</li><li>penAPI</li></ul><h4 id="注意事项-1" tabindex="-1">注意事项 <a class="header-anchor" href="#注意事项-1" aria-label="Permalink to &quot;注意事项&quot;">​</a></h4><p>这块又可能听着比较懵.但没关系，只要真正了解了这块需求，不会影响你接下来的需求</p><h3 id="各项目之间的关系图" tabindex="-1">各项目之间的关系图 <a class="header-anchor" href="#各项目之间的关系图" aria-label="Permalink to &quot;各项目之间的关系图&quot;">​</a></h3><p>...</p><h3 id="项目之间的数据结构设计思路" tabindex="-1">项目之间的数据结构设计思路 <a class="header-anchor" href="#项目之间的数据结构设计思路" aria-label="Permalink to &quot;项目之间的数据结构设计思路&quot;">​</a></h3><p>总之，基本思路就是：</p><ul><li>每个组件尽量符合 vnode 规范</li><li>用数组来组织数据，有序</li><li>尽量使用引用关系，不要冗余</li></ul><h4 id="数据流转" tabindex="-1">数据流转 <a class="header-anchor" href="#数据流转" aria-label="Permalink to &quot;数据流转&quot;">​</a></h4><p>核心：B 端、C 端、管理后台，共用一个数据库</p><ul><li>创建作品：初始化一个 JSON 数据</li><li>保存作品：修改 JSON 数据</li><li>发布作品：修改一个标记，仅此而已</li><li>C 端浏览作品:获取 JSON 数据，SSR 染页面</li><li>屏蔽作品：修改一个标记，C 端来判断</li></ul><p>当然，其中 C 端还有缓存，防止频繁访问数据库。</p><h4 id="注意事项-2" tabindex="-1">注意事项 <a class="header-anchor" href="#注意事项-2" aria-label="Permalink to &quot;注意事项&quot;">​</a></h4><p>大家千万不要扣细节，以及拿现在的代码实例和接下来前端开发的代码进行对比!!!否则你就是自讨苦吃。</p><p>我们做技术方案设计，为的就是寻找一个方向，论证：可行性、扩展性、复杂度高低。我们没法在现在就确定细节，更没法保证未来的细节，就一定和现在一模一样</p><p>但我们能保证：设计的方向和思路，是一样的，就行了</p><h3 id="写技术方案设计文档" tabindex="-1">写技术方案设计文档 <a class="header-anchor" href="#写技术方案设计文档" aria-label="Permalink to &quot;写技术方案设计文档&quot;">​</a></h3><h4 id="关于技术方案设计文档" tabindex="-1">关于技术方案设计文档 <a class="header-anchor" href="#关于技术方案设计文档" aria-label="Permalink to &quot;关于技术方案设计文档&quot;">​</a></h4><p>为何难写?</p><ul><li>没有规范可依 e</li><li>不常写</li></ul><p>如何写，技巧:</p><ul><li>随性一些，解释一下你要如何做，即可.</li><li>可以先尝试写一部分代码，捋一捋思路，再来写文档-[注意]这里写代码纯是为了捋思路、为了写文档，搞清楚目的</li></ul><p>写设计文档是浪费时间吗?</p><ul><li>如果你真的想明白了，最多浪费你 1-2h 时间，不会导致项目延期 0</li><li>如果你写不出来，说明你没想明白，正好暴露了问题</li></ul><h3 id="技术方案文档目录-整体架构设计-v1-0" tabindex="-1">技术方案文档目录（整体架构设计 V1.0） <a class="header-anchor" href="#技术方案文档目录-整体架构设计-v1-0" aria-label="Permalink to &quot;技术方案文档目录（整体架构设计 V1.0）&quot;">​</a></h3><h4 id="需求" tabindex="-1">需求 <a class="header-anchor" href="#需求" aria-label="Permalink to &quot;需求&quot;">​</a></h4><p>需求地址或者需求的说明</p><h4 id="范围" tabindex="-1">范围 <a class="header-anchor" href="#范围" aria-label="Permalink to &quot;范围&quot;">​</a></h4><p>整体设计，架构设计，没有细节</p><h4 id="模块设计" tabindex="-1">模块设计 <a class="header-anchor" href="#模块设计" aria-label="Permalink to &quot;模块设计&quot;">​</a></h4><p>模块的拆分和关系图，结果模块的关键功能，职责等</p><p>特殊的模块重点说明</p><ul><li>组件库，独立第三方，同时用于编辑器和 H5</li><li>自研统计服务，为何自研</li></ul><h4 id="核心数据结构" tabindex="-1">核心数据结构 <a class="header-anchor" href="#核心数据结构" aria-label="Permalink to &quot;核心数据结构&quot;">​</a></h4><p>vuex store 的结构，解释数据流转关系图</p><h4 id="扩展型保证" tabindex="-1">扩展型保证 <a class="header-anchor" href="#扩展型保证" aria-label="Permalink to &quot;扩展型保证&quot;">​</a></h4><p>扩展组件，数据结构层面扩展编辑器的功能，例如: 组件隐藏、锁定扩展页面的配置(讨论，集思广益)</p><h4 id="开发提效" tabindex="-1">开发提效 <a class="header-anchor" href="#开发提效" aria-label="Permalink to &quot;开发提效&quot;">​</a></h4><p>脚手架</p><p>组件平台</p><h4 id="运维保障" tabindex="-1">运维保障 <a class="header-anchor" href="#运维保障" aria-label="Permalink to &quot;运维保障&quot;">​</a></h4><p>线上服务和运维服务</p><p>安全</p><p>监控和报警</p><p>服务扩展性：流量大</p><h2 id="知识点" tabindex="-1">知识点 <a class="header-anchor" href="#知识点" aria-label="Permalink to &quot;知识点&quot;">​</a></h2><p><img src="'+r+'" alt="架构图例"></p><h3 id="脚手架-创建项目" tabindex="-1">脚手架-创建项目 <a class="header-anchor" href="#脚手架-创建项目" aria-label="Permalink to &quot;脚手架-创建项目&quot;">​</a></h3><ul><li>包管理：lerma</li><li>环境变量：dotenv</li><li>海令行：commander</li><li>log 定制：npmlog</li><li>版本检宜：semver</li><li>npm api</li><li>npm 台安装：npm install</li><li>通用 Package 类封装</li><li>命令行交互：inquirer</li><li>命令行 loading：spinner</li><li>ejs 模板渲染</li><li>文件匹配器：glob</li><li>egg.js</li></ul><h3 id="脚手架-发布项目" tabindex="-1">脚手架-发布项目 <a class="header-anchor" href="#脚手架-发布项目" aria-label="Permalink to &quot;脚手架-发布项目&quot;">​</a></h3><ul><li>云构建 CloudBuild 封装</li><li>Github &amp; Gitee API 接入</li><li>git 操作：simple-git</li><li>git flow 自动化</li><li>npm 自动化</li><li>WebSocket</li><li>egg-socket.io</li><li>egg-redis</li><li>base64 加密&amp;解密</li><li>命令行 link：terminalLink</li></ul><h3 id="前端-tob" tabindex="-1">前端-toB <a class="header-anchor" href="#前端-tob" aria-label="Permalink to &quot;前端-toB&quot;">​</a></h3><p>TypeScript</p><p>Vue3</p><p>Vuex4</p><p>Vue Router4</p><p>Ant Design Vue</p><p>Ant Design Vue 二次开发</p><p>截图：html/2canvas</p><p>图片裁剪：cropperjs</p><p>快捷键：hotkeys-js</p><p>二维码：qrcodejs2</p><p>拖动排序：vue-draggable-next</p><p>组件拖动</p><p>组件缩放</p><p>组件移动</p><p>右键菜单</p><p>复制粘贴</p><p>撤销重做</p><p>动态表单</p><h3 id="前端-toc" tabindex="-1">前端-toC <a class="header-anchor" href="#前端-toc" aria-label="Permalink to &quot;前端-toC&quot;">​</a></h3><p>Wue3 SSR</p><p>移动响应式</p><p>微信分享</p><p>事件处理</p><p>埋点统计</p><h3 id="业务组件库" tabindex="-1">业务组件库 <a class="header-anchor" href="#业务组件库" aria-label="Permalink to &quot;业务组件库&quot;">​</a></h3><p>rollup 打包</p><p>rollup vue 插件</p><p>rollup typescript 插件</p><p>rollup oommonjs 插件</p><p>rollup css-only 摄插件</p><p>sourcemap</p><p>vue-test-utils</p><p>npm 发布和配置</p><h3 id="组件平台" tabindex="-1">组件平台 <a class="header-anchor" href="#组件平台" aria-label="Permalink to &quot;组件平台&quot;">​</a></h3><p>egg.js rustfut API</p><p>egg-mysql</p><p>egg-mock</p><p>umi</p><p>Ant Design 4</p><p>Ract</p><p>hooks</p><h3 id="服务端" tabindex="-1">服务端 <a class="header-anchor" href="#服务端" aria-label="Permalink to &quot;服务端&quot;">​</a></h3><p>Koa2</p><p>登录验证 JWT</p><p>跨域配置 CORS</p><p>模板引擎 pug</p><p>ORM 框架 Sequelize</p><p>mongoose</p><p>缓存</p><p>GraphGL</p><p>文件上传</p><p>定时任务</p><p>日志分析</p><p>输入验证 Validator</p><p>JSON Schama</p><p>加密 Crypto</p><p>静态资源处理</p><h4 id="第二种" tabindex="-1">第二种 <a class="header-anchor" href="#第二种" aria-label="Permalink to &quot;第二种&quot;">​</a></h4><p>Typescript Egg.js MongoDB Mongoose 加密 Bcrypt Redis Oauth2 登录验证 JWT 跨域配置 CORS 模板引擎 nunjucks RBAC 权限系统 权限实现: Casl 本地文件上传 OSS 云文件上传 Sharp 本地文件处理 SSR</p><h3 id="第三方服务" tabindex="-1">第三方服务 <a class="header-anchor" href="#第三方服务" aria-label="Permalink to &quot;第三方服务&quot;">​</a></h3><p>阿里云 OSS</p><p>阿里云 ARMS</p><p>微信 jsjdk</p><p>腾讯云短信服务 SMS</p><p>百度云敏感内容审查</p><p>自研统计服务 EAS</p><h3 id="性能优化" tabindex="-1">性能优化 <a class="header-anchor" href="#性能优化" aria-label="Permalink to &quot;性能优化&quot;">​</a></h3><p>webpack-bundle-analyzer</p><p>webpack 构建优化</p><p>webpack 分包</p><p>webpack gzip 压缩</p><p>webpack extra css</p><p>H5 图片懒加载</p><p>HTTP 缓存</p><p>HTTP 压缩 （gzip+Brotli）</p><p>HTTP/2</p><p>静态资源发布 CDN</p><h3 id="打包构建" tabindex="-1">打包构建 <a class="header-anchor" href="#打包构建" aria-label="Permalink to &quot;打包构建&quot;">​</a></h3><p>webpack</p><p>webpack 插件开发</p><p>rollup</p><p>githooks：husky</p><p>lint 检查</p><p>prettier 格式化</p><p>jest 单元测试</p><p>mocha 单元测试</p><h3 id="持续集成-ci-cd" tabindex="-1">持续集成 CI/CD <a class="header-anchor" href="#持续集成-ci-cd" aria-label="Permalink to &quot;持续集成 CI/CD&quot;">​</a></h3><p>CentOS</p><p>ssh 信任</p><p>shell 脚本</p><p>github actions 持续集成</p><p>travis 持续集成</p><p>docker</p><p>docker-compose</p><p>敏感信息处理</p><p>自动化接口测试 SuperTest</p><p>自动发布测试机</p><p>release-it</p><h3 id="线上云服务" tabindex="-1">线上云服务 <a class="header-anchor" href="#线上云服务" aria-label="Permalink to &quot;线上云服务&quot;">​</a></h3><p>域名备案和解析</p><p>CNAME 域名转发</p><p>HTTP 证书</p><p>云服务器 ECS</p><p>云 MySQL</p><p>云 MongoDB</p><p>云 Redis</p><p>阿里云 OSS</p><p>阿里云 CDN</p><p>阿里云 WAF</p><p>反向代理 Nginx</p><p>进程守护 pm2</p><h3 id="运维-监控" tabindex="-1">运维&amp;监控 <a class="header-anchor" href="#运维-监控" aria-label="Permalink to &quot;运维&amp;监控&quot;">​</a></h3><p>服务器监控</p><p>ali-node</p><p>心跳检测</p><p>异常处理</p><p>报警</p><p>定时任务 crontab</p><p>日志拆分 pm2-logrotate</p><p>安全预防</p><p>防御 CC 攻击</p><p>防刷防爬</p><h3 id="研发流程" tabindex="-1">研发流程 <a class="header-anchor" href="#研发流程" aria-label="Permalink to &quot;研发流程&quot;">​</a></h3><ul><li>架构设计</li><li>技术选型</li><li>技术方案设计</li><li>接口设计</li><li>数据库设计</li><li>制定计划</li><li>监控执行</li><li>多人协作</li><li>code review</li><li>bug 修复流程</li><li>产品迭代流程</li></ul><h3 id="团队建设" tabindex="-1">团队建设 <a class="header-anchor" href="#团队建设" aria-label="Permalink to &quot;团队建设&quot;">​</a></h3><ul><li>绩效考核</li><li>面试技巧</li><li>工作汇报</li><li>晋升答辩</li><li>沟通技巧</li><li>团队分享</li></ul>',255)]))}const q=l(t,[["render",o]]);export{b as __pageData,q as default};
