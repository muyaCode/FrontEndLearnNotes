import{_ as n,c as a,o as l,ah as p}from"./chunks/framework.DqD713j2.js";const b=JSON.parse('{"title":"JavaScript 函数进阶","description":"","frontmatter":{},"headers":[],"relativePath":"Document/JavaScript笔记/JavaScript高级/JavaScript函数进阶.md","filePath":"Document/JavaScript笔记/JavaScript高级/JavaScript函数进阶.md","lastUpdated":1750954157000}'),o={name:"Document/JavaScript笔记/JavaScript高级/JavaScript函数进阶.md"};function e(t,s,c,r,B,i){return l(),a("div",null,s[0]||(s[0]=[p(`<h1 id="javascript-函数进阶" tabindex="-1">JavaScript 函数进阶 <a class="header-anchor" href="#javascript-函数进阶" aria-label="Permalink to &quot;JavaScript 函数进阶&quot;">​</a></h1><p>参考文档：<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function" target="_blank" rel="noreferrer">Function - JavaScript | MDN (mozilla.org)</a></p><h2 id="函数的定义方式" tabindex="-1">函数的定义方式 <a class="header-anchor" href="#函数的定义方式" aria-label="Permalink to &quot;函数的定义方式&quot;">​</a></h2><ul><li>函数声明</li><li>函数表达式</li><li><code>new Function</code></li></ul><h3 id="函数声明" tabindex="-1">函数声明 <a class="header-anchor" href="#函数声明" aria-label="Permalink to &quot;函数声明&quot;">​</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> foo</span><span style="color:#ABB2BF;">() {}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="函数表达式" tabindex="-1">函数表达式 <a class="header-anchor" href="#函数表达式" aria-label="Permalink to &quot;函数表达式&quot;">​</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#61AFEF;"> foo</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> () {};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="例子" tabindex="-1">例子 <a class="header-anchor" href="#例子" aria-label="Permalink to &quot;例子&quot;">​</a></h3><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;!</span><span style="color:#E06C75;">DOCTYPE</span><span style="color:#D19A66;"> html</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">html</span><span style="color:#D19A66;"> lang</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;en&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">meta</span><span style="color:#D19A66;"> charset</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;UTF-8&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;函数声明和函数表达式&lt;/</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//函数的角色:</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//函数的声明</span></span>
<span class="line"><span style="color:#C678DD;">			function</span><span style="color:#61AFEF;"> f1</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E5C07B;">				console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;我是函数&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">			}</span></span>
<span class="line"><span style="color:#61AFEF;">			f1</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//函数表达式</span></span>
<span class="line"><span style="color:#C678DD;">			var</span><span style="color:#61AFEF;"> ff</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#E5C07B;">				console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;我也是一个函数&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">			};</span></span>
<span class="line"><span style="color:#61AFEF;">			ff</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;/</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">html</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h3 id="函数声明与函数表达式的区别" tabindex="-1">函数声明与函数表达式的区别 <a class="header-anchor" href="#函数声明与函数表达式的区别" aria-label="Permalink to &quot;函数声明与函数表达式的区别&quot;">​</a></h3><p>函数声明：</p><ul><li>函数声明必须有名字</li><li>函数声明会函数提升，在预解析阶段就已创建，声明前后都可以调用</li></ul><p>函数表达式：</p><ul><li>函数表达式类似于变量赋值</li><li>函数表达式可以没有名字，例如匿名函数</li><li>函数表达式没有变量提升，在执行阶段创建，必须在表达式执行之后才可以调用</li></ul><p>下面是一个根据条件定义函数的例子：</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">	function</span><span style="color:#61AFEF;"> f</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E5C07B;">		console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#ABB2BF;">} </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">	function</span><span style="color:#61AFEF;"> f</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E5C07B;">		console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#61AFEF;">f</span><span style="color:#ABB2BF;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>以上代码执行结果在不同浏览器中结果不一致。</p><p>不过我们可以使用函数表达式解决上面的问题：</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> ff</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#61AFEF;">	ff</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#E5C07B;">		console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">	};</span></span>
<span class="line"><span style="color:#ABB2BF;">} </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#61AFEF;">	ff</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#E5C07B;">		console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">	};</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#61AFEF;">ff</span><span style="color:#ABB2BF;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><ul><li><p><strong>函数声明</strong>如果放在 if-else 的语句中，在 IE8 的浏览器中会出现问题</p></li><li><p>所以编码中尽量用<strong>函数表达式</strong></p></li></ul><h3 id="_3-种函数定义方式" tabindex="-1">3 种函数定义方式 <a class="header-anchor" href="#_3-种函数定义方式" aria-label="Permalink to &quot;3 种函数定义方式&quot;">​</a></h3><p>1.function 语句式函数声明</p><ul><li><p>形式：句子</p></li><li><p>名称：有名</p></li><li><p>性质：静态</p></li><li><p>解析时机：优先解析</p></li><li><p>作用域：具有函数的作用域（正常的作用域）</p><p>2.函数表达式（函数直接量） ECMAScript 推荐的方式（定义变量接收函数）</p></li><li><p>形式：表达式</p></li><li><p>名称：匿名</p></li><li><p>性质：静态</p></li><li><p>解析时机：顺序解析：先执行 function 句式函数再执行它</p></li><li><p>作用域：具有函数的作用域（正常的作用域）</p><p>3.function 构造函数式,a,b 是形参，函数执行体直接写在后边，以分号结束</p></li><li><p>形式：表达式</p></li><li><p>名称：匿名</p></li><li><p>性质：动态</p></li><li><p>解析时机：顺序解析</p></li><li><p>作用域：顶级函数（顶级作用域）</p></li></ul><p>性质--静态和动态的区别：</p><ul><li><p>函数直接量和 function 语句式被 javascript 解释一次，放在了内存，以后用到的话直接调用，占用内存，所以说是“静态”的。</p></li><li><p>而构造函数式是每一次调用都动态新建一个，用完之后就销毁了，不占用内存，所以说是“动态”的。所以，有些程序只希望调用一次，就可以用动态的构造函数式。</p></li></ul><h2 id="函数的调用方式" tabindex="-1">函数的调用方式 <a class="header-anchor" href="#函数的调用方式" aria-label="Permalink to &quot;函数的调用方式&quot;">​</a></h2><ul><li>普通函数</li><li>构造函数</li><li>对象方法</li></ul><h2 id="函数内-this-指向的不同场景" tabindex="-1">函数内 <code>this</code> 指向的不同场景 <a class="header-anchor" href="#函数内-this-指向的不同场景" aria-label="Permalink to &quot;函数内 \`this\` 指向的不同场景&quot;">​</a></h2><p>函数的调用方式决定了 <code>this</code> 指向的不同：</p><table tabindex="0"><thead><tr><th>调用方式</th><th>非严格模式</th><th>备注</th></tr></thead><tbody><tr><td>普通函数调用</td><td>window</td><td>&quot;use strict&quot;;严格模式下是：undefined</td></tr><tr><td>构造函数调用</td><td>实例对象：new 构造函数()</td><td>原型方法中 this 也是实例对象</td></tr><tr><td>原型对象中的 this</td><td>实例对象：new 构造函数()</td><td></td></tr><tr><td>对象.方法调用</td><td>该方法所属对象</td><td>紧挨着的对象</td></tr><tr><td>事件绑定方法</td><td>绑定事件对象</td><td></td></tr><tr><td>定时器函数</td><td>window</td><td></td></tr></tbody></table><p>示例：</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;!</span><span style="color:#E06C75;">DOCTYPE</span><span style="color:#D19A66;"> html</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">html</span><span style="color:#D19A66;"> lang</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;en&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">meta</span><span style="color:#D19A66;"> http-equiv</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;Content-Type&quot;</span><span style="color:#D19A66;"> content</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;text/html;charset=UTF-8&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;函数内this指向的不同场景&lt;/</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;/</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">html</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">html</span><span style="color:#D19A66;"> lang</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;en&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">meta</span><span style="color:#D19A66;"> charset</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;UTF-8&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;title&lt;/</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// 严格模式的普通函数:</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// &quot;use strict&quot;;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// function f1() {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//  console.log(&#39;严格模式的普通函数的this&#39;,this);</span><span style="color:#7F848E;font-style:italic;"> // undefined</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// f1();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// 普通函数</span></span>
<span class="line"><span style="color:#C678DD;">			function</span><span style="color:#61AFEF;"> f1</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E5C07B;">				console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;普通函数的this&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">			}</span></span>
<span class="line"><span style="color:#61AFEF;">			f1</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// 定时器中的this</span></span>
<span class="line"><span style="color:#61AFEF;">			setInterval</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#E5C07B;">				console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;定时器中的this&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">			}, </span><span style="color:#D19A66;">1000</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// 构造函数</span></span>
<span class="line"><span style="color:#C678DD;">			function</span><span style="color:#61AFEF;"> Person</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E5C07B;">				console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;构造函数的this&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				// 对象的方法</span></span>
<span class="line"><span style="color:#E5C07B;">				this</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">sayHi</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#E5C07B;">					console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">				};</span></span>
<span class="line"><span style="color:#ABB2BF;">			}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// 原型中的方法</span></span>
<span class="line"><span style="color:#E5C07B;">			Person</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">eat</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#E5C07B;">				console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;原型中的方法的this&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">			};</span></span>
<span class="line"><span style="color:#C678DD;">			var</span><span style="color:#E06C75;"> per</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Person</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">			console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">per</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">			per</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">sayHi</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">			per</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">eat</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// BOM:中顶级对象是window,浏览器中所有的东西都是window的</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;/</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">html</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br></div></div><p>这就是对函数内部 this 指向的基本整理，写代码写多了自然而然就熟悉了。</p><h2 id="函数的-3-种调用方式" tabindex="-1">函数的 3 种调用方式 <a class="header-anchor" href="#函数的-3-种调用方式" aria-label="Permalink to &quot;函数的 3 种调用方式&quot;">​</a></h2><p>3 种调用方式：</p><ul><li><p>普通函数的调用方式</p></li><li><p>构造函数的调用方式</p></li><li><p>构造函数的对象方法的调用方式</p></li></ul><p>示例：</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;!</span><span style="color:#E06C75;">DOCTYPE</span><span style="color:#D19A66;"> html</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">html</span><span style="color:#D19A66;"> lang</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;en&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">meta</span><span style="color:#D19A66;"> charset</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;UTF-8&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;函数的3种调用方式&lt;/</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//普通函数</span></span>
<span class="line"><span style="color:#C678DD;">			function</span><span style="color:#61AFEF;"> f1</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E5C07B;">				console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;文能提笔控萝莉&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">			}</span></span>
<span class="line"><span style="color:#61AFEF;">			f1</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//构造函数---通过new 来调用,创建对象</span></span>
<span class="line"><span style="color:#C678DD;">			function</span><span style="color:#61AFEF;"> F1</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E5C07B;">				console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;我是构造函数,我骄傲&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">			}</span></span>
<span class="line"><span style="color:#C678DD;">			var</span><span style="color:#E06C75;"> f</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> F1</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// 构造函数的对象方法</span></span>
<span class="line"><span style="color:#C678DD;">			function</span><span style="color:#61AFEF;"> Person</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E5C07B;">				this</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">play</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#E5C07B;">					console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;玩代码&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">				};</span></span>
<span class="line"><span style="color:#ABB2BF;">			}</span></span>
<span class="line"><span style="color:#C678DD;">			var</span><span style="color:#E06C75;"> per</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Person</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">			per</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">play</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;/</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">html</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><h2 id="函数也是对象" tabindex="-1">函数也是对象 <a class="header-anchor" href="#函数也是对象" aria-label="Permalink to &quot;函数也是对象&quot;">​</a></h2><ul><li>所有函数都是 <code>Function</code> 的实例</li><li>对象中有<code>__proto__</code>原型，是对象</li><li>函数中有<code>prototype</code>原型，是对象</li></ul><p>示例：</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;!</span><span style="color:#E06C75;">DOCTYPE</span><span style="color:#D19A66;"> html</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">html</span><span style="color:#D19A66;"> lang</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;en&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;"> &lt;</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">meta</span><span style="color:#D19A66;"> charset</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;UTF-8&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;函数也是对象&lt;/</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#C678DD;">   function</span><span style="color:#61AFEF;"> F1</span><span style="color:#ABB2BF;">() {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">   console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">dir</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">F1</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">   console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">dir</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">Math</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// 中有__proto__,但是没有prorotype</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   // 对象中有__proto__,函数中应该有prototype</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   // 如果一个东西里面有prototype，又有__proto__,说明是函数,也是对象</span></span>
<span class="line"><span style="color:#C678DD;">   function</span><span style="color:#61AFEF;"> F2</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">name</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">    this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">name</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> name</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">   }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">   console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">dir</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">F2</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   // 所有的函数实际上都是Function的构造函数创建出来的实例对象</span></span>
<span class="line highlighted"><span style="color:#C678DD;">   var</span><span style="color:#E06C75;"> f1</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Function</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;num1&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;num2&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;return num1+num2&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">   console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">f1</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#E5C07B;">   console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">f1</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">__proto__</span><span style="color:#56B6C2;"> ==</span><span style="color:#E5C07B;"> Function</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   // 所以,函数实际上也是对象</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">   console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">dir</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">f1</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">   console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">dir</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">Function</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;"> &lt;/</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;"> &lt;</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;/</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">html</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div><h2 id="数组中函数的调用" tabindex="-1">数组中函数的调用 <a class="header-anchor" href="#数组中函数的调用" aria-label="Permalink to &quot;数组中函数的调用&quot;">​</a></h2><p>示例：</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;!</span><span style="color:#E06C75;">DOCTYPE</span><span style="color:#D19A66;"> html</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">html</span><span style="color:#D19A66;"> lang</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;en&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">meta</span><span style="color:#D19A66;"> charset</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;UTF-8&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;数组中函数的调用&lt;/</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    //数组可以存储任何类型的数据</span></span>
<span class="line"><span style="color:#C678DD;">    var</span><span style="color:#E06C75;"> arr</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">[</span></span>
<span class="line"><span style="color:#C678DD;">        function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#E5C07B;">          console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;十一假期快乐&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        },</span></span>
<span class="line"><span style="color:#C678DD;">        function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#E5C07B;">          console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;十一假期开心&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        },</span></span>
<span class="line"><span style="color:#C678DD;">        function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#E5C07B;">          console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;十一假期健康&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        },</span></span>
<span class="line"><span style="color:#C678DD;">        function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#E5C07B;">          console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;十一假期安全&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        },</span></span>
<span class="line"><span style="color:#C678DD;">        function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#E5C07B;">          console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;十一假期如意&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">    ];</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 回调函数:函数作为参数使用</span></span>
<span class="line highlighted"><span style="color:#E5C07B;">    arr</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">forEach</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">ele</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line highlighted"><span style="color:#61AFEF;">      ele</span><span style="color:#ABB2BF;">();</span></span>
<span class="line highlighted"><span style="color:#ABB2BF;">    });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">html</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><h2 id="函数的-call、apply、bind-方法" tabindex="-1">函数的 call、apply、bind 方法 <a class="header-anchor" href="#函数的-call、apply、bind-方法" aria-label="Permalink to &quot;函数的 call、apply、bind 方法&quot;">​</a></h2><p>call、apply、bind 三个函数方法都可以改变 this 的指向</p><h3 id="call" tabindex="-1">call <a class="header-anchor" href="#call" aria-label="Permalink to &quot;call&quot;">​</a></h3><p>call 方法文档：<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/call" target="_blank" rel="noreferrer">Function.prototype.call() - JavaScript | MDN (mozilla.org)</a></p><p><code>call()</code> 方法调用一个函数,，其具有一个指定的 <code>this</code> 值和分别地提供的参数(参数的列表)。</p><p><strong>注意</strong>：该方法的作用和 <code>apply()</code> 方法类似，只有一个区别，就是 <code>call()</code> 方法接受的是若干个参数的列表，而 <code>apply()</code> 方法接受的是一个包含多个参数的数组。</p><p><strong>语法</strong>：</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">call</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">thisArg</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">arg1</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">arg2</span><span style="color:#ABB2BF;">, ...)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>参数</strong>：</p><ul><li><p><code>thisArg</code></p><ul><li>在 fun 函数运行时指定的 this 值</li><li>如果指定了 null 或者 undefined 则内部 this 指向 window</li></ul></li><li><p><code>arg1, arg2, ...</code></p><ul><li>指定的参数列表</li></ul></li></ul><h3 id="apply" tabindex="-1">apply <a class="header-anchor" href="#apply" aria-label="Permalink to &quot;apply&quot;">​</a></h3><p>apply 方法文档：<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/apply" target="_blank" rel="noreferrer">Function.prototype.apply() - JavaScript | MDN (mozilla.org)</a></p><p><code>apply()</code> 方法调用一个函数, 其具有一个指定的 <code>this</code> 值，以及作为一个数组（或类似数组的对象）提供的参数。</p><p>注意：该方法的作用和 <code>call()</code> 方法类似，只有一个区别，就是 <code>call()</code> 方法接受的是若干个参数的列表，而 <code>apply()</code> 方法接受的是一个包含多个参数的数组。</p><p><strong>语法</strong>：</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">apply</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">thisArg</span><span style="color:#ABB2BF;">, [</span><span style="color:#E06C75;font-style:italic;">argsArray</span><span style="color:#ABB2BF;">])</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>参数</strong>：</p><ul><li><code>thisArg</code></li><li><code>argsArray</code></li></ul><p><code>apply()</code> 与 <code>call()</code> 非常相似，不同之处在于提供参数的方式。 <code>apply()</code> 使用参数数组而不是一组参数列表。例如：</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">apply</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;font-style:italic;">this</span><span style="color:#ABB2BF;">, [</span><span style="color:#98C379;">&#39;eat&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;bananas&#39;</span><span style="color:#ABB2BF;">])</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="call-和-apply-方法对比使用和总结" tabindex="-1">call 和 apply 方法对比使用和总结 <a class="header-anchor" href="#call-和-apply-方法对比使用和总结" aria-label="Permalink to &quot;call 和 apply 方法对比使用和总结&quot;">​</a></h3><p>示例：</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;!</span><span style="color:#E06C75;">DOCTYPE</span><span style="color:#D19A66;"> html</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">html</span><span style="color:#D19A66;"> lang</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;en&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">meta</span><span style="color:#D19A66;"> charset</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;UTF-8&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;title&lt;/</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// apply和call都可以改变this的指向</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// 函数的调用,改变this的指向</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    function f1(x,y) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//      console.log((x+y)+&quot;:===&gt;&quot;+this);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//      return &quot;这是函数的返回值&quot;;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//</span><span style="color:#7F848E;font-style:italic;">    // apply和call调用</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    var r1=f1.apply(null,[1,2]);//此时f1中的this是window</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    console.log(r1);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    var r2=f1.call(null,1,2);//此时f1中的this是window</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    console.log(r2);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    console.log(&quot;=============&gt;&quot;);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//</span><span style="color:#7F848E;font-style:italic;">    // 改变this的指向</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    var obj={</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//      sex:&quot;男&quot;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    };</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//</span><span style="color:#7F848E;font-style:italic;">    // 本来f1函数是window对象的,但是传入obj之后,f1函数此时就是obj对象的</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    var r3=f1.apply(obj,[1,2]);//此时f1中的this是obj</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    console.log(r3);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    var r4=f1.call(obj,1,2);//此时f1中的this是obj</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    console.log(r4);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// 方法改变this的指向</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    function Person(age) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//      this.age = age;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    Person.prototype.sayHi = function (x, y) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//      console.log((x + y) + &quot;:====&gt;&quot; + this.age);// 是实例对象</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    };</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    function Student(age) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//      this.age = age;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    var per = new Person(10);// 实例对象</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    var stu = new Student(100);// 实例对象</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//</span><span style="color:#7F848E;font-style:italic;">    // sayHi方法是per实例对象的</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    per.sayHi.apply(stu, [10, 20]);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    per.sayHi.call(stu, 10, 20);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// apply和call的使用方法</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			/*</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			 * apply的使用语法</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			 * 函数名字.apply(对象,[参数1,参数2,...]);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			 * 方法名字.apply(对象,[参数1,参数2,...]);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			 * call的使用语法</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			 * 函数名字.call(对象,参数1,参数2,...);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			 * 方法名字.call(对象,参数1,参数2,...);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			 *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			 * 作用:改变this的指向</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			 * 不同的地方:参数传递的方式是不一样的</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			 *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			 * 只要是想使用别的对象的方法,并且希望这个方法是当前对象的,那么就可以使用apply或者是call的方法改变this的指向</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			 *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			 * */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// apply和call这两个方法是哪里来的：Function.prototype</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// apply和call方法实际上并不在函数这个实例对象中,而是在Function的prototype中</span></span>
<span class="line"><span style="color:#C678DD;">			function</span><span style="color:#61AFEF;"> f1</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E5C07B;">				console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">this</span><span style="color:#56B6C2;"> +</span><span style="color:#98C379;"> &quot;:====&gt;调用了&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">			}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// f1是函数,f1也是对象</span></span>
<span class="line"><span style="color:#E5C07B;">			console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">dir</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">f1</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// 对象调用方法,说明,该对象中有这个方法</span></span>
<span class="line"><span style="color:#E5C07B;">			f1</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">apply</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">			f1</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">call</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">			console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">f1</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">__proto__</span><span style="color:#56B6C2;"> ==</span><span style="color:#E5C07B;"> Function</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// 所有的函数都是Function的实例对象</span></span>
<span class="line"><span style="color:#E5C07B;">			console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Function</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">//ƒ () { [native code] }</span></span>
<span class="line"><span style="color:#E5C07B;">			console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">dir</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">Function</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//实例对象调用方法,方法要么在实例对象中存在,要么在原型对象中存在</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//apply和call方法中如果没有传入参数,或者是传入的是null,那么调用该方法的函数对象中的this就是默认的window</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//f1.apply(null,[100,200]);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//f1.call(null,100,200);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// apply和call都可以让函数或者方法来调用,传入参数和函数自己调用的写法不一样,但是效果是一样的</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    var result1=f1.apply(null,[10,20]);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    var result2=f1.call(null,10,20);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    console.log(result1);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    console.log(result2);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    function f1(x,y) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//      console.log(&quot;这个函数是window对象的一个方法:&quot;+(x+y)+this.sex);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    window.f1(10,20);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//</span><span style="color:#7F848E;font-style:italic;">    //obj是一个对象</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    var obj={</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//      age:10,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//      sex:&quot;男&quot;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    };</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    window.f1.apply(obj,[10,20]);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    window.f1.call(obj,10,20);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    console.dir(obj);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//apply和call改变this的指向</span></span>
<span class="line"><span style="color:#C678DD;">			function</span><span style="color:#61AFEF;"> Person</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">age</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">sex</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">				this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">age</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> age</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">				this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">sex</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> sex</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">			}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//通过原型添加方法</span></span>
<span class="line"><span style="color:#E5C07B;">			Person</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">sayHi</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">x</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">y</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">				console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;您好啊:&quot;</span><span style="color:#56B6C2;"> +</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">sex</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">				return</span><span style="color:#D19A66;"> 1000</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">			};</span></span>
<span class="line"><span style="color:#C678DD;">			var</span><span style="color:#E06C75;"> per</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Person</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;男&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">			per</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">sayHi</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">			console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;==============&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">			function</span><span style="color:#61AFEF;"> Student</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">name</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">sex</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">				this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">name</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> name</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">				this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">sex</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> sex</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">			}</span></span>
<span class="line"><span style="color:#C678DD;">			var</span><span style="color:#E06C75;"> stu</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Student</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;小明&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;人妖&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">			var</span><span style="color:#E06C75;"> r1</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> per</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">sayHi</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">apply</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">stu</span><span style="color:#ABB2BF;">, [</span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">]);</span></span>
<span class="line"><span style="color:#C678DD;">			var</span><span style="color:#E06C75;"> r2</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> per</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">sayHi</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">call</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">stu</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">			console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">r1</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">			console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">r2</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;/</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">html</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br></div></div><p>call 和 apply 方法总结：</p><ul><li><p>都可以改变 this 的指向：上面的函数内 this 指向的表格数据</p><ul><li><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> Person</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">age</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">sex</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">	this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">age</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> age</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">	this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">sex</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> sex</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//通过原型添加方法</span></span>
<span class="line"><span style="color:#E5C07B;">Person</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">sayHi</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">x</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">y</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;您好啊:&quot;</span><span style="color:#56B6C2;"> +</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">sex</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">	return</span><span style="color:#D19A66;"> 1000</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> per</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Person</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;男&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">per</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">sayHi</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;==============&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> Student</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">name</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">sex</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">	this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">name</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> name</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">	this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">sex</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> sex</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> stu</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Student</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;小明&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;人妖&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> r1</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> per</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">sayHi</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">apply</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">stu</span><span style="color:#ABB2BF;">, [</span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">]);</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> r2</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> per</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">sayHi</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">call</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">stu</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">r1</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">r2</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div></li></ul></li><li><p>apply 和 call 方法也是函数的调用的方式</p><ul><li><p>直接调用，什么参数都不传：</p><ul><li><p>f1.apply();</p></li><li><p>f1.call();</p></li></ul></li></ul></li><li><p>apply 和 call 方法中如果没有传入参数，或者是传入的是 null，那么调用该方法的函数对象中的 this 就是默认的 window</p></li><li><p>apply 和 call 都可以让函数或者方法来调用，传入参数和函数自己调用的写法不一样，但是效果是一样的，函数内有返回值，可以定义变量接收</p><ul><li><p>var result1=f1.apply(null,[10,20]);</p></li><li><p>var result2=f1.call(null,10,20);</p></li><li><p>console.log(result1);</p></li><li><p>console.log(result2);</p></li></ul></li></ul><h3 id="bind" tabindex="-1">bind <a class="header-anchor" href="#bind" aria-label="Permalink to &quot;bind&quot;">​</a></h3><p>bind 文档：<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/bind" target="_blank" rel="noreferrer">Function.prototype.bind() - JavaScript | MDN (mozilla.org)</a></p><ul><li><p>bind() 函数会创建一个新函数（称为绑定函数），新函数与被调函数（绑定函数的目标函数）具有相同的函数体（在 ECMAScript 5 规范中内置的 call 属性）。</p></li><li><p>当目标函数被调用时 this 值绑定到 bind() 的第一个参数，该参数不能被重写。绑定函数被调用时，bind() 也接受预设的参数提供给原函数。</p></li><li><p>一个绑定函数也能使用 new 操作符创建对象：这种行为就像把原函数当成构造器。提供的 this 值被忽略，同时调用时的参数被提供给模拟函数。</p></li></ul><p><strong>语法</strong>：</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">bind</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">thisArg</span><span style="color:#ABB2BF;">[, </span><span style="color:#E06C75;font-style:italic;">arg1</span><span style="color:#ABB2BF;">[, </span><span style="color:#E06C75;font-style:italic;">arg2</span><span style="color:#ABB2BF;">[, ...]]])</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>参数</strong>：</p><ul><li><p>thisArg</p><ul><li>当绑定函数被调用时，该参数会作为原函数运行时的 this 指向。当使用 new 操作符调用绑定函数时，该参数无效。</li></ul></li><li><p>arg1, arg2, ...</p><ul><li>当绑定函数被调用时，这些参数将置于实参之前传递给被绑定的方法。</li></ul></li></ul><p><strong>返回值</strong>：</p><p>返回由指定的 this 值和初始化参数改造的原函数拷贝。</p><p><strong>示例 1</strong>：</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">x</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 9</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> module</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">	x</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">81</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#61AFEF;">	getX</span><span style="color:#ABB2BF;">: </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#C678DD;">		return</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">x</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getX</span><span style="color:#ABB2BF;">(); </span><span style="color:#7F848E;font-style:italic;">// 返回 81</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> retrieveX</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> module</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">getX</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#61AFEF;">retrieveX</span><span style="color:#ABB2BF;">(); </span><span style="color:#7F848E;font-style:italic;">// 返回 9, 在这种情况下，&quot;this&quot;指向全局作用域</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 创建一个新函数，将&quot;this&quot;绑定到module对象</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 新手可能会被全局的x变量和module里的属性x所迷惑</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> boundGetX</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> retrieveX</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">bind</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#61AFEF;">boundGetX</span><span style="color:#ABB2BF;">(); </span><span style="color:#7F848E;font-style:italic;">// 返回 81</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p><strong>示例 2</strong>：</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> LateBloomer</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E5C07B;">	this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">petalCount</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> Math</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">ceil</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Math</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">random</span><span style="color:#ABB2BF;">() </span><span style="color:#56B6C2;">*</span><span style="color:#D19A66;"> 12</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">+</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Declare bloom after a delay of 1 second</span></span>
<span class="line"><span style="color:#E5C07B;">LateBloomer</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">bloom</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#E5C07B;">	window</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setTimeout</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">declare</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">bind</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">), </span><span style="color:#D19A66;">1000</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">LateBloomer</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">declare</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;I am a beautiful flower with &quot;</span><span style="color:#56B6C2;"> +</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">petalCount</span><span style="color:#56B6C2;"> +</span><span style="color:#98C379;"> &quot; petals!&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> flower</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> LateBloomer</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">flower</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">bloom</span><span style="color:#ABB2BF;">(); </span><span style="color:#7F848E;font-style:italic;">// 一秒钟后, 调用&#39;declare&#39;方法</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>例子：</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;!</span><span style="color:#E06C75;">DOCTYPE</span><span style="color:#D19A66;"> html</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">html</span><span style="color:#D19A66;"> lang</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;en&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">meta</span><span style="color:#D19A66;"> charset</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;UTF-8&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;title&lt;/</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#C678DD;">			function</span><span style="color:#61AFEF;"> f1</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">x</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">y</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">				console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">x</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> y</span><span style="color:#56B6C2;"> +</span><span style="color:#98C379;"> &quot;:=====&gt;&quot;</span><span style="color:#56B6C2;"> +</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">age</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">			}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//复制了一份的时候,把参数传入到了f1函数中,x===&gt;10,y===&gt;20,null就是this,默认就是window</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//bind方法是复制的意思,参数可以在复制的时候传进去,也可以在复制之后调用的时候传入进去</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">			function</span><span style="color:#61AFEF;"> Person</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">age</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">				this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">age</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> age</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">			}</span></span>
<span class="line"><span style="color:#E5C07B;">			Person</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">play</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#E5C07B;">				console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">this</span><span style="color:#56B6C2;"> +</span><span style="color:#98C379;"> &quot;====&gt;&quot;</span><span style="color:#56B6C2;"> +</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">age</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">			};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">			function</span><span style="color:#61AFEF;"> Student</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">age</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">				this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">age</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> age</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">			}</span></span>
<span class="line"><span style="color:#C678DD;">			var</span><span style="color:#E06C75;"> per</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Person</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">			var</span><span style="color:#E06C75;"> stu</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Student</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//复制了一份</span></span>
<span class="line"><span style="color:#C678DD;">			var</span><span style="color:#E06C75;"> ff</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> per</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">play</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">bind</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">stu</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#61AFEF;">			ff</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//bind是用来复制一份</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//使用的语法:</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// 函数名字.bind(对象,参数1,参数2,...); ----&gt; 返回值是复制之后的这个函数</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// 方法名字.bind(对象,参数1,参数2,...); ----&gt; 返回值是复制之后的这个方法</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;/</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">html</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><p>bind 方法的使用例子：通过对象,调用方法,产生随机数</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;!</span><span style="color:#E06C75;">DOCTYPE</span><span style="color:#D19A66;"> html</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">html</span><span style="color:#D19A66;"> lang</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;en&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">meta</span><span style="color:#D19A66;"> charset</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;UTF-8&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;title&lt;/</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//通过对象,调用方法,产生随机数</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">			function</span><span style="color:#61AFEF;"> ShowRandom</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				//1-10的随机数</span></span>
<span class="line"><span style="color:#E5C07B;">				this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">number</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> parseInt</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Math</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">random</span><span style="color:#ABB2BF;">() </span><span style="color:#56B6C2;">*</span><span style="color:#D19A66;"> 10</span><span style="color:#56B6C2;"> +</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">			}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//添加原型方法</span></span>
<span class="line"><span style="color:#E5C07B;">			ShowRandom</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">show1</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				//改变了定时器中的this的指向了,本来应该是window,现在是实例对象了</span></span>
<span class="line"><span style="color:#E5C07B;">				window</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setInterval</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">show2</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">bind</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">), </span><span style="color:#D19A66;">1000</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">			};</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//添加原型方法</span></span>
<span class="line"><span style="color:#E5C07B;">			ShowRandom</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">show2</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				//显示随机数--</span></span>
<span class="line"><span style="color:#E5C07B;">				console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">number</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">			};</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//实例对象</span></span>
<span class="line"><span style="color:#C678DD;">			var</span><span style="color:#E06C75;"> sr</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> ShowRandom</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//调用方法,输出随机数字</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//调用这个方法一次,可以不停的产生随机数字,但是都是产生的同一个随机数</span></span>
<span class="line"><span style="color:#E5C07B;">			sr</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">show1</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;/</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">html</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><h3 id="小结" tabindex="-1">小结 <a class="header-anchor" href="#小结" aria-label="Permalink to &quot;小结&quot;">​</a></h3><ul><li><p>call 和 apply 特性一样</p><ul><li>都是用来调用函数，而且是立即调用</li><li>但是可以在调用函数的同时，通过第一个参数指定函数内部 <code>this</code> 的指向</li><li>call 调用的时候，参数必须以参数列表的形式进行传递，也就是以逗号分隔的方式依次传递即可</li><li>apply 调用的时候，参数必须是一个数组，然后在执行的时候，会将数组内部的元素一个一个拿出来，与形参一一对应进行传递</li><li>如果第一个参数指定了 <code>null</code> 或者 <code>undefined</code> 则内部 this 指向 window</li></ul></li><li><p>bind</p><ul><li>可以用来指定内部 this 的指向，然后生成一个改变了 this 指向的新的函数</li><li>bind 方法，是复制一份的时候，再改变 this 的指向</li><li>它和 call、apply 最大的区别是：bind 不会调用</li><li>bind 支持传递参数，它的传参方式比较特殊，一共有两个位置可以传递 <ul><li><ol><li>在 bind 的同时，以参数列表的形式进行传递</li></ol></li><li><ol start="2"><li>在调用的时候，以参数列表的形式进行传递</li></ol></li><li>那到底以谁 bind 的时候传递的参数为准呢还是以调用的时候传递的参数为准</li><li>两者合并：bind 的时候传递的参数和调用的时候传递的参数会合并到一起，传递到函数内部</li></ul></li></ul></li></ul><h2 id="不带括号执行-javascript-函数的七种方法" tabindex="-1">不带括号执行 JavaScript 函数的七种方法 <a class="header-anchor" href="#不带括号执行-javascript-函数的七种方法" aria-label="Permalink to &quot;不带括号执行 JavaScript 函数的七种方法&quot;">​</a></h2><p>不带括号执行 JavaScript 函数的七种方法：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">alert</span><span style="color:#98C379;">\`1337\`</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">throw</span><span style="color:#ABB2BF;"> ((</span><span style="color:#E06C75;">onerror</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> alert</span><span style="color:#ABB2BF;">), </span><span style="color:#D19A66;">1337</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#61AFEF;">Function</span><span style="color:#98C379;">\`x</span><span style="color:#C678DD;">\${</span><span style="color:#98C379;">&quot;alert</span><span style="color:#56B6C2;">\\x28</span><span style="color:#98C379;">1337</span><span style="color:#56B6C2;">\\x29</span><span style="color:#98C379;">&quot;</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">x\`</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#98C379;">&quot;alert</span><span style="color:#56B6C2;">\\x28</span><span style="color:#98C379;">1337</span><span style="color:#56B6C2;">\\x29</span><span style="color:#98C379;">&quot;</span><span style="color:#C678DD;"> instanceof</span><span style="color:#ABB2BF;"> { [</span><span style="color:#E06C75;">Symbol</span><span style="color:#ABB2BF;">[</span><span style="color:#98C379;">&quot;hasInstance&quot;</span><span style="color:#ABB2BF;">]]: </span><span style="color:#E5C07B;">eval</span><span style="color:#ABB2BF;"> };</span></span>
<span class="line"><span style="color:#E06C75;">valueOf</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> alert</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">window</span><span style="color:#56B6C2;"> +</span><span style="color:#98C379;"> &quot;&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">x</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> DOMMatrix</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E06C75;">matrix</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> alert</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">x</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">a</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 1337</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">location</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;javascript&quot;</span><span style="color:#56B6C2;"> +</span><span style="color:#98C379;"> &quot;:&quot;</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> x</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>下代码所示：alert<code>123</code>alert</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> x</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#61AFEF;">	alert</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">arguments</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">]);</span></span>
<span class="line"><span style="color:#61AFEF;">	alert</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">arguments</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">]);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#61AFEF;">x</span><span style="color:#98C379;">\`x</span><span style="color:#C678DD;">\${</span><span style="color:#98C379;">&quot;ale&quot;</span><span style="color:#56B6C2;"> +</span><span style="color:#98C379;"> &quot;rt(1)&quot;</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">x\`</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>这里发生的事情是所有字符串都作为数组添加到第一个参数中，第二个参数获取字符串，但等等，为什么字符串作为第二个参数传递给函数？好吧，字符串的处理方式与占位符不同，没有占位符的普通字符串将作为数组添加到第一个参数中，而占位符将作为其类型的新参数添加。最后一点很重要，我当时没有意识到的是占位符被添加为参数，其类型而不是字符串！以下代码对此进行了演示：alert(1)alert(1)</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> x</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#61AFEF;">	alert</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">arguments</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">]);</span></span>
<span class="line"><span style="color:#E5C07B;">	arguments</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">](</span><span style="color:#98C379;">&quot;hello&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> y</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">str</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#61AFEF;">	alert</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">str</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#61AFEF;">x</span><span style="color:#98C379;">\`x</span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">y</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">x\`</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>太好了，这是很酷的行为，这意味着我们可以调用函数并使用任何类型的多个参数。 但是我们有一个问题，在标记模板中使用字符串时，它们将始终作为第一个参数添加，从而破坏使用第一个参数的函数。我们在这里的目标是使用我们选择的参数调用函数。 例如，我们可能想要调用，因为第一个参数接受一个函数或字符串，第三个参数使用该值调用该函数：setTimeout</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">setTimeout</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">alert</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;I get passed to alert&quot;</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>让我们尝试调用：setTimeout</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">setTimeout</span><span style="color:#98C379;">\`</span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">alert</span><span style="color:#C678DD;">}\${</span><span style="color:#D19A66;">0</span><span style="color:#C678DD;">}\${</span><span style="color:#D19A66;">1</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">\`</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// Uncaught SyntaxError: Unexpected token &#39;,&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>我们可以再次使用自定义函数看到发生了什么：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> x</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">arguments</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#61AFEF;">x</span><span style="color:#98C379;">\`</span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">alert</span><span style="color:#C678DD;">}\${</span><span style="color:#D19A66;">0</span><span style="color:#C678DD;">}\${</span><span style="color:#D19A66;">1</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">\`</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>控制台的屏幕截图，显示发送到函数的参数</p><p>因此，我们可以看到第一个参数包含一个空白字符串数组，最后的另一个数组再次充满空白字符串。当将这些数组转换为字符串时，我们会得到一堆逗号，这会导致语法错误。不知何故，我们需要函数忽略第一个参数，你怎么做？好吧，您可以使用，因为第一个参数将是分配给函数的“this”的数组，现在警报将作为第一个参数传递给函数，但是......setTimeoutsetTimeoutsetTimeout.callsetTimeout</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">setTimeout</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">call</span><span style="color:#98C379;">\`</span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">alert</span><span style="color:#C678DD;">}\${</span><span style="color:#D19A66;">0</span><span style="color:#C678DD;">}\${</span><span style="color:#D19A66;">1</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">\`</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">//Illegal invocation</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>因为你不再直接调用函数，JavaScript 会抛出一个异常来阻止你调用函数，因为“this”不再是窗口对象。我想游戏结束了，然后我意识到过去我做过一些 JS 黑客和其他。它们允许您调用函数而不会出现非法调用错误：[].sort</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">[].</span><span style="color:#E5C07B;">sort</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">call</span><span style="color:#98C379;">\`</span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">alert</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">1337\`</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>当然，您可以使用其他函数，例如 和其他数组方法，例如：evalmap</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">[].</span><span style="color:#E5C07B;">map</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">call</span><span style="color:#98C379;">\`</span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">eval</span><span style="color:#C678DD;">}</span><span style="color:#56B6C2;">\\\\</span><span style="color:#98C379;">u{61}lert</span><span style="color:#56B6C2;">\\x28</span><span style="color:#98C379;">1337</span><span style="color:#56B6C2;">\\x29</span><span style="color:#98C379;">\`</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>也可以使用：Reflect</p><p>显示一些使用 Reflect.apply 调用导航函数的代码</p><p>上面使用 Chrome 中的新方法导致有效负载来自。</p><p>为了调用，您需要为函数提供正确的“thisObject”，这是在第二个参数中完成的。在第三个参数中使用，该参数必须是发送到函数的参数数组。使用设置和应用的方法，您可以分配给几乎任何对象或调用任何函数！请注意，我使用“window.name”来隐藏有效负载，通常有效负载将来自另一个页面或域，方法是将其传递到跨域传递的窗口的“name”属性中。navigation.navigatewindow.namenavigateReflect.applywindow.nameReflect</p><h2 id="函数的其它成员" tabindex="-1">函数的其它成员 <a class="header-anchor" href="#函数的其它成员" aria-label="Permalink to &quot;函数的其它成员&quot;">​</a></h2><ul><li>arguments <ul><li>函数的实参集合（<strong>已弃用</strong>）</li><li>文档：<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/arguments" target="_blank" rel="noreferrer">Function.arguments - JavaScript | MDN (mozilla.org)</a></li></ul></li><li>caller <ul><li>函数的调用者（<strong>非标准</strong>）</li><li>文档：<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/caller" target="_blank" rel="noreferrer">Function.caller - JavaScript | MDN (mozilla.org)</a></li></ul></li><li>length <ul><li>函数的形参个数</li><li>文档：<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/length" target="_blank" rel="noreferrer">Function.length - JavaScript | MDN (mozilla.org)</a></li></ul></li><li>name <ul><li>函数实例的名称</li><li>文档：<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/name" target="_blank" rel="noreferrer">Function.name - JavaScript | MDN (mozilla.org)</a></li></ul></li></ul><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> fn</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">x</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">y</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">z</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">fn</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// =&gt; 形参的个数</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">arguments</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// 伪数组实参参数集合</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">arguments</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">callee</span><span style="color:#56B6C2;"> ===</span><span style="color:#E06C75;"> fn</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// 函数本身</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">fn</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">caller</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// 函数的调用者</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">fn</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// =&gt; 函数的名字</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> f</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#61AFEF;">	fn</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">30</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">f</span><span style="color:#ABB2BF;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="高阶函数" tabindex="-1">高阶函数 <a class="header-anchor" href="#高阶函数" aria-label="Permalink to &quot;高阶函数&quot;">​</a></h2><ul><li>函数可以作为参数</li><li>函数可以作为返回值</li></ul><h3 id="函数作为参数" tabindex="-1">函数作为参数 <a class="header-anchor" href="#函数作为参数" aria-label="Permalink to &quot;函数作为参数&quot;">​</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> eat</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">callback</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#61AFEF;">	setTimeout</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#E5C07B;">		console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;吃完了&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#61AFEF;">		callback</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">	}, </span><span style="color:#D19A66;">1000</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">eat</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;去唱歌&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>函数作为参数练习案例：</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;!</span><span style="color:#E06C75;">DOCTYPE</span><span style="color:#D19A66;"> html</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">html</span><span style="color:#D19A66;"> lang</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;en&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">meta</span><span style="color:#D19A66;"> charset</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;UTF-8&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;title&lt;/</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    var arr = [1, 100, 20, 200, 40, 50, 120, 10];</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//</span><span style="color:#7F848E;font-style:italic;">    //排序</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    arr.sort();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    console.log(arr);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">			var</span><span style="color:#E06C75;"> arr</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> [</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">100</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">200</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">40</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">50</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">120</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">];</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//排序---函数作为参数使用,匿名函数作为sort方法的参数使用,那么此时的匿名函数中有两个参数,</span></span>
<span class="line"><span style="color:#E5C07B;">			arr</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">sort</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">obj1</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">obj2</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">				if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">obj1</span><span style="color:#56B6C2;"> &gt;</span><span style="color:#E06C75;"> obj2</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">					return</span><span style="color:#56B6C2;"> -</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">				} </span><span style="color:#C678DD;">else</span><span style="color:#C678DD;"> if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">obj1</span><span style="color:#56B6C2;"> ==</span><span style="color:#E06C75;"> obj2</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">					return</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">				} </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">					return</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">				}</span></span>
<span class="line"><span style="color:#ABB2BF;">			});</span></span>
<span class="line"><span style="color:#E5C07B;">			console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">arr</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">			var</span><span style="color:#E06C75;"> arr1</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> [</span><span style="color:#98C379;">&quot;acdef&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;abcd&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;bcedf&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;bced&quot;</span><span style="color:#ABB2BF;">];</span></span>
<span class="line"><span style="color:#E5C07B;">			arr1</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">sort</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">a</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">b</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">				if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">a</span><span style="color:#56B6C2;"> &gt;</span><span style="color:#E06C75;"> b</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">					return</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">				} </span><span style="color:#C678DD;">else</span><span style="color:#C678DD;"> if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">a</span><span style="color:#56B6C2;"> ==</span><span style="color:#E06C75;"> b</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">					return</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">				} </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">					return</span><span style="color:#56B6C2;"> -</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">				}</span></span>
<span class="line"><span style="color:#ABB2BF;">			});</span></span>
<span class="line"><span style="color:#E5C07B;">			console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">arr1</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;/</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">html</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br></div></div><h3 id="函数作为返回值" tabindex="-1">函数作为返回值 <a class="header-anchor" href="#函数作为返回值" aria-label="Permalink to &quot;函数作为返回值&quot;">​</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> genFun</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">type</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">	return</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">obj</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">		return</span><span style="color:#E5C07B;"> Object</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">toString</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">call</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">===</span><span style="color:#E06C75;"> type</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">	};</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> isArray</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> genFun</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;[object Array]&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> isObject</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> genFun</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;[object Object]&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">isArray</span><span style="color:#ABB2BF;">([])); </span><span style="color:#7F848E;font-style:italic;">// =&gt; true</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">isArray</span><span style="color:#ABB2BF;">({})); </span><span style="color:#7F848E;font-style:italic;">// =&gt; true</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>函数作为返回值案例：</p><p>前置知识：多种数据格式使用.call 改变的 this 的指向</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;!</span><span style="color:#E06C75;">DOCTYPE</span><span style="color:#D19A66;"> html</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">html</span><span style="color:#D19A66;"> lang</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;en&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">meta</span><span style="color:#D19A66;"> charset</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;UTF-8&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;函数作为返回值练习&lt;/</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    function f1() {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//      console.log(&quot;f1函数开始&quot;);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//      return function () {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//        console.log(&quot;我是函数,但是此时是作为返回值使用的&quot;);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//      }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    var ff=f1();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    ff();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    var num=10;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    console.log(typeof num);//获取num这个变量的数据类型</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    var obj={};//对象</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//</span><span style="color:#7F848E;font-style:italic;">    //判断这个对象是不是某个类型的</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    console.log(obj instanceof Object);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//</span><span style="color:#7F848E;font-style:italic;">    //获取某个对象的数据类型的样子</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//</span><span style="color:#7F848E;font-style:italic;">    //Object.prototype.toString.call(对象);//此时得到的就是这个对象的类型的样子</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//</span><span style="color:#7F848E;font-style:italic;">    //此时输出的是Object的数据类型   [object Object]</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    console.log(Object.prototype.toString());</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//</span><span style="color:#7F848E;font-style:italic;">    //输出的数组的数据类型      [object Array]</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    console.log(Object.prototype.toString.call([]));</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    var arr=[10,20,30];</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    console.log(Object.prototype.toString.call(arr));</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//</span></span>
<span class="line"><span style="color:#E5C07B;">			console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">toString</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">call</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> Date</span><span style="color:#ABB2BF;">()));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//获取某个对象的类型是不是你传入的类型</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//[10,20,30] 是不是&quot;[object Array]&quot;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//type---是变量----是参数----&quot;[object Array]&quot;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//obj---是变量-----是参数----[10,20,30];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//判断这个对象和传入的类型是不是同一个类型</span></span>
<span class="line"><span style="color:#C678DD;">			function</span><span style="color:#61AFEF;"> getFunc</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">type</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">				return</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">obj</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">					return</span><span style="color:#E5C07B;"> Object</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">toString</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">call</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">===</span><span style="color:#E06C75;"> type</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">				};</span></span>
<span class="line"><span style="color:#ABB2BF;">			}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">			var</span><span style="color:#E06C75;"> ff</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> getFunc</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;[object Array]&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">			var</span><span style="color:#E06C75;"> result</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> ff</span><span style="color:#ABB2BF;">([</span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">30</span><span style="color:#ABB2BF;">]);</span></span>
<span class="line"><span style="color:#E5C07B;">			console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">result</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">			var</span><span style="color:#E06C75;"> ff1</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> getFunc</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;[object Object]&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">			var</span><span style="color:#E06C75;"> dt</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Date</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#C678DD;">			var</span><span style="color:#E06C75;"> result1</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> ff1</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">dt</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">			console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">result1</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;/</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">html</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br></div></div><p>函数作为返回值-电影信息排序练习：</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;!</span><span style="color:#E06C75;">DOCTYPE</span><span style="color:#D19A66;"> html</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">html</span><span style="color:#D19A66;"> lang</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;en&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">meta</span><span style="color:#D19A66;"> charset</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;UTF-8&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;函数作为返回值-电影信息排序练习&lt;/</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// 排序,每个文件都有名字，大小,时间,都可以按照某个属性的值进行排序</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// 三部电影,电影有名字,大小,上映时间</span></span>
<span class="line"><span style="color:#C678DD;">			function</span><span style="color:#61AFEF;"> File</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">name</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">size</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">time</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">				this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">name</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> name</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// 电影名字</span></span>
<span class="line"><span style="color:#E5C07B;">				this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">size</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> size</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// 电影大小</span></span>
<span class="line"><span style="color:#E5C07B;">				this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">time</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> time</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// 电影的上映时间</span></span>
<span class="line"><span style="color:#ABB2BF;">			}</span></span>
<span class="line"><span style="color:#C678DD;">			var</span><span style="color:#E06C75;"> f1</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> File</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;jack.avi&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;400M&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;1997-12-12&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">			var</span><span style="color:#E06C75;"> f2</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> File</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;tom.avi&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;200M&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;2017-12-12&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">			var</span><span style="color:#E06C75;"> f3</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> File</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;xiaosu.avi&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;800M&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;2010-12-12&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">			var</span><span style="color:#E06C75;"> arr</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> [</span><span style="color:#E06C75;">f1</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">f2</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">f3</span><span style="color:#ABB2BF;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">			function</span><span style="color:#61AFEF;"> fn</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">attr</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				// 函数作为返回值</span></span>
<span class="line"><span style="color:#C678DD;">				return</span><span style="color:#C678DD;"> function</span><span style="color:#61AFEF;"> getSort</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">obj1</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">obj2</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">					if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">obj1</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">attr</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">&gt;</span><span style="color:#E06C75;"> obj2</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">attr</span><span style="color:#ABB2BF;">]) {</span></span>
<span class="line"><span style="color:#C678DD;">						return</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">					} </span><span style="color:#C678DD;">else</span><span style="color:#C678DD;"> if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">obj1</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">attr</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">==</span><span style="color:#E06C75;"> obj2</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">attr</span><span style="color:#ABB2BF;">]) {</span></span>
<span class="line"><span style="color:#C678DD;">						return</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">					} </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">						return</span><span style="color:#56B6C2;"> -</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">					}</span></span>
<span class="line"><span style="color:#ABB2BF;">				};</span></span>
<span class="line"><span style="color:#ABB2BF;">			}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">			var</span><span style="color:#E06C75;"> ff</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> fn</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;name&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// 函数作为参数</span></span>
<span class="line"><span style="color:#E5C07B;">			arr</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">sort</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">ff</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">			for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> &lt;</span><span style="color:#E5C07B;"> arr</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">				console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">arr</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">].</span><span style="color:#E06C75;">name</span><span style="color:#56B6C2;"> +</span><span style="color:#98C379;"> &quot;====&gt;&quot;</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> arr</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">].</span><span style="color:#E06C75;">size</span><span style="color:#56B6C2;"> +</span><span style="color:#98C379;"> &quot;===&gt;&quot;</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> arr</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">].</span><span style="color:#E06C75;">time</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">			}</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;/</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">html</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br></div></div><h2 id="函数闭包" tabindex="-1">函数闭包 <a class="header-anchor" href="#函数闭包" aria-label="Permalink to &quot;函数闭包&quot;">​</a></h2><h3 id="_0-闭包前置-作用域、作用域链、预解析" tabindex="-1">0.闭包前置：作用域、作用域链、预解析 <a class="header-anchor" href="#_0-闭包前置-作用域、作用域链、预解析" aria-label="Permalink to &quot;0.闭包前置：作用域、作用域链、预解析&quot;">​</a></h3><ul><li><p>变量----&gt;局部变量和全局变量</p></li><li><p><strong>作用域</strong>：就是变量的使用范围</p><ul><li><p>局部作用域和全局作用域</p></li><li><p>js 的 ES5 语法中没有块级作用域（ES6 语法才有）---&gt; 一对括号中定义的变量，这个变量可以在大括号外面使用</p></li></ul></li><li><p><strong>作用域链</strong>：变量的使用, 从里向外, 层层的搜索, 搜索到了就可以直接使用了;</p><ul><li><p>层层搜索, 搜索到 0 级作用域的时候, 如果还是没有找到这个变量, 结果就是报错;</p></li><li><p>函数中定义的变量是局部变量</p></li></ul></li><li><p><strong>预解析</strong>：就是在浏览器解析代码之前,把变量的声明和函数的声明提前(提升)到该作用域的最上面</p></li></ul><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#C678DD;">	var</span><span style="color:#E06C75;"> foo</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;bar&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">foo</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">	var</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 123</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>作用域链示例代码：</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 10</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> fn</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">	var</span><span style="color:#E06C75;"> b</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 20</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">	function</span><span style="color:#61AFEF;"> fn1</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">		var</span><span style="color:#E06C75;"> c</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 30</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">		console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">a</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> b</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> c</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">	function</span><span style="color:#61AFEF;"> fn2</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">		var</span><span style="color:#E06C75;"> d</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 40</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">		console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">c</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> d</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">	fn1</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#61AFEF;">	fn2</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>示例：</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;!</span><span style="color:#E06C75;">DOCTYPE</span><span style="color:#D19A66;"> html</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">html</span><span style="color:#D19A66;"> lang</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;en&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">meta</span><span style="color:#D19A66;"> charset</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;UTF-8&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;title&lt;/</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//变量----&gt;局部变量和全局变量,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//作用域:就是变量的使用范围</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//局部作用域和全局作用域</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//js中没有块级作用域---一对括号中定义的变量,这个变量可以在大括号外面使用</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//函数中定义的变量是局部变量</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    while(true){</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//      var num=10;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//      break;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    console.log(num);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//      var num2=100;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    console.log(num2);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    if(true){</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//      var num3=1000;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    console.log(num3);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    function f1() {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//</span><span style="color:#7F848E;font-style:italic;">      //局部变量</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//      var num=10;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    console.log(num);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// 作用域链: 变量的使用, 从里向外, 层层的搜索, 搜索到了就可以直接使用了;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// 层层搜索, 搜索到0级作用域的时候, 如果还是没有找到这个变量, 结果就是报错;</span></span>
<span class="line"><span style="color:#C678DD;">			var</span><span style="color:#E06C75;"> num</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 10</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">//作用域链 级别:0</span></span>
<span class="line"><span style="color:#C678DD;">			var</span><span style="color:#E06C75;"> num2</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 20</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">			var</span><span style="color:#E06C75;"> str</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;abc&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">			function</span><span style="color:#61AFEF;"> f1</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">				var</span><span style="color:#E06C75;"> num2</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 20</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">				function</span><span style="color:#61AFEF;"> f2</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">					var</span><span style="color:#E06C75;"> num3</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 30</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">					console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">num</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">				}</span></span>
<span class="line"><span style="color:#61AFEF;">				f2</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">			}</span></span>
<span class="line"><span style="color:#61AFEF;">			f1</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//预解析:就是在浏览器解析代码之前,把变量的声明和函数的声明提前(提升)到该作用域的最上面</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//变量的提升</span></span>
<span class="line"><span style="color:#E5C07B;">			console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">num</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">			var</span><span style="color:#E06C75;"> num</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 100</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//函数的声明被提前了</span></span>
<span class="line"><span style="color:#61AFEF;">			f1</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#C678DD;">			function</span><span style="color:#61AFEF;"> f1</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E5C07B;">				console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;这个函数,执行了&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">			}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">			var</span><span style="color:#E06C75;"> f2</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#61AFEF;">			f2</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#E5C07B;">				console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;小杨好帅哦&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">			};</span></span>
<span class="line"><span style="color:#61AFEF;">			f2</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;/</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">html</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br></div></div><ul><li>内层作用域可以访问外层作用域，反之不行</li></ul><h3 id="_1-什么是闭包" tabindex="-1">1.什么是闭包 <a class="header-anchor" href="#_1-什么是闭包" aria-label="Permalink to &quot;1.什么是闭包&quot;">​</a></h3><ol><li><p>闭包就是能够读取其他函数内部变量的函数，</p><ol><li>函数 A 中,有一个函数 B,函数 B 中可以访问函数 A 中定义的变量或者是数据,此时形成了闭包(这句话暂时不严谨)</li></ol></li><li><p>由于在 Javascript 语言中，只有函数内部的子函数才能读取局部变量， 因此可以把闭包简单理解成 “定义在一个函数内部的函数”。</p></li><li><p>所以，在本质上，闭包就是将函数内部和函数外部连接起来的一座桥梁。</p></li></ol><h3 id="_2-闭包的用途" tabindex="-1">2.闭包的用途 <a class="header-anchor" href="#_2-闭包的用途" aria-label="Permalink to &quot;2.闭包的用途&quot;">​</a></h3><ul><li>可以在函数外部读取函数内部成员（延长作用域链）</li><li>让函数内成员始终存活在内存中（缓存数据）</li></ul><h3 id="_3-闭包的模式" tabindex="-1">3.闭包的模式 <a class="header-anchor" href="#_3-闭包的模式" aria-label="Permalink to &quot;3.闭包的模式&quot;">​</a></h3><ul><li><p>函数模式的闭包</p><ul><li><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 函数模式的闭包：在一个函数中有一个函数，调用最外面的函数，里面的函数也会执行</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> f1</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">	var</span><span style="color:#E06C75;"> num</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 10</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	//函数的声明</span></span>
<span class="line"><span style="color:#C678DD;">	function</span><span style="color:#61AFEF;"> f2</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E5C07B;">		console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">num</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	//函数调用</span></span>
<span class="line"><span style="color:#61AFEF;">	f2</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#61AFEF;">f1</span><span style="color:#ABB2BF;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div></li></ul></li><li><p>对象模式的闭包</p><ul><li><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 对象模式的闭包：函数中有一个对象</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> f3</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">	var</span><span style="color:#E06C75;"> num</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 10</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">	var</span><span style="color:#E06C75;"> obj</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">		age</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">num</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">	};</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">obj</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">age</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">//10</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#61AFEF;">f3</span><span style="color:#ABB2BF;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></li></ul></li></ul><h3 id="_4-简单的闭包示例" tabindex="-1">4.简单的闭包示例 <a class="header-anchor" href="#_4-简单的闭包示例" aria-label="Permalink to &quot;4.简单的闭包示例&quot;">​</a></h3><p>示例 0：两种函数闭包示范</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 闭包：函数内定义了变量，返回出去，外面能访问，外面能拿到值</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> f1</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">	var</span><span style="color:#E06C75;"> num</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 10</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">	return</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#E5C07B;">		console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">num</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">		return</span><span style="color:#E06C75;"> num</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">	};</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> ff</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> f1</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> result</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> ff</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">result</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 闭包：函数内定义了变量，变量在函数外能拿到</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> f2</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">	var</span><span style="color:#E06C75;"> num</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 100</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">	return</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">		age</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">num</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">	};</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> obj</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> f2</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">obj</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">age</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p>示例 1：函数内返回值为函数的闭包</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> fn</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">	var</span><span style="color:#E06C75;"> count</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">	return</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#61AFEF;">		getCount</span><span style="color:#ABB2BF;">: </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#E5C07B;">			console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">count</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">		},</span></span>
<span class="line"><span style="color:#61AFEF;">		setCount</span><span style="color:#ABB2BF;">: </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#E06C75;">			count</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">		},</span></span>
<span class="line"><span style="color:#ABB2BF;">	};</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> fns</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> fn</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">fns</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getCount</span><span style="color:#ABB2BF;">(); </span><span style="color:#7F848E;font-style:italic;">// =&gt; 0</span></span>
<span class="line"><span style="color:#E5C07B;">fns</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setCount</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">fns</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getCount</span><span style="color:#ABB2BF;">(); </span><span style="color:#7F848E;font-style:italic;">// =&gt; 1</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>示例 2：普通的函数的++和函数模式的闭包++的连续调用</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;!</span><span style="color:#E06C75;">DOCTYPE</span><span style="color:#D19A66;"> html</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">html</span><span style="color:#D19A66;"> lang</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;en&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">meta</span><span style="color:#D19A66;"> charset</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;UTF-8&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;title&lt;/</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// 普通的函数：不会累加</span></span>
<span class="line"><span style="color:#C678DD;">			function</span><span style="color:#61AFEF;"> f1</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">				var</span><span style="color:#E06C75;"> num</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 10</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">				num</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">				return</span><span style="color:#E06C75;"> num</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">			}</span></span>
<span class="line"><span style="color:#E5C07B;">			console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">f1</span><span style="color:#ABB2BF;">()); </span><span style="color:#7F848E;font-style:italic;">// 11</span></span>
<span class="line"><span style="color:#E5C07B;">			console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">f1</span><span style="color:#ABB2BF;">()); </span><span style="color:#7F848E;font-style:italic;">// 11</span></span>
<span class="line"><span style="color:#E5C07B;">			console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">f1</span><span style="color:#ABB2BF;">()); </span><span style="color:#7F848E;font-style:italic;">// 11</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// 函数模式的闭包：累加</span></span>
<span class="line"><span style="color:#C678DD;">			function</span><span style="color:#61AFEF;"> f2</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">				var</span><span style="color:#E06C75;"> num</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 10</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">				return</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#E06C75;">					num</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">					return</span><span style="color:#E06C75;"> num</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">				};</span></span>
<span class="line"><span style="color:#ABB2BF;">			}</span></span>
<span class="line"><span style="color:#C678DD;">			var</span><span style="color:#E06C75;"> ff</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> f2</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">			console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">ff</span><span style="color:#ABB2BF;">()); </span><span style="color:#7F848E;font-style:italic;">// 11</span></span>
<span class="line"><span style="color:#E5C07B;">			console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">ff</span><span style="color:#ABB2BF;">()); </span><span style="color:#7F848E;font-style:italic;">// 12</span></span>
<span class="line"><span style="color:#E5C07B;">			console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">ff</span><span style="color:#ABB2BF;">()); </span><span style="color:#7F848E;font-style:italic;">// 13</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;/</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">html</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><hr><p>示例 3：for 循环内的数组每个属性函数闭包</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> arr</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> [</span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">30</span><span style="color:#ABB2BF;">];</span></span>
<span class="line"><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> &lt;</span><span style="color:#E5C07B;"> arr</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E06C75;">	arr</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#E5C07B;">		console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">	};</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><hr><p>示例 4：for 循环内的定时器函数闭包</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">111</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> &lt;</span><span style="color:#D19A66;"> 3</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#61AFEF;">	setTimeout</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#E5C07B;">		console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">	}, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">222</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><hr><p>示例 5：闭包点赞投票案例</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;!</span><span style="color:#E06C75;">DOCTYPE</span><span style="color:#D19A66;"> html</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">html</span><span style="color:#D19A66;"> lang</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;en&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">meta</span><span style="color:#D19A66;"> charset</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;UTF-8&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;闭包点赞投票案例&lt;/</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">style</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#E06C75;">			ul</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">				list-style-type: </span><span style="color:#D19A66;">none</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">			}</span></span>
<span class="line"><span style="color:#E06C75;">			li</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">				float: </span><span style="color:#D19A66;">left</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">				margin-left: </span><span style="color:#D19A66;">10</span><span style="color:#E06C75;">px</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">			}</span></span>
<span class="line"><span style="color:#E06C75;">			img</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">				width: </span><span style="color:#D19A66;">200</span><span style="color:#E06C75;">px</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">				height: </span><span style="color:#D19A66;">180</span><span style="color:#E06C75;">px</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">			}</span></span>
<span class="line"><span style="color:#E06C75;">			input</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">				margin-left: </span><span style="color:#D19A66;">30</span><span style="color:#E06C75;">%</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">			}</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;/</span><span style="color:#E06C75;">style</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//$永远都是24k纯帅的十八岁的杨哥$</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;/</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">ul</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">			&lt;</span><span style="color:#E06C75;">li</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">				&lt;</span><span style="color:#E06C75;">img</span><span style="color:#D19A66;"> src</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;images/ly.jpg&quot;</span><span style="color:#D19A66;"> alt</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#ABB2BF;"> /&gt;&lt;</span><span style="color:#E06C75;">br</span><span style="color:#ABB2BF;"> /&gt;&lt;</span><span style="color:#E06C75;">input</span></span>
<span class="line"><span style="color:#D19A66;">					type</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;button&quot;</span></span>
<span class="line"><span style="color:#D19A66;">					value</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;赞(1)&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">				/&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">			&lt;/</span><span style="color:#E06C75;">li</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">			&lt;</span><span style="color:#E06C75;">li</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">				&lt;</span><span style="color:#E06C75;">img</span><span style="color:#D19A66;"> src</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;images/lyml.jpg&quot;</span><span style="color:#D19A66;"> alt</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#ABB2BF;"> /&gt;&lt;</span><span style="color:#E06C75;">br</span><span style="color:#ABB2BF;"> /&gt;&lt;</span><span style="color:#E06C75;">input</span></span>
<span class="line"><span style="color:#D19A66;">					type</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;button&quot;</span></span>
<span class="line"><span style="color:#D19A66;">					value</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;赞(1)&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">				/&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">			&lt;/</span><span style="color:#E06C75;">li</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">			&lt;</span><span style="color:#E06C75;">li</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">				&lt;</span><span style="color:#E06C75;">img</span><span style="color:#D19A66;"> src</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;images/fj.jpg&quot;</span><span style="color:#D19A66;"> alt</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#ABB2BF;"> /&gt;&lt;</span><span style="color:#E06C75;">br</span><span style="color:#ABB2BF;"> /&gt;&lt;</span><span style="color:#E06C75;">input</span></span>
<span class="line"><span style="color:#D19A66;">					type</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;button&quot;</span></span>
<span class="line"><span style="color:#D19A66;">					value</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;赞(1)&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">				/&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">			&lt;/</span><span style="color:#E06C75;">li</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">			&lt;</span><span style="color:#E06C75;">li</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">				&lt;</span><span style="color:#E06C75;">img</span><span style="color:#D19A66;"> src</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;images/bd.jpg&quot;</span><span style="color:#D19A66;"> alt</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#ABB2BF;"> /&gt;&lt;</span><span style="color:#E06C75;">br</span><span style="color:#ABB2BF;"> /&gt;&lt;</span><span style="color:#E06C75;">input</span></span>
<span class="line"><span style="color:#D19A66;">					type</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;button&quot;</span></span>
<span class="line"><span style="color:#D19A66;">					value</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;赞(1)&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">				/&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">			&lt;/</span><span style="color:#E06C75;">li</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;/</span><span style="color:#E06C75;">ul</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// 获取所有的按钮</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// 根据标签名字获取元素</span></span>
<span class="line"><span style="color:#C678DD;">			function</span><span style="color:#61AFEF;"> my$</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">tagName</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">				return</span><span style="color:#E5C07B;"> document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getElementsByTagName</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">tagName</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">			}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// 闭包缓存数据</span></span>
<span class="line"><span style="color:#C678DD;">			function</span><span style="color:#61AFEF;"> getValue</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">				var</span><span style="color:#E06C75;"> value</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 2</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">				return</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">					//每一次点击的时候,都应该改变当前点击按钮的value值</span></span>
<span class="line"><span style="color:#E5C07B;">					this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">value</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;赞(&quot;</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> value</span><span style="color:#56B6C2;">++</span><span style="color:#56B6C2;"> +</span><span style="color:#98C379;"> &quot;)&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">				};</span></span>
<span class="line"><span style="color:#ABB2BF;">			}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// 获取所有的按钮</span></span>
<span class="line"><span style="color:#C678DD;">			var</span><span style="color:#E06C75;"> btnObjs</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> my$</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;input&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// 循环遍历每个按钮,注册点击事件</span></span>
<span class="line"><span style="color:#C678DD;">			for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> &lt;</span><span style="color:#E5C07B;"> btnObjs</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				//注册事件</span></span>
<span class="line"><span style="color:#E06C75;">				btnObjs</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">].</span><span style="color:#E06C75;">onclick</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> getValue</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">			}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// 错误，点击所有会每个点击事件都累加在一个数值</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//  var btnObjs=my$(&quot;input&quot;);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//  var value=1;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//</span><span style="color:#7F848E;font-style:italic;">  //循环遍历每个按钮</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//  for(var i=0;i&lt;btnObjs.length;i++){</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//</span><span style="color:#7F848E;font-style:italic;">    //为每个按钮注册点击事件</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    btnObjs[i].onclick=function () {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//      console.log(&quot;哈哈&quot;);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//      this.value=&quot;赞(&quot;+(value++)+&quot;)&quot;;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    };</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//  }</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;/</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">html</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br></div></div><hr><p>示例 6：沙箱模式--定义使用的变量等元素不会跟外面的冲突，环境独立</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#56B6C2;">&lt;!</span><span style="color:#E5C07B;">DOCTYPE</span><span style="color:#E06C75;"> html</span><span style="color:#56B6C2;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">html</span><span style="color:#D19A66;font-style:italic;"> lang</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;en&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;"> &lt;</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">meta</span><span style="color:#D19A66;font-style:italic;"> charset</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;UTF-8&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;title&lt;/</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">   //沙箱:环境,黑盒,在一个虚拟的环境中模拟真实世界,做实验,实验结果和真实世界的结果是一样,但是不会影响真实世界</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">   // var num = 10;</span></span>
<span class="line"><span style="color:#ABB2BF;">   // console.log(num + 10);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">   //</span><span style="color:#ABB2BF;"> // 立即执行函数沙箱---小环境</span></span>
<span class="line"><span style="color:#ABB2BF;">   // (function () </span><span style="color:#C678DD;">{</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   //  var num = 10;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   //  console.log(num);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   // })();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   //</span><span style="color:#7F848E;font-style:italic;"> // 立即执行函数沙箱---小环境</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   // (function () {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   //  var num = 20;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   //  console.log(num + 10);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   // })();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">            //</span><span style="color:#7F848E;font-style:italic;"> // 变量和沙箱里面不冲突</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   // var num = 100;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   // (function () {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   //  var num = 10;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   //  console.log(num);</span><span style="color:#7F848E;font-style:italic;"> //10</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   // })();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   // console.log(num);</span><span style="color:#7F848E;font-style:italic;"> //100</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   // 沙箱小案例</span></span>
<span class="line"><span style="color:#ABB2BF;">   (</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#C678DD;">    var</span><span style="color:#E06C75;"> str</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;小白喜欢小黑&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">    str</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> str</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">substr</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">    console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">str</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">   })();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   // 沙箱</span></span>
<span class="line"><span style="color:#ABB2BF;">   (</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#C678DD;">    var</span><span style="color:#E06C75;"> str</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;小明喜欢小红&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">    str</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> str</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">substr</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">    console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">str</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">   })();</span></span>
<span class="line"><span style="color:#56B6C2;">  &lt;/</span><span style="color:#E06C75;">script</span><span style="color:#56B6C2;">&gt;</span></span>
<span class="line"><span style="color:#56B6C2;"> &lt;/</span><span style="color:#E06C75;">head</span><span style="color:#56B6C2;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;"> &lt;</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">input</span><span style="color:#D19A66;font-style:italic;"> type</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;button&quot;</span><span style="color:#D19A66;font-style:italic;"> value</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;按钮&quot;</span><span style="color:#D19A66;font-style:italic;"> id</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;btn&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">   //点击按钮,弹出对话框</span></span>
<span class="line"><span style="color:#ABB2BF;">   (function () </span><span style="color:#C678DD;">{</span></span>
<span class="line"><span style="color:#E5C07B;">    document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getElementById</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;btn&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">onclick</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#E5C07B;">     console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;按钮被点击了&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    };</span></span>
<span class="line"><span style="color:#C678DD;">   }</span><span style="color:#ABB2BF;">)();</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;"> &lt;/</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#56B6C2;">&lt;/</span><span style="color:#E06C75;">html</span><span style="color:#56B6C2;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br></div></div><p>沙箱案例 2：元素的操作</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;!</span><span style="color:#E06C75;">DOCTYPE</span><span style="color:#D19A66;"> html</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">html</span><span style="color:#D19A66;"> lang</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;en&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">meta</span><span style="color:#D19A66;"> charset</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;UTF-8&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;title&lt;/</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;/</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;这是div&lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;这是div&lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;这是div&lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">p</span><span style="color:#ABB2BF;">&gt;这是p&lt;/</span><span style="color:#E06C75;">p</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">p</span><span style="color:#ABB2BF;">&gt;这是p&lt;/</span><span style="color:#E06C75;">p</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">p</span><span style="color:#ABB2BF;">&gt;这是p&lt;/</span><span style="color:#E06C75;">p</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// 跟函数同名的变量</span></span>
<span class="line"><span style="color:#C678DD;">			var</span><span style="color:#E06C75;"> getTag</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 10</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">			var</span><span style="color:#E06C75;"> dvObjs</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 20</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">			var</span><span style="color:#E06C75;"> pObjs</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 30</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">			(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				// 根据标签名字获取元素</span></span>
<span class="line"><span style="color:#C678DD;">				function</span><span style="color:#61AFEF;"> getTag</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">tagName</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">					return</span><span style="color:#E5C07B;"> document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getElementsByTagName</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">tagName</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">				}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				// 获取所有的div</span></span>
<span class="line"><span style="color:#C678DD;">				var</span><span style="color:#E06C75;"> dvObjs</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> getTag</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;div&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">				for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> &lt;</span><span style="color:#E5C07B;"> dvObjs</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E06C75;">					dvObjs</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">].</span><span style="color:#E5C07B;">style</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">border</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;2px solid pink&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">				}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				// 获取所有的p</span></span>
<span class="line"><span style="color:#C678DD;">				var</span><span style="color:#E06C75;"> pObjs</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> getTag</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;p&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">				for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> &lt;</span><span style="color:#E5C07B;"> pObjs</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E06C75;">					pObjs</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">].</span><span style="color:#E5C07B;">style</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">border</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;2px solid pink&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">				}</span></span>
<span class="line"><span style="color:#ABB2BF;">			})();</span></span>
<span class="line"><span style="color:#E5C07B;">			console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">getTag</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">			console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">dvObjs</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">			console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">pObjs</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;/</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">html</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><hr><p>示例 7：产生多个相同的随机数</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;!</span><span style="color:#E06C75;">DOCTYPE</span><span style="color:#D19A66;"> html</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">html</span><span style="color:#D19A66;"> lang</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;en&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">meta</span><span style="color:#D19A66;"> charset</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;UTF-8&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;title&lt;/</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// 普通的函数生成不同的随机数</span></span>
<span class="line"><span style="color:#C678DD;">			function</span><span style="color:#61AFEF;"> showRandom</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">				var</span><span style="color:#E06C75;"> num</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> parseInt</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Math</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">random</span><span style="color:#ABB2BF;">() </span><span style="color:#56B6C2;">*</span><span style="color:#D19A66;"> 10</span><span style="color:#56B6C2;"> +</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">				console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">num</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">			}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">			showRandom</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#61AFEF;">			showRandom</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#61AFEF;">			showRandom</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//闭包的方式,产生三个随机数,但是都是相同的（因为数据被闭包缓存了）</span></span>
<span class="line"><span style="color:#C678DD;">			function</span><span style="color:#61AFEF;"> f1</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				// 想要缓存的变量放置在这里的作用域</span></span>
<span class="line"><span style="color:#C678DD;">				var</span><span style="color:#E06C75;"> num</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> parseInt</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Math</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">random</span><span style="color:#ABB2BF;">() </span><span style="color:#56B6C2;">*</span><span style="color:#D19A66;"> 10</span><span style="color:#56B6C2;"> +</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">				return</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#E5C07B;">					console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">num</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">				};</span></span>
<span class="line"><span style="color:#ABB2BF;">			}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">			var</span><span style="color:#E06C75;"> ff</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> f1</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">			ff</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#61AFEF;">			ff</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#61AFEF;">			ff</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//总结：如果想要缓存数据,就把这个数据放在外层的函数和里层的函数的中间位置</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//闭包的作用：缓存数据.优点也是缺陷,没有及时的释放</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//局部变量是在函数中,函数使用结束后,局部变量就会被自动的释放</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//闭包后,里面的局部变量的使用作用域链就会被延长</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;/</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">html</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><hr><h3 id="_5-闭包的思考题" tabindex="-1">5.闭包的思考题 <a class="header-anchor" href="#_5-闭包的思考题" aria-label="Permalink to &quot;5.闭包的思考题&quot;">​</a></h3><p>思考题 1：</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> name</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;The Window&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> object</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">	name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;My Object&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#61AFEF;">	getNameFunc</span><span style="color:#ABB2BF;">: </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#C678DD;">		return</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#C678DD;">			return</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">		};</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getNameFunc</span><span style="color:#ABB2BF;">()());</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>思考题 2：</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> name</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;The Window&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> object</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">	name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;My Object&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#61AFEF;">	getNameFunc</span><span style="color:#ABB2BF;">: </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#C678DD;">		var</span><span style="color:#E06C75;"> that</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">		return</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#C678DD;">			return</span><span style="color:#E5C07B;"> that</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">		};</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getNameFunc</span><span style="color:#ABB2BF;">()());</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="函数递归" tabindex="-1">函数递归 <a class="header-anchor" href="#函数递归" aria-label="Permalink to &quot;函数递归&quot;">​</a></h2><p>递归：函数中调用函数自己，此时就是递归</p><p>递归一定要有结束的条件</p><h3 id="递归执行模型" tabindex="-1">递归执行模型 <a class="header-anchor" href="#递归执行模型" aria-label="Permalink to &quot;递归执行模型&quot;">​</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> fn1</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">111</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#61AFEF;">	fn2</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;fn1&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> fn2</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">222</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#61AFEF;">	fn3</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;fn2&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> fn3</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">333</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#61AFEF;">	fn4</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;fn3&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> fn4</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">444</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;fn4&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">fn1</span><span style="color:#ABB2BF;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>示例：</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;!</span><span style="color:#E06C75;">DOCTYPE</span><span style="color:#D19A66;"> html</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">html</span><span style="color:#D19A66;"> lang</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;en&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">meta</span><span style="color:#D19A66;"> charset</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;UTF-8&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;title&lt;/</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#C678DD;">			var</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">			function</span><span style="color:#61AFEF;"> f1</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E06C75;">				i</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">				if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> &lt;</span><span style="color:#D19A66;"> 5</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#61AFEF;">					f1</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">				}</span></span>
<span class="line"><span style="color:#E5C07B;">				console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;从前有个山,山里有个庙,庙里有个和尚给小和尚讲故事:&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">			}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">			f1</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;/</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">html</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h3 id="递归的案例" tabindex="-1">递归的案例 <a class="header-anchor" href="#递归的案例" aria-label="Permalink to &quot;递归的案例&quot;">​</a></h3><p>计算阶乘的递归函数：</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> factorial</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">num</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">	if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">num</span><span style="color:#56B6C2;"> &lt;=</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">		return</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">	} </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">		return</span><span style="color:#E06C75;"> num</span><span style="color:#56B6C2;"> *</span><span style="color:#61AFEF;"> factorial</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">num</span><span style="color:#56B6C2;"> -</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>案例综合：</p><ul><li><p>for 循环实现：求 n 个数字的和，5 计算 1+2+3+4+5</p></li><li><p>递归实现：求 n 个数字的和：n=5 ---&gt; 5+4+3+2+1</p></li><li><p>递归案例：求一个数字各个位数上的数字的和：123 ---&gt; 6 ---&gt; 1+2+3</p></li><li><p>递归案例：求斐波那契数列</p></li></ul><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;!</span><span style="color:#E06C75;">DOCTYPE</span><span style="color:#D19A66;"> html</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">html</span><span style="color:#D19A66;"> lang</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;en&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">meta</span><span style="color:#D19A66;"> charset</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;UTF-8&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;递归案例综合&lt;/</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// for循环实现：求n个数字的和,5 计算1+2+3+4+5</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    var sum=0;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    for(var i=1;i&lt;=5;i++){</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//      sum+=i;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    console.log(sum);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// 递归实现：求n个数字的和：n=5 ---&gt;  5+4+3+2+1</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// 函数的声明</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    function getSum(x) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//      if(x==1){</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//        return 1;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//      }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//      return x+getSum(x-1);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//</span><span style="color:#7F848E;font-style:italic;">    // 函数的调用</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    console.log(getSum(5));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			/*</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			 *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			 * getSum函数执行过程:</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			 * 代码执行getSum(5)---&gt;进入函数,此时的x是5,执行的是5+getSum(4),此时代码等待</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			 * 此时5+getSum(4),代码先不进行计算,先执行getSum(4),进入函数,执行的是4+getSum(3),等待, 先执行的是getSum(3),进入函数,执行3+getSum(2),等待,先执行getSum(2),进入函数,执行 2+getSum(1);等待, 先执行getSum(1),执行的是x==1的判断,return 1,所以,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			 * 此时getSum(1)的结果是1,开始向外走出去</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			 * 2+getSum(1) 此时的结果是:2+1</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			 * 执行:</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			 * getSum(2)----&gt;2+1</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			 * 3+getSum(2) 此时的结果是3+2+1</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			 * 4+getSum(3) 此时的结果是4+3+2+1</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			 * 5+getSum(4) 此时的结果是5+4+3+2+1</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			 *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			 * 结果:15</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			 *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			 *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			 *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			 * */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// 递归案例：求一个数字各个位数上的数字的和：123 ---&gt; 6 ---&gt; 1+2+3</span></span>
<span class="line"><span style="color:#C678DD;">			function</span><span style="color:#61AFEF;"> getEverySum</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">x</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">				if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">x</span><span style="color:#56B6C2;"> &lt;</span><span style="color:#D19A66;"> 10</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">					return</span><span style="color:#E06C75;"> x</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">				}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				// 获取的是这个数字的个位数</span></span>
<span class="line"><span style="color:#C678DD;">				return</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">x</span><span style="color:#56B6C2;"> %</span><span style="color:#D19A66;"> 10</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">+</span><span style="color:#61AFEF;"> getEverySum</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">parseInt</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">x</span><span style="color:#56B6C2;"> /</span><span style="color:#D19A66;"> 10</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#ABB2BF;">			}</span></span>
<span class="line"><span style="color:#E5C07B;">			console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">getEverySum</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1364</span><span style="color:#ABB2BF;">)); </span><span style="color:#7F848E;font-style:italic;">//5</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// 递归案例：求斐波那契数列</span></span>
<span class="line"><span style="color:#C678DD;">			function</span><span style="color:#61AFEF;"> getFib</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">x</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">				if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">x</span><span style="color:#56B6C2;"> ==</span><span style="color:#D19A66;"> 1</span><span style="color:#56B6C2;"> ||</span><span style="color:#E06C75;"> x</span><span style="color:#56B6C2;"> ==</span><span style="color:#D19A66;"> 2</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">					return</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">				}</span></span>
<span class="line"><span style="color:#C678DD;">				return</span><span style="color:#61AFEF;"> getFib</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">x</span><span style="color:#56B6C2;"> -</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">+</span><span style="color:#61AFEF;"> getFib</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">x</span><span style="color:#56B6C2;"> -</span><span style="color:#D19A66;"> 2</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">			}</span></span>
<span class="line"><span style="color:#E5C07B;">			console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">getFib</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">12</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;/</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">html</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br></div></div><h3 id="递归应用场景" tabindex="-1">递归应用场景 <a class="header-anchor" href="#递归应用场景" aria-label="Permalink to &quot;递归应用场景&quot;">​</a></h3><ul><li><p>深拷贝：是复制，深：把一个对象中所有的属性或者方法，一个一个的找到，并且在另一个对象中开辟相应的空间，一个一个的存储到另一个对象中</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;!</span><span style="color:#E06C75;">DOCTYPE</span><span style="color:#D19A66;"> html</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">html</span><span style="color:#D19A66;"> lang</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;en&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">meta</span><span style="color:#D19A66;"> charset</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;UTF-8&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;递归函数实现深拷贝&lt;/</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//深拷贝:拷贝还是复制,深:把一个对象中所有的属性或者方法,一个一个的找到.并且在另一个对象中开辟相应的空间,一个一个的存储到另一个对象中</span></span>
<span class="line"><span style="color:#C678DD;">			var</span><span style="color:#E06C75;"> obj1</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">				age</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">				sex</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;男&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">				car</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;奔驰&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;宝马&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;特斯拉&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;奥拓&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#E06C75;">				dog</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">					name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;大黄&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">					age</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">					color</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;黑白色&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">				},</span></span>
<span class="line"><span style="color:#ABB2BF;">			};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">			var</span><span style="color:#E06C75;"> obj2</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {}; </span><span style="color:#7F848E;font-style:italic;">//空对象</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//通过函数实现,把对象a中的所有的数据深拷贝到对象b中</span></span>
<span class="line"><span style="color:#C678DD;">			function</span><span style="color:#61AFEF;"> extend</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">a</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">b</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">				for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> key</span><span style="color:#C678DD;"> in</span><span style="color:#E06C75;"> a</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">					//先获取a对象中每个属性的值</span></span>
<span class="line"><span style="color:#C678DD;">					var</span><span style="color:#E06C75;"> item</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> a</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">];</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">					//判断这个属性的值是不是数组</span></span>
<span class="line"><span style="color:#C678DD;">					if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">item</span><span style="color:#C678DD;"> instanceof</span><span style="color:#E5C07B;"> Array</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">						//如果是数组,那么在b对象中添加一个新的属性,并且这个属性值也是数组</span></span>
<span class="line"><span style="color:#E06C75;">						b</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> [];</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">						//调用这个方法，把a对象中这个数组的属性值一个一个的复制到b对象的这个数组属性中</span></span>
<span class="line"><span style="color:#61AFEF;">						extend</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">item</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">]);</span></span>
<span class="line"><span style="color:#ABB2BF;">					} </span><span style="color:#C678DD;">else</span><span style="color:#C678DD;"> if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">item</span><span style="color:#C678DD;"> instanceof</span><span style="color:#E5C07B;"> Object</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">						//判断这个值是不是对象类型的</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">						//如果是对象类型的,那么在b对象中添加一个属性,是一个空对象</span></span>
<span class="line"><span style="color:#E06C75;">						b</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> {};</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">						//再次调用这个函数,把a对象中的属性对象的值一个一个的复制到b对象的这个属性对象中</span></span>
<span class="line"><span style="color:#61AFEF;">						extend</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">item</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">]);</span></span>
<span class="line"><span style="color:#ABB2BF;">					} </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">						//如果值是普通的数据,直接复制到b对象的这个属性中</span></span>
<span class="line"><span style="color:#E06C75;">						b</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> item</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">					}</span></span>
<span class="line"><span style="color:#ABB2BF;">				}</span></span>
<span class="line"><span style="color:#ABB2BF;">			}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">			extend</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj1</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">obj2</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">			console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">dir</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj1</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">			console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">dir</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj2</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;/</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">html</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br></div></div></li></ul><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>- 浅拷贝的写法：拷贝就是复制，就相当于把一个对象中的所有的内容，复制一份给另一个对象，直接复制，或者说,就是把一个对象的地址给了另一个对象，他们指向相同，两个对象之间有共同的属性或者方法，都可以使用</span></span>
<span class="line"><span></span></span>
<span class="line"><span>- \`\`\`html</span></span>
<span class="line"><span>  &lt;!DOCTYPE html&gt;</span></span>
<span class="line"><span>  &lt;html lang=&quot;en&quot;&gt;</span></span>
<span class="line"><span>   &lt;head&gt;</span></span>
<span class="line"><span>    &lt;meta charset=&quot;UTF-8&quot; /&gt;</span></span>
<span class="line"><span>    &lt;title&gt;浅拷贝&lt;/title&gt;</span></span>
<span class="line"><span>    &lt;script&gt;</span></span>
<span class="line"><span>     // 浅拷贝：拷贝就是复制,就相当于把一个对象中的所有的内容,复制一份给另一个对象,直接复制,或者说,就是把一个对象的地址给了另一个对象,他们指向相同,两个对象之间有共同的属性或者方法,都可以使用</span></span>
<span class="line"><span>     var obj1 = {</span></span>
<span class="line"><span>      age: 10,</span></span>
<span class="line"><span>      sex: &quot;男&quot;,</span></span>
<span class="line"><span>      car: [&quot;奔驰&quot;, &quot;宝马&quot;, &quot;特斯拉&quot;, &quot;奥拓&quot;],</span></span>
<span class="line"><span>     };</span></span>
<span class="line"><span>     // 另一个对象</span></span>
<span class="line"><span>     var obj2 = {};</span></span>
<span class="line"><span></span></span>
<span class="line"><span>     // 写一个函数,作用：把一个对象的属性复制到另一个对象中,浅拷贝</span></span>
<span class="line"><span>     // 把a对象中的所有的属性复制到对象b中</span></span>
<span class="line"><span>     function extend(a, b) {</span></span>
<span class="line"><span>      for (var key in a) {</span></span>
<span class="line"><span>       b[key] = a[key];</span></span>
<span class="line"><span>      }</span></span>
<span class="line"><span>     }</span></span>
<span class="line"><span>     extend(obj1, obj2);</span></span>
<span class="line"><span>     console.dir(obj2); // 开始的时候这个对象是空对象</span></span>
<span class="line"><span>     console.dir(obj1); // 有属性</span></span>
<span class="line"><span>    &lt;/script&gt;</span></span>
<span class="line"><span>   &lt;/head&gt;</span></span>
<span class="line"><span>   &lt;body&gt;&lt;/body&gt;</span></span>
<span class="line"><span>  &lt;/html&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><ul><li>菜单树</li></ul><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li><p>遍历 DOM 树</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;!</span><span style="color:#E06C75;">DOCTYPE</span><span style="color:#D19A66;"> html</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">html</span><span style="color:#D19A66;"> lang</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;en&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">meta</span><span style="color:#D19A66;"> charset</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;UTF-8&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;遍历DOM树&lt;/</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;/</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">h1</span><span style="color:#ABB2BF;">&gt;遍历 DOM 树&lt;/</span><span style="color:#E06C75;">h1</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">p</span><span style="color:#D19A66;"> style</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;color: green&quot;</span><span style="color:#ABB2BF;">&gt;Tip: 可以在遍历的回调函数中任意定制需求&lt;/</span><span style="color:#E06C75;">p</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">			&lt;</span><span style="color:#E06C75;">ul</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">				&lt;</span><span style="color:#E06C75;">li</span><span style="color:#ABB2BF;">&gt;123&lt;/</span><span style="color:#E06C75;">li</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">				&lt;</span><span style="color:#E06C75;">li</span><span style="color:#ABB2BF;">&gt;456&lt;/</span><span style="color:#E06C75;">li</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">				&lt;</span><span style="color:#E06C75;">li</span><span style="color:#ABB2BF;">&gt;789&lt;/</span><span style="color:#E06C75;">li</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">			&lt;/</span><span style="color:#E06C75;">ul</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">			&lt;</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">				&lt;</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">					&lt;</span><span style="color:#E06C75;">span</span><span style="color:#ABB2BF;">&gt;haha&lt;/</span><span style="color:#E06C75;">span</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">				&lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">			&lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">div</span><span style="color:#D19A66;"> id</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;demo_node&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">			&lt;</span><span style="color:#E06C75;">ul</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">				&lt;</span><span style="color:#E06C75;">li</span><span style="color:#ABB2BF;">&gt;123&lt;/</span><span style="color:#E06C75;">li</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">			&lt;/</span><span style="color:#E06C75;">ul</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">			&lt;</span><span style="color:#E06C75;">p</span><span style="color:#ABB2BF;">&gt;hello&lt;/</span><span style="color:#E06C75;">p</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">			&lt;</span><span style="color:#E06C75;">h2</span><span style="color:#ABB2BF;">&gt;world&lt;/</span><span style="color:#E06C75;">h2</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">			&lt;</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">				&lt;</span><span style="color:#E06C75;">p</span><span style="color:#ABB2BF;">&gt;dsa&lt;/</span><span style="color:#E06C75;">p</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">				&lt;</span><span style="color:#E06C75;">h3</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">					&lt;</span><span style="color:#E06C75;">span</span><span style="color:#ABB2BF;">&gt;dsads&lt;/</span><span style="color:#E06C75;">span</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">				&lt;/</span><span style="color:#E06C75;">h3</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">			&lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//获取页面中的根节点--根标签</span></span>
<span class="line"><span style="color:#C678DD;">			var</span><span style="color:#E06C75;"> root</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> document</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">documentElement</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">//html</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//函数遍历DOM树</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//根据根节点,调用fn的函数,显示的是根节点的名字</span></span>
<span class="line"><span style="color:#C678DD;">			function</span><span style="color:#61AFEF;"> forDOM</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">root1</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				//调用f1,显示的是节点的名字</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				// f1(root1);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				//获取根节点中所有的子节点</span></span>
<span class="line"><span style="color:#C678DD;">				var</span><span style="color:#E06C75;"> children</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> root1</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">children</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				//调用遍历所有子节点的函数</span></span>
<span class="line"><span style="color:#61AFEF;">				forChildren</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">children</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">			}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//给我所有的子节点,我把这个子节点中的所有的子节点显示出来</span></span>
<span class="line"><span style="color:#C678DD;">			function</span><span style="color:#61AFEF;"> forChildren</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">children</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				//遍历所有的子节点</span></span>
<span class="line"><span style="color:#C678DD;">				for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> &lt;</span><span style="color:#E5C07B;"> children</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">					//每个子节点</span></span>
<span class="line"><span style="color:#C678DD;">					var</span><span style="color:#E06C75;"> child</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> children</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">];</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">					//显示每个子节点的名字</span></span>
<span class="line"><span style="color:#61AFEF;">					f1</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">child</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">					//判断child下面有没有子节点,如果还有子节点,那么就继续的遍历</span></span>
<span class="line"><span style="color:#E5C07B;">					child</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">children</span><span style="color:#56B6C2;"> &amp;&amp;</span><span style="color:#61AFEF;"> forDOM</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">child</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">				}</span></span>
<span class="line"><span style="color:#ABB2BF;">			}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//函数调用,传入根节点</span></span>
<span class="line"><span style="color:#61AFEF;">			forDOM</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">root</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">			function</span><span style="color:#61AFEF;"> f1</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">node</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">				console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;节点的名字:&quot;</span><span style="color:#56B6C2;"> +</span><span style="color:#E5C07B;"> node</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">nodeName</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">			}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// 节点：nodeName,nodeType,nodeValue</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//  第一个函数：给我根节点,我会找到所有的子节点:forDOM(根节点)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//  获取这个根节点的子节点</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//  var children=根节点的.children</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//  调用第二个函数</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//  第二个函数：给我所有的子节点,我把每个子节点的名字显示出来(children)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//  for(var i=0;i&lt;children.length;i++){</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    每个子节点</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    var child=children[i];</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    f1(child);给我节点,我显示该节点的名字</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    child是子节点,但是如果child里面还有子节点,此时child就是爹了</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//    child.children&amp;&amp;第一个函数(child)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			//  }</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;/</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">html</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br></div></div></li></ul><hr>`,195)]))}const F=n(o,[["render",e]]);export{b as __pageData,F as default};
