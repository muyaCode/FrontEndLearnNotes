import{_ as t,c as e,o as a,ah as i}from"./chunks/framework.DqD713j2.js";const o="/FrontEndLearnNotes/assets/image-20240510212546270.UGm4Z3q6.png",c="/FrontEndLearnNotes/assets/image-20240510212603557.WQ08WWjv.png",m=JSON.parse('{"title":"JavaScript跨硬件和PC","description":"","frontmatter":{},"headers":[],"relativePath":"Document/从软件到硬件/JavaScript跨硬件和PC.md","filePath":"Document/从软件到硬件/JavaScript跨硬件和PC.md","lastUpdated":1750954157000}'),p={name:"Document/从软件到硬件/JavaScript跨硬件和PC.md"};function s(l,r,n,f,h,d){return a(),e("div",null,r[0]||(r[0]=[i('<h1 id="javascript跨硬件和pc" tabindex="-1">JavaScript跨硬件和PC <a class="header-anchor" href="#javascript跨硬件和pc" aria-label="Permalink to &quot;JavaScript跨硬件和PC&quot;">​</a></h1><p>Arduino是一款灵活的、方便上手的开源电子原型平台。</p><h2 id="node串行端口" tabindex="-1">Node串行端口 <a class="header-anchor" href="#node串行端口" aria-label="Permalink to &quot;Node串行端口&quot;">​</a></h2><h2 id="firmata协议" tabindex="-1">Firmata协议 <a class="header-anchor" href="#firmata协议" aria-label="Permalink to &quot;Firmata协议&quot;">​</a></h2><h2 id="ruff初体验" tabindex="-1">Ruff初体验 <a class="header-anchor" href="#ruff初体验" aria-label="Permalink to &quot;Ruff初体验&quot;">​</a></h2><p><strong>Ruff物联网系统官网</strong>：<a href="https://ruff.io/zh-cn/" target="_blank" rel="noreferrer">https://ruff.io/zh-cn/</a></p><p>下载：<a href="https://ruff.io/zh-cn/docs/download.html" target="_blank" rel="noreferrer">https://ruff.io/zh-cn/docs/download.html</a></p><p>文档：<a href="https://ruff.io/zh-cn/docs/" target="_blank" rel="noreferrer">https://ruff.io/zh-cn/docs/</a></p><p>API：<a href="https://ruff.io/zh-cn/api/adc.html" target="_blank" rel="noreferrer">https://ruff.io/zh-cn/api/adc.html</a></p><p>软件报和设备查找：<a href="https://rap.ruff.io/" target="_blank" rel="noreferrer">Rap Registry (ruff.io)</a></p><p>Ruff 是一个支持 JavaScript 开发应用的物联网操作系统，为软件开发者提供开放、高效、敏捷的物联网应用开发平台，让 IoT 应用开发更简单。</p><p>整个 Ruff 开发体系包括 Ruff OS、Ruff SDK、Ruff 软件仓库、Ruff Kit 开发套件。 只要您有软件开发经验，就可以用 Ruff 开发硬件应用。</p><ul><li>Ruff OS 运行在硬件板卡上，为 Ruff 应用提供运行环境。</li><li>Ruff SDK 安装在开发机电脑上，包含开发相关的所有工具。</li><li>Ruff 软件仓库是云端的在线软件包管理平台，提供软件包下载和分享服务。</li><li>Ruff Kit 开发套件由 Ruff 开发板 (ruff-mbd-v1) 和多个外设模块组成，帮助快速上手。</li></ul><h3 id="javascript开发vr" tabindex="-1">JavaScript开发VR <a class="header-anchor" href="#javascript开发vr" aria-label="Permalink to &quot;JavaScript开发VR&quot;">​</a></h3><ul><li>使用 Node.js 来读取 Oculus 上的传感器的数据，将这些数据用 WebSocket 协议来提供一个服务。</li><li>寻找一个 3D 游戏引擎，如 Three.js 来创建一个 3D 世界。</li><li>读取传感器的值将其表示在 3D 世界中。</li></ul><h2 id="开发跨pc瑞的应用程序" tabindex="-1">开发跨PC瑞的应用程序 <a class="header-anchor" href="#开发跨pc瑞的应用程序" aria-label="Permalink to &quot;开发跨PC瑞的应用程序&quot;">​</a></h2><h1 id="devicescript-用轻量化的typescript开发嵌入式系统" tabindex="-1">devicescript：用轻量化的TypeScript开发嵌入式系统 <a class="header-anchor" href="#devicescript-用轻量化的typescript开发嵌入式系统" aria-label="Permalink to &quot;devicescript：用轻量化的TypeScript开发嵌入式系统&quot;">​</a></h1><p>项目地址：<a href="https://github.com/microsoft/devicescript" target="_blank" rel="noreferrer">https://github.com/microsoft/devicescript</a></p><p>文档地址：<a href="https://microsoft.github.io/devicescript/intro" target="_blank" rel="noreferrer">https://microsoft.github.io/devicescript/intro</a></p><p>TypeScript（JavaScript的超集）在微软主导下深入到嵌入式领域。</p><p>在物联网（IoT）领域中，微型设备通常需要使用一种轻量级的编程语言来实现各种功能。Devicescript 是一种专为微型 IoT 设备设计的 TypeScript 变种。它支持 ESP32、RP2040 等一系列微型设备，其中对ESP32-C3/S3提供最佳支持。</p><h2 id="设备脚本的特点" tabindex="-1">设备脚本的特点 <a class="header-anchor" href="#设备脚本的特点" aria-label="Permalink to &quot;设备脚本的特点&quot;">​</a></h2><p>Devicescript 将 TypeScript 进行了轻量化处理，使其更适用于微型 IoT 设备的开发。它保留了 TypeScript 的强类型特性，同时去除了一些不必要的功能，减小了内存占用和运行时开销。Devicescript 还提供了与硬件交互的 API，简化了开发者的工作。Devicescript为微软开发，可以方便地使用VS Code时行仿真，也可以用Wokwi平台仿真。</p><p><img src="'+o+'" alt="image-20240510212546270"></p><p><strong>Devicescript的优势</strong></p><ol><li><strong>强类型支持</strong>：Devicescript 在保留 TypeScript 强类型检查的基础上，进一步优化了类型系统，避免了一些不必要的类型转换和运行时错误。</li><li><strong>内存优化</strong>：Devicescript 专为微型设备设计，减小了内存占用，提高了程序运行效率，使得在资源有限的设备上也能够顺畅运行。</li><li><strong>硬件交互 API</strong>：Devicescript 提供了丰富的硬件交互 API，简化了与传感器、执行器等硬件设备的交互过程，降低了开发门槛。</li><li><strong>跨平台支持</strong>：Devicescript 支持多种微型设备，如 ESP32、RP2040 等，使得开发者可以在不同平台上使用相同的语言和工具进行开发。</li></ol><p><img src="'+c+'" alt="image-20240510212603557"></p><p><strong>设备脚本的适用场景</strong></p><ol><li><strong>物联网设备开发</strong>：Devicescript 可以用于开发各种物联网设备，如智能家居设备、传感器设备等，帮助开发者快速实现功能。</li><li><strong>嵌入式系统开发</strong>：Devicescript 适用于嵌入式系统开发，帮助开发者更好地管理内存资源、优化性能，并与底层硬件进行交互。</li><li><strong>传感器数据处理</strong>：Devicescript 提供了丰富的硬件交互 API，方便开发者读取和处理传感器数据，实现各种智能功能。</li><li><strong>实时控制应用</strong>：Devicescript 支持快速的编译和调试过程，适用于实时控制应用的开发，如机器人控制、无人机控制等。</li></ol><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>Devicescript 是一种针对微型 IoT 设备设计的轻量级 TypeScript 变种，具有强类型支持、内存优化、硬件交互 API 和跨平台支持等特点，适用于物联网设备开发、嵌入式系统开发、传感器数据处理和实时控制应用等场景。通过使用 Devicescript，开发者可以更加高效地开发和调试程序，实现各种创新的 IoT 应用。</p>',31)]))}const v=t(p,[["render",s]]);export{m as __pageData,v as default};
