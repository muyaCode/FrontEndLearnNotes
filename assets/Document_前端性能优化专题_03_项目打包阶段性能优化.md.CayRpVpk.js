import{_ as a,c as p,o as t,ah as r}from"./chunks/framework.DqD713j2.js";const h=JSON.parse('{"title":"项目打包段性能优化","description":"","frontmatter":{},"headers":[],"relativePath":"Document/前端性能优化专题/03_项目打包阶段性能优化.md","filePath":"Document/前端性能优化专题/03_项目打包阶段性能优化.md","lastUpdated":1750954157000}'),c={name:"Document/前端性能优化专题/03_项目打包阶段性能优化.md"};function n(i,e,o,s,l,b){return t(),p("div",null,e[0]||(e[0]=[r('<h1 id="项目打包段性能优化" tabindex="-1">项目打包段性能优化 <a class="header-anchor" href="#项目打包段性能优化" aria-label="Permalink to &quot;项目打包段性能优化&quot;">​</a></h1><h2 id="webpack打包优化" tabindex="-1">webpack打包优化 <a class="header-anchor" href="#webpack打包优化" aria-label="Permalink to &quot;webpack打包优化&quot;">​</a></h2><p><a href="https://juejin.cn/post/7050400511828164644" target="_blank" rel="noreferrer">2022前端vue项目重构总结 - 掘金 (juejin.cn)</a></p><p><a href="https://juejin.cn/post/7080066104613142559" target="_blank" rel="noreferrer">前端项目常规性能优化 - 掘金 (juejin.cn)</a></p><p><a href="https://juejin.cn/post/7137639757898743821" target="_blank" rel="noreferrer">100行代码删除前端项目中的无用文件 - 掘金</a></p><h2 id="如何优化你的-vue-cli-项目-如何优化你的-vue-cli-项目-掘金-juejin-cn" tabindex="-1">如何优化你的 vue-cli 项目：<a href="https://juejin.cn/post/7078491632605069348" target="_blank" rel="noreferrer">如何优化你的 vue-cli 项目？ - 掘金 (juejin.cn)</a> <a class="header-anchor" href="#如何优化你的-vue-cli-项目-如何优化你的-vue-cli-项目-掘金-juejin-cn" aria-label="Permalink to &quot;如何优化你的 vue-cli 项目：[如何优化你的 vue-cli 项目？ - 掘金 (juejin.cn)](https://juejin.cn/post/7078491632605069348)&quot;">​</a></h2><h2 id="通过性能优化-将包的体积-如何通过性能优化-将包的体积压缩了62-7-掘金-juejin-cn" tabindex="-1">通过性能优化，将包的体积：<a href="https://juejin.cn/post/7136453274948861983" target="_blank" rel="noreferrer">如何通过性能优化，将包的体积压缩了62.7% - 掘金 (juejin.cn)</a> <a class="header-anchor" href="#通过性能优化-将包的体积-如何通过性能优化-将包的体积压缩了62-7-掘金-juejin-cn" aria-label="Permalink to &quot;通过性能优化，将包的体积：[如何通过性能优化，将包的体积压缩了62.7% - 掘金 (juejin.cn)](https://juejin.cn/post/7136453274948861983)&quot;">​</a></h2><h2 id="提高首屏加载速度" tabindex="-1">提高首屏加载速度 <a class="header-anchor" href="#提高首屏加载速度" aria-label="Permalink to &quot;提高首屏加载速度&quot;">​</a></h2><p>我们知道是app.js文件太大，加载时间太长导致了首屏加载速度过慢，我们就需要对症下药减小app.js的大小，提高网站访问速度。</p><h2 id="一、压缩" tabindex="-1">一、压缩 <a class="header-anchor" href="#一、压缩" aria-label="Permalink to &quot;一、压缩&quot;">​</a></h2><p>对代码进行压缩，我们可以减小代码的体积量。</p><h2 id="二、路由懒加载" tabindex="-1">二、路由懒加载 <a class="header-anchor" href="#二、路由懒加载" aria-label="Permalink to &quot;二、路由懒加载&quot;">​</a></h2><p>当我们使用路由懒加载后，项目就会进行按需加载，其原理就是利用webpack大法的code splitting，当你使用路由加载的写法，webpack就会对app.js进行代码分割，减小app.js的体积，从而提高首屏加载数点。</p><p>没使用路由懒加载前的app.js：</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d6bc2464150d4dde8cdd87dd4a303f7d~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.awebp?" alt="2444cb58e449ec5ade0be219bbc50d11.jpg"></p><p>使用路由懒加载后对app.js进行code splitting：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c5894023f051494780324029951868de~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.awebp?" alt="859c4c1052f2ec4ce75acad28a040bed.jpg"></p><h2 id="三、cdn引入" tabindex="-1">三、CDN引入 <a class="header-anchor" href="#三、cdn引入" aria-label="Permalink to &quot;三、CDN引入&quot;">​</a></h2><p>采用CDN引入，在index.html使用CDN引入，并在webpack配置。打包之后webpack进会从外部打包第三方引入的库,减小app.js的体积，从而提高首屏加载速度。</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f0908b9803dc47c09be50588e0552302~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.awebp?" alt="企业微信截图_16445727114999.png"></p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d0f4a07e69f44278ade44cd881f9c2fb~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.awebp?" alt="image.png"></p><p>没使用CDN引入前app.js的大小：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/43c7debfbeb34b8ebab5d6cc1bb202f2~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.awebp?" alt="image.png"></p><p>使用CDN引入后app.js的大小：</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e45a3227929a493481bd142cdb177ef1~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.awebp?" alt="企业微信截图_164273430576.png"></p><h2 id="四、ssr服务器渲染" tabindex="-1">四、SSR服务器渲染 <a class="header-anchor" href="#四、ssr服务器渲染" aria-label="Permalink to &quot;四、SSR服务器渲染&quot;">​</a></h2><p>有局限性，禁用了beforeCreate()和created()之外的其他生命周期，我自己没有亲自测试过，但这是一种方案。</p><h2 id="五、增加带宽" tabindex="-1">五、增加带宽 <a class="header-anchor" href="#五、增加带宽" aria-label="Permalink to &quot;五、增加带宽&quot;">​</a></h2><p>增加带宽可以提高资源的访问速度，从而提高首批的加载速度，我司项目带宽由2M升级到5M，效果明显。</p><h2 id="六、提取第三方库-vendor" tabindex="-1">六、提取第三方库 vendor <a class="header-anchor" href="#六、提取第三方库-vendor" aria-label="Permalink to &quot;六、提取第三方库 vendor&quot;">​</a></h2><p>这是也是webpack大法的code splitting，提取一些第三方的库，从而减小app.js的大小。</p>',31)]))}const u=a(c,[["render",n]]);export{h as __pageData,u as default};
