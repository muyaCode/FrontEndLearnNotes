import{_ as n,c as a,o as l,ah as p}from"./chunks/framework.DqD713j2.js";const o="/FrontEndLearnNotes/assets/9fa0353210e14f2f8e116396a5499d60tplv-k3u1fbpfcp-jj-mark3024000q75.C6prvoT0.webp",e="/FrontEndLearnNotes/assets/2fd9334c68d04cbd85d677a95b6c4f00tplv-k3u1fbpfcp-jj-mark3024000q75.C7NwWFQj.webp",t="/FrontEndLearnNotes/assets/9dc09f12269b47249070339555ea30f2tplv-k3u1fbpfcp-jj-mark3024000q75.kjhbtZtG.webp",r="/FrontEndLearnNotes/assets/75b511a5bac14f32a9010ef936fe24dctplv-k3u1fbpfcp-jj-mark3024000q75.QGU3C1Ws.webp",m=JSON.parse('{"title":"Node+ffmpeg写一个视频服务器","description":"","frontmatter":{},"headers":[],"relativePath":"Document/Node后端框架开发/Node实战/Node+ffmpeg写一个视频服务器.md","filePath":"Document/Node后端框架开发/Node实战/Node+ffmpeg写一个视频服务器.md","lastUpdated":1750954157000}'),c={name:"Document/Node后端框架开发/Node实战/Node+ffmpeg写一个视频服务器.md"};function B(y,s,i,u,F,b){return l(),a("div",null,s[0]||(s[0]=[p('<h1 id="node-ffmpeg写一个视频服务器" tabindex="-1">Node+ffmpeg写一个视频服务器 <a class="header-anchor" href="#node-ffmpeg写一个视频服务器" aria-label="Permalink to &quot;Node+ffmpeg写一个视频服务器&quot;">​</a></h1><p>Node.js 采用了事件驱动和非阻塞 I/O 模型，这使得它能够高效处理大量的 I/O 请求和并发连接，这在流媒体服务器中至关重要。同时，FFmpeg 作为一个功能强大的视频处理工具，为我们提供了丰富的视频处理功能。</p><p>结合 Node.js 强大的扩展能力，我们可以轻松地集成 FFmpeg，打造一个功能完备的视频流媒体服务器，满足各种流媒体应用的需求。</p><p>现在我们就从 0 开始，实现一个简单的视频服务器：实现上传视频和播放视频的功能。在学习的过程中逐步了解视频服务器是如何工作的。</p><p>在开始之前，你需要：</p><ul><li>懂得 Node.js 的基本 API，如 fs 模块、process 模块等。</li><li>了解 Express.js 的用法和常见 API。</li><li>安装并了解 FFMPEG 的基本用途。</li></ul><p>我们现在要实现一个流媒体服务器。现在市面上的流媒体协议、格式有很多（RTP/RTCP/RTSP/RTMP/MMS/HLS 等），都有不同的应用场合。但是，目前的市面上绝大多数网站使用的是 HLS/M3U8 格式的流媒体，并且也得到了现代浏览器的支持。</p><p>所以，本文不去赘述这些流媒体协议，而是实现一个简单的 HLS/M3U8 格式的流媒体服务器。</p><p><strong>本文实现的流媒体服务器在技术上并不难。</strong></p><h2 id="mp4-视频切片" tabindex="-1">MP4 视频切片 <a class="header-anchor" href="#mp4-视频切片" aria-label="Permalink to &quot;MP4 视频切片&quot;">​</a></h2><p>随便打开一些主流视频网站，和 Chrome Devtools 切换到网络（network）选项卡，然后播放视频，可以看出，浏览器一直在不断地从一个地址中下载小文件。这些小文件就是视频切片。</p><p>一般来说，在网页视频不会直接下载整个视频文件，因为一个视频文件通常上 GB，全部下载完就太大了，而采用“边下边播”的模式。所以是将视频切成大量的小片段，然后不断把这些片段传递到浏览器。然后浏览器再把穿好的片段依次播放。</p><p><img src="'+o+`" alt="img"></p><p>对于 HLS/M3U8 类型的流媒体，视频播放地址，就是一个下载 m3u8 文件的地址。m3u8 文件是一个文本类型的列表，里面储存了视频切片的名称、地址和顺序。所以，浏览器在播放这类流媒体时</p><p>所以，我们就可以直接使用 ffmpeg 对视频进行切片。在命令行执行命令。</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">ffmpeg</span><span style="color:#D19A66;"> -i</span><span style="color:#98C379;"> input_video.mp4</span><span style="color:#56B6C2;"> \\</span></span>
<span class="line"><span style="color:#ABB2BF;">-c:v </span><span style="color:#98C379;">libx264</span><span style="color:#56B6C2;"> \\</span></span>
<span class="line"><span style="color:#ABB2BF;">-c:a </span><span style="color:#98C379;">aac</span><span style="color:#56B6C2;"> \\</span></span>
<span class="line"><span style="color:#ABB2BF;">-hls_time </span><span style="color:#D19A66;">10</span><span style="color:#56B6C2;"> \\</span></span>
<span class="line"><span style="color:#ABB2BF;">-hls_segment_type </span><span style="color:#98C379;">mpegts</span><span style="color:#56B6C2;"> \\</span></span>
<span class="line"><span style="color:#ABB2BF;">-hls_list_size </span><span style="color:#D19A66;">0</span><span style="color:#56B6C2;"> \\</span></span>
<span class="line"><span style="color:#ABB2BF;">-f </span><span style="color:#98C379;">hls</span><span style="color:#56B6C2;"> \\</span></span>
<span class="line"><span style="color:#ABB2BF;">-max_muxing_queue_size </span><span style="color:#D19A66;">1024</span><span style="color:#56B6C2;"> \\</span></span>
<span class="line"><span style="color:#ABB2BF;">output.m3u8</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>在这个命令中：</p><ul><li><code>-i input_video.mp4</code> 指定了输入视频文件。</li><li><code>-c:v libx264 -c:a aac</code> 指定了视频和音频的编解码器。</li><li><code>-hls_time 10</code> 指定了每个 M3U8 片段的时长，单位为秒。在这里，每个片段的时长设置为 10 秒。</li><li><code>-hls_segment_type mpegts</code> 指定了 M3U8 片段的类型为 MPEG-TS。</li><li><code>-hls_list_size 0</code> 设置 M3U8 文件中包含的最大片段数。这里设置为 0 表示没有限制。</li><li><code>-f hls</code> 指定了输出格式为 HLS。</li><li><code>-max_muxing_queue_size 1024</code> 设置了最大复用队列大小，以确保输出不会超过指定大小。</li><li>最后输出的文件为<code>output.m3u8</code></li></ul><p>当然，对于 ffmpeg 切割命令还有更高级的用法，比如限制所有的切片大小不超过 <code>500kb</code> 等。</p><p><img src="`+e+`" alt="如图，执行上面的命令，我们生成了一些视频切片和 m3u8 视频列表。"></p><p>我们打开 m3u8 列表文件，显示如下，它标注了每个片段的顺序、时长等。</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">#EXTM3U</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">#EXT-X-VERSION:3</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">#EXT-X-TARGETDURATION:11</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">#EXT-X-MEDIA-SEQUENCE:0</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">#EXTINF:11.386378,</span></span>
<span class="line"><span style="color:#61AFEF;">output0.ts</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">#EXTINF:11.011000,</span></span>
<span class="line"><span style="color:#61AFEF;">output1.ts</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">#EXTINF:9.050711,</span></span>
<span class="line"><span style="color:#61AFEF;">output2.ts</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">#EXTINF:8.591911,</span></span>
<span class="line"><span style="color:#61AFEF;">output3.ts</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">#EXTINF:6.506933,</span></span>
<span class="line"><span style="color:#61AFEF;">output4.ts</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">#EXT-X-ENDLIST</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="前端播放" tabindex="-1">前端播放 <a class="header-anchor" href="#前端播放" aria-label="Permalink to &quot;前端播放&quot;">​</a></h2><p>当浏览器拿到 m3u8 文件后，会顺序遍历这个列表，然后依次顺序加载列表中的片段，即 output0.ts → output1.ts ... → output4.ts。由于是边加载边播放，所以加载完第一个片段后就立即开始播放第一个片段，然后同时加载第二个片段，以此类推。</p><p>接下来，我们在同目录下新建一个 html 文件，使用 <code>video.js</code> 来播放刚才分好的 m3u8 列表。</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">html</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;Play the video&lt;/</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E06C75;">link</span><span style="color:#D19A66;"> href</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;https://vjs.zencdn.net/8.10.0/video-js.css&quot;</span><span style="color:#D19A66;"> rel</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;stylesheet&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;/</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E06C75;">video</span><span style="color:#D19A66;"> class</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;video-js&quot;</span><span style="color:#D19A66;"> controls</span><span style="color:#D19A66;"> preload</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;auto&quot;</span><span style="color:#D19A66;"> width</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;640&quot;</span><span style="color:#D19A66;"> height</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;264&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">      &lt;</span><span style="color:#E06C75;">source</span><span style="color:#D19A66;"> src</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;./output.m3u8&quot;</span><span style="color:#D19A66;"> type</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;application/x-mpegURL&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;/</span><span style="color:#E06C75;">video</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E06C75;">script</span><span style="color:#D19A66;"> src</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;https://vjs.zencdn.net/8.10.0/video.min.js&quot;</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;/</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">html</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><img src="`+t+`" alt="img"></p><p>可以看到，浏览器成功依次加载并播放了这些列表里的片段。</p><p>至此，流媒体的切片、播放处理过程已经大致清楚。所以，我们就不难得到流媒体服务器的基本功能实现了。</p><h2 id="设计-api" tabindex="-1">设计 API <a class="header-anchor" href="#设计-api" aria-label="Permalink to &quot;设计 API&quot;">​</a></h2><p>在开始之前，我们需要设计上传、播放的 API。</p><ul><li>视频上传：<code>/upload</code>，POST 请求，接受一个 <code>multipart/form-data</code> 表单内的文件。</li><li>视频播放：<code>/play/{videoId}/video.m3u8</code>，GET 请求，返回一个 m3u8 类型的文本数据。其中 videoId 为每个视频的唯一标识符。</li></ul><h2 id="实现上传功能" tabindex="-1">实现上传功能 <a class="header-anchor" href="#实现上传功能" aria-label="Permalink to &quot;实现上传功能&quot;">​</a></h2><p>现在我们给服务器实现视频上传功能。视频上传要经历三个阶段：接受上传文件 → 视频切片处理 → 视频持久化储存。上传完毕后，再向用户端返回一个视频播放地址，用来播放视频。</p><p>前端上传视频一般是表单文件。服务端接受到文件后，将文件切片并储存到公有区域，然后返回生成的 m3u8 文件地址。</p><p>首先初始化 node 项目，安装如下包，express 是 node.js 的服务器框架，multer 是为 express 开发的表单文件处理中间件，nanoid 可以为上传的资源给出唯一的标识符，fluent-ffmpeg 是其中一个为 node.js 设置的 ffmpeg 扩展，serve 可以让你在本地目录搭建服务器访问环境。</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> i</span><span style="color:#98C379;"> multer</span><span style="color:#98C379;"> express</span><span style="color:#98C379;"> nanoid</span><span style="color:#98C379;"> fluent-ffmpeg</span><span style="color:#98C379;"> cors</span></span>
<span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> i</span><span style="color:#98C379;"> serve</span><span style="color:#D19A66;"> --save-dev</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>为 package.json 添加如下字段</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">  &quot;main&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;main.js&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">  &quot;type&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;module&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>然后创建 main.js 文件，编写如下代码，我们创建一个服务器</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> express</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &quot;express&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> fs</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &quot;fs&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> multer</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &quot;multer&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">nanoid</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &quot;nanoid&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> ffmpeg</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &quot;fluent-ffmpeg&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> path</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &quot;path&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> cors</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &quot;cors&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 创建一个服务器，监听 3300 端口</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> server</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> express</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">server</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">listen</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">3300</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;Server started.&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">server</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">use</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">cors</span><span style="color:#ABB2BF;">()); </span><span style="color:#7F848E;font-style:italic;">// 为了方便调试，允许跨域</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>根据设计好的 API，添加一个上传视频的 POST 路由。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> *  定义一个处理上传表单文件的中间件</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> *  它接收表单中 video 字段的单文件</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> *  上传到临时目录 uploads-temp 目录中</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> *  为了防止重名冲突，每个被上传的临时文件名都加上唯一前缀</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> copeUpload</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> multer</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">  dest</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;uploads-temp/&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#61AFEF;">  filename</span><span style="color:#ABB2BF;">: </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">req</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">file</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">cb</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">    const</span><span style="color:#E5C07B;"> uniqueSuffix</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> nanoid</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#61AFEF;">    cb</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">null</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">file</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">fieldname</span><span style="color:#56B6C2;"> +</span><span style="color:#98C379;"> &quot;-&quot;</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> uniqueSuffix</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span>
<span class="line"><span style="color:#ABB2BF;">}).</span><span style="color:#61AFEF;">single</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;video&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 定义上传的 API 路由，并且使用上面的中间件</span></span>
<span class="line"><span style="color:#E5C07B;">server</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">post</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;/upload&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">copeUpload</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">req</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">res</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">next</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">  const</span><span style="color:#E5C07B;"> tempFilePath</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">resolve</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">req</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">file</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">path</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// 视频上传后的临时文件位置</span></span>
<span class="line"><span style="color:#C678DD;">  const</span><span style="color:#E5C07B;"> videoId</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> nanoid</span><span style="color:#ABB2BF;">(); </span><span style="color:#7F848E;font-style:italic;">// 为视频资源创建唯一 ID</span></span>
<span class="line"><span style="color:#C678DD;">  const</span><span style="color:#E5C07B;"> storageDirectory</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">resolve</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;storage&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">videoId</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  //为视频创建储存位置，所有视频切片储存在 ./storage/{videoId} 目录下</span></span>
<span class="line"><span style="color:#E5C07B;">  fs</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">mkdirSync</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">storageDirectory</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">  ffmpeg</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">tempFilePath</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    .</span><span style="color:#61AFEF;">videoCodec</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;libx264&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    .</span><span style="color:#61AFEF;">audioCodec</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;aac&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    .</span><span style="color:#61AFEF;">addOption</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;-hls_time&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    .</span><span style="color:#61AFEF;">addOption</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;-hls_segment_type&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;mpegts&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    .</span><span style="color:#61AFEF;">addOption</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;-hls_list_size&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    .</span><span style="color:#61AFEF;">format</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;hls&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    .</span><span style="color:#61AFEF;">addOption</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;-max_muxing_queue_size&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1024</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    .</span><span style="color:#61AFEF;">output</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">\`</span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">storageDirectory</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">/video.m3u8\`</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    .</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;start&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#E5C07B;">      console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;开始为视频切片&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    })</span></span>
<span class="line"><span style="color:#ABB2BF;">    .</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;end&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#E5C07B;">      fs</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">rmSync</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">tempFilePath</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// 删除上传的临时文件</span></span>
<span class="line"><span style="color:#E5C07B;">      console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;切片完成&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    })</span></span>
<span class="line"><span style="color:#ABB2BF;">    .</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;error&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">err</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">      fs</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">rmSync</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">tempFilePath</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// 删除上传的临时文件</span></span>
<span class="line"><span style="color:#E5C07B;">      console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">error</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;切片失败：&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">err</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    })</span></span>
<span class="line"><span style="color:#ABB2BF;">    .</span><span style="color:#61AFEF;">run</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">  res</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">json</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">\`http://localhost:3300/play/</span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">videoId</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">/video.m3u8\`</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">//返回播放地址</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br></div></div><h2 id="实现播放功能" tabindex="-1">实现播放功能 <a class="header-anchor" href="#实现播放功能" aria-label="Permalink to &quot;实现播放功能&quot;">​</a></h2><p>接下来就是给服务器设置播放的 API。</p><p>在上传视频后，服务端会给用户端返回一个播放地址，就是 m3u8 文件的下载地址。所以这部分就非常简单。</p><p>当播放器请求 id 为 <code>abcde</code> 的视频地址 <code>play/abcde/video.m3u8</code> 时，由于 m3u8 中写明切片文件和 m3u8 文件在同一目录下，所以请求切片时的地址也是</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">play/abcde/output01.ts</span></span>
<span class="line"><span style="color:#61AFEF;">play/abcde/output02.ts</span></span>
<span class="line"><span style="color:#61AFEF;">play/abcde/output03.ts</span></span>
<span class="line"><span style="color:#56B6C2;">......</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>所以服务器要做的实际上就是从 <code>storage</code> 目录中取出 <code>/play/\${videoId}/*</code> 路由中请求的文件返回给客户端。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">server</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">get</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;/play/:videoId/:filename&quot;</span><span style="color:#ABB2BF;">, (</span><span style="color:#E06C75;font-style:italic;">req</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">res</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">  const</span><span style="color:#E5C07B;"> videoId</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> req</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">params</span><span style="color:#ABB2BF;">[</span><span style="color:#98C379;">&quot;videoId&quot;</span><span style="color:#ABB2BF;">]; </span><span style="color:#7F848E;font-style:italic;">// 从 URL 中获取视频 ID</span></span>
<span class="line"><span style="color:#C678DD;">  const</span><span style="color:#E5C07B;"> storageDirectory</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">resolve</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;storage&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">videoId</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// 视频切片和清单的储存位置</span></span>
<span class="line"><span style="color:#C678DD;">  if</span><span style="color:#ABB2BF;"> (</span><span style="color:#56B6C2;">!</span><span style="color:#61AFEF;">existsSync</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">storageDirectory</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 若目标视频记录不存在则返回 404</span></span>
<span class="line"><span style="color:#E5C07B;">    res</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">status</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">404</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">send</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#C678DD;">  const</span><span style="color:#E5C07B;"> filename</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> req</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">params</span><span style="color:#ABB2BF;">[</span><span style="color:#98C379;">&quot;filename&quot;</span><span style="color:#ABB2BF;">]; </span><span style="color:#7F848E;font-style:italic;">//请求的文件</span></span>
<span class="line"><span style="color:#C678DD;">  const</span><span style="color:#E5C07B;"> filepath</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">join</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">storageDirectory</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">filename</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">  if</span><span style="color:#ABB2BF;"> (</span><span style="color:#56B6C2;">!</span><span style="color:#61AFEF;">existsSync</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">filepath</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 若目标文件不存在则返回 404</span></span>
<span class="line"><span style="color:#E5C07B;">    res</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">status</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">404</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">send</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#C678DD;">  const</span><span style="color:#E5C07B;"> data</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> fs</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">readFileSync</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">filepath</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// 读取目标文件</span></span>
<span class="line"><span style="color:#E5C07B;">  res</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">send</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">data</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="功能测试" tabindex="-1">功能测试 <a class="header-anchor" href="#功能测试" aria-label="Permalink to &quot;功能测试&quot;">​</a></h2><p>在以上过程中，我们的视频服务器仅仅在不到 100 行的代码就完成了。接下来就是为用户端写代码，来测试一下服务器的上传、播放功能。</p><p>要求上传视频后返回视频的播放地址，以及播放指定的视频地址。</p><p>在同目录下创建 index.html，</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">html</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;Video Server&lt;/</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E06C75;">link</span><span style="color:#D19A66;"> href</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;https://vjs.zencdn.net/8.10.0/video-js.css&quot;</span><span style="color:#D19A66;"> rel</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;stylesheet&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;/</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">      &lt;</span><span style="color:#E06C75;">h2</span><span style="color:#ABB2BF;">&gt;上传视频文件&lt;/</span><span style="color:#E06C75;">h2</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      &lt;!-- 利用表单上传文件 --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">      &lt;</span><span style="color:#E06C75;">form</span><span style="color:#D19A66;"> id</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;uploadForm&quot;</span><span style="color:#D19A66;"> method</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;POST&quot;</span><span style="color:#D19A66;"> enctype</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;multipart/form-data&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">        &lt;</span><span style="color:#E06C75;">input</span><span style="color:#D19A66;"> type</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;file&quot;</span><span style="color:#D19A66;"> name</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;video&quot;</span><span style="color:#D19A66;"> accept</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;video/*&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">        &lt;</span><span style="color:#E06C75;">button</span><span style="color:#D19A66;"> type</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;submit&quot;</span><span style="color:#ABB2BF;">&gt;上传&lt;/</span><span style="color:#E06C75;">button</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">      &lt;/</span><span style="color:#E06C75;">form</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">      &lt;</span><span style="color:#E06C75;">div</span><span style="color:#D19A66;"> id</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;response&quot;</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">      &lt;</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 获取表单元素</span></span>
<span class="line"><span style="color:#C678DD;">        const</span><span style="color:#E5C07B;"> form</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getElementById</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;uploadForm&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 监听表单提交事件</span></span>
<span class="line"><span style="color:#E5C07B;">        form</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">addEventListener</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;submit&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">event</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">          event</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">preventDefault</span><span style="color:#ABB2BF;">(); </span><span style="color:#7F848E;font-style:italic;">// 阻止默认提交行为</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">          // 创建 FormData 对象，用于将表单数据发送到服务器</span></span>
<span class="line"><span style="color:#C678DD;">          const</span><span style="color:#E5C07B;"> formData</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> FormData</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">form</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">          // 发送表单数据到服务器</span></span>
<span class="line"><span style="color:#61AFEF;">          fetch</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;http://localhost:3300/upload&quot;</span><span style="color:#ABB2BF;">, {</span></span>
<span class="line"><span style="color:#E06C75;">            method</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;POST&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">            body</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">formData</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">          })</span></span>
<span class="line"><span style="color:#ABB2BF;">            .</span><span style="color:#61AFEF;">then</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">response</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#E5C07B;"> response</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">text</span><span style="color:#ABB2BF;">()) </span><span style="color:#7F848E;font-style:italic;">// 将响应转换为文本格式</span></span>
<span class="line"><span style="color:#ABB2BF;">            .</span><span style="color:#61AFEF;">then</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">data</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">              // 将服务器返回的文本数据显示在页面上</span></span>
<span class="line"><span style="color:#E5C07B;">              document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getElementById</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;response&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#E06C75;">innerText</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;上传成功，视频地址是：&quot;</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> data</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">            })</span></span>
<span class="line"><span style="color:#ABB2BF;">            .</span><span style="color:#61AFEF;">catch</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">error</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">              console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">error</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;请求错误:&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">error</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">            });</span></span>
<span class="line"><span style="color:#ABB2BF;">        });</span></span>
<span class="line"><span style="color:#ABB2BF;">      &lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E06C75;">hr</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">      &lt;</span><span style="color:#E06C75;">h2</span><span style="color:#ABB2BF;">&gt;播放视频&lt;/</span><span style="color:#E06C75;">h2</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      &lt;!-- 输入m3u8地址 --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">      &lt;</span><span style="color:#E06C75;">label</span><span style="color:#D19A66;"> for</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;m3u8-url&quot;</span><span style="color:#ABB2BF;">&gt;请输入视频的m3u8地址：&lt;/</span><span style="color:#E06C75;">label</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">      &lt;</span><span style="color:#E06C75;">input</span><span style="color:#D19A66;"> type</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;text&quot;</span><span style="color:#D19A66;"> id</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;m3u8-url&quot;</span><span style="color:#D19A66;"> name</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;m3u8-url&quot;</span><span style="color:#D19A66;"> placeholder</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;例如：https://example.com/video.m3u8&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">      &lt;</span><span style="color:#E06C75;">button</span><span style="color:#D19A66;"> onclick</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;</span><span style="color:#61AFEF;">playVideo</span><span style="color:#98C379;">()&quot;</span><span style="color:#ABB2BF;">&gt;播放&lt;/</span><span style="color:#E06C75;">button</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      &lt;!-- 视频播放器 --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">      &lt;</span><span style="color:#E06C75;">video</span><span style="color:#D19A66;"> id</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;my-video&quot;</span><span style="color:#D19A66;"> class</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;video-js&quot;</span><span style="color:#D19A66;"> controls</span><span style="color:#D19A66;"> preload</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;auto&quot;</span><span style="color:#D19A66;"> width</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;640&quot;</span><span style="color:#D19A66;"> height</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;360&quot;</span><span style="color:#D19A66;"> data-setup</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;{}&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">        &lt;</span><span style="color:#E06C75;">source</span><span style="color:#D19A66;"> src</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#D19A66;"> type</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;application/x-mpegURL&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">      &lt;/</span><span style="color:#E06C75;">video</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">      &lt;</span><span style="color:#E06C75;">script</span><span style="color:#D19A66;"> src</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;https://vjs.zencdn.net/8.10.0/video.min.js&quot;</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">      &lt;</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#C678DD;">        function</span><span style="color:#61AFEF;"> playVideo</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">          // 获取输入的m3u8地址</span></span>
<span class="line"><span style="color:#C678DD;">          var</span><span style="color:#E06C75;"> m3u8Url</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getElementById</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;m3u8-url&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">          // 设置视频源为输入的m3u8地址</span></span>
<span class="line"><span style="color:#C678DD;">          var</span><span style="color:#E06C75;"> videoPlayer</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> videojs</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;my-video&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">          videoPlayer</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">src</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">            src</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">m3u8Url</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">            type</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;application/x-mpegURL&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">          });</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">          // 播放视频</span></span>
<span class="line"><span style="color:#E5C07B;">          videoPlayer</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">play</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">      &lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;/</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">html</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br></div></div><p>然后启动服务器</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">node</span><span style="color:#98C379;"> main.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>服务器在 <code>http://localhost:3300</code> 启动。</p><p>然后启动用户界面</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npx</span><span style="color:#98C379;"> serve</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>在浏览器输入 <code>http://localhost:3000</code> 即可。</p><p>测试效果如下：</p><p><img src="`+r+'" alt="vdsafvdag.gif"></p><h2 id="结束" tabindex="-1">结束 <a class="header-anchor" href="#结束" aria-label="Permalink to &quot;结束&quot;">​</a></h2><p>我们在本文中实现了一个简单的流媒体服务器，并成功实现了视频上传和视频播放两种核心功能。</p><p>当然，本项目也只是一个 demo，正式用于生产环境中的视频服务器仅仅有这两种功能是远远不够的，还需要其他更强大的功能，比如视频资源管理、资源健康监视、网络波动监视、加密和安全等。这些不再赘述，有兴趣可以自主实现。</p><h2 id="源码下载" tabindex="-1">源码下载 <a class="header-anchor" href="#源码下载" aria-label="Permalink to &quot;源码下载&quot;">​</a></h2><p>本项目中的 <a href="https://github.com/PrinOrange/simple-node-media-server" target="_blank" rel="noreferrer">Github 源码仓库在这里</a>。使用 CC 1.0 开源协议。</p>',68)]))}const d=n(c,[["render",B]]);export{m as __pageData,d as default};
