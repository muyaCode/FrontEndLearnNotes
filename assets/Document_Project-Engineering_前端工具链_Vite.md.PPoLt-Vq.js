import{_ as a,c as n,o as e,ah as l}from"./chunks/framework.DqD713j2.js";const b=JSON.parse('{"title":"Vite","description":"","frontmatter":{},"headers":[],"relativePath":"Document/Project-Engineering/前端工具链/Vite.md","filePath":"Document/Project-Engineering/前端工具链/Vite.md","lastUpdated":1750954157000}'),p={name:"Document/Project-Engineering/前端工具链/Vite.md"};function o(r,s,t,c,i,d){return e(),n("div",null,s[0]||(s[0]=[l(`<h1 id="vite" tabindex="-1">Vite <a class="header-anchor" href="#vite" aria-label="Permalink to &quot;Vite&quot;">​</a></h1><p>Vite2 文档：<a href="https://vitejs.cn/guide/" target="_blank" rel="noreferrer">开始 {#getting-started} | Vite 中文网 (vitejs.cn)</a></p><p>Vite3 文档：<a href="https://vitejs.cn/vite3-cn/guide/" target="_blank" rel="noreferrer">开始 | Vite 官方中文文档 (vitejs.cn)</a></p><p><strong>最新</strong></p><p>GitHub：<a href="https://github.com/vitejs/vite" target="_blank" rel="noreferrer">vitejs/vite: Next generation frontend tooling. It&#39;s fast! (github.com)</a></p><p>中文官网：<a href="https://cn.vitejs.dev/" target="_blank" rel="noreferrer">Vite | 下一代的前端工具链 (vitejs.dev)</a></p><p>英文官网：<a href="https://vitejs.dev/" target="_blank" rel="noreferrer">Vite | Next Generation Frontend Tooling (vitejs.dev)</a></p><h2 id="基于-vite-的项目创建" tabindex="-1">基于 Vite 的项目创建 <a class="header-anchor" href="#基于-vite-的项目创建" aria-label="Permalink to &quot;基于 Vite 的项目创建&quot;">​</a></h2><p>文档：<a href="https://cn.vitejs.dev/guide/" target="_blank" rel="noreferrer">开始 | Vite 官方中文文档 (vitejs.dev)</a></p><h2 id="依赖构建" tabindex="-1">依赖构建 <a class="header-anchor" href="#依赖构建" aria-label="Permalink to &quot;依赖构建&quot;">​</a></h2><p>文档：<a href="https://cn.vitejs.dev/guide/dep-pre-bundling.html" target="_blank" rel="noreferrer">依赖预构建 | Vite 官方中文文档 (vitejs.dev)</a></p><p>import 导入语法报错</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">createApp</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &quot;vue&quot;</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>报错：<code>Uncaught TypeError: Failed to resolve module specifier &quot;vue&quot;. Relative references must start with either &quot;/&quot;, &quot;./&quot;, or &quot;../&quot;.</code></p><p>需要把代码转化成浏览器能识别的代码，这就需要用到预构建配置：<a href="https://cn.vitejs.dev/guide/dep-pre-bundling.html" target="_blank" rel="noreferrer">依赖预构建 | Vite 官方中文文档 (vitejs.dev)</a></p><p>&quot;依赖预构建&quot;过程的两个目的</p><ul><li>CommonJS 和 UMD 兼容性 <ul><li><code>import { createApp } from &#39;vue&#39;;</code></li></ul></li><li>性能 <ul><li><code>import { debounce } from &#39;lodash-es&#39;</code></li><li>lodash-es 是 <a href="https://lodash.com/" target="_blank" rel="noreferrer">Lodash</a> 库导出为 <a href="http://www.ecma-international.org/ecma-262/6.0/" target="_blank" rel="noreferrer">ES</a> 模块</li></ul></li></ul><h2 id="模块热重载" tabindex="-1">模块热重载 <a class="header-anchor" href="#模块热重载" aria-label="Permalink to &quot;模块热重载&quot;">​</a></h2><p>HMR API 插件开发文档：<a href="https://cn.vitejs.dev/guide/api-hmr.html" target="_blank" rel="noreferrer">HMR API | Vite 官方中文文档 (vitejs.dev)</a></p><p>HRM 更新处理文档：<a href="https://cn.vitejs.dev/guide/api-plugin.html#vite-specific-hooks" target="_blank" rel="noreferrer">插件 API - HRM 更新处理 | Vite 官方中文文档 (vitejs.dev)</a></p><p>vite 只要使用了 plugins 插件，便内置了模块热重载</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> default</span><span style="color:#61AFEF;"> defineConfig</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">	plugins</span><span style="color:#ABB2BF;">: [</span><span style="color:#61AFEF;">vue</span><span style="color:#ABB2BF;">()],</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>热重载只在开发环境中使用，生产环境则不需要</p><p>为了使热重载代码在生产环境中被优化去掉，需要自定义<code>条件守卫</code></p><p><a href="https://cn.vitejs.dev/guide/api-hmr.html#required-conditional-guard" target="_blank" rel="noreferrer">HMR API | 必需的条件守卫</a></p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">meta</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">hot</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// HMR 代码</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="定时器副作用清除和页面的条件刷新和不刷新判断" tabindex="-1">定时器副作用清除和页面的条件刷新和不刷新判断 <a class="header-anchor" href="#定时器副作用清除和页面的条件刷新和不刷新判断" aria-label="Permalink to &quot;定时器副作用清除和页面的条件刷新和不刷新判断&quot;">​</a></h3><p>foo.js</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> const</span><span style="color:#61AFEF;"> foo</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;foo works!!!!!!!!&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> cache</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">	amount</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">meta</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">hot</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">	import</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">meta</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">hot</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">dispose</span><span style="color:#ABB2BF;">(() </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">		if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">timer</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#61AFEF;">			clearInterval</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">timer</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">		}</span></span>
<span class="line"><span style="color:#ABB2BF;">	});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">	cache</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> import</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">meta</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">hot</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">data</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">cache</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">		amount</span><span style="color:#ABB2BF;">: </span><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">meta</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">hot</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">data</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">cache</span><span style="color:#C678DD;"> ?</span><span style="color:#C678DD;"> import</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">meta</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">hot</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">data</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">cache</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">amount</span><span style="color:#C678DD;"> :</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">	};</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> timer</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> setInterval</span><span style="color:#ABB2BF;">(() </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">	cache</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">amount</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">cache</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">amount</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}, </span><span style="color:#D19A66;">1000</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">cache</span><span style="color:#ABB2BF;"> };</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><p>count.js</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> const</span><span style="color:#E5C07B;"> count</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">meta</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">hot</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">	import</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">meta</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">hot</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">accept</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">newModule</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">		console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">newModule</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">count</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">	});</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>main.js</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#98C379;"> &quot;./count.js&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">foo</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &quot;./foo.js&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">foo</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;main module.&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">meta</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">hot</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">	import</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">meta</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">hot</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">accept</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;./foo&quot;</span><span style="color:#ABB2BF;">, (</span><span style="color:#E06C75;font-style:italic;">newFoo</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">		if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">newFoo</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">cache</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">amount</span><span style="color:#56B6C2;"> &gt;</span><span style="color:#D19A66;"> 5</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">			import</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">meta</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">hot</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">invalidate</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">		} </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">			newFoo</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">foo</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">		}</span></span>
<span class="line"><span style="color:#ABB2BF;">	});</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// import.meta.hot.accept()</span></span>
<span class="line"><span style="color:#C678DD;">	import</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">meta</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">hot</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">decline</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h2 id="vite-中使用-typescript" tabindex="-1">Vite 中使用 TypeScript <a class="header-anchor" href="#vite-中使用-typescript" aria-label="Permalink to &quot;Vite 中使用 TypeScript&quot;">​</a></h2><p>Vite 天然支持引入 <code>.ts</code> 文件</p><p>vite 项目中编译命令</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">tsc</span><span style="color:#D19A66;"> --noEmit</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>vue 项目中</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">vue-tsc</span><span style="color:#D19A66;"> --noEmit</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="vite-支持-vue3-使用-jsx" tabindex="-1">Vite 支持 Vue3 使用 JSX <a class="header-anchor" href="#vite-支持-vue3-使用-jsx" aria-label="Permalink to &quot;Vite 支持 Vue3 使用 JSX&quot;">​</a></h2><p><a href="https://cn.vitejs.dev/plugins/#official-plugins" target="_blank" rel="noreferrer">插件 | Vite 官方中文文档 (vitejs.dev)</a></p><p>vue3 单文件组件支持：<code>@vite/plugin-vue</code></p><p>Vue2 支持：<code>underfin/vite-plugin-vue2</code></p><p>Vue3 的 JSX 支持插件：<code>@vitejs/plugin-vue-jsx</code></p><p>1.安装插件：<code>npm i @vitejs/plugin-vue-jsx</code></p><p>npm：<a href="https://www.npmjs.com/package/@vitejs/plugin-vue-jsx" target="_blank" rel="noreferrer">@vitejs/plugin-vue-jsx - npm (npmjs.com)</a></p><p>2.项目内使用参考文档</p><h2 id="在-vite-中使用-css" tabindex="-1">在 Vite 中使用 CSS <a class="header-anchor" href="#在-vite-中使用-css" aria-label="Permalink to &quot;在 Vite 中使用 CSS&quot;">​</a></h2><p>Vite2 文档：<a href="https://vitejs.cn/guide/features.html#vue" target="_blank" rel="noreferrer">功能 {#features} | Vite 中文网 (vitejs.cn)</a></p><p>Vite3 文档：<a href="https://vitejs.cn/vite3-cn/guide/" target="_blank" rel="noreferrer">开始 | Vite 官方中文文档 (vitejs.cn)</a></p><p><strong>1.Vite 原生支持 CSS</strong></p><p>模块导入方法支持</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#98C379;"> &quot;./styles/index.css&quot;</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>2.原生的 CSS 变量支持</strong></p><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Using_CSS_custom_properties" target="_blank" rel="noreferrer">使用 CSS 自定义属性（变量） - CSS（层叠样式表） | MDN (mozilla.org)</a></p><p>支持使用新的原生 CSS 变量特性</p><p><strong>3.postcss 集成</strong></p><p><a href="https://github.com/postcss/postcss" target="_blank" rel="noreferrer">postcss/postcss: Transforming styles with JS plugins (github.com)</a></p><p>直接安装 postcss 和它的插件，并配置好<code>postcss.config.js</code>便可以使用</p><p><strong>4.使用预处理器</strong></p><p><a href="https://vitejs.cn/guide/features.html#css-pre-processors" target="_blank" rel="noreferrer">功能 {#features} | Vite 中文网 (vitejs.cn)</a></p><h2 id="静态资源引用" tabindex="-1">静态资源引用 <a class="header-anchor" href="#静态资源引用" aria-label="Permalink to &quot;静态资源引用&quot;">​</a></h2><p>vite2 文档：<a href="https://vitejs.cn/guide/features.html#static-assets" target="_blank" rel="noreferrer">功能 {#features} | Vite 中文网 (vitejs.cn)</a></p><p>vite4 文档：<a href="https://cn.vitejs.dev/guide/assets.html" target="_blank" rel="noreferrer">静态资源处理 | Vite 官方中文文档 (vitejs.dev)</a></p><h2 id="使用-webworker" tabindex="-1">使用 WebWorker <a class="header-anchor" href="#使用-webworker" aria-label="Permalink to &quot;使用 WebWorker&quot;">​</a></h2><p>文档：<a href="https://vitejs.cn/guide/features.html#web-workers" target="_blank" rel="noreferrer">功能 {#features} | Vite 中文网 (vitejs.cn)</a></p><p>WebWorker 是多线程的 JavaScript 环境：以下两种方法都可以在 vite 项目中使用</p><h3 id="纯-js-下使用-web-worker" tabindex="-1">纯 JS 下使用 Web Worker <a class="header-anchor" href="#纯-js-下使用-web-worker" aria-label="Permalink to &quot;纯 JS 下使用 Web Worker&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> worker</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Worker</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;./worker.js&quot;</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="vite-中使用-web-worker" tabindex="-1">Vite 中使用 Web Worker <a class="header-anchor" href="#vite-中使用-web-worker" aria-label="Permalink to &quot;Vite 中使用 Web Worker&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> MyWorker</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &quot;./worker?worker&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> worker</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> MyWorker</span><span style="color:#ABB2BF;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="使用-webassembly" tabindex="-1">使用 WebAssembly <a class="header-anchor" href="#使用-webassembly" aria-label="Permalink to &quot;使用 WebAssembly&quot;">​</a></h2><p>文档：<a href="https://vitejs.cn/guide/features.html#webassembly" target="_blank" rel="noreferrer">功能 {#features} | Vite 中文网 (vitejs.cn)</a></p><p>WebAssembly 官网：<a href="https://webassembly.org/" target="_blank" rel="noreferrer">WebAssembly</a></p><p>WebAssembly（简称 wasm）是一个虚拟指令集体系架构（virtual ISA），整体架构包括核心的 ISA 定义、<a href="https://baike.baidu.com/item/%E4%BA%8C%E8%BF%9B%E5%88%B6%E7%BC%96%E7%A0%81/1758517?fromModule=lemma_inlink" target="_blank" rel="noreferrer">二进制编码</a>、程序语义的定义与执行，以及面向不同的嵌入环境（如 Web）的应用<a href="https://baike.baidu.com/item/%E7%BC%96%E7%A8%8B%E6%8E%A5%E5%8F%A3/3339711?fromModule=lemma_inlink" target="_blank" rel="noreferrer">编程接口</a>（WebAssembly API）。其初始目标是为<a href="https://baike.baidu.com/item/C/7252092?fromModule=lemma_inlink" target="_blank" rel="noreferrer">C</a>/<a href="https://baike.baidu.com/item/C%2B%2B/99272?fromModule=lemma_inlink" target="_blank" rel="noreferrer">C++</a>等语言编写的程序经过编译，在确保安全和接近原生应用的运行速度更好地在<a href="https://baike.baidu.com/item/Web/150564?fromModule=lemma_inlink" target="_blank" rel="noreferrer">Web</a>平台上运行。 --- <a href="https://baike.baidu.com/item/WebAssembly/61812997?fr=aladdin" target="_blank" rel="noreferrer">WebAssembly_百度百科 (baidu.com)</a></p><h3 id="使用-webassembly-1" tabindex="-1">使用 WebAssembly <a class="header-anchor" href="#使用-webassembly-1" aria-label="Permalink to &quot;使用 WebAssembly&quot;">​</a></h3><p>1、安装 GIT</p><p><a href="https://git-scm.com/" target="_blank" rel="noreferrer">https://git-scm.com/</a> 下载安装</p><p>2、安装 CMake</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">brew</span><span style="color:#98C379;"> install</span><span style="color:#98C379;"> cmake</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>3、安装 GCC</p><p>OS X 上安装 Xcode。Windows 上安装 Visual Studio 2015 Community with Update 3 或 更新的版本</p><p>4、编译 Emscripten 程序</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> clone</span><span style="color:#98C379;"> https://github.com/juj/emsdk.git</span></span>
<span class="line"><span style="color:#56B6C2;">cd</span><span style="color:#98C379;"> emsdk</span></span>
<span class="line"><span style="color:#61AFEF;">./emsdk</span><span style="color:#98C379;"> install</span><span style="color:#98C379;"> latest</span></span>
<span class="line"><span style="color:#61AFEF;">./emsdk</span><span style="color:#98C379;"> activate</span><span style="color:#98C379;"> latest</span><span style="color:#D19A66;"> --permanent</span></span>
<span class="line"><span style="color:#56B6C2;">source</span><span style="color:#98C379;"> ./emsdk</span><span style="color:#98C379;"> env.sh</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>5.创建 C 程序</p><div class="language-c line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">int</span><span style="color:#61AFEF;"> add</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">int</span><span style="color:#E06C75;font-style:italic;"> x</span><span style="color:#ABB2BF;">,</span><span style="color:#C678DD;"> int</span><span style="color:#E06C75;font-style:italic;"> y</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#ABB2BF;"> x </span><span style="color:#C678DD;">+</span><span style="color:#ABB2BF;"> y;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>6、编译.wasm 文件</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">emcc</span><span style="color:#98C379;"> src/math.c</span><span style="color:#D19A66;"> -Os</span><span style="color:#D19A66;"> -S</span><span style="color:#98C379;"> WASM=</span><span style="color:#D19A66;">1</span><span style="color:#D19A66;"> -s</span><span style="color:#98C379;"> SIDE_MODULE=</span><span style="color:#D19A66;">1</span><span style="color:#D19A66;"> -o</span><span style="color:#98C379;"> ./dist/math.wasm</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>7、把编译好的.wasm 文件复制放项目中，在 Vite 调用 .wasm</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> init</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &quot;./math.wasm&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#61AFEF;">init</span><span style="color:#ABB2BF;">().</span><span style="color:#61AFEF;">then</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">exports</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">exports</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">6</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="导入-json-及-glob-导入" tabindex="-1">导入 JSON 及 Glob 导入 <a class="header-anchor" href="#导入-json-及-glob-导入" aria-label="Permalink to &quot;导入 JSON 及 Glob 导入&quot;">​</a></h2><p>文档：<a href="https://vitejs.cn/guide/features.html#json" target="_blank" rel="noreferrer">功能 {#features} | Vite 中文网 (vitejs.cn)</a></p><h3 id="json-可以被直接导入—-同样支持具名导入" tabindex="-1">JSON 可以被直接导入— 同样支持具名导入 <a class="header-anchor" href="#json-可以被直接导入—-同样支持具名导入" aria-label="Permalink to &quot;JSON 可以被直接导入— 同样支持具名导入&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 导入整个对象</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> json</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &quot;./example.json&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 对一个根字段使用具名导入 - 有效帮助 treeshaking!</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">field</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &quot;./example.json&quot;</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="vite-支持使用特殊的-import-meta-glob-函数从文件系统导入多个模块" tabindex="-1">Vite 支持使用特殊的 <code>import.meta.glob</code> 函数从文件系统导入多个模块 <a class="header-anchor" href="#vite-支持使用特殊的-import-meta-glob-函数从文件系统导入多个模块" aria-label="Permalink to &quot;Vite 支持使用特殊的 \`import.meta.glob\` 函数从文件系统导入多个模块&quot;">​</a></h3><p>语法参考：<a href="https://github.com/mrmlnc/fast-glob#pattern-syntax" target="_blank" rel="noreferrer">mrmlnc/fast-glob: It&#39;s a very fast and efficient glob library for Node.js (github.com)</a></p><p>dir/m1.js</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> default</span><span style="color:#98C379;"> &quot;m1&quot;</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>dir/m2.js</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> default</span><span style="color:#98C379;"> &quot;m2&quot;</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>main.js</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> modules</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> import</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">meta</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">glob</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;./dir/*.js&quot;</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// 导入dir目录中的所有js</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// const modules = import.meta.globEager(&#39;./dir/*[1].*&#39;)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// console.log(modules)</span></span>
<span class="line"><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">entries</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">modules</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">forEach</span><span style="color:#ABB2BF;">(([</span><span style="color:#E06C75;font-style:italic;">key</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">value</span><span style="color:#ABB2BF;">]) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">value</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">default</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// value().then(module =&gt; {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	//   console.log(key, module.default)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// })</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="集成-eslint-和-prettier" tabindex="-1">集成 ESLint 和 Prettier <a class="header-anchor" href="#集成-eslint-和-prettier" aria-label="Permalink to &quot;集成 ESLint 和 Prettier&quot;">​</a></h2><h3 id="集成-eslint" tabindex="-1">集成 ESLint <a class="header-anchor" href="#集成-eslint" aria-label="Permalink to &quot;集成 ESLint&quot;">​</a></h3><p>1.VSCode 安装 ESLint 扩展</p><p>2.在项目中安装<code>ESLint</code>和相关插件</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> i</span><span style="color:#98C379;"> eslint</span><span style="color:#98C379;"> eslint-config-standard</span><span style="color:#98C379;"> eslint-plugin-import</span><span style="color:#98C379;"> eslint-plugin-promise</span><span style="color:#98C379;"> eslint-plugin-node</span><span style="color:#D19A66;"> -D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>3.项目根目录创建 eslint 配置文件：<code>.eslintrc.js</code></p><p>写入配置参考：</p><ul><li>eslint 中文网：<a href="http://eslint.cn/" target="_blank" rel="noreferrer">ESLint - Pluggable JavaScript linter - ESLint 中文</a></li><li>eslint 官网：<a href="https://eslint.org/" target="_blank" rel="noreferrer">Find and fix problems in your JavaScript code - ESLint - Pluggable JavaScript Linter</a></li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">	extends</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;standard&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">	rules</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#98C379;">		&quot;space-before-function-paren&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;off&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">		&quot;no-undef&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;off&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">		&quot;comma-dangle&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;off&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="集成-prettier-代码格式化功能" tabindex="-1">集成 Prettier(代码格式化功能) <a class="header-anchor" href="#集成-prettier-代码格式化功能" aria-label="Permalink to &quot;集成 Prettier(代码格式化功能)&quot;">​</a></h3><p>1.VSCode 安装 Prettier 扩展</p><p>2.在项目中安装<code>Prettier</code>和相关插件（这里不用）</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>3.项目根目录创建 prettierrc 配置文件：<code>.prettierrc</code></p><p>写入配置参考：</p><ul><li>Prettier 中文网：[<a href="https://www.prettier.cn/" target="_blank" rel="noreferrer">Prettier 中文网 · Prettier 是一个“有态度”的代码格式化工具</a>](<a href="http://eslint.cn/" target="_blank" rel="noreferrer">http://eslint.cn/</a>)</li><li>Prettier 官网：<a href="https://prettier.io/" target="_blank" rel="noreferrer">Prettier · Opinionated Code Formatter</a></li></ul><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;semi&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;singleQuote&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="集成-husky" tabindex="-1">集成 husky <a class="header-anchor" href="#集成-husky" aria-label="Permalink to &quot;集成 husky&quot;">​</a></h3><p>GitHub：<a href="https://github.com/typicode/husky" target="_blank" rel="noreferrer">typicode/husky: Git hooks made easy 🐶 woof! (github.com)</a></p><p>官网：<a href="https://typicode.github.io/husky/#/" target="_blank" rel="noreferrer">Husky - Git hooks (typicode.github.io)</a></p><p>中文网：<a href="https://www.breword.com/typicode-husky" target="_blank" rel="noreferrer">Husky - husky 中文文档 - Breword 文档集合</a></p><p>git 提交之前拦截的 git hook 钩子工具</p><hr><p>1.安装</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> i</span><span style="color:#98C379;"> husky</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>2.配置文件生成命令</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npx</span><span style="color:#98C379;"> husky</span><span style="color:#98C379;"> install</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>执行完后提示：<code>husky - Git hooks installed</code>，并在根目录中生成<code>.husky</code>文件夹，至此<code>husky</code>安装完成</p><p>3.添加提交之前的钩子命令(提交前执行代码检查)：&quot;npm run lint&quot;</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> husky</span><span style="color:#98C379;"> add</span><span style="color:#98C379;"> .husky/pre-commit</span><span style="color:#98C379;"> &quot;npm run lint&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>4.git 提交代码，如果代码检查出错便不会提交成功</p><p>5.git 提交的消息提示：commit-msg</p><h2 id="构建生产版本" tabindex="-1">构建生产版本 <a class="header-anchor" href="#构建生产版本" aria-label="Permalink to &quot;构建生产版本&quot;">​</a></h2><p><a href="https://cn.vitejs.dev/guide/build.html" target="_blank" rel="noreferrer">构建生产版本 | Vite 官方中文文档 (vitejs.dev)</a></p><p>打包的配置 build</p><h2 id="环境变量和模式" tabindex="-1">环境变量和模式 <a class="header-anchor" href="#环境变量和模式" aria-label="Permalink to &quot;环境变量和模式&quot;">​</a></h2><p><a href="https://cn.vitejs.dev/guide/env-and-mode.html" target="_blank" rel="noreferrer">环境变量和模式 | Vite 官方中文文档 (vitejs.dev)</a></p><p>1.<strong>项目中定义环境变量配置文件</strong>，vite 会自动读取添加的环境变量配置：<code>.env</code></p><p>文档：<a href="https://cn.vitejs.dev/guide/env-and-mode.html#env-files" target="_blank" rel="noreferrer">环境变量和模式 | Vite 官方中文文档 (vitejs.dev)</a></p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">baseUrl</span><span style="color:#98C379;"> =</span><span style="color:#98C379;"> http://localhost:8080</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>2.<strong>js 中输出定义的环境变量</strong></p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">meta</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">env</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>3.<strong>定义指定环境下的变量文件</strong>：</p><ul><li>开发环境变量文件：<code>.env.development</code></li><li>生产环境变量文件：<code>.env.production</code></li></ul><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">baseUrl</span><span style="color:#98C379;"> =</span><span style="color:#98C379;"> http://localhost:8080</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>4.<strong>创建指定 mode 的环境变量配置文件</strong>，如：<code>.env.test</code></p><p>文档：<a href="https://cn.vitejs.dev/guide/env-and-mode.html#modes" target="_blank" rel="noreferrer">环境变量和模式 | Vite 官方中文文档 (vitejs.dev)</a></p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">VITE_ENV</span><span style="color:#98C379;"> =</span><span style="color:#98C379;"> test</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>在 package.json 里的&quot;script&quot;配置命令</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#98C379;">&quot;dev:test&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;vite --mode test&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>执行命令输出：test</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> run</span><span style="color:#98C379;"> dev:test</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>5.<strong>输入类型定义提示</strong>：新定义的环境变量在代码输入中是没有提示的，需要配置 typescript 接口</p><p><strong>TypeScript 的智能提示</strong>：<a href="https://cn.vitejs.dev/guide/env-and-mode.html#env-files" target="_blank" rel="noreferrer">环境变量和模式 | Vite 官方中文文档 (vitejs.dev)</a></p><p>在 <code>src</code> 目录下创建一个 <code>env.d.ts</code> 以.d.ts 结尾的文件</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/// </span><span style="color:#ABB2BF;font-style:italic;">&lt;</span><span style="color:#E06C75;font-style:italic;">reference</span><span style="color:#D19A66;font-style:italic;"> types</span><span style="color:#56B6C2;font-style:italic;">=</span><span style="color:#98C379;font-style:italic;">&quot;vite/client&quot;</span><span style="color:#ABB2BF;font-style:italic;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">interface</span><span style="color:#E5C07B;"> ImportMetaEnv</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">	readonly</span><span style="color:#E06C75;"> VITE_ENV</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 更多环境变量...</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="服务器-webify-项目部署" tabindex="-1">服务器 Webify 项目部署 <a class="header-anchor" href="#服务器-webify-项目部署" aria-label="Permalink to &quot;服务器 Webify 项目部署&quot;">​</a></h2><p><a href="https://cn.vitejs.dev/guide/static-deploy.html" target="_blank" rel="noreferrer">部署静态站点 | Vite 官方中文文档 (vitejs.dev)</a></p><p>以腾讯云服务器为例</p><ul><li>第一步: 构建生产版本 <ul><li><code>vite build</code></li></ul></li><li>第二步: 将项目发布到 github <ul><li>创建远端 github 仓库</li><li>本地代码发布</li></ul></li><li>第三步: 注册腾讯云账号 <ul><li><a href="https://cloud.tencent.com" target="_blank" rel="noreferrer">https://cloud.tencent.com</a></li></ul></li><li>第四步: web 应用托管-部署项目（免费，但产生的流量收费） <ul><li><a href="https://webify.cloudbase.net/docs/quick-start" target="_blank" rel="noreferrer">https://webify.cloudbase.net/docs/quick-start</a></li><li>1.新建应用：输入应用的信息</li><li>2.点击部署应用</li><li>3.后面应用便会自动部署，并会显示部署的进度</li><li>4.发布成功后，在回到“概览”，等待 CDN 配置生效，才能到”应用列表“访问部署好的域名应用</li></ul></li></ul><h2 id="vite-服务端渲染" tabindex="-1">Vite 服务端渲染 <a class="header-anchor" href="#vite-服务端渲染" aria-label="Permalink to &quot;Vite 服务端渲染&quot;">​</a></h2><p><a href="https://cn.vitejs.dev/guide/ssr.html" target="_blank" rel="noreferrer">服务端渲染 | Vite 官方中文文档 (vitejs.dev)</a></p><h2 id="vite-与后端集成" tabindex="-1">Vite 与后端集成 <a class="header-anchor" href="#vite-与后端集成" aria-label="Permalink to &quot;Vite 与后端集成&quot;">​</a></h2><p><a href="https://cn.vitejs.dev/guide/backend-integration.html" target="_blank" rel="noreferrer">后端集成 | Vite 官方中文文档 (vitejs.dev)</a></p><h3 id="以-java-为例" tabindex="-1">以 java 为例 <a class="header-anchor" href="#以-java-为例" aria-label="Permalink to &quot;以 java 为例&quot;">​</a></h3><p>把前端打包后的文件夹 dist，复制到 java 项目的<code>resources/static</code>目录中</p><p>在<code>resources/static/index.html</code> 中通过读取 <code>dist/manifest.json</code> 文件替换位置</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>使用 java 代码写方法来替换静态资源文件位置</p>`,171)]))}const u=a(p,[["render",o]]);export{b as __pageData,u as default};
