import{_ as s,c as a,o as e,ah as l}from"./chunks/framework.DqD713j2.js";const p="/FrontEndLearnNotes/assets/Jenkins%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86.Cn3hw5eM.png",b=JSON.parse('{"title":"持续部署","description":"","frontmatter":{},"headers":[],"relativePath":"Document/Project-Engineering/自动化持续集成/持续部署.md","filePath":"Document/Project-Engineering/自动化持续集成/持续部署.md","lastUpdated":1750954157000}'),o={name:"Document/Project-Engineering/自动化持续集成/持续部署.md"};function r(t,n,i,c,d,h){return e(),a("div",null,n[0]||(n[0]=[l('<h1 id="持续部署" tabindex="-1">持续部署 <a class="header-anchor" href="#持续部署" aria-label="Permalink to &quot;持续部署&quot;">​</a></h1><p>参考：<a href="https://blog.csdn.net/zhishidi/article/details/118082509" target="_blank" rel="noreferrer">Jenkins详细教程_zhishidi的博客-CSDN博客</a></p><p>珠峰教程笔记：<a href="http://www.zhufengpeixun.com/strong/html/61.12.devops-jekins.html" target="_blank" rel="noreferrer">http://www.zhufengpeixun.com/strong/html/61.12.devops-jekins.html</a></p><h2 id="jenkins服务器搭建和项目部署" tabindex="-1">jenkins服务器搭建和项目部署 <a class="header-anchor" href="#jenkins服务器搭建和项目部署" aria-label="Permalink to &quot;jenkins服务器搭建和项目部署&quot;">​</a></h2><p>Jenkins是一个开源软件项目，是基于Java开发的一种持续集成工具，用于监控持续重复的工作，旨在提供一个开放易用的软件平台，使软件的持续集成变成可能。</p><h3 id="_1-背景" tabindex="-1">1.背景 <a class="header-anchor" href="#_1-背景" aria-label="Permalink to &quot;1.背景&quot;">​</a></h3><p>在实际开发中，我们经常要一边开发一边测试，当然这里说的测试并不是程序员对自己代码的单元测试，而是同组程序员将代码提交后，由测试人员测试； 或者前后端分离后，经常会修改接口，然后重新部署； 这些情况都会涉及到频繁的打包部署；</p><p>手动打包常规步骤：</p><ul><li>1.提交代码</li><li>2.问一下同组小伙伴有没有要提交的代码</li><li>3.拉取代码并打包（war包，或者jar包）</li><li>4.上传到Linux服务器</li><li>5.查看当前程序是否在运行</li><li>6.关闭当前程序</li><li>7.启动新的jar包</li><li>8.观察日志看是否启动成功</li><li>9.如果有同事说，自己还有代码没有提交......再次重复1到8的步骤，费时费力</li></ul><p>那么，有一种工具能够实现，将代码提交到git后就自动打包部署勒，答案是肯定的：Jenkins</p><p>当然除了Jenkins以外，也还有其他的工具可以实现自动化部署，如Hudson等</p><p>只是Jenkins相对来说，使用得更广泛。</p><ul><li>官网：<a href="https://www.jenkins.io/" target="_blank" rel="noreferrer">https://www.jenkins.io/</a></li></ul><h3 id="jenkins自动化部署实现原理" tabindex="-1">Jenkins自动化部署实现原理 <a class="header-anchor" href="#jenkins自动化部署实现原理" aria-label="Permalink to &quot;Jenkins自动化部署实现原理&quot;">​</a></h3><p><img src="'+p+`" alt="Jenkins自动化部署实现原理"></p><h3 id="jenkins部署环境" tabindex="-1">Jenkins部署环境 <a class="header-anchor" href="#jenkins部署环境" aria-label="Permalink to &quot;Jenkins部署环境&quot;">​</a></h3><p>基本环境：</p><ul><li>1.jdk环境，Jenkins是java语言开发的，因需要jdk环境。</li><li>2.git/svn客户端，因一般代码是放在git/svn服务器上的，我们需要拉取代码。</li><li>3.maven客户端，因一般java程序是由maven工程，需要maven打包，当然也有其他打包方式，如：gradle</li></ul><p>以上是自动化部署java程序jenkins需要的基本环境，请自己提前安装好，下面着重讲解Jenkins的安装部署配置。</p><h3 id="jenkins安装" tabindex="-1">Jenkins安装 <a class="header-anchor" href="#jenkins安装" aria-label="Permalink to &quot;Jenkins安装&quot;">​</a></h3><p>去 <a href="https://www.jenkins.io/download/" target="_blank" rel="noreferrer">https://www.jenkins.io/download/</a> 下载自己环境对应的war包，我这里是centos7(ip: 192.168.3.101)</p><p>下载完后放入自定义目录下，然后启动 <code>java -jar jenkins.war</code></p><p>待启动成功后 访问<a href="http://192.168.3.101:8080%E5%AE%8C%E6%88%90%E9%85%8D%E7%BD%AE" target="_blank" rel="noreferrer">http://192.168.3.101:8080完成配置</a></p><p>账号 root 密码：看日志得知初始密码</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">Jenkins</span><span style="color:#98C379;"> initial</span><span style="color:#98C379;"> setup</span><span style="color:#98C379;"> is</span><span style="color:#98C379;"> required.</span><span style="color:#98C379;"> An</span><span style="color:#98C379;"> admin</span><span style="color:#98C379;"> user</span><span style="color:#98C379;"> has</span><span style="color:#98C379;"> been</span><span style="color:#98C379;"> created</span><span style="color:#98C379;"> and</span><span style="color:#98C379;"> a</span><span style="color:#98C379;"> password</span><span style="color:#98C379;"> generated.</span></span>
<span class="line"><span style="color:#61AFEF;">Please</span><span style="color:#98C379;"> use</span><span style="color:#98C379;"> the</span><span style="color:#98C379;"> following</span><span style="color:#98C379;"> password</span><span style="color:#98C379;"> to</span><span style="color:#98C379;"> proceed</span><span style="color:#98C379;"> to</span><span style="color:#98C379;"> installation:</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">e4b7e1ff816e464ea94ebd79189736bd</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">This</span><span style="color:#98C379;"> may</span><span style="color:#98C379;"> also</span><span style="color:#98C379;"> be</span><span style="color:#98C379;"> found</span><span style="color:#98C379;"> at:</span><span style="color:#98C379;"> /root/.jenkins/secrets/initialAdminPassword</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>密码文件使用后会自动删除</p><p>默认选择推荐插件即可。</p><h4 id="准备使用" tabindex="-1">准备使用 <a class="header-anchor" href="#准备使用" aria-label="Permalink to &quot;准备使用&quot;">​</a></h4><p>现在还并不能真正开始使用，先安装一些可能的用到的工具/插件</p><h5 id="git安装-已安装忽略" tabindex="-1">git安装（已安装忽略） <a class="header-anchor" href="#git安装-已安装忽略" aria-label="Permalink to &quot;git安装（已安装忽略）&quot;">​</a></h5><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">yum</span><span style="color:#98C379;"> install</span><span style="color:#D19A66;"> -y</span><span style="color:#98C379;"> git</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="maven安装" tabindex="-1">Maven安装 <a class="header-anchor" href="#maven安装" aria-label="Permalink to &quot;Maven安装&quot;">​</a></h4><p>官网 <a href="https://maven.apache.org/" target="_blank" rel="noreferrer">https://maven.apache.org/</a></p><p>下载后放到Jenkins所在服务器解压缩</p><p>为了后面打包速度，先配置一下阿里云镜像，修改<code>xxxx/maven/conf/settings.xml</code></p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;mirrors&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#61AFEF;">mirror</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#61AFEF;">id</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#98C379;">nexus-aliyun</span><span style="color:#ABB2BF;">&lt;/id&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#61AFEF;">mirrorOf</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#98C379;">central</span><span style="color:#ABB2BF;">&lt;/mirrorOf&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#61AFEF;">name</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#98C379;">Nexus</span><span style="color:#98C379;"> aliyun</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#98C379;">/nam</span><span style="color:#ABB2BF;">e&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#61AFEF;">url</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#98C379;">http://maven.aliyun.com/nexus/content/groups/public</span><span style="color:#ABB2BF;">&lt;/url&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;"> &lt;</span><span style="color:#61AFEF;">/mirror</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/mirrors&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>进入Jenkins，找到Dashboard --&gt; Manage Jenkins --&gt; Global Tool Configuration</p><p>拉到最下，找到Maven，Maven安装，点击新增Maven，名字自己取一个，MAVEN_HOME填自己maven全路径</p><h4 id="jenkins安装插件" tabindex="-1">Jenkins安装插件 <a class="header-anchor" href="#jenkins安装插件" aria-label="Permalink to &quot;Jenkins安装插件&quot;">​</a></h4><p>登录Jenkins，找到Dashboard --&gt; Manage Jenkins --&gt; Manage Plugins --&gt; 可选插件</p><p>搜索publish over ssh并安装（勾选单选框，点击下方按钮&quot;Install without restart&quot;）</p>`,41)]))}const y=s(o,[["render",r]]);export{b as __pageData,y as default};
