import{_ as n,c as a,o as e,ah as l}from"./chunks/framework.DqD713j2.js";const o="/FrontEndLearnNotes/assets/electron%E6%89%8B%E5%8A%A8%E4%B8%8B%E8%BD%BD%E5%AD%98%E6%94%BE%E7%9A%84%E4%BE%9D%E8%B5%96.C2qn3u9s.jpg",p="/FrontEndLearnNotes/assets/electron%E7%9A%84cache%E7%BC%93%E5%AD%98%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F.BIn_2egg.png",r="/FrontEndLearnNotes/assets/nsis%E7%9B%AE%E5%BD%95.BzwUuXez.jpg",c="/FrontEndLearnNotes/assets/winCodeSign%E6%96%87%E4%BB%B6.CTmD60MX.jpg",h=JSON.parse('{"title":"Electron 依赖在项目安装","description":"","frontmatter":{},"headers":[],"relativePath":"Document/跨平台桌面端开发/Electron/Electron依赖在项目安装.md","filePath":"Document/跨平台桌面端开发/Electron/Electron依赖在项目安装.md","lastUpdated":1750954157000}'),t={name:"Document/跨平台桌面端开发/Electron/Electron依赖在项目安装.md"};function i(d,s,y,b,u,m){return e(),a("div",null,s[0]||(s[0]=[l(`<h1 id="electron-依赖在项目安装" tabindex="-1">Electron 依赖在项目安装 <a class="header-anchor" href="#electron-依赖在项目安装" aria-label="Permalink to &quot;Electron 依赖在项目安装&quot;">​</a></h1><p>window 系统指定安装版本：</p><p>安装 Electron32 位的版本</p><p>打包也要基于 32 位打包，</p><p>这样子打出来的包兼容 32 位和 64 位</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> install--arch=ia32--platform=win32</span><span style="color:#98C379;"> electron</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="_1-安装依赖报错" tabindex="-1">1.安装依赖报错 <a class="header-anchor" href="#_1-安装依赖报错" aria-label="Permalink to &quot;1.安装依赖报错&quot;">​</a></h2><p>报错如下：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">node_modules/.pnpm/electron@23.0.0/node_modules/electron:</span><span style="color:#98C379;"> Running</span><span style="color:#98C379;"> postinstall</span><span style="color:#98C379;"> script,</span><span style="color:#98C379;"> failed</span><span style="color:#98C379;"> in</span><span style="color:#98C379;"> 4.7s</span></span>
<span class="line"><span style="color:#56B6C2;">..</span><span style="color:#98C379;">./node_modules/electron</span><span style="color:#98C379;"> postinstall</span><span style="color:#ABB2BF;">$ </span><span style="color:#98C379;">node</span><span style="color:#98C379;"> install.js</span></span>
<span class="line"><span style="color:#61AFEF;">│</span><span style="color:#98C379;"> Error:</span><span style="color:#98C379;"> Generated</span><span style="color:#98C379;"> checksum</span><span style="color:#98C379;"> for</span><span style="color:#98C379;"> &quot;electron-v23.0.0-win32-x64.zip&quot;</span><span style="color:#98C379;"> did</span><span style="color:#98C379;"> not</span><span style="color:#98C379;"> match</span><span style="color:#98C379;"> expected</span><span style="color:#98C379;"> checksum.</span></span>
<span class="line"><span style="color:#61AFEF;">│</span><span style="color:#98C379;">     at</span><span style="color:#98C379;"> Hash.</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#98C379;">anonymou</span><span style="color:#ABB2BF;">s&gt; (D:</span><span style="color:#56B6C2;">\\C</span><span style="color:#ABB2BF;">ode</span><span style="color:#56B6C2;">\\[</span><span style="color:#ABB2BF;">MyProject]</span><span style="color:#56B6C2;">\\[</span><span style="color:#ABB2BF;">Electron]</span><span style="color:#56B6C2;">\\e</span><span style="color:#ABB2BF;">lectron-recruitment_assistant</span><span style="color:#56B6C2;">\\n</span><span style="color:#ABB2BF;">ode_modules</span><span style="color:#56B6C2;">\\.</span><span style="color:#ABB2BF;">pnpm</span><span style="color:#56B6C2;">\\s</span><span style="color:#ABB2BF;">umchecker@3.0.1</span><span style="color:#56B6C2;">\\n</span><span style="color:#ABB2BF;">ode_modules</span><span style="color:#56B6C2;">\\s</span><span style="color:#ABB2BF;">umchecker</span><span style="color:#56B6C2;">\\i</span><span style="color:#ABB2BF;">ndex.js:133:20)</span></span>
<span class="line"><span style="color:#61AFEF;">│</span><span style="color:#98C379;">     at</span><span style="color:#98C379;"> Hash.emit</span><span style="color:#ABB2BF;"> (node:events:513:28)</span></span>
<span class="line"><span style="color:#61AFEF;">│</span><span style="color:#98C379;">     at</span><span style="color:#98C379;"> emitReadable_</span><span style="color:#ABB2BF;"> (node:internal/streams/readable:590:12)</span></span>
<span class="line"><span style="color:#61AFEF;">│</span><span style="color:#98C379;">     at</span><span style="color:#98C379;"> onEofChunk</span><span style="color:#ABB2BF;"> (node:internal/streams/readable:568:5)</span></span>
<span class="line"><span style="color:#61AFEF;">│</span><span style="color:#98C379;">     at</span><span style="color:#98C379;"> readableAddChunk</span><span style="color:#ABB2BF;"> (node:internal/streams/readable:275:5)</span></span>
<span class="line"><span style="color:#61AFEF;">│</span><span style="color:#98C379;">     at</span><span style="color:#98C379;"> Readable.push</span><span style="color:#ABB2BF;"> (node:internal/streams/readable:234:10)</span></span>
<span class="line"><span style="color:#61AFEF;">│</span><span style="color:#98C379;">     at</span><span style="color:#98C379;"> node:internal/streams/transform:145:12</span></span>
<span class="line"><span style="color:#61AFEF;">│</span><span style="color:#98C379;">     at</span><span style="color:#98C379;"> Hash._flush</span><span style="color:#ABB2BF;"> (node:internal/crypto/hash:96:3)</span></span>
<span class="line"><span style="color:#61AFEF;">│</span><span style="color:#98C379;">     at</span><span style="color:#98C379;"> Hash.final</span><span style="color:#ABB2BF;"> [as </span><span style="color:#98C379;">_final]</span><span style="color:#ABB2BF;"> (node:internal/streams/transform:132:10)</span></span>
<span class="line"><span style="color:#61AFEF;">│</span><span style="color:#98C379;">     at</span><span style="color:#98C379;"> callFinal</span><span style="color:#ABB2BF;"> (node:internal/streams/writable:698:12)</span></span>
<span class="line"><span style="color:#61AFEF;">└─</span><span style="color:#98C379;"> Failed</span><span style="color:#98C379;"> in</span><span style="color:#98C379;"> 4.7s</span><span style="color:#98C379;"> at</span><span style="color:#98C379;"> D:</span><span style="color:#56B6C2;">\\C</span><span style="color:#98C379;">ode</span><span style="color:#56B6C2;">\\[</span><span style="color:#98C379;">MyProject]</span><span style="color:#56B6C2;">\\[</span><span style="color:#98C379;">Electron]</span><span style="color:#56B6C2;">\\e</span><span style="color:#98C379;">lectron-recruitment_assistant</span><span style="color:#56B6C2;">\\n</span><span style="color:#98C379;">ode_modules</span><span style="color:#56B6C2;">\\.</span><span style="color:#98C379;">pnpm</span><span style="color:#56B6C2;">\\e</span><span style="color:#98C379;">lectron@23.0.0</span><span style="color:#56B6C2;">\\n</span><span style="color:#98C379;">ode_modules</span><span style="color:#56B6C2;">\\e</span><span style="color:#98C379;">lectron</span></span>
<span class="line"><span style="color:#61AFEF;">Progress:</span><span style="color:#98C379;"> resolved</span><span style="color:#98C379;"> 442,</span><span style="color:#98C379;"> reused</span><span style="color:#98C379;"> 417,</span><span style="color:#98C379;"> downloaded</span><span style="color:#98C379;"> 1,</span><span style="color:#98C379;"> added</span><span style="color:#98C379;"> 404,</span><span style="color:#98C379;"> done</span></span>
<span class="line"><span style="color:#61AFEF;"> ELIFECYCLE </span><span style="color:#98C379;"> Command</span><span style="color:#98C379;"> failed</span><span style="color:#98C379;"> with</span><span style="color:#98C379;"> exit</span><span style="color:#98C379;"> code</span><span style="color:#98C379;"> 1.</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>解决方法：</p><p>我使用的是 pnpm 安装</p><p>可以设置镜像源</p><p>1.快速删除 node_modules</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> install</span><span style="color:#98C379;"> rimraf</span><span style="color:#D19A66;"> -g</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">rimraf</span><span style="color:#98C379;"> node_modules</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>2.设置源</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 删除项目中的node_module，然后清除缓存</span></span>
<span class="line"><span style="color:#61AFEF;">pnpm</span><span style="color:#98C379;"> store</span><span style="color:#98C379;"> prune</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 设置淘宝源</span></span>
<span class="line"><span style="color:#61AFEF;">pnpm</span><span style="color:#98C379;"> config</span><span style="color:#98C379;"> set</span><span style="color:#98C379;"> registry</span><span style="color:#98C379;"> https://registry.npm.taobao.org/</span></span>
<span class="line"><span style="color:#61AFEF;">pnpm</span><span style="color:#98C379;"> config</span><span style="color:#98C379;"> set</span><span style="color:#98C379;"> electron_mirror</span><span style="color:#98C379;"> https://npmmirror.com/mirrors/electron/</span><span style="color:#D19A66;"> -g</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 查看当前源</span></span>
<span class="line"><span style="color:#61AFEF;">pnpm</span><span style="color:#98C379;"> config</span><span style="color:#98C379;"> get</span><span style="color:#98C379;"> registry</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>如果是 yarn</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 如果使用了 electron</span></span>
<span class="line"><span style="color:#61AFEF;">yarn</span><span style="color:#98C379;"> config</span><span style="color:#98C379;"> set</span><span style="color:#98C379;"> disturl</span><span style="color:#98C379;"> https://registry.npmmirror.com/dist</span><span style="color:#D19A66;"> -g</span></span>
<span class="line"><span style="color:#61AFEF;">yarn</span><span style="color:#98C379;"> config</span><span style="color:#98C379;"> set</span><span style="color:#98C379;"> electron_mirror</span><span style="color:#98C379;"> https://npmmirror.com/mirrors/electron/</span><span style="color:#D19A66;"> -g</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 如果镜像在官方 Electron 版本中提供不同校验和，你可能必须将 electron_use_remote_checksums=1 设置为 Electron 使用远程 SHASUMS256.txt 文件来验证校验和 而不是嵌入校验和。</span></span>
<span class="line"><span style="color:#61AFEF;">yarn</span><span style="color:#98C379;"> config</span><span style="color:#98C379;"> set</span><span style="color:#98C379;"> electron_use_remote_checksums</span><span style="color:#D19A66;"> 1</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 如果使用了 node-sass 且 node &lt; 15</span></span>
<span class="line"><span style="color:#61AFEF;">yarn</span><span style="color:#98C379;"> config</span><span style="color:#98C379;"> set</span><span style="color:#98C379;"> sass_binary_site</span><span style="color:#98C379;"> https://registry.npmmirror.com/binary.html?path=node-sass/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 包缓存清理</span></span>
<span class="line"><span style="color:#61AFEF;">yarn</span><span style="color:#98C379;"> cache</span><span style="color:#98C379;"> clean</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># npm缓存清除</span></span>
<span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> cache</span><span style="color:#98C379;"> clean</span><span style="color:#D19A66;"> --force</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>全局依赖及缓存设置</p><p>yarn</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">yarn</span><span style="color:#98C379;"> config</span><span style="color:#98C379;"> set</span><span style="color:#98C379;"> prefix</span><span style="color:#98C379;"> &#39;E:\\\\nodejs\\\\node_global&#39;</span></span>
<span class="line"><span style="color:#61AFEF;">yarn</span><span style="color:#98C379;"> config</span><span style="color:#98C379;"> set</span><span style="color:#98C379;"> global-folder</span><span style="color:#98C379;"> &#39;E:\\\\nodejs\\\\node_global&#39;</span></span>
<span class="line"><span style="color:#61AFEF;">yarn</span><span style="color:#98C379;"> config</span><span style="color:#98C379;"> set</span><span style="color:#98C379;"> cache</span><span style="color:#98C379;"> &#39;E:\\\\nodejs\\\\node_cache&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>npm</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> config</span><span style="color:#98C379;"> set</span><span style="color:#98C379;"> prefix</span><span style="color:#98C379;"> &#39;E:\\\\nodejs\\\\node_global&#39;</span></span>
<span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> config</span><span style="color:#98C379;"> set</span><span style="color:#98C379;"> cache</span><span style="color:#98C379;"> &#39;E:\\\\nodejs\\\\node_cache&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="_2-electron-依赖安装卡死" tabindex="-1">2.electron 依赖安装卡死 <a class="header-anchor" href="#_2-electron-依赖安装卡死" aria-label="Permalink to &quot;2.electron 依赖安装卡死&quot;">​</a></h2><p>在使用 npm 安装 Electron 相关依赖包 ，如：</p><ul><li>electron</li><li>electron-builder</li><li>@electron-forge/cli</li></ul><p>可能会碰到一直卡在下载安装包的过程中。</p><h2 id="解决方法-4-种方法" tabindex="-1">解决方法：4 种方法 <a class="header-anchor" href="#解决方法-4-种方法" aria-label="Permalink to &quot;解决方法：4 种方法&quot;">​</a></h2><h3 id="_1-手动下载该安装包存放在本地目录中代替网络下载" tabindex="-1">1.手动下载该安装包存放在本地目录中代替网络下载 <a class="header-anchor" href="#_1-手动下载该安装包存放在本地目录中代替网络下载" aria-label="Permalink to &quot;1.手动下载该安装包存放在本地目录中代替网络下载&quot;">​</a></h3><p>官网文档：<a href="https://www.electronjs.org/zh/docs/latest/faq" target="_blank" rel="noreferrer">Electron 常见问题 (FAQ) | Electron (electronjs.org)</a></p><p>官网缓存文档：<a href="https://www.electronjs.org/zh/docs/latest/tutorial/installation#%E7%BC%93%E5%AD%98" target="_blank" rel="noreferrer">安装指导 | Electron (electronjs.org)</a></p><p>需要到 Electron 的 Github 发布页面下载两个文件</p><p>淘宝镜像首页：<a href="https://registry.npmmirror.com/binary.html" target="_blank" rel="noreferrer">CNPM Binaries Mirror (npmmirror.com)</a></p><ul><li><h4 id="electron-文件夹-electron-cache" tabindex="-1">electron 文件夹：electron\\Cache <a class="header-anchor" href="#electron-文件夹-electron-cache" aria-label="Permalink to &quot;electron 文件夹：electron\\Cache&quot;">​</a></h4><ul><li>Github 下载：<a href="https://github.com/electron/electron/releases/" target="_blank" rel="noreferrer">Releases · electron/electron (github.com)</a></li><li>淘宝镜像下载(推荐)：<a href="https://registry.npmmirror.com/binary.html?path=electron/" target="_blank" rel="noreferrer">CNPM Binaries Mirror (npmmirror.com)</a></li><li>下载 electron 开头的指定版本依赖包</li><li>如果你不知道自己应该下载哪个版本的 electron 压缩包，可以在以下链接查看 node 版本对应的 electron 版本 <ul><li><a href="https://releases.electronjs.org/" target="_blank" rel="noreferrer">https://releases.electronjs.org/</a></li></ul></li><li>在下载完成后，需要将文件拷贝到 Electron 的缓存文件夹。不同平台的缓存文件默认位置如下所述： <ul><li>Linux：<code>$XDG_CACHE_HOME</code>或<code>~/.cache/electron/</code></li><li>MacOS：<code>~/Library/Caches/electron/</code></li><li>Windows：<code>$LOCALAPPDATA/electron/Cache</code>或<code>C:\\Users\\用户名\\AppData\\Local\\electron\\Cache\\</code></li><li>老版本 Electron 的缓存文件夹可能会位于<code>~/.electron</code>中</li></ul></li><li>在<code>\\node_modules\\electron</code>下新建文件夹 dist，将刚下载的压缩包解压到 dist 文件夹中</li><li>注：electron 依赖中有 path.txt 文件和 dist 文件夹，就不用再去下载这个依赖了</li></ul></li></ul><p><img src="`+o+'" alt="electron手动下载存放的依赖"></p><h4 id="自定义设置-electron-二进制文件缓存目录" tabindex="-1">自定义设置 electron 二进制文件缓存目录 <a class="header-anchor" href="#自定义设置-electron-二进制文件缓存目录" aria-label="Permalink to &quot;自定义设置 electron 二进制文件缓存目录&quot;">​</a></h4><p>Electron 的二进制文件压缩包下载成功后，会复制一份到缓存目录，以备下次使用。在 Windows 环境下，默认的缓存目录为：</p><p><code>C:\\Users\\用户名\\AppData\\Local\\electron\\Cache</code></p><p>这是通过 Node.js 的 os.homedir()再附加了几个子目录确定的。</p><p>你可以通过设置<code>electron_config_cache</code>环境变量来提供用户自定义缓存目录，在命令行下临时设置这个环境变量的方式为：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#56B6C2;">set</span><span style="color:#98C379;"> electron_config_cache=D:</span><span style="color:#56B6C2;">\\E</span><span style="color:#98C379;">lectronDeepDive</span><span style="color:#56B6C2;">\\c</span><span style="color:#98C379;">apture1</span><span style="color:#56B6C2;">\\c</span><span style="color:#98C379;">ache</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>如果你是通过编程的方式使用@electron/get 包，那么也可以通过如下方式把环境变量的设置写到代码里：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">process.env.electron_config_cache</span><span style="color:#98C379;">=</span><span style="color:#61AFEF;">&quot;D:</span><span style="color:#56B6C2;">\\\\</span><span style="color:#61AFEF;">ElectronDeepDive</span><span style="color:#56B6C2;">\\\\</span><span style="color:#61AFEF;">capture1</span><span style="color:#56B6C2;">\\\\</span><span style="color:#61AFEF;">cache&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>如果你希望一劳永逸的解决这个问题，还可以把这个环境变量配置到操作系统中去，如下图所示：</p><p><img src="'+p+'" alt="electron的cache缓存环境变量"></p><ul><li><h4 id="electron-builder-文件夹-electron-builder-cache" tabindex="-1">electron-builder 文件夹：electron-builder\\Cache <a class="header-anchor" href="#electron-builder-文件夹-electron-builder-cache" aria-label="Permalink to &quot;electron-builder 文件夹：electron-builder\\Cache&quot;">​</a></h4><ul><li>1.1Github 下载：<a href="https://github.com/electron-userland/electron-builder/releases" target="_blank" rel="noreferrer">Releases · electron-userland/electron-builder (github.com)</a></li><li>1.2 淘宝镜像下载(推荐)：<a href="https://registry.npmmirror.com/binary.html?path=electron-builder-binaries/" target="_blank" rel="noreferrer">CNPM Binaries Mirror (npmmirror.com)</a></li><li>2.下载开头指定版本<code>nsis-xxxx</code>、<code>nsis-resources-xxxx</code>和<code>winCodeSign-xxxx</code>依赖包</li><li>3.在下载完成后，需要将文件拷贝到 electron-builder 的缓存文件夹。不同平台的缓存文件夹位置如下所述： <ul><li>Linux：<code>$XDG_CACHE_HOME</code>或<code>~/.cache/electron-builder/</code></li><li>MacOS：<code>~/Library/Caches/electron-builder/</code></li><li>Windows：<code>$LOCALAPPDATA/electron-builder/Cache</code>或<code>C:\\Users\\用户名\\AppData\\Local\\electron-builder\\Cache\\</code></li></ul></li><li>4.<code>nsis-xxxx</code>、<code>nsis-resources-xxxx</code>文件拷贝到<code>electron-builder\\Cache\\nsis</code>目录并解压：</li><li><img src="'+r+'" alt="nsis目录"></li><li>5.<code>winCodeSign-xxxx</code>文件拷贝到<code>electron-builder\\Cache\\winCodeSign</code>目录并解压</li><li><img src="'+c+`" alt="winCodeSign文件"></li></ul></li></ul><h3 id="_2-使用-cnpm-淘宝镜像安装" tabindex="-1">2.使用 cnpm 淘宝镜像安装 <a class="header-anchor" href="#_2-使用-cnpm-淘宝镜像安装" aria-label="Permalink to &quot;2.使用 cnpm 淘宝镜像安装&quot;">​</a></h3><p><code>@electron-forge/cli</code>安装失败，安装 cnpm 后使用 cnpm 安装 electron 也可解决</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> install</span><span style="color:#98C379;"> cnpm</span><span style="color:#D19A66;"> -g</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>安装依赖</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">cnpm</span><span style="color:#98C379;"> install</span><span style="color:#D19A66;"> --save-dev</span><span style="color:#98C379;"> electron</span></span>
<span class="line"><span style="color:#61AFEF;">cnpm</span><span style="color:#98C379;"> install</span><span style="color:#D19A66;"> --save-dev</span><span style="color:#98C379;"> electron-builder</span></span>
<span class="line"><span style="color:#61AFEF;">cnpm</span><span style="color:#98C379;"> install</span><span style="color:#D19A66;"> --save-dev</span><span style="color:#98C379;"> @electron-forge/cli</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="_3-淘宝镜像设置" tabindex="-1">3.淘宝镜像设置 <a class="header-anchor" href="#_3-淘宝镜像设置" aria-label="Permalink to &quot;3.淘宝镜像设置&quot;">​</a></h3><blockquote><p>这个方法我试验没有效果，也是安装失败</p></blockquote><p>项目根目录创建.yarnrc 或.npmrc 文件设置</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># registry &quot;https://registry.npmmirror.com/&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># electron_mirror &quot;http://npmmirror.com/mirrors/electron/&quot;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># electron_builder_binaries_mirror &quot;http://npmmirror.com/mirrors/electron-binaries/&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># sass_binary_site &quot;http://npmmirror.com/mirrors/node-sass/&quot;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># # phantomjs_cdnurl &quot;http://cnpmjs.org/downloads&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># # sqlite3_binary_host_mirror &quot;https://foxgis.oss-cn-shanghai.aliyuncs.com/&quot;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># profiler_binary_host_mirror &quot;http://npmmirror.com/mirrors/node-sass/node-inspector/&quot;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># chromedriver_cdnurl &quot;https://cdn.npm.taobao.org/dist/chromedriver&quot;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">registry</span><span style="color:#98C379;"> &quot;https://registry.npm.taobao.org/&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">electron_mirror</span><span style="color:#98C379;"> &quot;https://npm.taobao.org/mirrors/electron/&quot;</span></span>
<span class="line"><span style="color:#61AFEF;">electron_builder_binaries_mirror</span><span style="color:#98C379;"> &quot;http://npm.taobao.org/mirrors/electron-builder-binaries/&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">sass_binary_site</span><span style="color:#98C379;"> &quot;https://npm.taobao.org/mirrors/node-sass/&quot;</span></span>
<span class="line"><span style="color:#61AFEF;">phantomjs_cdnurl</span><span style="color:#98C379;"> &quot;http://cnpmjs.org/downloads&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">sqlite3_binary_host_mirror</span><span style="color:#98C379;"> &quot;https://foxgis.oss-cn-shanghai.aliyuncs.com/&quot;</span></span>
<span class="line"><span style="color:#61AFEF;">profiler_binary_host_mirror</span><span style="color:#98C379;"> &quot;https://npm.taobao.org/mirrors/node-inspector/&quot;</span></span>
<span class="line"><span style="color:#61AFEF;">chromedriver_cdnurl</span><span style="color:#98C379;"> &quot;https://cdn.npm.taobao.org/dist/chromedriver&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p>或者手动设置淘宝源</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> config</span><span style="color:#98C379;"> set</span><span style="color:#98C379;"> ELECTRON_MIRROR</span><span style="color:#98C379;"> http://npmmirror.com/mirrors/electron/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>npm 安装依赖</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> install</span><span style="color:#D19A66;"> --save-dev</span><span style="color:#98C379;"> electron</span></span>
<span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> install</span><span style="color:#D19A66;"> --save-dev</span><span style="color:#98C379;"> electron-builder</span></span>
<span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> install</span><span style="color:#D19A66;"> --save-dev</span><span style="color:#98C379;"> @electron-forge/cli</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>删除变量</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> config</span><span style="color:#98C379;"> delete</span><span style="color:#98C379;"> ELECTRON_MIRROR</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>查看 npm 变量</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> config</span><span style="color:#98C379;"> ls</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_4-在-windows-系统添加-electron-下载的地址的环境变量" tabindex="-1">4.在 windows 系统添加 electron 下载的地址的环境变量 <a class="header-anchor" href="#_4-在-windows-系统添加-electron-下载的地址的环境变量" aria-label="Permalink to &quot;4.在 windows 系统添加 electron 下载的地址的环境变量&quot;">​</a></h3><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">变量名：ELECTRON_MIRROR</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">值：https://cdn.npm.taobao.org/dist/electron/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,65)]))}const F=n(t,[["render",i]]);export{h as __pageData,F as default};
