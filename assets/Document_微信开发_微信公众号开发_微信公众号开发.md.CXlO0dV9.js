import{_ as n,c as a,o as l,ah as p}from"./chunks/framework.DqD713j2.js";const o="/FrontEndLearnNotes/assets/image-20240227002603494.kzHTuXNd.png",e="/FrontEndLearnNotes/assets/image-20240227001615276.BvMPWXD5.png",t="/FrontEndLearnNotes/assets/image-20240227172743893.ChrBP03t.png",r="/FrontEndLearnNotes/assets/image-20240227173856279.Cknu5Z_p.png",c="/FrontEndLearnNotes/assets/image-20240227174318905.Bxp63kOz.png",B="/FrontEndLearnNotes/assets/image-20240227174347745.SXXAX5vj.png",y="/FrontEndLearnNotes/assets/image-20240227174652574.bg2YiZGj.png",i="/FrontEndLearnNotes/assets/image-20240227174739305.DogOcplm.png",F="/FrontEndLearnNotes/assets/image-20240227174757914.BGnKrmcq.png",b="/FrontEndLearnNotes/assets/image-20240227002015077.Cmq-x3vh.png",q=JSON.parse('{"title":"微信公众号开发","description":"","frontmatter":{},"headers":[],"relativePath":"Document/微信开发/微信公众号开发/微信公众号开发.md","filePath":"Document/微信开发/微信公众号开发/微信公众号开发.md","lastUpdated":1750954157000}'),u={name:"Document/微信开发/微信公众号开发/微信公众号开发.md"};function A(m,s,C,E,d,D){return l(),a("div",null,s[0]||(s[0]=[p('<h1 id="微信公众号开发" tabindex="-1">微信公众号开发 <a class="header-anchor" href="#微信公众号开发" aria-label="Permalink to &quot;微信公众号开发&quot;">​</a></h1><h2 id="一、微信公众号设置自定义菜单及消息推送" tabindex="-1">一、微信公众号设置自定义菜单及消息推送 <a class="header-anchor" href="#一、微信公众号设置自定义菜单及消息推送" aria-label="Permalink to &quot;一、微信公众号设置自定义菜单及消息推送&quot;">​</a></h2><h3 id="_1-图文推送" tabindex="-1">1.图文推送 <a class="header-anchor" href="#_1-图文推送" aria-label="Permalink to &quot;1.图文推送&quot;">​</a></h3><p>根据关键字，推送文章或其他资料</p><p>微信公众号后台：发布文章</p><h3 id="_2-关键字回复" tabindex="-1">2.关键字回复 <a class="header-anchor" href="#_2-关键字回复" aria-label="Permalink to &quot;2.关键字回复&quot;">​</a></h3><p>根据关键字，推送对应消息内容</p><p>微信公众号后台：功能模块——自动回复</p><h3 id="_3-自定义底部菜单" tabindex="-1">3.自定义底部菜单 <a class="header-anchor" href="#_3-自定义底部菜单" aria-label="Permalink to &quot;3.自定义底部菜单&quot;">​</a></h3><p>自定义公众号底部菜单</p><p>微信公众号后台：功能模块——自定义底部菜单</p><h3 id="_4-页面模板" tabindex="-1">4.页面模板 <a class="header-anchor" href="#_4-页面模板" aria-label="Permalink to &quot;4.页面模板&quot;">​</a></h3><p>收集历史资料，提供更友好的体验</p><p>微信公众号后台：功能模块——页面模板</p><p><img src="'+o+'" alt="image-20240227002603494"></p><h3 id="公众号展示" tabindex="-1">公众号展示 <a class="header-anchor" href="#公众号展示" aria-label="Permalink to &quot;公众号展示&quot;">​</a></h3><p><img src="'+e+'" alt="image-20240227001615276"></p><h2 id="二、node-js-服务端开发-express" tabindex="-1">二、Node.js 服务端开发（Express） <a class="header-anchor" href="#二、node-js-服务端开发-express" aria-label="Permalink to &quot;二、Node.js 服务端开发（Express）&quot;">​</a></h2><h3 id="流程图" tabindex="-1">流程图 <a class="header-anchor" href="#流程图" aria-label="Permalink to &quot;流程图&quot;">​</a></h3><p><img src="'+t+'" alt="image-20240227172743893"></p><h3 id="使用框架、数据库和软件" tabindex="-1">使用框架、数据库和软件 <a class="header-anchor" href="#使用框架、数据库和软件" aria-label="Permalink to &quot;使用框架、数据库和软件&quot;">​</a></h3><h4 id="express" tabindex="-1">Express <a class="header-anchor" href="#express" aria-label="Permalink to &quot;Express&quot;">​</a></h4><p>基于 Node.js，快速、开放、极简的 web 开发框架。</p><h4 id="mongodb" tabindex="-1">MongoDB <a class="header-anchor" href="#mongodb" aria-label="Permalink to &quot;MongoDB&quot;">​</a></h4><p>MongoDB 是一个基于分布式文件存储的数据库。</p><h4 id="mongoose" tabindex="-1">Mongoose <a class="header-anchor" href="#mongoose" aria-label="Permalink to &quot;Mongoose&quot;">​</a></h4><p>Mongoose 是对 mongodb 进行便捷操作的对象模型工具。</p><h4 id="robo3t" tabindex="-1">Robo3T <a class="header-anchor" href="#robo3t" aria-label="Permalink to &quot;Robo3T&quot;">​</a></h4><p>Robo3T 是 mongodb 的一个非常好用的可视化管理工具。</p><h4 id="在线部署" tabindex="-1">在线部署 <a class="header-anchor" href="#在线部署" aria-label="Permalink to &quot;在线部署&quot;">​</a></h4><p>云服务器、应用容器、新浪云 SAE、Git 代码托管及部署。</p><p>使用二级域名跟微信公众号接口对接，部署自己的服务端代码。</p><h2 id="三、微信公众号开发鉴权" tabindex="-1">三、微信公众号开发鉴权 <a class="header-anchor" href="#三、微信公众号开发鉴权" aria-label="Permalink to &quot;三、微信公众号开发鉴权&quot;">​</a></h2><h3 id="_1-网页授权流程" tabindex="-1">1.网页授权流程 <a class="header-anchor" href="#_1-网页授权流程" aria-label="Permalink to &quot;1.网页授权流程&quot;">​</a></h3><p>微信公众平台开发文档：<a href="https://developers.weixin.qq.com/doc/offiaccount/Getting_Started/Overview.html" target="_blank" rel="noreferrer">开发前必读 / 首页 (qq.com)</a></p><h3 id="_2-js-sdk-介绍及鉴权" tabindex="-1">2.JS-SDK 介绍及鉴权 <a class="header-anchor" href="#_2-js-sdk-介绍及鉴权" aria-label="Permalink to &quot;2.JS-SDK 介绍及鉴权&quot;">​</a></h3><p>微信网页开发 / JS-SDK 说明文档：<a href="https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/JS-SDK.html" target="_blank" rel="noreferrer">微信网页开发 / JS-SDK 说明文档 (qq.com)</a></p><h4 id="鉴权流程" tabindex="-1">鉴权流程 <a class="header-anchor" href="#鉴权流程" aria-label="Permalink to &quot;鉴权流程&quot;">​</a></h4><p><img src="'+r+'" alt="image-20240227173856279"></p><h4 id="步骤一-绑定域名" tabindex="-1">步骤一：绑定域名 <a class="header-anchor" href="#步骤一-绑定域名" aria-label="Permalink to &quot;步骤一：绑定域名&quot;">​</a></h4><p>先完成域名的申请与绑定</p><h5 id="_1-微信公众平台进入-公众号设置-的-功能设置-里填写-js-接口安全域名-。" tabindex="-1">1.微信公众平台进入：“公众号设置”的“功能设置”里填写“JS 接口安全域名”。 <a class="header-anchor" href="#_1-微信公众平台进入-公众号设置-的-功能设置-里填写-js-接口安全域名-。" aria-label="Permalink to &quot;1.微信公众平台进入：“公众号设置”的“功能设置”里填写“JS 接口安全域名”。&quot;">​</a></h5><p><img src="'+c+'" alt="image-20240227174318905"></p><p>设置域名：</p><p><img src="'+B+'" alt="image-20240227174347745"></p><blockquote><p>需要事先下载一个 MP_verify_aCUsGn8IMhTP8vyx.txt 文件，放在我们自己填写的域名的静态资源文件夹下去 保证我们可以通过域名路径+MP_verify_aCUsGn8IMhTP8vyx.txt 的方式可以访问到该文件，已做验证例如：我们想要配置 aifoosen.applinzi.com 域名 则我们要保证通过：<a href="http://aifoosen.applinzi.com/MP_verify_aCUsGn8IMhTP8vyx.txt" target="_blank" rel="noreferrer">http://aifoosen.applinzi.com/MP_verify_aCUsGn8IMhTP8vyx.txt</a> 可以访问到服务器上的这个文件</p></blockquote><h5 id="_2-ip-白名单配置" tabindex="-1">2.IP 白名单配置 <a class="header-anchor" href="#_2-ip-白名单配置" aria-label="Permalink to &quot;2.IP 白名单配置&quot;">​</a></h5><p>微信公众平台进入“安全中心”的“IP 白名单”里填写，跟 js-sdk 鉴权相关的所有 ip 新浪云相关 IP 的位置：文档中心----入口与出口 IP-----外网访问出口 IP 列表</p><p><img src="'+y+'" alt="image-20240227174652574"></p><p>配置到公众号安全中心</p><p><img src="'+i+'" alt="image-20240227174739305"></p><p>添加 IP 白名单</p><p><img src="'+F+`" alt="image-20240227174757914"></p><h4 id="步骤二-引入-js-文件" tabindex="-1">步骤二：引入 JS 文件 <a class="header-anchor" href="#步骤二-引入-js-文件" aria-label="Permalink to &quot;步骤二：引入 JS 文件&quot;">​</a></h4><blockquote><p>在需要调用 JS 接口的页面引入如下 JS 文件，(支持 https)：<a href="http://res.wx.qq.com/open/js/jweixin-1.6.0.js" target="_blank" rel="noreferrer">http://res.wx.qq.com/open/js/jweixin-1.6.0.js</a></p></blockquote><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">script</span><span style="color:#D19A66;"> src</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;http://res.wx.qq.com/open/js/jweixin-1.6.0.js&quot;</span><span style="color:#FFFFFF;"> /</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	// 这里就可以通过config接口注入权限验证配置</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="_3-config-接口注入权限验证配置" tabindex="-1">3.config 接口注入权限验证配置 <a class="header-anchor" href="#_3-config-接口注入权限验证配置" aria-label="Permalink to &quot;3.config 接口注入权限验证配置&quot;">​</a></h3><h4 id="index-html" tabindex="-1">index.html <a class="header-anchor" href="#index-html" aria-label="Permalink to &quot;index.html&quot;">​</a></h4><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">script</span><span style="color:#D19A66;"> src</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;http://res.wx.qq.com/open/js/jweixin-1.6.0.js&quot;</span><span style="color:#FFFFFF;"> /</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	// 这里就可以通过config接口注入权限验证配置</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="后端-express-接口对接代码" tabindex="-1">后端 express 接口对接代码 <a class="header-anchor" href="#后端-express-接口对接代码" aria-label="Permalink to &quot;后端 express 接口对接代码&quot;">​</a></h4><p>代码 1</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 引入 express 模块</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> express</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;express&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 引入 crypto 模块</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> crypto</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;crypto&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 引入 xml2js 模块</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> xml2js</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;xml2js&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 引入 xmlbuilder 模块</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> xmlbuilder</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;xmlbuilder&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 创建 express 应用</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> app</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> express</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 设置你的令牌（Token）</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> token</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;your_token&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 监听微信服务器发送的 GET 请求</span></span>
<span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">get</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;/wechat&quot;</span><span style="color:#ABB2BF;">, (</span><span style="color:#E06C75;font-style:italic;">req</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">res</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 获取请求参数</span></span>
<span class="line"><span style="color:#C678DD;">	const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">signature</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">timestamp</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">nonce</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">echostr</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> req</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">query</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 将 token、timestamp、nonce 三个参数进行字典序排序</span></span>
<span class="line"><span style="color:#C678DD;">	const</span><span style="color:#E5C07B;"> array</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> [</span><span style="color:#E06C75;">token</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">timestamp</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">nonce</span><span style="color:#ABB2BF;">];</span></span>
<span class="line"><span style="color:#E5C07B;">	array</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">sort</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 将排序后的字符串拼接成一个字符串</span></span>
<span class="line"><span style="color:#C678DD;">	const</span><span style="color:#E5C07B;"> str</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> array</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">join</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 对拼接后的字符串进行 sha1 加密</span></span>
<span class="line"><span style="color:#C678DD;">	const</span><span style="color:#E5C07B;"> sha1Str</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> crypto</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">createHash</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;sha1&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">update</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">str</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">digest</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;hex&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 判断加密后的字符串是否与 signature 相等</span></span>
<span class="line"><span style="color:#C678DD;">	if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">sha1Str</span><span style="color:#56B6C2;"> ===</span><span style="color:#E06C75;"> signature</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// 如果相等，说明请求来自微信服务器，返回 echostr</span></span>
<span class="line"><span style="color:#E5C07B;">		res</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">send</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">echostr</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">	} </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// 如果不相等，说明请求不合法，返回错误</span></span>
<span class="line"><span style="color:#E5C07B;">		res</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">send</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;error&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 监听微信服务器发送的 POST 请求</span></span>
<span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">post</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;/wechat&quot;</span><span style="color:#ABB2BF;">, (</span><span style="color:#E06C75;font-style:italic;">req</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">res</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 定义一个数组，用于存储请求数据</span></span>
<span class="line"><span style="color:#C678DD;">	const</span><span style="color:#E5C07B;"> buffer</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> [];</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 监听请求数据的事件</span></span>
<span class="line"><span style="color:#E5C07B;">	req</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;data&quot;</span><span style="color:#ABB2BF;">, (</span><span style="color:#E06C75;font-style:italic;">data</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// 将请求数据添加到数组中</span></span>
<span class="line"><span style="color:#E5C07B;">		buffer</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">push</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">data</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">	});</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 监听请求结束的事件</span></span>
<span class="line"><span style="color:#E5C07B;">	req</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;end&quot;</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// 将请求数据转换为字符串</span></span>
<span class="line"><span style="color:#C678DD;">		const</span><span style="color:#E5C07B;"> msgXml</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> Buffer</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">concat</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">buffer</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">toString</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;utf-8&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// 使用 xml2js 库解析 XML 格式的消息</span></span>
<span class="line"><span style="color:#E5C07B;">		xml2js</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">parseString</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">msgXml</span><span style="color:#ABB2BF;">, { </span><span style="color:#E06C75;">explicitArray</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;"> }, (</span><span style="color:#E06C75;font-style:italic;">err</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">result</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">			if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">err</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				// 如果解析出错，抛出异常</span></span>
<span class="line"><span style="color:#C678DD;">				throw</span><span style="color:#E06C75;"> err</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">			}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// 获取解析后的消息对象</span></span>
<span class="line"><span style="color:#E06C75;">			result</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> result</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">xml</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// 获取消息的发送者（用户）</span></span>
<span class="line"><span style="color:#C678DD;">			const</span><span style="color:#E5C07B;"> fromUser</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> result</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">FromUserName</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// 获取消息的接收者（公众号）</span></span>
<span class="line"><span style="color:#C678DD;">			const</span><span style="color:#E5C07B;"> toUser</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> result</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">ToUserName</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// 判断消息的类型</span></span>
<span class="line"><span style="color:#C678DD;">			if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">result</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">MsgType</span><span style="color:#56B6C2;"> ===</span><span style="color:#98C379;"> &quot;text&quot;</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				// 如果是文本消息，根据消息内容进行回复</span></span>
<span class="line"><span style="color:#C678DD;">				if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">result</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">Content</span><span style="color:#56B6C2;"> ===</span><span style="color:#98C379;"> &quot;你好&quot;</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">					// 如果用户发送 &#39;你好&#39;，回复 &#39;你好，欢迎关注我的公众号&#39;</span></span>
<span class="line"><span style="color:#61AFEF;">					replyText</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">fromUser</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">toUser</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;你好，欢迎关注我的公众号&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">res</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">				} </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">					// 如果用户发送其他内容，回复 &#39;你说的是：&#39; + 消息内容</span></span>
<span class="line"><span style="color:#61AFEF;">					replyText</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">fromUser</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">toUser</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;你说的是：&quot;</span><span style="color:#56B6C2;"> +</span><span style="color:#E5C07B;"> result</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">Content</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">res</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">				}</span></span>
<span class="line"><span style="color:#ABB2BF;">			} </span><span style="color:#C678DD;">else</span><span style="color:#C678DD;"> if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">result</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">MsgType</span><span style="color:#56B6C2;"> ===</span><span style="color:#98C379;"> &quot;event&quot;</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">				// 如果是事件消息，根据事件类型进行回复</span></span>
<span class="line"><span style="color:#C678DD;">				if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">result</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">Event</span><span style="color:#56B6C2;"> ===</span><span style="color:#98C379;"> &quot;subscribe&quot;</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">					// 如果是关注事件，回复 &#39;感谢你的关注&#39;</span></span>
<span class="line"><span style="color:#61AFEF;">					replyText</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">fromUser</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">toUser</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;感谢你的关注&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">res</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">				} </span><span style="color:#C678DD;">else</span><span style="color:#C678DD;"> if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">result</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">Event</span><span style="color:#56B6C2;"> ===</span><span style="color:#98C379;"> &quot;CLICK&quot;</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">					// 如果是点击菜单事件，根据菜单键值进行回复</span></span>
<span class="line"><span style="color:#C678DD;">					if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">result</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">EventKey</span><span style="color:#56B6C2;"> ===</span><span style="color:#98C379;"> &quot;V1001_TODAY_MUSIC&quot;</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">						// 如果点击了 &#39;今日歌曲&#39; 菜单，回复 &#39;你点击了今日歌曲&#39;</span></span>
<span class="line"><span style="color:#61AFEF;">						replyText</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">fromUser</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">toUser</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;你点击了今日歌曲&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">res</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">					} </span><span style="color:#C678DD;">else</span><span style="color:#C678DD;"> if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">result</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">EventKey</span><span style="color:#56B6C2;"> ===</span><span style="color:#98C379;"> &quot;V1001_HELLO_WORLD&quot;</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">						// 如果点击了 &#39;你好世界&#39; 菜单，回复 &#39;你点击了你好世界&#39;</span></span>
<span class="line"><span style="color:#61AFEF;">						replyText</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">fromUser</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">toUser</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;你点击了你好世界&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">res</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">					}</span></span>
<span class="line"><span style="color:#ABB2BF;">				}</span></span>
<span class="line"><span style="color:#ABB2BF;">			}</span></span>
<span class="line"><span style="color:#ABB2BF;">		});</span></span>
<span class="line"><span style="color:#ABB2BF;">	});</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 定义一个函数，用于回复文本消息</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> replyText</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">fromUser</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">toUser</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">content</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">res</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 使用 xmlbuilder 库构建 XML 格式的回复消息</span></span>
<span class="line"><span style="color:#C678DD;">	const</span><span style="color:#E5C07B;"> xml</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> xmlbuilder</span></span>
<span class="line"><span style="color:#ABB2BF;">		.</span><span style="color:#61AFEF;">create</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;xml&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">		.</span><span style="color:#61AFEF;">ele</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;ToUserName&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">		.</span><span style="color:#61AFEF;">cdata</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">fromUser</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">		.</span><span style="color:#61AFEF;">up</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">		.</span><span style="color:#61AFEF;">ele</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;FromUserName&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">		.</span><span style="color:#61AFEF;">cdata</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">toUser</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">		.</span><span style="color:#61AFEF;">up</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">		.</span><span style="color:#61AFEF;">ele</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;CreateTime&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">		.</span><span style="color:#61AFEF;">txt</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> Date</span><span style="color:#ABB2BF;">().</span><span style="color:#61AFEF;">getTime</span><span style="color:#ABB2BF;">())</span></span>
<span class="line"><span style="color:#ABB2BF;">		.</span><span style="color:#61AFEF;">up</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">		.</span><span style="color:#61AFEF;">ele</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;MsgType&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">		.</span><span style="color:#61AFEF;">cdata</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;text&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">		.</span><span style="color:#61AFEF;">up</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">		.</span><span style="color:#61AFEF;">ele</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;Content&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">		.</span><span style="color:#61AFEF;">cdata</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">content</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">		.</span><span style="color:#61AFEF;">end</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 发送回复消息</span></span>
<span class="line"><span style="color:#E5C07B;">	res</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">send</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">xml</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 监听 3000 端口</span></span>
<span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">listen</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">3000</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;server is running at http://localhost:3000&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br></div></div><p>express 写微信公众号 JS-SDK 鉴权签名功能</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 引入 express 模块</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> express</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;express&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 引入 crypto 模块</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> crypto</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;crypto&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 引入 axios 模块</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> axios</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;axios&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 创建 express 应用</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> app</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> express</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 设置你的 AppID 和 AppSecret</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> AppID</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;your_appid&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> AppSecret</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;your_appsecret&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 定义一个变量，用于存储 access_token</span></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> access_token</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 定义一个变量，用于存储 jsapi_ticket</span></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> jsapi_ticket</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 定义一个函数，用于获取 access_token</span></span>
<span class="line"><span style="color:#C678DD;">async</span><span style="color:#C678DD;"> function</span><span style="color:#61AFEF;"> getAccessToken</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 拼接请求 URL</span></span>
<span class="line"><span style="color:#C678DD;">	const</span><span style="color:#E5C07B;"> url</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> \`https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=</span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">AppID</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">&amp;secret=</span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">AppSecret</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">\`</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 发送 GET 请求</span></span>
<span class="line"><span style="color:#C678DD;">	const</span><span style="color:#E5C07B;"> res</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> await</span><span style="color:#E5C07B;"> axios</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">get</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">url</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 获取响应数据</span></span>
<span class="line"><span style="color:#C678DD;">	const</span><span style="color:#E5C07B;"> data</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> res</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">data</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 判断是否成功</span></span>
<span class="line"><span style="color:#C678DD;">	if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">data</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">access_token</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// 如果成功，更新 access_token</span></span>
<span class="line"><span style="color:#E06C75;">		access_token</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> data</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">access_token</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// 打印日志</span></span>
<span class="line"><span style="color:#E5C07B;">		console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;获取 access_token 成功：&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">access_token</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">	} </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// 如果失败，打印错误</span></span>
<span class="line"><span style="color:#E5C07B;">		console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;获取 access_token 失败：&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">data</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">errmsg</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 定义一个函数，用于获取 jsapi_ticket</span></span>
<span class="line"><span style="color:#C678DD;">async</span><span style="color:#C678DD;"> function</span><span style="color:#61AFEF;"> getJsapiTicket</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 拼接请求 URL</span></span>
<span class="line"><span style="color:#C678DD;">	const</span><span style="color:#E5C07B;"> url</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> \`https://api.weixin.qq.com/cgi-bin/ticket/getticket?access_token=</span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">access_token</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">&amp;type=jsapi\`</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 发送 GET 请求</span></span>
<span class="line"><span style="color:#C678DD;">	const</span><span style="color:#E5C07B;"> res</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> await</span><span style="color:#E5C07B;"> axios</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">get</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">url</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 获取响应数据</span></span>
<span class="line"><span style="color:#C678DD;">	const</span><span style="color:#E5C07B;"> data</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> res</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">data</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 判断是否成功</span></span>
<span class="line"><span style="color:#C678DD;">	if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">data</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">ticket</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// 如果成功，更新 jsapi_ticket</span></span>
<span class="line"><span style="color:#E06C75;">		jsapi_ticket</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> data</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">ticket</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// 打印日志</span></span>
<span class="line"><span style="color:#E5C07B;">		console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;获取 jsapi_ticket 成功：&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">jsapi_ticket</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">	} </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// 如果失败，打印错误</span></span>
<span class="line"><span style="color:#E5C07B;">		console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;获取 jsapi_ticket 失败：&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">data</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">errmsg</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 定义一个函数，用于生成签名</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> getSignature</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">noncestr</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">timestamp</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">url</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 按照签名算法拼接字符串</span></span>
<span class="line"><span style="color:#C678DD;">	const</span><span style="color:#E5C07B;"> str</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> \`jsapi_ticket=</span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">jsapi_ticket</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">&amp;noncestr=</span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">noncestr</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">&amp;timestamp=</span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">timestamp</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">&amp;url=</span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">url</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">\`</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 对字符串进行 SHA1 加密</span></span>
<span class="line"><span style="color:#C678DD;">	const</span><span style="color:#E5C07B;"> signature</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> crypto</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">createHash</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;sha1&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">update</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">str</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">digest</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;hex&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 返回签名</span></span>
<span class="line"><span style="color:#C678DD;">	return</span><span style="color:#E06C75;"> signature</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 监听微信服务器发送的 GET 请求</span></span>
<span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">get</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;/wechat&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">async</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">req</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">res</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 获取请求参数</span></span>
<span class="line"><span style="color:#C678DD;">	const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">noncestr</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">timestamp</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">url</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> req</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">query</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 判断参数是否完整</span></span>
<span class="line"><span style="color:#C678DD;">	if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">noncestr</span><span style="color:#56B6C2;"> &amp;&amp;</span><span style="color:#E06C75;"> timestamp</span><span style="color:#56B6C2;"> &amp;&amp;</span><span style="color:#E06C75;"> url</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// 如果参数完整，判断 access_token 和 jsapi_ticket 是否存在</span></span>
<span class="line"><span style="color:#C678DD;">		if</span><span style="color:#ABB2BF;"> (</span><span style="color:#56B6C2;">!</span><span style="color:#E06C75;">access_token</span><span style="color:#56B6C2;"> ||</span><span style="color:#56B6C2;"> !</span><span style="color:#E06C75;">jsapi_ticket</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// 如果不存在，先获取 access_token</span></span>
<span class="line"><span style="color:#C678DD;">			await</span><span style="color:#61AFEF;"> getAccessToken</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// 再获取 jsapi_ticket</span></span>
<span class="line"><span style="color:#C678DD;">			await</span><span style="color:#61AFEF;"> getJsapiTicket</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">		}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// 生成签名</span></span>
<span class="line"><span style="color:#C678DD;">		const</span><span style="color:#E5C07B;"> signature</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> getSignature</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">noncestr</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">timestamp</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">url</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// 返回签名</span></span>
<span class="line"><span style="color:#E5C07B;">		res</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">send</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">signature</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">	} </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// 如果参数不完整，返回错误</span></span>
<span class="line"><span style="color:#E5C07B;">		res</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">send</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;error&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 监听 3000 端口</span></span>
<span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">listen</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">3000</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;server is running at http://localhost:3000&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br></div></div><h3 id="其他功能实现看文档" tabindex="-1">其他功能实现看文档 <a class="header-anchor" href="#其他功能实现看文档" aria-label="Permalink to &quot;其他功能实现看文档&quot;">​</a></h3><p><a href="https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/JS-SDK.html" target="_blank" rel="noreferrer">微信网页开发 / JS-SDK 说明文档 (qq.com)</a></p><h2 id="四、微信公众号网页综合项目" tabindex="-1">四、微信公众号网页综合项目 <a class="header-anchor" href="#四、微信公众号网页综合项目" aria-label="Permalink to &quot;四、微信公众号网页综合项目&quot;">​</a></h2><p><img src="`+b+'" alt="image-20240227002015077"></p>',68)]))}const f=n(u,[["render",A]]);export{q as __pageData,f as default};
