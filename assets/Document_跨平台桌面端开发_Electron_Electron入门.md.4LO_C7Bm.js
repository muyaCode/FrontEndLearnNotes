import{_ as n,c as a,o as l,ah as p}from"./chunks/framework.DqD713j2.js";const e="/FrontEndLearnNotes/assets/image-20220622220437989.BvU_fZ9X.png",b=JSON.parse('{"title":"Electron 入门","description":"","frontmatter":{},"headers":[],"relativePath":"Document/跨平台桌面端开发/Electron/Electron入门.md","filePath":"Document/跨平台桌面端开发/Electron/Electron入门.md","lastUpdated":1750954157000}'),o={name:"Document/跨平台桌面端开发/Electron/Electron入门.md"};function t(r,s,c,B,i,y){return l(),a("div",null,s[0]||(s[0]=[p(`<h1 id="electron-入门" tabindex="-1">Electron 入门 <a class="header-anchor" href="#electron-入门" aria-label="Permalink to &quot;Electron 入门&quot;">​</a></h1><p>看知乎问题教程：<a href="https://www.zhihu.com/question/476225078/answer/2712326251?utm_id=0" target="_blank" rel="noreferrer">https://www.zhihu.com/question/476225078/answer/2712326251?utm_id=0</a></p><h2 id="electron介绍" tabindex="-1">electron介绍 <a class="header-anchor" href="#electron介绍" aria-label="Permalink to &quot;electron介绍&quot;">​</a></h2><ul><li><p>Electron是由Github开发，用HTML，CSS和JavaScript来构建跨平台桌面应用程序的一个开源库。 Electron通过将Chromium和Node.js合并到同一个运行时环境中，并将其打包为Mac，Windows和Linux系统下的应用来实现这一目的。</p></li><li><p>网站</p><ul><li><p><a href="https://www.electronjs.org/zh/docs/latest#" target="_blank" rel="noreferrer">https://www.electronjs.org/zh/docs/latest#</a></p></li><li><p><a href="https://www.w3cschool.cn/electronmanual/" target="_blank" rel="noreferrer">https://www.w3cschool.cn/electronmanual/</a></p></li></ul></li><li><p>特点：</p><ul><li><p>上手简单：只要会前端的知识就可以做桌面应用</p></li><li><p>跨平台：Mac，Linux，Windows</p></li><li><p>自动更新</p></li></ul></li></ul><h2 id="_1、前导知识" tabindex="-1">1、前导知识 <a class="header-anchor" href="#_1、前导知识" aria-label="Permalink to &quot;1、前导知识&quot;">​</a></h2><ul><li>HTML</li><li>CSS</li><li>JavaScript</li><li>ES6+</li><li>Node.js</li></ul><h2 id="_2、安装-node-js" tabindex="-1">2、安装 Node.js <a class="header-anchor" href="#_2、安装-node-js" aria-label="Permalink to &quot;2、安装 Node.js&quot;">​</a></h2><p><a href="http://nodejs.cn/download/" target="_blank" rel="noreferrer">http://nodejs.cn/download/</a></p><h2 id="_3、安装-vscode" tabindex="-1">3、安装 VSCode <a class="header-anchor" href="#_3、安装-vscode" aria-label="Permalink to &quot;3、安装 VSCode&quot;">​</a></h2><p><a href="https://code.visualstudio.com/" target="_blank" rel="noreferrer">https://code.visualstudio.com/</a></p><p>Volar 插件</p><h2 id="_4、安装-git" tabindex="-1">4、安装 Git <a class="header-anchor" href="#_4、安装-git" aria-label="Permalink to &quot;4、安装 Git&quot;">​</a></h2><p><a href="https://git-scm.com/downloads" target="_blank" rel="noreferrer">https://git-scm.com/downloads</a></p><h2 id="一、electron" tabindex="-1">一、Electron <a class="header-anchor" href="#一、electron" aria-label="Permalink to &quot;一、Electron&quot;">​</a></h2><h3 id="_1、什么是-electron" tabindex="-1">1、什么是 Electron <a class="header-anchor" href="#_1、什么是-electron" aria-label="Permalink to &quot;1、什么是 Electron&quot;">​</a></h3><p>Electron 是由 Github 开发，用 HTML，CSS 和 JavaScript 来构建跨平台桌面应用程序的一个开源库。 Electron 通过将 Chromium 和 Node.js 合并到同一个运行时环境中，并将其打包为 Mac，Windows 和 Linux 系统下的应用来实现这一目的。</p><p>网站：</p><ul><li><a href="https://www.electronjs.org/zh/docs/latest#" target="_blank" rel="noreferrer">https://www.electronjs.org/zh/docs/latest#</a></li><li><a href="https://www.w3cschool.cn/electronmanual/" target="_blank" rel="noreferrer">https://www.w3cschool.cn/electronmanual/</a></li></ul><h3 id="electron-应用的原生-native-能力和原生-gui✌️✌️" tabindex="-1">Electron 应用的原生 Native 能力和原生 GUI✌️✌️ <a class="header-anchor" href="#electron-应用的原生-native-能力和原生-gui✌️✌️" aria-label="Permalink to &quot;Electron 应用的原生 Native 能力和原生 GUI✌️✌️&quot;">​</a></h3><h4 id="_1-系统原生-api-native-api" tabindex="-1">1.系统原生 API：Native API <a class="header-anchor" href="#_1-系统原生-api-native-api" aria-label="Permalink to &quot;1.系统原生 API：Native API&quot;">​</a></h4><p>app 设置 dock.badge：<a href="https://www.electronjs.org/zh/docs/latest/api/dock#docksetbadgetext-macos" target="_blank" rel="noreferrer">类: Dock | Electron (electronjs.org)</a></p><p>BrowserWindow-应用窗口：<a href="https://www.electronjs.org/zh/docs/latest/api/browser-window" target="_blank" rel="noreferrer">BrowserWindow | Electron (electronjs.org)</a></p><p>Menu-菜单：<a href="https://www.electronjs.org/zh/docs/latest/api/menu" target="_blank" rel="noreferrer">Menu | Electron (electronjs.org)</a></p><p>Notification-通知：<a href="https://www.electronjs.org/zh/docs/latest/api/notification" target="_blank" rel="noreferrer">通知 | Electron (electronjs.org)</a></p><p>dialog-原生弹框：<a href="https://www.electronjs.org/zh/docs/latest/api/dialog" target="_blank" rel="noreferrer">dialog | Electron (electronjs.org)</a></p><p>Tray-系统托盘：<a href="https://www.electronjs.org/zh/docs/latest/api/tray" target="_blank" rel="noreferrer">系统托盘 | Electron (electronjs.org)</a></p><p>TouchBar-macOS 系统触控板 TouchBar：<a href="https://www.electronjs.org/zh/docs/latest/api/touch-bar" target="_blank" rel="noreferrer">触控板 | Electron (electronjs.org)</a></p><p>...</p><h4 id="_2-使用-electron-api-获得底层能力" tabindex="-1">2.使用 Electron API 获得底层能力 <a class="header-anchor" href="#_2-使用-electron-api-获得底层能力" aria-label="Permalink to &quot;2.使用 Electron API 获得底层能力&quot;">​</a></h4><p>clipboard-剪切板：<a href="https://www.electronjs.org/zh/docs/latest/api/clipboard" target="_blank" rel="noreferrer">clipboard | Electron (electronjs.org)</a></p><p>globalshortcut-全局快捷键：<a href="https://www.electronjs.org/zh/docs/latest/api/global-shortcut" target="_blank" rel="noreferrer">globalShortcut | Electron (electronjs.org)</a></p><p>desktopCapturer-捕获桌面：<a href="https://www.electronjs.org/zh/docs/latest/api/desktop-capturer" target="_blank" rel="noreferrer">desktopCapturer | Electron (electronjs.org)</a></p><p>shell 打开文件和文件夹、URL：<a href="https://www.electronjs.org/zh/docs/latest/api/shell" target="_blank" rel="noreferrer">shell | Electron (electronjs.org)</a></p><p>...</p><h4 id="_3-使用-node-js-获得底层能力" tabindex="-1">3.使用 Node.js 获得底层能力 <a class="header-anchor" href="#_3-使用-node-js-获得底层能力" aria-label="Permalink to &quot;3.使用 Node.js 获得底层能力&quot;">​</a></h4><p>Electron 同时在主进程和渲染进程中对 Nodejs 暴露了所有的接口</p><ul><li>fs 进行文件读写</li><li>crypto 进行加解密</li><li>...</li></ul><p>通过 npm 安装即可引入 Node 社区上所有的 Node.js 库</p><h4 id="_4-通过-node-js-的调用系统原生模块-通过-node-js-的插件机制集成-c" tabindex="-1">4.通过 Node.js 的调用系统原生模块-通过 Node.js 的插件机制集成 C++ <a class="header-anchor" href="#_4-通过-node-js-的调用系统原生模块-通过-node-js-的插件机制集成-c" aria-label="Permalink to &quot;4.通过 Node.js 的调用系统原生模块-通过 Node.js 的插件机制集成 C++&quot;">​</a></h4><p>node.js add-on：下面是搜索【node addon】得到的</p><ul><li><a href="https://zhuanlan.zhihu.com/p/351997504" target="_blank" rel="noreferrer">Node addons 简介 - 知乎 (zhihu.com)</a></li><li><a href="https://blog.csdn.net/lunahaijiao/article/details/110729861" target="_blank" rel="noreferrer">都 2020 年了，该如何开发 Node.js Native Add-on？_前端瓶子君的博客-CSDN 博客</a></li><li><a href="https://baijiahao.baidu.com/s?id=1705404202572113582&amp;wfr=spider&amp;for=pc" target="_blank" rel="noreferrer">一篇了解 Node-Addon-Api 的设计和实现 (baidu.com)</a></li><li><a href="https://stackoverflow.com/questions/66584229/node-js-add-on-module-in-c-c" target="_blank" rel="noreferrer">Node.js add on module in C/C++ - Stack Overflow</a></li><li><a href="https://blog.csdn.net/web22050702/article/details/127367468" target="_blank" rel="noreferrer">【Node】一个完整的 node addon 实现流程_前端开发小司机的博客-CSDN 博客</a></li></ul><p>node-ffi (Foreign Function Interface)：调用写好的 C++动态库</p><h4 id="_5-可以通过-node-js-的子进程调用系统集成的-os-能力" tabindex="-1">5.可以通过 Node.js 的子进程调用系统集成的 OS 能力 <a class="header-anchor" href="#_5-可以通过-node-js-的子进程调用系统集成的-os-能力" aria-label="Permalink to &quot;5.可以通过 Node.js 的子进程调用系统集成的 OS 能力&quot;">​</a></h4><p>Shell(nodejs child_process---系统的命令)：<a href="https://www.electronjs.org/zh/docs/latest/api/shell" target="_blank" rel="noreferrer">shell | Electron (electronjs.org)</a></p><p>AppleScript（与系统其他应用交互）：苹果公司开发的一种脚本语言，可以用来控制运行于 Mac OS 上的程序，也可以写成独立运行的 Applet。最早版本在 1993 年十月推出，在 System 7（System 7.1.1）运行：<a href="https://github.com/TooTallNate/node-applescript" target="_blank" rel="noreferrer">https://github.com/TooTallNate/node-applescript</a></p><p>Windows Runtime(WinRT)：Windows 8 中的一种跨平台应用程序架构（蓝牙等）：<a href="https://github.com/NodeRT/NodeRT" target="_blank" rel="noreferrer">https://github.com/NodeRT/NodeRT</a></p><h4 id="总结-electron-能力" tabindex="-1">总结：Electron 能力 <a class="header-anchor" href="#总结-electron-能力" aria-label="Permalink to &quot;总结：Electron 能力&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Node.js</th><th>原生 API</th><th>文件读写、操作系统、加解密</th></tr></thead><tbody><tr><td></td><td>Node.js 扩展</td><td>集成三方 C++库</td></tr><tr><td>Electron Native API</td><td>客户端 GUI</td><td>右键菜单、窗口定制 、系统托盘、Dock...</td></tr><tr><td></td><td>桌面环境集成</td><td>系统通知、剪切板、系统快捷键、文件拖放</td></tr><tr><td></td><td>设备 API</td><td>电源监视、内存、CPU、屏幕</td></tr><tr><td>OS</td><td>Applescript(macOS</td><td>系统原生应用调用</td></tr><tr><td></td><td>Windows RT</td><td>USB、蓝牙、预览文件</td></tr></tbody></table><h4 id="🌟electron-开发释放想象力" tabindex="-1">🌟Electron 开发释放想象力 <a class="header-anchor" href="#🌟electron-开发释放想象力" aria-label="Permalink to &quot;🌟Electron 开发释放想象力&quot;">​</a></h4><ul><li>1.不用担心在 Safari、IE 上的表现差异了</li><li>2.大胆使用 chrome 浏览器已经支持的 API</li><li>3.oabel 中设置 targets 为 Electron 对应的 Chrome 版本</li><li>4.因为 Electron 代码运行在高版本的 Chromium 内核上，所以可以大胆的使用 ES6/7/8/9/10/11/12 等高级语法特性，不用担心引入过多的 Polyfill 而影响项目 <ul><li>Async await / Promise</li><li>String/Array/0bject 等高级用法</li><li>BigInt</li></ul></li><li>5.Electron 开发无跨域问题 <ul><li>使用 Node.js 发送请求</li><li>使用 Electron net 发送请求</li><li>![Electron 开发无跨域问题--请求](.\\img\\Electron 开发无跨域问题--请求.jpg)</li></ul></li><li>通过 Node.js 做 更多... <ul><li>操作本地文件：业务里面会留一份本地日志方便我们排查问题</li><li>更好用的本地 DB：引入一些更好用的本地 DB，除了原来的 webDB：indexDB 外，如 Lowdb、Leveldb 甚至是 SQLite 等等的本地存储</li><li>多线程、多进程并行：可以通过 Node.js 的 Worker 和 child_process，将任务拆成多线程多进程运行，充分利用计算机的多核硬件性能</li></ul></li></ul><p>首先，这是一个没有 IE 的世界，我们只需要对 chrome 负责，可以大胆的使用 Chrome 的最新的 Feature，也不需要做过多的浏览器验证。而因为不需要兼容其他的浏览器，我们在前端打包时，只需要对 chrome 的高版本打包就可以了，包的体积也会被缩减。</p><p>举个例子：比如像在我们 chrome 76 之后，就支持了一个纯天然的 LazyLoad(懒加载)，我们在加载图片的时候可以用这个特性来做懒加载。</p><ul><li>纯天然 LazyLoad：<a href="https://mathiasbynens.be/demo/img-loading-lazy" target="_blank" rel="noreferrer">https://mathiasbynens.be/demo/img-loading-lazy</a></li><li>元素是这样的【loading=&quot;lazy&quot;】：<code>&lt;img loading=&quot;lazy&quot; src=&quot;https://placekitten.com/400/400&quot; width=&quot;400&quot; height=&quot;400&quot; alt=&quot;&quot;&gt;</code></li></ul><p>谷歌浏览器和 Chromium 内核 更新【博客文章】：<a href="https://developers.google.com/web/updates" target="_blank" rel="noreferrer">https://developers.google.com/web/updates</a></p><p>Polyfill：Polyfill 或者 Polyfiller，是英国 Web 开发者 Remy Sharp 想用一个词来形容&quot;用 JavaScript 来实现一些浏览器不支持的原生 API&quot;。<strong>Polyfill 的准确意思为：磨平浏览器的缝隙，实现浏览器不支持的原生 API 的代码。</strong></p><ul><li><a href="https://www.codenong.com/j5e0ee6985188253ab84/" target="_blank" rel="noreferrer">译更了解一点 polyfill | 码农家园 (codenong.com)</a></li><li>比如在具体项目中，兼容 ie8 以及 ie8 以下一直是一个难题，因为最常用的 ES5 的 API 却有很多都无法使用，比如<strong>getElementByClassName</strong>无法使用，querySelectorAll 在 ie8 虽然可以使用，但也只能使用 css2.1 的选择器，诸如此类的问题有很多。</li><li>为了在日常开发中，开发者不会针对这种兼容性问题伤透脑筋，所出现的库就可以称为 Polyfill。一个 Polyfill 是抹平新老浏览器 标准原生 API 之间的差距的一种封装，而不是实现自己的 API。</li><li>Polymer（低版本浏览器兼容 html5 components）</li><li>FlashCanvas(兼容不支持 canvas 的浏览器)</li></ul><h3 id="_2、electron-初探" tabindex="-1">2、Electron 初探 <a class="header-anchor" href="#_2、electron-初探" aria-label="Permalink to &quot;2、Electron 初探&quot;">​</a></h3><h4 id="_2-1-常见的桌面-gui-工具介绍" tabindex="-1">2.1 常见的桌面 GUI 工具介绍 <a class="header-anchor" href="#_2-1-常见的桌面-gui-工具介绍" aria-label="Permalink to &quot;2.1 常见的桌面 GUI 工具介绍&quot;">​</a></h4><table tabindex="0"><thead><tr><th>名称</th><th>语音</th><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td>QT</td><td>C++</td><td>跨平台、性能好、生态好</td><td>依赖多，程序包大</td></tr><tr><td>PyQT</td><td>Python</td><td>底层集成度高、易上手</td><td>授权问题</td></tr><tr><td>WPF</td><td>C#</td><td>类库丰富、扩展灵活</td><td>只支持 Windows，程序包大</td></tr><tr><td>WinForm</td><td>C#</td><td>性能好，组件丰富，易上手</td><td>只支持 Windows，UI 差</td></tr><tr><td>Swing</td><td>Java</td><td>基于 AWT，组件丰富</td><td>性能差，UI 一般</td></tr><tr><td>NW.js</td><td>JS</td><td>跨平台性好，界面美观</td><td>底层交互差、性能差，包大</td></tr><tr><td>Electron</td><td>JS</td><td>相比 NW 发展更好</td><td>底层交互差、性能差，包大</td></tr><tr><td>CEF</td><td>C++</td><td>性能好，灵活集成，UI 美观</td><td>占用资源多，包大</td></tr></tbody></table><ul><li>底层依赖 + 调用：CEF、QT、Swing</li><li>UI 美观：Electron（NW.js）、PyQT</li><li>跨平台：Swing（JAVA）、PyQT（Python、C++）、Electron（前端）</li></ul><p>技术是为业务服务的，选择合适的最重要！</p><h4 id="_2-2-桌面端设计与开发要点" tabindex="-1">2.2 桌面端设计与开发要点 <a class="header-anchor" href="#_2-2-桌面端设计与开发要点" aria-label="Permalink to &quot;2.2 桌面端设计与开发要点&quot;">​</a></h4><p>1、UX/UI 设计概念</p><p>**UX 设计：**UX（User Experience）即用户体验，其核心是用户，体验指用户在使用产品以及与产品发生交互时出现的主观感受和需求满足。</p><p><strong>UI 设计：<strong>UI（User Interface）使用者界面，可以说是 UX 设计的一部分，其中重要的</strong>图形化或者可视化</strong>部分，都是由 UI 设计来完成的。</p><p>2、核心原则</p><p>简单易用。</p><p>3、通用原则</p><p>交互简单：上手就会，一看就懂</p><p>风格统一：菜单、导航、按钮反馈、颜色、预知提示</p><p>认知一致：名词、友好提示、划分信息、突出展示</p><p>4、桌面端设计</p><p>保持与 PC 端统一的风格设计与交互设计。</p><p>加入定制的菜单与专业操控设计。</p><p>减少资源加载。</p><h4 id="_2-3-初始化项目-项目依赖介绍" tabindex="-1">2.3 初始化项目 + 项目依赖介绍 <a class="header-anchor" href="#_2-3-初始化项目-项目依赖介绍" aria-label="Permalink to &quot;2.3 初始化项目 + 项目依赖介绍&quot;">​</a></h4><p>1、Electron 官网</p><p><a href="https://www.electronjs.org/" target="_blank" rel="noreferrer">https://www.electronjs.org/</a></p><p>2、初始化一个项目</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> init</span><span style="color:#D19A66;"> -y</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>3、项目安装 electron</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> i</span><span style="color:#98C379;"> electron</span><span style="color:#D19A66;"> -D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>3、配置启动脚本</p><p>在 package.json 里配置 npm 脚本：</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;scripts&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;start&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;electron .&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>4、创建入口文件</p><ul><li>在项目根目录下创建文件 index.html：</li></ul><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;!</span><span style="color:#E06C75;">DOCTYPE</span><span style="color:#D19A66;"> html</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">html</span><span style="color:#D19A66;"> lang</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;en&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">meta</span><span style="color:#D19A66;"> charset</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;UTF-8&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">meta</span><span style="color:#D19A66;"> http-equiv</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;X-UA-Compatible&quot;</span><span style="color:#D19A66;"> content</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;IE=edge&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">meta</span><span style="color:#D19A66;"> name</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;viewport&quot;</span><span style="color:#D19A66;"> content</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;width=device-width, initial-scale=1.0&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;Electron Demo&lt;/</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;/</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		hello Electron</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;/</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">html</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><ul><li>在项目根目录下创建 index.js 文件，这是程序的入口文件：</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;electron&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 主进程</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#61AFEF;"> createWindow</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">	const</span><span style="color:#E5C07B;"> win</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> BrowserWindow</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">		width</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">800</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		height</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">600</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">	});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">	win</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">loadFile</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;index.html&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">whenReady</span><span style="color:#ABB2BF;">().</span><span style="color:#61AFEF;">then</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">createWindow</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="_3、electron-核心概念" tabindex="-1">3、Electron 核心概念 <a class="header-anchor" href="#_3、electron-核心概念" aria-label="Permalink to &quot;3、Electron 核心概念&quot;">​</a></h3><h4 id="_3-1-electron-主进程与渲染进程" tabindex="-1">3.1 Electron 主进程与渲染进程 <a class="header-anchor" href="#_3-1-electron-主进程与渲染进程" aria-label="Permalink to &quot;3.1 Electron 主进程与渲染进程&quot;">​</a></h4><p>**主进程：**启动项目时运行的 main.js 脚本就是我们说的主进程。在主进程运行的脚本可以以创建 Web 页面的形式展示 GUI。<strong>主进程只有一个</strong>。</p><p>**渲染进程：**每个 Electron 的页面都在运行着自己的进程，这样的进程称之为渲染进程（基于 Chromium 的多进程结构）。</p><p><img src="`+e+`" alt="image-20220622220437989"></p><p>主进程使用 BrowserWindow 创建实例，主进程销毁后，对应的渲染进程回被终止。主进程与渲染进程通过 IPC 方式（事件驱动）进行通信。</p><h5 id="主进程-api-main-process" tabindex="-1">主进程 API-Main Process <a class="header-anchor" href="#主进程-api-main-process" aria-label="Permalink to &quot;主进程 API-Main Process&quot;">​</a></h5><ul><li>app</li><li>autoUpdater</li><li>BrowserWindow</li><li>contentTracing</li><li>dialog</li><li>ipcMain</li><li>globalShortcut</li><li>Menu</li><li>Menultem</li><li>powerMonitor</li><li>powerSaveBlocker</li><li>protocolsession</li><li>systemPreferencesTray</li></ul><h5 id="渲染进程-api-renderer-process" tabindex="-1">渲染进程 API-Renderer Process <a class="header-anchor" href="#渲染进程-api-renderer-process" aria-label="Permalink to &quot;渲染进程 API-Renderer Process&quot;">​</a></h5><ul><li>desktopCapturer</li><li>ipcRenderer</li><li>remote</li><li>webFrame</li><li>DOM/Browser APIs</li></ul><h5 id="两个进程都可以使用的-api-both" tabindex="-1">两个进程都可以使用的 API-Both <a class="header-anchor" href="#两个进程都可以使用的-api-both" aria-label="Permalink to &quot;两个进程都可以使用的 API-Both&quot;">​</a></h5><ul><li>clipboard</li><li>crashReporter</li><li>nativelmage</li><li>shell</li><li>screen</li></ul><h4 id="_3-2-主进程事件生命周期" tabindex="-1">3.2 主进程事件生命周期 <a class="header-anchor" href="#_3-2-主进程事件生命周期" aria-label="Permalink to &quot;3.2 主进程事件生命周期&quot;">​</a></h4><blockquote><p>main process modules/app/event：<a href="https://www.electronjs.org/zh/docs/latest/api/app" target="_blank" rel="noreferrer">https://www.electronjs.org/zh/docs/latest/api/app</a></p></blockquote><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;window-all-closed&quot;</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;window-all-closed&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 对于 MacOS 系统 -&gt; 关闭窗口时，不会直接推出应用</span></span>
<span class="line"><span style="color:#C678DD;">	if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">platform</span><span style="color:#56B6C2;"> !==</span><span style="color:#98C379;"> &quot;darwin&quot;</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">		app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">quit</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;quit&quot;</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;quit&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">whenReady</span><span style="color:#ABB2BF;">().</span><span style="color:#61AFEF;">then</span><span style="color:#ABB2BF;">(() </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#61AFEF;">	createWindow</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 在MacOS下，当全部窗口关闭，点击 dock 图标，窗口再次打开。</span></span>
<span class="line"><span style="color:#E5C07B;">	app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;activate&quot;</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">		if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">BrowserWindow</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getAllWindows</span><span style="color:#ABB2BF;">().</span><span style="color:#E06C75;">length</span><span style="color:#56B6C2;"> ===</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#61AFEF;">			createWindow</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">		}</span></span>
<span class="line"><span style="color:#ABB2BF;">	});</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h4 id="_3-3-渲染进程如何使用-node-模块" tabindex="-1">3.3 渲染进程如何使用 Node 模块 <a class="header-anchor" href="#_3-3-渲染进程如何使用-node-模块" aria-label="Permalink to &quot;3.3 渲染进程如何使用 Node 模块&quot;">​</a></h4><p><strong>1、通过 webPreferences/nodeIntegration</strong>：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> win</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> BrowserWindow</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">	width</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">800</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">	height</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">400</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">	webPreferences</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">		nodeIntegration</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		contextIsolation</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;!</span><span style="color:#E06C75;">DOCTYPE</span><span style="color:#D19A66;"> html</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">html</span><span style="color:#D19A66;"> lang</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;en&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">meta</span><span style="color:#D19A66;"> charset</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;UTF-8&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">meta</span><span style="color:#D19A66;"> http-equiv</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;X-UA-Compatible&quot;</span><span style="color:#D19A66;"> content</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;IE=edge&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">meta</span><span style="color:#D19A66;"> name</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;viewport&quot;</span><span style="color:#D19A66;"> content</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;width=device-width, initial-scale=1.0&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;Electron Demo&lt;/</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">script</span><span style="color:#D19A66;"> src</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;https://unpkg.com/vue@next&quot;</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;/</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">h1</span><span style="color:#ABB2BF;">&gt;hello Electron&lt;/</span><span style="color:#E06C75;">h1</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">div</span><span style="color:#D19A66;"> id</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;root&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">			&lt;</span><span style="color:#E06C75;">p</span><span style="color:#ABB2BF;">&gt;electronVersion: {{electronVersion}}&lt;/</span><span style="color:#E06C75;">p</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">			&lt;</span><span style="color:#E06C75;">p</span><span style="color:#ABB2BF;">&gt;nodeVersion: {{nodeVersion}}&lt;/</span><span style="color:#E06C75;">p</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">			&lt;</span><span style="color:#E06C75;">p</span><span style="color:#ABB2BF;">&gt;chromeVersion: {{chromeVersion}}&lt;/</span><span style="color:#E06C75;">p</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// const path = require(&#39;path&#39;)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// console.log(path)</span></span>
<span class="line"><span style="color:#C678DD;">			const</span><span style="color:#E5C07B;"> app</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">createApp</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#61AFEF;">				data</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">					return</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">						electronVersion</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">versions</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">electron</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">						nodeVersion</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">versions</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">node</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">						chromeVersion</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">versions</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">chrome</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">					};</span></span>
<span class="line"><span style="color:#ABB2BF;">				},</span></span>
<span class="line"><span style="color:#ABB2BF;">			});</span></span>
<span class="line"><span style="color:#E5C07B;">			app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">mount</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;#root&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;/</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">html</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><p><strong>2、通过 webPreferences/preload 实现</strong>：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> win</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> BrowserWindow</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">	width</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">800</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">	height</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">400</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">	webPreferences</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// 在启动应用时在渲染进程里预加载 js</span></span>
<span class="line"><span style="color:#E06C75;">		preload</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">join</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">__dirname</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;./preload-js/index.js&quot;</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// preload-js/index.js</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// const { contextBridge } = require(&#39;electron&#39;)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// contextBridge.exposeInMainWorld(&#39;myAPI&#39;, {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//  desktop: true</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">createApp</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;vue&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">window</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">addEventListener</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;load&quot;</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">	const</span><span style="color:#E5C07B;"> app</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> createApp</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#61AFEF;">		data</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">			return</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">				electronVersion</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">versions</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">electron</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">				nodeVersion</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">versions</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">node</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">				chromeVersion</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">versions</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">chrome</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">			};</span></span>
<span class="line"><span style="color:#ABB2BF;">		},</span></span>
<span class="line"><span style="color:#ABB2BF;">	});</span></span>
<span class="line"><span style="color:#E5C07B;">	app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">mount</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;#root&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p><strong>3、代码改造</strong>：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// index.js</span></span>
<span class="line"><span style="color:#E5C07B;">win</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">loadFile</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;./renderer/index.html&quot;</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">&lt;!-- renderer/index.html --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;!</span><span style="color:#E06C75;">DOCTYPE</span><span style="color:#D19A66;"> html</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">html</span><span style="color:#D19A66;"> lang</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;en&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">meta</span><span style="color:#D19A66;"> charset</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;UTF-8&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">meta</span><span style="color:#D19A66;"> http-equiv</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;X-UA-Compatible&quot;</span><span style="color:#D19A66;"> content</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;IE=edge&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">meta</span><span style="color:#D19A66;"> name</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;viewport&quot;</span><span style="color:#D19A66;"> content</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;width=device-width, initial-scale=1.0&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		&lt;!-- &lt;meta http-equiv=&quot;Content-Security-Policy&quot; content=&quot;script-src &#39;self&#39;;&quot;&gt; --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;Electron Demo&lt;/</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">script</span><span style="color:#D19A66;"> src</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;./vue.global.js&quot;</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;/</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">h1</span><span style="color:#ABB2BF;">&gt;hello Electron&lt;/</span><span style="color:#E06C75;">h1</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">div</span><span style="color:#D19A66;"> id</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;root&quot;</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">script</span><span style="color:#D19A66;"> src</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;./main.js&quot;</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;/</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">html</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// renderer/main.js</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> app</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">createApp</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">	template</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">\`</span></span>
<span class="line"><span style="color:#98C379;">    &lt;p&gt;electronVersion: {{electronVersion}}&lt;/p&gt;</span></span>
<span class="line"><span style="color:#98C379;">    &lt;p&gt;nodeVersion: {{nodeVersion}}&lt;/p&gt;</span></span>
<span class="line"><span style="color:#98C379;">    &lt;p&gt;chromeVersion: {{chromeVersion}}&lt;/p&gt;</span></span>
<span class="line"><span style="color:#98C379;">  \`</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#61AFEF;">	data</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">		return</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">			electronVersion</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">versions</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">electron</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">			nodeVersion</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">versions</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">node</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">			chromeVersion</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">versions</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">chrome</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">		};</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">mount</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;#root&quot;</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">&lt;!-- 配置CSP --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">meta</span></span>
<span class="line"><span style="color:#D19A66;">	http-equiv</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;Content-Security-Policy&quot;</span></span>
<span class="line"><span style="color:#D19A66;">	content</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;default-src &#39;self&#39;; img-src &#39;self&#39; data:; script-src &#39;self&#39;; style-src &#39;self&#39; &#39;unsafe-inline&#39;&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">/&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 暂时关闭安全警告</span></span>
<span class="line"><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">env</span><span style="color:#ABB2BF;">[</span><span style="color:#98C379;">&quot;ELECTRON_DISABLE_SECURITY_WARNINGS&quot;</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#98C379;"> &quot;true&quot;</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="_3-5-主进程与渲染进程通信" tabindex="-1">3.5 主进程与渲染进程通信 <a class="header-anchor" href="#_3-5-主进程与渲染进程通信" aria-label="Permalink to &quot;3.5 主进程与渲染进程通信&quot;">​</a></h4><h5 id="_3-5-1-index-html" tabindex="-1">3.5.1 index.html <a class="header-anchor" href="#_3-5-1-index-html" aria-label="Permalink to &quot;3.5.1 index.html&quot;">​</a></h5><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;!</span><span style="color:#E06C75;">DOCTYPE</span><span style="color:#D19A66;"> html</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">html</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">meta</span><span style="color:#D19A66;"> charset</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;UTF-8&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">meta</span></span>
<span class="line"><span style="color:#D19A66;">			http-equiv</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;Content-Security-Policy&quot;</span></span>
<span class="line"><span style="color:#D19A66;">			content</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;script-src &#39;self&#39; &#39;unsafe-inline&#39;&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">		/&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;Hello World!&lt;/</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;/</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">h1</span><span style="color:#ABB2BF;">&gt;Hello World!&lt;/</span><span style="color:#E06C75;">h1</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">button</span><span style="color:#D19A66;"> type</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;button&quot;</span><span style="color:#D19A66;"> id</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;talk&quot;</span><span style="color:#ABB2BF;">&gt;Talk to main process&lt;/</span><span style="color:#E06C75;">button</span><span style="color:#ABB2BF;">&gt;&lt;</span><span style="color:#E06C75;">br</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		&lt;!-- All of the Node.js APIs are available in this renderer process. --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		We are using Node.js</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">strong</span></span>
<span class="line"><span style="color:#ABB2BF;">			&gt;&lt;</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#E5C07B;">				document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">versions</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">node</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">			&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">strong</span></span>
<span class="line"><span style="color:#ABB2BF;">		&gt;, and Electron</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">strong</span></span>
<span class="line"><span style="color:#ABB2BF;">			&gt;&lt;</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#E5C07B;">				document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">versions</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">electron</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">			&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">strong</span></span>
<span class="line"><span style="color:#ABB2BF;">		&gt;.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// You can also require other files to run in this process</span></span>
<span class="line"><span style="color:#61AFEF;">			require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;./renderer.js&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;/</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">html</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><h5 id="_3-5-2-renderer-js" tabindex="-1">3.5.2 renderer.js <a class="header-anchor" href="#_3-5-2-renderer-js" aria-label="Permalink to &quot;3.5.2 renderer.js&quot;">​</a></h5><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// This file is required by the index.html file and will</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// be executed in the renderer process for that window.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// All of the Node.js APIs are available in this process.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">ipcRenderer</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;electron&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#61AFEF;">setInterval</span><span style="color:#ABB2BF;">(() </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E06C75;">	i</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}, </span><span style="color:#D19A66;">1000</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getElementById</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;talk&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">addEventListener</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;click&quot;</span><span style="color:#ABB2BF;">, (</span><span style="color:#E06C75;font-style:italic;">e</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// ipcRenderer.send( &#39;channel1&#39;, &#39;Hello from main window&#39;)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">	let</span><span style="color:#E06C75;"> response</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> ipcRenderer</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">sendSync</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;sync-message&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;Waiting for response&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">response</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">ipcRenderer</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;channel1-response&quot;</span><span style="color:#ABB2BF;">, (</span><span style="color:#E06C75;font-style:italic;">e</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">args</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">args</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">ipcRenderer</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;mailbox&quot;</span><span style="color:#ABB2BF;">, (</span><span style="color:#E06C75;font-style:italic;">e</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">args</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">args</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h5 id="_3-5-3-main-js" tabindex="-1">3.5.3 main.js <a class="header-anchor" href="#_3-5-3-main-js" aria-label="Permalink to &quot;3.5.3 main.js&quot;">​</a></h5><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// Modules</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">BrowserWindow</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">ipcMain</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;electron&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Keep a global reference of the window object, if you don&#39;t, the window will</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// be closed automatically when the JavaScript object is garbage collected.</span></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> mainWindow</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Create a new BrowserWindow when \`app\` is ready</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> createWindow</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E06C75;">	mainWindow</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> BrowserWindow</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">		width</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">1000</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		height</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">800</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		x</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">100</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		y</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">140</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		webPreferences</span><span style="color:#ABB2BF;">: { </span><span style="color:#E06C75;">nodeIntegration</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;"> },</span></span>
<span class="line"><span style="color:#ABB2BF;">	});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// Load index.html into the new BrowserWindow</span></span>
<span class="line"><span style="color:#E5C07B;">	mainWindow</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">loadFile</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;index.html&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// Open DevTools - Remove for PRODUCTION!</span></span>
<span class="line"><span style="color:#E5C07B;">	mainWindow</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">webContents</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">openDevTools</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">	mainWindow</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">webContents</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;did-finish-load&quot;</span><span style="color:#ABB2BF;">, (</span><span style="color:#E06C75;font-style:italic;">e</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// mainWindow.webContents.send( &#39;mailbox&#39;, {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		//   from: &#39;Ray&#39;,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		//   email: &#39;ray@stackacademy.tv&#39;,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		//   priority: 1</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// })</span></span>
<span class="line"><span style="color:#ABB2BF;">	});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// Listen for window being closed</span></span>
<span class="line"><span style="color:#E5C07B;">	mainWindow</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;closed&quot;</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">		mainWindow</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> null</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">	});</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">ipcMain</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;sync-message&quot;</span><span style="color:#ABB2BF;">, (</span><span style="color:#E06C75;font-style:italic;">e</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">args</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">args</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">	setTimeout</span><span style="color:#ABB2BF;">(() </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">		e</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">returnValue</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;A sync response from the main process&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">	}, </span><span style="color:#D19A66;">4000</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">ipcMain</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;channel1&quot;</span><span style="color:#ABB2BF;">, (</span><span style="color:#E06C75;font-style:italic;">e</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">args</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">args</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">	e</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">sender</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">send</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#98C379;">		&quot;channel1-response&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">		&#39;Message received on &quot;channel1&quot;. Thank you!&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">	);</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Electron \`app\` is ready</span></span>
<span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;ready&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">createWindow</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Quit when all windows are closed - (Not macOS - Darwin)</span></span>
<span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;window-all-closed&quot;</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">	if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">platform</span><span style="color:#56B6C2;"> !==</span><span style="color:#98C379;"> &quot;darwin&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">quit</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// When app icon is clicked and app is running, (macOS) recreate the BrowserWindow</span></span>
<span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;activate&quot;</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">	if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">mainWindow</span><span style="color:#56B6C2;"> ===</span><span style="color:#D19A66;"> null</span><span style="color:#ABB2BF;">) </span><span style="color:#61AFEF;">createWindow</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br></div></div><h3 id="_4、主进程" tabindex="-1">4、主进程 <a class="header-anchor" href="#_4、主进程" aria-label="Permalink to &quot;4、主进程&quot;">​</a></h3><blockquote><p>Electron API （Electron API 有两种）</p></blockquote><ul><li>Main Process （主进进程）</li><li>Renderer Process（渲染进程）</li></ul><h4 id="_4-1-app" tabindex="-1">4.1 App <a class="header-anchor" href="#_4-1-app" aria-label="Permalink to &quot;4.1 App&quot;">​</a></h4><h5 id="_4-1-1-事件" tabindex="-1">4.1.1 事件 <a class="header-anchor" href="#_4-1-1-事件" aria-label="Permalink to &quot;4.1.1 事件&quot;">​</a></h5><h6 id="_4-1-1-1-before-quit" tabindex="-1">4.1.1.1 before-quit <a class="header-anchor" href="#_4-1-1-1-before-quit" aria-label="Permalink to &quot;4.1.1.1 before-quit&quot;">​</a></h6><blockquote><p>在应用程序开始关闭窗口之前触发。</p></blockquote><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;before-quit&quot;</span><span style="color:#ABB2BF;">, (</span><span style="color:#E06C75;font-style:italic;">e</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;App is quiting&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">	e</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">preventDefault</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h6 id="_4-1-1-2-browser-window-blur" tabindex="-1">4.1.1.2 browser-window-blur <a class="header-anchor" href="#_4-1-1-2-browser-window-blur" aria-label="Permalink to &quot;4.1.1.2 browser-window-blur&quot;">​</a></h6><blockquote><p>在 browserWindow 失去焦点时发出</p></blockquote><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;browser-window-blur&quot;</span><span style="color:#ABB2BF;">, (</span><span style="color:#E06C75;font-style:italic;">e</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;App unfocused&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h6 id="_4-1-1-3-browser-window-focus" tabindex="-1">4.1.1.3 browser-window-focus <a class="header-anchor" href="#_4-1-1-3-browser-window-focus" aria-label="Permalink to &quot;4.1.1.3 browser-window-focus&quot;">​</a></h6><blockquote><p>在 browserWindow 获得焦点时发出</p></blockquote><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;browser-window-focus&quot;</span><span style="color:#ABB2BF;">, (</span><span style="color:#E06C75;font-style:italic;">e</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;App focused&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h5 id="_4-1-2-方法" tabindex="-1">4.1.2 方法 <a class="header-anchor" href="#_4-1-2-方法" aria-label="Permalink to &quot;4.1.2 方法&quot;">​</a></h5><p>4.1.2.1 app.quit()</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;browser-window-blur&quot;</span><span style="color:#ABB2BF;">, (</span><span style="color:#E06C75;font-style:italic;">e</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#61AFEF;">	setTimeout</span><span style="color:#ABB2BF;">(() </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">		app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">quit</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">	}, </span><span style="color:#D19A66;">3000</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;browser-window-blur&quot;</span><span style="color:#ABB2BF;">, (</span><span style="color:#E06C75;font-style:italic;">e</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#61AFEF;">	setTimeout</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">quit</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3000</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h6 id="_4-1-2-2-app-getpath-name" tabindex="-1">4.1.2.2 app.getPath(name) <a class="header-anchor" href="#_4-1-2-2-app-getpath-name" aria-label="Permalink to &quot;4.1.2.2 app.getPath(name)&quot;">​</a></h6><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">whenReady</span><span style="color:#ABB2BF;">().</span><span style="color:#61AFEF;">then</span><span style="color:#ABB2BF;">(() </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getPath</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;desktop&quot;</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getPath</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;music&quot;</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getPath</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;temp&quot;</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getPath</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;userData&quot;</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">	createWindow</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h4 id="_4-2-browserwindow" tabindex="-1">4.2 BrowserWindow <a class="header-anchor" href="#_4-2-browserwindow" aria-label="Permalink to &quot;4.2 BrowserWindow&quot;">​</a></h4><blockquote><p>electron.BrowserWindow: 创建和控制浏览器窗口</p></blockquote><h5 id="_4-2-1-实例方法" tabindex="-1">4.2.1 实例方法 <a class="header-anchor" href="#_4-2-1-实例方法" aria-label="Permalink to &quot;4.2.1 实例方法&quot;">​</a></h5><p>win.loadURL(url[, options]): 和 loadFile 互斥</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">mainWindow</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">loadURL</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;https://www.baidu.com&quot;</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h5 id="_4-2-2-优雅的显示窗口" tabindex="-1">4.2.2 优雅的显示窗口 <a class="header-anchor" href="#_4-2-2-优雅的显示窗口" aria-label="Permalink to &quot;4.2.2 优雅的显示窗口&quot;">​</a></h5><ul><li>使用 ready-to-show 事件</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> mainWindow</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> BrowserWindow</span><span style="color:#ABB2BF;">({ </span><span style="color:#E06C75;">show</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;"> });</span></span>
<span class="line"><span style="color:#E5C07B;">mainWindow</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">once</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;ready-to-show&quot;</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">	mainWindow</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">show</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li>设置 backgroundColor</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> win</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> BrowserWindow</span><span style="color:#ABB2BF;">({ </span><span style="color:#E06C75;">backgroundColor</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;#2e2c29&quot;</span><span style="color:#ABB2BF;"> });</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h5 id="_4-2-3-父子窗口" tabindex="-1">4.2.3 父子窗口 <a class="header-anchor" href="#_4-2-3-父子窗口" aria-label="Permalink to &quot;4.2.3 父子窗口&quot;">​</a></h5><ul><li>窗口定义</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E06C75;">secondaryWindow</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> BrowserWindow</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">	width</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">600</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">	height</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">600</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">	webPreferences</span><span style="color:#ABB2BF;">: { </span><span style="color:#E06C75;">nodeIntegration</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;"> },</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">secondaryWindow</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">loadFile</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;index.html&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">secondaryWindow</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;closed&quot;</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">	mainWindow</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> null</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ul><li>窗口关系</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E06C75;">secondaryWindow</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> BrowserWindow</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">	parent</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">mainWindon</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 定义父窗口</span></span>
<span class="line"><span style="color:#E06C75;">	modal</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 锁定在主窗口</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li>子窗口显示和隐藏</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E06C75;">secondaryWindow</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> BrowserWindow</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">	show</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">setTimeout</span><span style="color:#ABB2BF;">(() </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">	secondaryWindow</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">show</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#61AFEF;">	setTimeout</span><span style="color:#ABB2BF;">(() </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">		secondaryWindow</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">hide</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">	}, </span><span style="color:#D19A66;">3000</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}, </span><span style="color:#D19A66;">2000</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h5 id="_4-2-4-无边框窗口" tabindex="-1">4.2.4 无边框窗口 <a class="header-anchor" href="#_4-2-4-无边框窗口" aria-label="Permalink to &quot;4.2.4 无边框窗口&quot;">​</a></h5><blockquote><p>Frameless Window</p></blockquote><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E06C75;">mainWindow</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> BrowserWindow</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">	frame</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>让页面可拖拽</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">body</span><span style="color:#D19A66;"> style</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;user-select: none; -webkit-app-region:drag;&quot;</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>no-drag 修复下面控件的 bug</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">input</span></span>
<span class="line"><span style="color:#D19A66;">	style</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;-webkit-app-region: no-drag;&quot;</span></span>
<span class="line"><span style="color:#D19A66;">	type</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;range&quot;</span></span>
<span class="line"><span style="color:#D19A66;">	name</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;range&quot;</span></span>
<span class="line"><span style="color:#D19A66;">	min</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;0&quot;</span></span>
<span class="line"><span style="color:#D19A66;">	max</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;10&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">/&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>显示红绿灯</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E06C75;">mainWindow</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> BrowserWindow</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">	titleBarStyle</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;hidden&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// or hiddenInset 距离红绿灯更近</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h5 id="_4-2-5-属性与方法" tabindex="-1">4.2.5 属性与方法 <a class="header-anchor" href="#_4-2-5-属性与方法" aria-label="Permalink to &quot;4.2.5 属性与方法&quot;">​</a></h5><h6 id="_4-2-5-1-minwidth-minheight" tabindex="-1">4.2.5.1 minWidth &amp;&amp; minHeight <a class="header-anchor" href="#_4-2-5-1-minwidth-minheight" aria-label="Permalink to &quot;4.2.5.1 minWidth &amp;&amp; minHeight&quot;">​</a></h6><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E06C75;">mainWindow</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> BrowserWindow</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">	minWidth</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">300</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">	minHeight</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">300</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>更多详见：<a href="https://electronjs.org/docs/api/browser-window#new-browserwindowoptions" target="_blank" rel="noreferrer">https://electronjs.org/docs/api/browser-window#new-browserwindowoptions</a></p><h6 id="_4-2-5-2-窗口焦点事件" tabindex="-1">4.2.5.2 窗口焦点事件 <a class="header-anchor" href="#_4-2-5-2-窗口焦点事件" aria-label="Permalink to &quot;4.2.5.2 窗口焦点事件&quot;">​</a></h6><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E06C75;">secWindow</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> BrowserWindow</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">	width</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">400</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">	height</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">300</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">	webPreferences</span><span style="color:#ABB2BF;">: { </span><span style="color:#E06C75;">nodeIntegration</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;"> },</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">mainWindow</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;focus&quot;</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;mainWindow focused&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">secWindow</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;focus&quot;</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;secWindow focused&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;browser-window-focus&quot;</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;App focused&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h6 id="_4-2-5-3-静态方法" tabindex="-1">4.2.5.3 静态方法 <a class="header-anchor" href="#_4-2-5-3-静态方法" aria-label="Permalink to &quot;4.2.5.3 静态方法&quot;">​</a></h6><ul><li>getAllWindows()</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> allWindows</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> BrowserWindow</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getAllWindows</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">allWindows</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>更多详见: <a href="https://electronjs.org/docs/api/browser-window#%E9%9D%99%E6%80%81%E6%96%B9%E6%B3%95" target="_blank" rel="noreferrer">https://electronjs.org/docs/api/browser-window#静态方法</a></p><h6 id="_4-2-5-4-实例方法" tabindex="-1">4.2.5.4 实例方法 <a class="header-anchor" href="#_4-2-5-4-实例方法" aria-label="Permalink to &quot;4.2.5.4 实例方法&quot;">​</a></h6><ul><li>maximize()</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">secWindow</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;closed&quot;</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">	mainWindow</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">maximize</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>更多详见：<a href="https://electronjs.org/docs/api/browser-window#%E5%AE%9E%E4%BE%8B%E6%96%B9%E6%B3%95" target="_blank" rel="noreferrer">https://electronjs.org/docs/api/browser-window#实例方法</a></p><h5 id="_4-2-6-state" tabindex="-1">4.2.6 state <a class="header-anchor" href="#_4-2-6-state" aria-label="Permalink to &quot;4.2.6 state&quot;">​</a></h5><blockquote><p>electron-win-state 保存窗口的状态 <code>npm install electron-win-state</code></p></blockquote><h5 id="_4-2-7-webcontents" tabindex="-1">4.2.7 webContents <a class="header-anchor" href="#_4-2-7-webcontents" aria-label="Permalink to &quot;4.2.7 webContents&quot;">​</a></h5><blockquote><p>webContents 是 EventEmitter 的实例， 负责渲染和控制网页, 是 BrowserWindow 对象的一个属性。</p></blockquote><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> wc</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> mainWindow</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">webContents</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">wc</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h6 id="_4-2-7-1-方法-getallwebcontents" tabindex="-1">4.2.7.1 方法 getAllWebContents(）* <a class="header-anchor" href="#_4-2-7-1-方法-getallwebcontents" aria-label="Permalink to &quot;4.2.7.1 方法 getAllWebContents(）\\*&quot;">​</a></h6><ul><li>返回 WebContents[] - 所有 WebContents 实例的数组。 包含所有 Windows，webviews，opened devtools 和 devtools 扩展背景页的 web 内容</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">BrowserWindow</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">webContents</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;electron&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">webContents</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getAllWebContents</span><span style="color:#ABB2BF;">());</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h6 id="_4-2-7-2-实例事件" tabindex="-1">4.2.7.2 实例事件 <a class="header-anchor" href="#_4-2-7-2-实例事件" aria-label="Permalink to &quot;4.2.7.2 实例事件&quot;">​</a></h6><ul><li>did-finish-load</li><li>dom-ready</li></ul><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">img</span><span style="color:#D19A66;"> src</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;https://placekitten.com/500/500&quot;</span><span style="color:#D19A66;"> alt</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#C678DD;">	let</span><span style="color:#E06C75;"> wc</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> mainWindow</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">webContents</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">	wc</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;did-finish-load&quot;</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">		console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;Conent fully loaded&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">	});</span></span>
<span class="line"><span style="color:#E5C07B;">	wc</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;dom-ready&quot;</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">		console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;DOM Ready&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">	});</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><ul><li>new-window</li></ul><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">a</span><span style="color:#D19A66;"> target</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;_blank&quot;</span><span style="color:#D19A66;"> href</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;https://placekitten.com/500/500&quot;</span><span style="color:#ABB2BF;">&gt;&lt;</span><span style="color:#E06C75;">h3</span><span style="color:#ABB2BF;">&gt;Kitten&lt;/</span><span style="color:#E06C75;">h3</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#E5C07B;">	wc</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;new-window&quot;</span><span style="color:#ABB2BF;">, (</span><span style="color:#E06C75;font-style:italic;">e</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">url</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">		e</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">preventDefault</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">		console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;DOM Ready&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">	});</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><ul><li>context-menu : 右键上下文信息</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">wc</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;context-menu&quot;</span><span style="color:#ABB2BF;">, (</span><span style="color:#E06C75;font-style:italic;">e</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">params</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#98C379;">		\`Context menu opened on: </span><span style="color:#C678DD;">\${</span><span style="color:#E5C07B;">params</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">mediaType</span><span style="color:#C678DD;">}</span><span style="color:#98C379;"> at x:</span><span style="color:#C678DD;">\${</span><span style="color:#E5C07B;">params</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">x</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">, y:</span><span style="color:#C678DD;">\${</span><span style="color:#E5C07B;">params</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">y</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">\`</span></span>
<span class="line"><span style="color:#ABB2BF;">	);</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">wc</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;context-menu&quot;</span><span style="color:#ABB2BF;">, (</span><span style="color:#E06C75;font-style:italic;">e</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">params</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">\`User seleted text: </span><span style="color:#C678DD;">\${</span><span style="color:#E5C07B;">params</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">selectionText</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">\`</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">\`Selection can be copied: </span><span style="color:#C678DD;">\${</span><span style="color:#E5C07B;">params</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">editFlags</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">canCopy</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">\`</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h6 id="_4-2-7-3-实例方法" tabindex="-1">4.2.7.3 实例方法 <a class="header-anchor" href="#_4-2-7-3-实例方法" aria-label="Permalink to &quot;4.2.7.3 实例方法&quot;">​</a></h6><ul><li>executeJavaScript()</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">wc</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;context-menu&quot;</span><span style="color:#ABB2BF;">, (</span><span style="color:#E06C75;font-style:italic;">e</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">params</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">	wc</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">executeJavaScript</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">\`alert(&#39;</span><span style="color:#C678DD;">\${</span><span style="color:#E5C07B;">params</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">selectionText</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">&#39;)\`</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="_4-3-dialog-对话框" tabindex="-1">4.3 dialog - 对话框 <a class="header-anchor" href="#_4-3-dialog-对话框" aria-label="Permalink to &quot;4.3 dialog - 对话框&quot;">​</a></h4><blockquote><p>显示用于打开和保存文件、警报等的本机系统对话框</p></blockquote><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">BrowserWindow</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">dialog</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;electron&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">mainWindow</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">webContents</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;did-finish-load&quot;</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">	dialog</span></span>
<span class="line"><span style="color:#ABB2BF;">		.</span><span style="color:#61AFEF;">showOpenDialog</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">			buttonLabel</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;选择&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">			defaultPath</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getPath</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;desktop&quot;</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#E06C75;">			properties</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#98C379;">				&quot;multiSelections&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">				&quot;createDirectory&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">				&quot;openFile&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">				&quot;openDirectory&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">			],</span></span>
<span class="line"><span style="color:#ABB2BF;">		})</span></span>
<span class="line"><span style="color:#ABB2BF;">		.</span><span style="color:#61AFEF;">then</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">result</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">			console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">result</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">filepaths</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">		});</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">dialog</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">showSaveDialog</span><span style="color:#ABB2BF;">({}).</span><span style="color:#61AFEF;">then</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">result</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">result</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">filePath</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> answers</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> [</span><span style="color:#98C379;">&quot;Yes&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;No&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;Maybe&quot;</span><span style="color:#ABB2BF;">];</span></span>
<span class="line"><span style="color:#E06C75;">dialog</span></span>
<span class="line"><span style="color:#ABB2BF;">	.</span><span style="color:#61AFEF;">showMessageBox</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">		title</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;Message Box&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		message</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;Please select an option&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		detail</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;Message details.&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		buttons</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">answers</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">	})</span></span>
<span class="line"><span style="color:#ABB2BF;">	.</span><span style="color:#61AFEF;">then</span><span style="color:#ABB2BF;">(({ </span><span style="color:#E06C75;font-style:italic;">response</span><span style="color:#ABB2BF;"> }) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">		console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">\`User selected: </span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">answers</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">response</span><span style="color:#ABB2BF;">]</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">\`</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">	});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h4 id="_4-4-快捷键-系统快捷键" tabindex="-1">4.4 快捷键+系统快捷键 <a class="header-anchor" href="#_4-4-快捷键-系统快捷键" aria-label="Permalink to &quot;4.4 快捷键+系统快捷键&quot;">​</a></h4><blockquote><p><strong>快捷键</strong>：定义键盘快捷键。 <strong>系统快捷键</strong>：在应用程序没有键盘焦点时，监听键盘事件。</p></blockquote><p>快捷键可以包含多个功能键和一个键码的字符串，由符号+结合，用来定义你应用中的键盘快捷键</p><p>示例：</p><ul><li>CommandOrControl+A</li><li>CommandOrControl+Shift+Z</li></ul><p>快捷方式使用 register 方法在 globalShortcut 模块中注册。</p><p>globalShortcut 模块可以在操作系统中注册/注销全局快捷键, 以便可以为操作定制各种快捷键。</p><p>注意: 快捷方式是全局的; 即使应用程序没有键盘焦点, 它也仍然在持续监听键盘事件。 在应用程序模块发出 ready 事件之前, 不应使用此模块。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">BrowserWindow</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">globalShortcut</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;electron&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">globalShortcut</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">register</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;G&quot;</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;User pressed G&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">globalShortcut</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">register</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;CommandOrControl+Y&quot;</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;User pressed G with a combination key&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">	globalShortcut</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">unregister</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;CommandOrControl+G&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="_4-5-menu" tabindex="-1">4.5 Menu <a class="header-anchor" href="#_4-5-menu" aria-label="Permalink to &quot;4.5 Menu&quot;">​</a></h4><h5 id="_4-5-1-index-html" tabindex="-1">4.5.1 index.html <a class="header-anchor" href="#_4-5-1-index-html" aria-label="Permalink to &quot;4.5.1 index.html&quot;">​</a></h5><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;!</span><span style="color:#E06C75;">DOCTYPE</span><span style="color:#D19A66;"> html</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">html</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">meta</span><span style="color:#D19A66;"> charset</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;UTF-8&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">meta</span></span>
<span class="line"><span style="color:#D19A66;">			http-equiv</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;Content-Security-Policy&quot;</span></span>
<span class="line"><span style="color:#D19A66;">			content</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;script-src &#39;self&#39; &#39;unsafe-inline&#39;&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">		/&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;Hello World!&lt;/</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;/</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">h1</span><span style="color:#ABB2BF;">&gt;Hello World!&lt;/</span><span style="color:#E06C75;">h1</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">textarea</span><span style="color:#D19A66;"> name</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;name&quot;</span><span style="color:#D19A66;"> rows</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;8&quot;</span><span style="color:#D19A66;"> cols</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;80&quot;</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">textarea</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		&lt;!-- All of the Node.js APIs are available in this renderer process. --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		We are using Node.js</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">strong</span></span>
<span class="line"><span style="color:#ABB2BF;">			&gt;&lt;</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#E5C07B;">				document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">versions</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">node</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">			&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">strong</span></span>
<span class="line"><span style="color:#ABB2BF;">		&gt;, and Electron</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">strong</span></span>
<span class="line"><span style="color:#ABB2BF;">			&gt;&lt;</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#E5C07B;">				document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">versions</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">electron</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">			&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">strong</span></span>
<span class="line"><span style="color:#ABB2BF;">		&gt;.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// You can also require other files to run in this process</span></span>
<span class="line"><span style="color:#61AFEF;">			require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;./renderer.js&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;/</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">html</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><h5 id="_4-5-2-main-js" tabindex="-1">4.5.2 main.js <a class="header-anchor" href="#_4-5-2-main-js" aria-label="Permalink to &quot;4.5.2 main.js&quot;">​</a></h5><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// Modules</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">BrowserWindow</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">Menu</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">MenuItem</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;electron&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Keep a global reference of the window object, if you don&#39;t, the window will</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// be closed automatically when the JavaScript object is garbage collected.</span></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> mainWindow</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> mainMenu</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> Menu</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">buildFromTemplate</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;./mainMenu&quot;</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Create a new BrowserWindow when \`app\` is ready</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> createWindow</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E06C75;">	mainWindow</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> BrowserWindow</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">		width</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">1000</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		height</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">800</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		webPreferences</span><span style="color:#ABB2BF;">: { </span><span style="color:#E06C75;">nodeIntegration</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;"> },</span></span>
<span class="line"><span style="color:#ABB2BF;">	});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// Load index.html into the new BrowserWindow</span></span>
<span class="line"><span style="color:#E5C07B;">	mainWindow</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">loadFile</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;index.html&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// Open DevTools - Remove for PRODUCTION!</span></span>
<span class="line"><span style="color:#E5C07B;">	mainWindow</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">webContents</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">openDevTools</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">	Menu</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setApplicationMenu</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">mainMenu</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// Listen for window being closed</span></span>
<span class="line"><span style="color:#E5C07B;">	mainWindow</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;closed&quot;</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">		mainWindow</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> null</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">	});</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Electron \`app\` is ready</span></span>
<span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;ready&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">createWindow</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Quit when all windows are closed - (Not macOS - Darwin)</span></span>
<span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;window-all-closed&quot;</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">	if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">platform</span><span style="color:#56B6C2;"> !==</span><span style="color:#98C379;"> &quot;darwin&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">quit</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// When app icon is clicked and app is running, (macOS) recreate the BrowserWindow</span></span>
<span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;activate&quot;</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">	if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">mainWindow</span><span style="color:#56B6C2;"> ===</span><span style="color:#D19A66;"> null</span><span style="color:#ABB2BF;">) </span><span style="color:#61AFEF;">createWindow</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br></div></div><h5 id="_4-5-3-mainmenu-js" tabindex="-1">4.5.3 mainMenu.js <a class="header-anchor" href="#_4-5-3-mainmenu-js" aria-label="Permalink to &quot;4.5.3 mainMenu.js&quot;">​</a></h5><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> [</span></span>
<span class="line"><span style="color:#ABB2BF;">	{</span></span>
<span class="line"><span style="color:#E06C75;">		label</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;Electron&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		submenu</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#ABB2BF;">			{ </span><span style="color:#E06C75;">label</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;Item 1&quot;</span><span style="color:#ABB2BF;"> },</span></span>
<span class="line"><span style="color:#ABB2BF;">			{ </span><span style="color:#E06C75;">label</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;Item 2&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">submenu</span><span style="color:#ABB2BF;">: [{ </span><span style="color:#E06C75;">label</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;Sub Item 1&quot;</span><span style="color:#ABB2BF;"> }] },</span></span>
<span class="line"><span style="color:#ABB2BF;">			{ </span><span style="color:#E06C75;">label</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;Item 3&quot;</span><span style="color:#ABB2BF;"> },</span></span>
<span class="line"><span style="color:#ABB2BF;">		],</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#ABB2BF;">	{</span></span>
<span class="line"><span style="color:#E06C75;">		label</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;Edit&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		submenu</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#ABB2BF;">			{ </span><span style="color:#E06C75;">role</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;undo&quot;</span><span style="color:#ABB2BF;"> },</span></span>
<span class="line"><span style="color:#ABB2BF;">			{ </span><span style="color:#E06C75;">role</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;redo&quot;</span><span style="color:#ABB2BF;"> },</span></span>
<span class="line"><span style="color:#ABB2BF;">			{ </span><span style="color:#E06C75;">role</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;copy&quot;</span><span style="color:#ABB2BF;"> },</span></span>
<span class="line"><span style="color:#ABB2BF;">			{ </span><span style="color:#E06C75;">role</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;paste&quot;</span><span style="color:#ABB2BF;"> },</span></span>
<span class="line"><span style="color:#ABB2BF;">		],</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#ABB2BF;">	{</span></span>
<span class="line"><span style="color:#E06C75;">		label</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;Actions&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		submenu</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#ABB2BF;">			{</span></span>
<span class="line"><span style="color:#E06C75;">				label</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;DevTools&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">				role</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;toggleDevTools&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">			},</span></span>
<span class="line"><span style="color:#ABB2BF;">			{</span></span>
<span class="line"><span style="color:#E06C75;">				role</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;toggleFullScreen&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">			},</span></span>
<span class="line"><span style="color:#ABB2BF;">			{</span></span>
<span class="line"><span style="color:#E06C75;">				label</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;Greet&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#61AFEF;">				click</span><span style="color:#ABB2BF;">: () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">					console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;Hello from Main Menu&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">				},</span></span>
<span class="line"><span style="color:#E06C75;">				accelerator</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;Shift+Alt+G&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">			},</span></span>
<span class="line"><span style="color:#ABB2BF;">		],</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#ABB2BF;">];</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><h4 id="_4-6-context-menus" tabindex="-1">4.6 Context Menus <a class="header-anchor" href="#_4-6-context-menus" aria-label="Permalink to &quot;4.6 Context Menus&quot;">​</a></h4><h5 id="_4-6-1-index-html" tabindex="-1">4.6.1 index.html <a class="header-anchor" href="#_4-6-1-index-html" aria-label="Permalink to &quot;4.6.1 index.html&quot;">​</a></h5><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;!</span><span style="color:#E06C75;">DOCTYPE</span><span style="color:#D19A66;"> html</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">html</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">meta</span><span style="color:#D19A66;"> charset</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;UTF-8&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">meta</span></span>
<span class="line"><span style="color:#D19A66;">			http-equiv</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;Content-Security-Policy&quot;</span></span>
<span class="line"><span style="color:#D19A66;">			content</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;script-src &#39;self&#39; &#39;unsafe-inline&#39;&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">		/&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;Hello World!&lt;/</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;/</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">h1</span><span style="color:#ABB2BF;">&gt;Hello World!&lt;/</span><span style="color:#E06C75;">h1</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">textarea</span><span style="color:#D19A66;"> name</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;name&quot;</span><span style="color:#D19A66;"> rows</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;8&quot;</span><span style="color:#D19A66;"> cols</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;80&quot;</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">textarea</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		&lt;!-- All of the Node.js APIs are available in this renderer process. --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">		We are using Node.js</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">strong</span></span>
<span class="line"><span style="color:#ABB2BF;">			&gt;&lt;</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#E5C07B;">				document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">versions</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">node</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">			&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">strong</span></span>
<span class="line"><span style="color:#ABB2BF;">		&gt;, and Electron</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">strong</span></span>
<span class="line"><span style="color:#ABB2BF;">			&gt;&lt;</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#E5C07B;">				document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">versions</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">electron</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">			&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">strong</span></span>
<span class="line"><span style="color:#ABB2BF;">		&gt;.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// You can also require other files to run in this process</span></span>
<span class="line"><span style="color:#61AFEF;">			require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;./renderer.js&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">		&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;/</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">html</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><h5 id="_4-6-2-main-js" tabindex="-1">4.6.2 main.js <a class="header-anchor" href="#_4-6-2-main-js" aria-label="Permalink to &quot;4.6.2 main.js&quot;">​</a></h5><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// Modules</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">BrowserWindow</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">Menu</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;electron&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Keep a global reference of the window object, if you don&#39;t, the window will</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// be closed automatically when the JavaScript object is garbage collected.</span></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> mainWindow</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> contextMenu</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> Menu</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">buildFromTemplate</span><span style="color:#ABB2BF;">([</span></span>
<span class="line"><span style="color:#ABB2BF;">	{ </span><span style="color:#E06C75;">label</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;Item 1&quot;</span><span style="color:#ABB2BF;"> },</span></span>
<span class="line"><span style="color:#ABB2BF;">	{ </span><span style="color:#E06C75;">role</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;editMenu&quot;</span><span style="color:#ABB2BF;"> },</span></span>
<span class="line"><span style="color:#ABB2BF;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Create a new BrowserWindow when \`app\` is ready</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> createWindow</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E06C75;">	mainWindow</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> BrowserWindow</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">		width</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">1000</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		height</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">800</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		webPreferences</span><span style="color:#ABB2BF;">: { </span><span style="color:#E06C75;">nodeIntegration</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;"> },</span></span>
<span class="line"><span style="color:#ABB2BF;">	});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// Load index.html into the new BrowserWindow</span></span>
<span class="line"><span style="color:#E5C07B;">	mainWindow</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">loadFile</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;index.html&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// Open DevTools - Remove for PRODUCTION!</span></span>
<span class="line"><span style="color:#E5C07B;">	mainWindow</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">webContents</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">openDevTools</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">	mainWindow</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">webContents</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;context-menu&quot;</span><span style="color:#ABB2BF;">, (</span><span style="color:#E06C75;font-style:italic;">e</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">		contextMenu</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">popup</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">	});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// Listen for window being closed</span></span>
<span class="line"><span style="color:#E5C07B;">	mainWindow</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;closed&quot;</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">		mainWindow</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> null</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">	});</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Electron \`app\` is ready</span></span>
<span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;ready&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">createWindow</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Quit when all windows are closed - (Not macOS - Darwin)</span></span>
<span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;window-all-closed&quot;</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">	if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">platform</span><span style="color:#56B6C2;"> !==</span><span style="color:#98C379;"> &quot;darwin&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">quit</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// When app icon is clicked and app is running, (macOS) recreate the BrowserWindow</span></span>
<span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;activate&quot;</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">	if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">mainWindow</span><span style="color:#56B6C2;"> ===</span><span style="color:#D19A66;"> null</span><span style="color:#ABB2BF;">) </span><span style="color:#61AFEF;">createWindow</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br></div></div><h4 id="_4-7-tray-托盘" tabindex="-1">4.7 Tray (托盘) <a class="header-anchor" href="#_4-7-tray-托盘" aria-label="Permalink to &quot;4.7 Tray (托盘)&quot;">​</a></h4><h5 id="_4-7-1-main-js" tabindex="-1">4.7.1 main.js <a class="header-anchor" href="#_4-7-1-main-js" aria-label="Permalink to &quot;4.7.1 main.js&quot;">​</a></h5><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// Modules</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">BrowserWindow</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">Tray</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">Menu</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;electron&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Keep a global reference of the window object, if you don&#39;t, the window will</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// be closed automatically when the JavaScript object is garbage collected.</span></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> mainWindow</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">tray</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> trayMenu</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> Menu</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">buildFromTemplate</span><span style="color:#ABB2BF;">([{ </span><span style="color:#E06C75;">label</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;Item 1&quot;</span><span style="color:#ABB2BF;"> }, { </span><span style="color:#E06C75;">role</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;quit&quot;</span><span style="color:#ABB2BF;"> }]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> createTray</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E06C75;">	tray</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Tray</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;trayTemplate@2x.png&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">	tray</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setToolTip</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;Tray details&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">	tray</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;click&quot;</span><span style="color:#ABB2BF;">, (</span><span style="color:#E06C75;font-style:italic;">e</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">		if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">e</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">shiftKey</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">			app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">quit</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">		} </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">			mainWindow</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">isVisible</span><span style="color:#ABB2BF;">() </span><span style="color:#C678DD;">?</span><span style="color:#E5C07B;"> mainWindow</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">hide</span><span style="color:#ABB2BF;">() </span><span style="color:#C678DD;">:</span><span style="color:#E5C07B;"> mainWindow</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">show</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">		}</span></span>
<span class="line"><span style="color:#ABB2BF;">	});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">	tray</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setContextMenu</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">trayMenu</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Create a new BrowserWindow when \`app\` is ready</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> createWindow</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#61AFEF;">	createTray</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">	mainWindow</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> BrowserWindow</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">		width</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">1000</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		height</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">800</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		webPreferences</span><span style="color:#ABB2BF;">: { </span><span style="color:#E06C75;">nodeIntegration</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;"> },</span></span>
<span class="line"><span style="color:#ABB2BF;">	});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// Load index.html into the new BrowserWindow</span></span>
<span class="line"><span style="color:#E5C07B;">	mainWindow</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">loadFile</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;index.html&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// Open DevTools - Remove for PRODUCTION!</span></span>
<span class="line"><span style="color:#E5C07B;">	mainWindow</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">webContents</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">openDevTools</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// Listen for window being closed</span></span>
<span class="line"><span style="color:#E5C07B;">	mainWindow</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;closed&quot;</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">		mainWindow</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> null</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">	});</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Electron \`app\` is ready</span></span>
<span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;ready&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">createWindow</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Quit when all windows are closed - (Not macOS - Darwin)</span></span>
<span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;window-all-closed&quot;</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">	if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">platform</span><span style="color:#56B6C2;"> !==</span><span style="color:#98C379;"> &quot;darwin&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">quit</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// When app icon is clicked and app is running, (macOS) recreate the BrowserWindow</span></span>
<span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;activate&quot;</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">	if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">mainWindow</span><span style="color:#56B6C2;"> ===</span><span style="color:#D19A66;"> null</span><span style="color:#ABB2BF;">) </span><span style="color:#61AFEF;">createWindow</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br></div></div><h3 id="_5、渲染进程" tabindex="-1">5、渲染进程 <a class="header-anchor" href="#_5、渲染进程" aria-label="Permalink to &quot;5、渲染进程&quot;">​</a></h3><h4 id="_5-1-clipboard" tabindex="-1">5.1 clipboard <a class="header-anchor" href="#_5-1-clipboard" aria-label="Permalink to &quot;5.1 clipboard&quot;">​</a></h4><blockquote><p>在系统剪贴板上进行复制和粘贴操作。</p><p>在主进程（main process）和渲染进程（renderer process）上均可用。</p></blockquote><h5 id="_5-1-1-readtext" tabindex="-1">5.1.1 <code>readText()</code> <a class="header-anchor" href="#_5-1-1-readtext" aria-label="Permalink to &quot;5.1.1 \`readText()\`&quot;">​</a></h5><p>返回字符串 - 剪贴板中的内容为纯文本。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">clipboard</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;electron&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">clipboard</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">writeText</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;千锋教育HTML5大前端!&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> text</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> clipboard</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">readText</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">text</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// hello i am a bit of text!&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h5 id="_5-1-2-writetext-text" tabindex="-1">5.1.2 <code>writeText(text)</code> <a class="header-anchor" href="#_5-1-2-writetext-text" aria-label="Permalink to &quot;5.1.2 \`writeText(text)\`&quot;">​</a></h5><p>将文本作为纯文本写进剪贴板。</p><h4 id="_5-2-contextbridge" tabindex="-1">5.2 contextBridge <a class="header-anchor" href="#_5-2-contextbridge" aria-label="Permalink to &quot;5.2 contextBridge&quot;">​</a></h4><blockquote><p>创建一个安全的、双向的、跨越隔离情境的同步桥梁。</p><p>只在渲染进程（renderer pocess）中可用。</p></blockquote><h4 id="_5-3-desktopcapturer" tabindex="-1">5.3 desktopCapturer <a class="header-anchor" href="#_5-3-desktopcapturer" aria-label="Permalink to &quot;5.3 desktopCapturer&quot;">​</a></h4><blockquote><p>使用 navigator.mediaDevices.getUserMedia API 访问可用于从桌面捕获音频和视频的媒体源信息。</p><p>只在主进程（main process）可用。</p></blockquote><p>下面的例子显示了如何从一个标题为 Electron 的桌面窗口捕捉图像：</p><ul><li>在主进程里</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// ./controller/getSource.js</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">desktopCapturer</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">ipcMain</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;electron&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#61AFEF;"> getSource</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">mainWindow</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">	ipcMain</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">handle</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;desktop-capturer&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">async</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">event</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">		desktopCapturer</span></span>
<span class="line"><span style="color:#ABB2BF;">			.</span><span style="color:#61AFEF;">getSources</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">				types</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;window&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;screen&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#E06C75;">				thumbnailSize</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">					width</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">1728</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">					height</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">1117</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">				},</span></span>
<span class="line"><span style="color:#ABB2BF;">			})</span></span>
<span class="line"><span style="color:#ABB2BF;">			.</span><span style="color:#61AFEF;">then</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">async</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">sources</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">				for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> source</span><span style="color:#C678DD;"> of</span><span style="color:#E06C75;"> sources</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">					if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">source</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">name</span><span style="color:#56B6C2;"> ===</span><span style="color:#98C379;"> &quot;Entire Screen&quot;</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">						mainWindow</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">webContents</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">send</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;SET_SOURCE&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">source</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">						return</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">					}</span></span>
<span class="line"><span style="color:#ABB2BF;">				}</span></span>
<span class="line"><span style="color:#ABB2BF;">			});</span></span>
<span class="line"><span style="color:#ABB2BF;">	});</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> getSource</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// ./main.js</span></span>
<span class="line"><span style="color:#61AFEF;">getSource</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">win</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><ul><li>在预处理 JS 里</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// ./preload-js/setSource.js</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">ipcRenderer</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;electron&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#61AFEF;"> setSource</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">	return</span><span style="color:#C678DD;"> new</span><span style="color:#E5C07B;"> Promise</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">resolve</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">		ipcRenderer</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;SET_SOURCE&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">async</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">event</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">source</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">			let</span><span style="color:#E06C75;"> str</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> source</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">thumbnail</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">crop</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">				x</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">				y</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">30</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">				width</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">1200</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">				height</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">1170</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">			});</span></span>
<span class="line"><span style="color:#61AFEF;">			resolve</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">str</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">toDataURL</span><span style="color:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#ABB2BF;">		});</span></span>
<span class="line"><span style="color:#ABB2BF;">	});</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#61AFEF;"> invokeCaptureEvent</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> async</span><span style="color:#ABB2BF;"> () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">	const</span><span style="color:#E5C07B;"> result</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> await</span><span style="color:#E5C07B;"> ipcRenderer</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">invoke</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;desktop-capturer&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">	return</span><span style="color:#E06C75;"> result</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">	setSource</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">	invokeCaptureEvent</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// ./preload-js/index.js</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">setSource</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">invokeCaptureEvent</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;./setSource&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">contextBridge</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">exposeInMainWorld</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;myAPI&quot;</span><span style="color:#ABB2BF;">, {</span></span>
<span class="line"><span style="color:#E06C75;">	setSource</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">	invokeCaptureEvent</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><ul><li>在渲染进程页面里</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> app</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">createApp</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">	template</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">\`</span></span>
<span class="line"><span style="color:#98C379;">    &lt;div&gt;</span></span>
<span class="line"><span style="color:#98C379;">      &lt;button @click=&quot;captureDesk&quot;&gt;抓取桌面&lt;/button&gt;</span></span>
<span class="line"><span style="color:#98C379;">    &lt;/div&gt;</span></span>
<span class="line"><span style="color:#98C379;">    &lt;div&gt;</span></span>
<span class="line"><span style="color:#98C379;">      &lt;img :src=&quot;imgSrc&quot; alt=&quot;&quot; /&gt;</span></span>
<span class="line"><span style="color:#98C379;">    &lt;/div&gt;</span></span>
<span class="line"><span style="color:#98C379;">  \`</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">	data</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">		return</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">			imgSrc</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">		};</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">	methods</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#C678DD;">		async</span><span style="color:#61AFEF;"> captureDesk</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">			const</span><span style="color:#E5C07B;"> result</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> await</span><span style="color:#E5C07B;"> myAPI</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">invokeCaptureEvent</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">		},</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">	async</span><span style="color:#61AFEF;"> beforeCreate</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">		let</span><span style="color:#E06C75;"> imgDataUrl</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> await</span><span style="color:#E5C07B;"> myAPI</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setSource</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">		this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">imgSrc</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> imgDataUrl</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">mount</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;#root&quot;</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><h4 id="_5-4-ipcrenderer" tabindex="-1">5.4 ipcRenderer <a class="header-anchor" href="#_5-4-ipcrenderer" aria-label="Permalink to &quot;5.4 ipcRenderer&quot;">​</a></h4><blockquote><p>从一个渲染器进程到主进程的异步通信。</p><p>只在渲染进程（renderer pocess）中可用。</p></blockquote><h4 id="_5-5-nativeimage" tabindex="-1">5.5 nativeImage <a class="header-anchor" href="#_5-5-nativeimage" aria-label="Permalink to &quot;5.5 nativeImage&quot;">​</a></h4><blockquote><p>使用 PNG 或 JPG 文件创建托盘、停靠区和应用程序图标。</p><p>在主进程（main process）和渲染进程（renderer process）上均可用。</p></blockquote><p>在 Electron 中，对于接受图像的 API，你可以传递文件路径或 NativeImage 实例。当传递 null 时，将使用一个空的图像。</p><p>例如，在创建一个托盘或设置一个窗口的图标时，你可以把图像文件路径作为一个字符串传递。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">BrowserWindow</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">Tray</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;electron&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> appIcon</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Tray</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;./images/icon.png&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> win</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> BrowserWindow</span><span style="color:#ABB2BF;">({ </span><span style="color:#E06C75;">icon</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;./images/window.png&quot;</span><span style="color:#ABB2BF;"> });</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">appIcon</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">win</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>或者从剪贴板上读取图像，返回一个 NativeImage。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">clipboard</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">Tray</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;electron&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> image</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> clipboard</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">readImage</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> appIcon</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Tray</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">image</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">appIcon</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h5 id="_5-5-1-支持的格式" tabindex="-1">5.5.1 支持的格式 <a class="header-anchor" href="#_5-5-1-支持的格式" aria-label="Permalink to &quot;5.5.1 支持的格式&quot;">​</a></h5><p>目前支持 PNG 和 JPEG 图像格式。建议使用 PNG，因为它支持透明度和无损压缩。</p><p>在 Windows 上，你也可以从文件路径加载 ICO 图标。为了获得最佳的视觉质量，建议至少包括以下尺寸的文件。</p><ul><li>Small icon <ul><li>16x16 (100% DPI scale)</li><li>20x20 (125% DPI scale)</li><li>24x24 (150% DPI scale)</li><li>32x32 (200% DPI scale)</li></ul></li><li>Large icon <ul><li>32x32 (100% DPI scale)</li><li>40x40 (125% DPI scale)</li><li>48x48 (150% DPI scale)</li><li>64x64 (200% DPI scale)</li><li>256x256</li></ul></li></ul><h5 id="_5-5-2-高分辨率图像" tabindex="-1">5.5.2 高分辨率图像 <a class="header-anchor" href="#_5-5-2-高分辨率图像" aria-label="Permalink to &quot;5.5.2 高分辨率图像&quot;">​</a></h5><p>在支持高 DPI 的平台上，如苹果 Retina 显示器，你可以在图像的基本文件名后附加@2x 来标记它为高分辨率的图像。</p><p>例如，如果 icon.png 是一个具有标准分辨率的普通图像，那么icon@2x.png，将被视为具有双倍 DPI 密度的高分辨率图像。</p><p>如果你想同时支持不同 DPI 密度的显示器，你可以把不同尺寸的图像放在同一个文件夹里，使用不带 DPI 后缀的文件名。例如：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E06C75;">images</span><span style="color:#56B6C2;">/</span></span>
<span class="line"><span style="color:#ABB2BF;">├── </span><span style="color:#E5C07B;">icon</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">png</span></span>
<span class="line"><span style="color:#ABB2BF;">├── </span><span style="color:#E06C75;">icon</span><span style="color:#ABB2BF;">@2</span><span style="color:#E5C07B;">x</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">png</span></span>
<span class="line"><span style="color:#ABB2BF;">└── </span><span style="color:#E06C75;">icon</span><span style="color:#ABB2BF;">@3</span><span style="color:#E5C07B;">x</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">png</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">Tray</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;electron&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> appIcon</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Tray</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;./images/icon.png&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">appIcon</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>还支持以下 DPI 的后缀：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">@1x</span></span>
<span class="line"><span style="color:#61AFEF;">@1.25x</span></span>
<span class="line"><span style="color:#61AFEF;">@1.33x</span></span>
<span class="line"><span style="color:#61AFEF;">@1.4x</span></span>
<span class="line"><span style="color:#61AFEF;">@1.5x</span></span>
<span class="line"><span style="color:#61AFEF;">@1.8x</span></span>
<span class="line"><span style="color:#61AFEF;">@2x</span></span>
<span class="line"><span style="color:#61AFEF;">@2.5x</span></span>
<span class="line"><span style="color:#61AFEF;">@3x</span></span>
<span class="line"><span style="color:#61AFEF;">@4x</span></span>
<span class="line"><span style="color:#61AFEF;">@5x</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h5 id="_5-5-3-方法" tabindex="-1">5.5.3 方法 <a class="header-anchor" href="#_5-5-3-方法" aria-label="Permalink to &quot;5.5.3 方法&quot;">​</a></h5><ul><li><h3 id="nativeimage-createempty" tabindex="-1"><code>nativeImage.createEmpty()</code> <a class="header-anchor" href="#nativeimage-createempty" aria-label="Permalink to &quot;\`nativeImage.createEmpty()\`&quot;">​</a></h3></li><li><h3 id="nativeimage-createfrompath-path" tabindex="-1"><code>nativeImage.createFromPath(path)</code> <a class="header-anchor" href="#nativeimage-createfrompath-path" aria-label="Permalink to &quot;\`nativeImage.createFromPath(path)\`&quot;">​</a></h3></li></ul><p>返回 <code>NativeImage</code></p><p>从位于路径的文件中创建一个新的 NativeImage 实例。如果路径不存在，不能被读取，或者不是一个有效的图像，该方法将返回一个空图像。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> nativeImage</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;electron&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#E06C75;">nativeImage</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> image</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> nativeImage</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">createFromPath</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;/Users/somebody/images/icon.png&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">image</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li><h3 id="nativeimage-createfromdataurl-dataurl" tabindex="-1"><code>nativeImage.createFromDataURL(dataURL)</code> <a class="header-anchor" href="#nativeimage-createfromdataurl-dataurl" aria-label="Permalink to &quot;\`nativeImage.createFromDataURL(dataURL)\`&quot;">​</a></h3></li></ul><h4 id="_5-5-4-class-nativeimage" tabindex="-1">5.5.4 Class: NativeImage <a class="header-anchor" href="#_5-5-4-class-nativeimage" aria-label="Permalink to &quot;5.5.4 Class: NativeImage&quot;">​</a></h4><p>自然地包裹图像，如托盘、停靠区和应用程序图标。</p><p>在主进程（main process）和渲染进程（renderer process）上均可用。</p><p>实例方法：</p><ul><li><h4 id="image-topng-options" tabindex="-1"><code>image.toPNG([options])</code> <a class="header-anchor" href="#image-topng-options" aria-label="Permalink to &quot;\`image.toPNG([options])\`&quot;">​</a></h4></li><li><h4 id="image-tojpeg-quality" tabindex="-1"><code>image.toJPEG(quality)</code> <a class="header-anchor" href="#image-tojpeg-quality" aria-label="Permalink to &quot;\`image.toJPEG(quality)\`&quot;">​</a></h4></li><li><h4 id="image-todataurl-options" tabindex="-1"><code>image.toDataURL([options])</code> <a class="header-anchor" href="#image-todataurl-options" aria-label="Permalink to &quot;\`image.toDataURL([options])\`&quot;">​</a></h4></li><li><h4 id="image-getsize-scalefactor" tabindex="-1"><code>image.getSize([scaleFactor])</code> <a class="header-anchor" href="#image-getsize-scalefactor" aria-label="Permalink to &quot;\`image.getSize([scaleFactor])\`&quot;">​</a></h4></li><li><h4 id="image-crop-rect" tabindex="-1"><code>image.crop(rect)</code> <a class="header-anchor" href="#image-crop-rect" aria-label="Permalink to &quot;\`image.crop(rect)\`&quot;">​</a></h4></li></ul><h3 id="electron-项目调试方法" tabindex="-1">electron 项目调试方法 <a class="header-anchor" href="#electron-项目调试方法" aria-label="Permalink to &quot;electron 项目调试方法&quot;">​</a></h3><h4 id="_1-窗口运行调试-顶部-view" tabindex="-1">1.窗口运行调试---顶部 view <a class="header-anchor" href="#_1-窗口运行调试-顶部-view" aria-label="Permalink to &quot;1.窗口运行调试---顶部 view&quot;">​</a></h4><ul><li>Toggle Developer Tools</li><li>快捷键：ctrl+shift+I</li></ul><h4 id="_2-主进程调试-谷歌浏览器-debug-调试" tabindex="-1">2.主进程调试：谷歌浏览器 debug 调试 <a class="header-anchor" href="#_2-主进程调试-谷歌浏览器-debug-调试" aria-label="Permalink to &quot;2.主进程调试：谷歌浏览器 debug 调试&quot;">​</a></h4><p>1、在 package.json 文件里&quot;script&quot;属性运行配置 start 的运行命令配置：在命令后面添加 --inspect=5858</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#98C379;"> &quot;scripts&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">    &quot;start&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;electron  --inspect=5858 .&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>2、谷歌浏览器网址栏目输入：chrome://inspect</p><p>3、点击浏览器页面的 “Devices” - “Configure...” 按钮</p><p>4、填写网址和端口-输入框中添加端口：<code>localhost:5858</code></p><p>5.Done 完成后等待连接</p><p>6.等待片刻 “Remote Target”标签下面会出现 “inspect” 点击调试</p><h4 id="_3-主进程调试-vscode-调试" tabindex="-1">3.主进程调试：VSCode 调试 <a class="header-anchor" href="#_3-主进程调试-vscode-调试" aria-label="Permalink to &quot;3.主进程调试：VSCode 调试&quot;">​</a></h4><p>vscode 界面点击最左边竖排小甲虫图标</p><p>打开或者创建 launch.json 文件</p><p>添加一个 .vscode/launch.json 文件并使用以下配置：</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;version&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;0.2.0&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;configurations&quot;</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#ABB2BF;">		{</span></span>
<span class="line"><span style="color:#E06C75;">			&quot;name&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;Debug Main Process&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">			&quot;type&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;node&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">			&quot;request&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;launch&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">			&quot;cwd&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;\${workspaceRoot}&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">			&quot;runtimeExecutable&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;\${workspaceRoot}/node_modules/.bin/electron&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">			&quot;windows&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">				&quot;runtimeExecutable&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;\${workspaceRoot}/node_modules/.bin/electron.cmd&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">			},</span></span>
<span class="line"><span style="color:#E06C75;">			&quot;args&quot;</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;.&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#E06C75;">			&quot;outputCapture&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;std&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">		}</span></span>
<span class="line"><span style="color:#ABB2BF;">	]</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>在虫子图标选项下：点击左边顶部绿色运行图标，自动运行项目，在 main.js 设定断点 便可以 调试 ，关闭启动的程序再查看断点信息</p><h2 id="二、vue3-electron19-项目" tabindex="-1">二、Vue3+Electron19 项目 <a class="header-anchor" href="#二、vue3-electron19-项目" aria-label="Permalink to &quot;二、Vue3+Electron19 项目&quot;">​</a></h2><p>解决方案</p><p>可以自动安装跨平台的编译器：gym</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> install</span><span style="color:#D19A66;"> -g</span><span style="color:#98C379;"> node-gyp</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> install</span><span style="color:#98C379;"> –global</span><span style="color:#98C379;"> –production</span><span style="color:#98C379;"> windows-build-tools</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="进程" tabindex="-1">进程 <a class="header-anchor" href="#进程" aria-label="Permalink to &quot;进程&quot;">​</a></h2><h3 id="主进程" tabindex="-1">主进程 <a class="header-anchor" href="#主进程" aria-label="Permalink to &quot;主进程&quot;">​</a></h3><ul><li><p>主进程：Electron 运行 package.json 的 main 脚本的进程被称为主进程。 在主进程中运行的脚本通过创建web页面来展示用户界面。 一个 Electron 应用总是有且只有一个主进程。</p></li><li><p>主进程调试</p><ul><li><p>主进程浏览器调试</p><ul><li><p>1.命令行开关：package.json配置</p><ul><li><p>--inspect=[port]</p></li><li><p>例如：electron --inspect=5858 your/app</p></li><li><p>&quot;scripts&quot;: { &quot;start&quot;: &quot;electron --inspect=5858 .&quot; },</p></li></ul></li><li><p>2.打开浏览器输入：chrome://inspect</p></li><li><p>3.点击浏览器 “Devices” - “Configure...” 按钮</p><ul><li><p>1.填写网址和端口</p><ul><li><p>localhost:5858</p></li><li><p>Done完成后等待连接</p></li></ul></li><li><p>2.等待片刻 “Remote Target ”标签下面会出现 “inspect” 点击调试</p></li></ul></li></ul></li><li><p>使用vs code调试：</p><ul><li><p>点击左边工具栏虫子图标</p></li><li><p>添加一个 .vscode/launch.json 文件并使用以下配置：</p></li><li><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{  </span><span style="color:#E06C75;">&quot;version&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;0.2.0&quot;</span><span style="color:#ABB2BF;">,  </span><span style="color:#E06C75;">&quot;configurations&quot;</span><span style="color:#ABB2BF;">: [    {      </span><span style="color:#E06C75;">&quot;name&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;Debug Main Process&quot;</span><span style="color:#ABB2BF;">,      </span><span style="color:#E06C75;">&quot;type&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;node&quot;</span><span style="color:#ABB2BF;">,      </span><span style="color:#E06C75;">&quot;request&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;launch&quot;</span><span style="color:#ABB2BF;">,      </span><span style="color:#E06C75;">&quot;cwd&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;\${workspaceRoot}&quot;</span><span style="color:#ABB2BF;">,      </span><span style="color:#E06C75;">&quot;runtimeExecutable&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;\${workspaceRoot}/node_modules/.bin/electron&quot;</span><span style="color:#ABB2BF;">,      </span><span style="color:#E06C75;">&quot;windows&quot;</span><span style="color:#ABB2BF;">: {        </span><span style="color:#E06C75;">&quot;runtimeExecutable&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;\${workspaceRoot}/node_modules/.bin/electron.cmd&quot;</span><span style="color:#ABB2BF;">      },      </span><span style="color:#E06C75;">&quot;args&quot;</span><span style="color:#ABB2BF;"> : [</span><span style="color:#98C379;">&quot;.&quot;</span><span style="color:#ABB2BF;">],      </span><span style="color:#E06C75;">&quot;outputCapture&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;std&quot;</span><span style="color:#ABB2BF;">    }  ] }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li></li><li><p>在虫子图标选项下：点击左边顶部绿色运行图标，自动运行项目，在main.js设定断点 便可以 调试 ，关闭启动的程序再查看断点信息</p></li></ul></li></ul></li></ul><h3 id="渲染进程" tabindex="-1">渲染进程 <a class="header-anchor" href="#渲染进程" aria-label="Permalink to &quot;渲染进程&quot;">​</a></h3><ul><li><p>渲染进程：用户所看到的web界面就是由渲染进程描绘出来的。包括html，css和js。</p></li><li><p>渲染进程的调试</p><ul><li>网页的调试</li></ul></li></ul><h2 id="app常用事件和方法" tabindex="-1">app常用事件和方法 <a class="header-anchor" href="#app常用事件和方法" aria-label="Permalink to &quot;app常用事件和方法&quot;">​</a></h2><ul><li><p>文档地址：</p><ul><li><a href="https://www.electronjs.org/zh/docs/latest/api/app" target="_blank" rel="noreferrer">https://www.electronjs.org/zh/docs/latest/api/app</a></li></ul></li><li><p>Main Process 模块</p></li><li><p>Renderer Process 模块</p></li><li><p>自定义 DOM 元素</p></li><li><p>Chromium 和 Node.js</p></li><li><p>类</p></li><li><p>API 结构</p></li></ul><h2 id="开发踩坑" tabindex="-1">开发踩坑 <a class="header-anchor" href="#开发踩坑" aria-label="Permalink to &quot;开发踩坑&quot;">​</a></h2><ul><li><p>浏览器安全策略eval()阻止报错</p><ul><li>把标签onclick事件，改成获取id.addEventListener(&quot;click&quot;,()=&gt;{})的方式监听事件</li></ul></li><li><p>process is not defined</p><ul><li><p>1.main.js文件 webPreferences:{}里面</p><ul><li><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E06C75;">webPreferences</span><span style="color:#ABB2BF;">: {      </span><span style="color:#E06C75;">preload</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">join</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">__dirname</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;preload.js&#39;</span><span style="color:#ABB2BF;">),      </span><span style="color:#7F848E;font-style:italic;">// 加上以下两句：解决问题：process is not defined      </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 才能使 require 和 process 等变量有效   </span></span>
<span class="line"><span style="color:#E06C75;">    nodeIntegration</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,      </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 上面还是报错就再添加这行</span></span>
<span class="line"><span style="color:#E06C75;">        contextIsolation</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">,    }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li><li></li></ul></li><li><p>​ nodeIntegration: true,</p><ul><li>​ // 才能使 require 和 process 等变量有效</li></ul></li><li><p>​ contextIsolation: false,</p><ul><li>​ // 上面还是报错就再添加这行</li></ul></li></ul></li></ul><h2 id="快速项目开发" tabindex="-1">快速项目开发 <a class="header-anchor" href="#快速项目开发" aria-label="Permalink to &quot;快速项目开发&quot;">​</a></h2><ul><li><p>electron-quick-start</p><ul><li><ol><li>克隆示例项目的仓库</li></ol><ul><li>git clone <a href="https://github.com/electron/electron-quick-start" target="_blank" rel="noreferrer">https://github.com/electron/electron-quick-start</a></li></ul></li><li><ol start="2"><li>进入这个仓库</li></ol><ul><li>cd electron-quick-start</li></ul></li><li><ol start="3"><li>安装依赖</li></ol><ul><li>npm install</li></ul></li><li><ol start="4"><li>运行</li></ol><ul><li>npm start</li></ul></li><li><p>如果下载比较慢的话，推荐使用淘宝镜像。</p><ul><li>npm config set ELECTRON_MIRROR <a href="https://npm.taobao.org/mirrors/electron/" target="_blank" rel="noreferrer">https://npm.taobao.org/mirrors/electron/</a></li></ul></li></ul></li><li><p>与Vue结合</p><ul><li><p>安装vue脚手架</p><ul><li>npm install -g vue-cli</li></ul></li><li><p>创建工程</p><ul><li>vue init simulatedgreg/electron-vue electron-vue-start</li></ul></li><li><p>进入工程安装依赖</p><ul><li>cd electron-vue-start</li></ul></li><li><p>yarn</p><ul><li><p>启动开发模式</p></li><li><p>yarn dev</p></li></ul></li><li><p>常见问题</p><ul><li>Windows无法编辑node-sass</li></ul></li><li><p>解决方案</p><ul><li><p>可以自动安装跨平台的编译器：gym</p></li><li><p>npm install -g node-gyp</p></li><li><p>npm install –global –production windows-build-tools</p></li></ul></li><li><p>打包命令</p><ul><li>yarn build</li></ul></li></ul></li><li><p>与react结合</p><ul><li><p>下载示例工程</p><ul><li><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> clone</span><span style="color:#D19A66;"> --depth</span><span style="color:#D19A66;"> 1</span><span style="color:#D19A66;"> --single-branch</span><span style="color:#D19A66;"> --branch</span><span style="color:#98C379;"> master</span><span style="color:#98C379;"> https://github.com/electron-react-boilerplate/electron-react-boilerplate.git</span><span style="color:#98C379;"> electron-react-start</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li></li></ul></li><li><p>进入工程安装依赖</p><ul><li>cd electron-react-start</li></ul></li><li><p>yarn</p><ul><li><p>启动开发模式</p></li><li><p>yarn dev</p></li></ul></li><li><p>可能出现的问题1： 网速太慢yarn总是不成功</p><ul><li><p>安装yrm并切换镜像</p></li><li><p>npm install yrm –g</p></li><li><p>查看所有镜像</p></li><li><p>yrm ls</p></li><li><p>切换镜像</p></li><li><p>yrm use taobao</p></li></ul></li><li><p>可能出现的问题2： 提示需要安装python</p><ul><li><p>下载并安装python2.7:</p></li><li><p><a href="https://www.python.org/download/releases/2.7/" target="_blank" rel="noreferrer">https://www.python.org/download/releases/2.7/</a></p></li></ul></li><li><p>打包命令</p><ul><li>yarn package</li></ul></li></ul></li></ul>`,315)]))}const F=n(o,[["render",t]]);export{b as __pageData,F as default};
