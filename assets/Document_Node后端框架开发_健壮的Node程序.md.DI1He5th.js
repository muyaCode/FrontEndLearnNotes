import{_ as e,c as t,o,ah as r}from"./chunks/framework.DqD713j2.js";const u=JSON.parse('{"title":"健壮的Node程序","description":"","frontmatter":{},"headers":[],"relativePath":"Document/Node后端框架开发/健壮的Node程序.md","filePath":"Document/Node后端框架开发/健壮的Node程序.md","lastUpdated":1750954157000}'),d={name:"Document/Node后端框架开发/健壮的Node程序.md"};function i(l,a,n,h,c,s){return o(),t("div",null,a[0]||(a[0]=[r('<h1 id="健壮的node程序" tabindex="-1">健壮的Node程序 <a class="header-anchor" href="#健壮的node程序" aria-label="Permalink to &quot;健壮的Node程序&quot;">​</a></h1><h2 id="错误和异常处理" tabindex="-1">错误和异常处理 <a class="header-anchor" href="#错误和异常处理" aria-label="Permalink to &quot;错误和异常处理&quot;">​</a></h2><h2 id="内存泄漏分析" tabindex="-1">内存泄漏分析 <a class="header-anchor" href="#内存泄漏分析" aria-label="Permalink to &quot;内存泄漏分析&quot;">​</a></h2><h3 id="内存泄漏工具" tabindex="-1">内存泄漏工具 <a class="header-anchor" href="#内存泄漏工具" aria-label="Permalink to &quot;内存泄漏工具&quot;">​</a></h3><ul><li>node-inspector</li><li>node-mtrace</li><li>node-heap-dump</li><li>node-memwattch</li></ul><h4 id="memwattch-工具使用" tabindex="-1">memwattch 工具使用 <a class="header-anchor" href="#memwattch-工具使用" aria-label="Permalink to &quot;memwattch 工具使用&quot;">​</a></h4><h4 id="gc内存分析" tabindex="-1">GC内存分析 <a class="header-anchor" href="#gc内存分析" aria-label="Permalink to &quot;GC内存分析&quot;">​</a></h4><h4 id="什么是gc" tabindex="-1">什么是GC <a class="header-anchor" href="#什么是gc" aria-label="Permalink to &quot;什么是GC&quot;">​</a></h4><h5 id="gc内存分析实践" tabindex="-1">GC内存分析实践 <a class="header-anchor" href="#gc内存分析实践" aria-label="Permalink to &quot;GC内存分析实践&quot;">​</a></h5><p>谷歌浏览器-开发者工具模式-Profiles选项-点击“Load”按钮-加载js文件</p>',10)]))}const _=e(d,[["render",i]]);export{u as __pageData,_ as default};
