import{_ as t,c as a,o as r,ah as l}from"./chunks/framework.DqD713j2.js";const u=JSON.parse('{"title":"Electron自动化测试","description":"","frontmatter":{},"headers":[],"relativePath":"Document/跨平台桌面端开发/Electron/Electron自动化测试.md","filePath":"Document/跨平台桌面端开发/Electron/Electron自动化测试.md","lastUpdated":1750954157000}'),o={name:"Document/跨平台桌面端开发/Electron/Electron自动化测试.md"};function n(i,e,s,c,p,h){return r(),a("div",null,e[0]||(e[0]=[l('<h1 id="electron自动化测试" tabindex="-1">Electron自动化测试 <a class="header-anchor" href="#electron自动化测试" aria-label="Permalink to &quot;Electron自动化测试&quot;">​</a></h1><p>官网文档：<a href="https://www.electronjs.org/zh/docs/latest/tutorial/automated-testing" target="_blank" rel="noreferrer">自动化测试 | Electron (electronjs.org)</a></p><h2 id="electron做端到端测试" tabindex="-1">Electron做端到端测试 <a class="header-anchor" href="#electron做端到端测试" aria-label="Permalink to &quot;Electron做端到端测试&quot;">​</a></h2><ul><li><p>1.安装驱动：</p></li><li><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> install</span><span style="color:#98C379;"> spectron</span><span style="color:#D19A66;"> --save-dev--chromedriver_cdnurl=http://cdn.npm.taobao.org/dist/chromedriver</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p>2.选择喜欢的测试框架+工具</p><ul><li>ava</li><li>mocha + chai</li></ul></li><li><p>3.在项目根目录创建test目录</p></li><li><p>4.在package.json加入test命令</p></li></ul><h2 id="自动化测试组成" tabindex="-1">自动化测试组成 <a class="header-anchor" href="#自动化测试组成" aria-label="Permalink to &quot;自动化测试组成&quot;">​</a></h2><ul><li>1.测试前准备 <ul><li>数据Mock</li><li>上下文准备</li></ul></li><li>2.测试用例描述(这个测试的是什么) + 行为(做什么事) + 断言(得到什么结果)</li><li>3.测试后处理 <ul><li>清理Mock的数据</li><li>上下文准备的清理</li></ul></li></ul><h2 id="自定义驱动" tabindex="-1">自定义驱动 <a class="header-anchor" href="#自定义驱动" aria-label="Permalink to &quot;自定义驱动&quot;">​</a></h2><p>官网文档：</p><ul><li><a href="https://www.electronjs.org/zh/docs/latest/tutorial/automated-testing-with-a-custom-driver" target="_blank" rel="noreferrer">使用自定义驱动程序进行自动化测试 | Electron (electronjs.org)</a></li><li><a href="https://www.electronjs.org/zh/docs/latest/tutorial/automated-testing#%E4%BD%BF%E7%94%A8%E8%87%AA%E5%AE%9A%E4%B9%89%E6%B5%8B%E8%AF%95%E9%A9%B1%E5%8A%A8" target="_blank" rel="noreferrer">自动化测试--自定义驱动 | Electron (electronjs.org)</a></li></ul><p>例子：VSCode：<a href="https://github.com/microsoft/vscode/pull/47471" target="_blank" rel="noreferrer">https://github.com/microsoft/vscode/pull/47471</a></p><p>优点：性能、稳定性可控、自定义方法</p><h2 id="使用-playwright库" tabindex="-1">使用 Playwright库 <a class="header-anchor" href="#使用-playwright库" aria-label="Permalink to &quot;使用 Playwright库&quot;">​</a></h2><p>请看上面的：【😉爬虫和Web自动化测试/playwright的入门和使用】 有相关使用笔记教程，参考web自动化爬虫</p><h2 id="延伸资料" tabindex="-1">延伸资料 <a class="header-anchor" href="#延伸资料" aria-label="Permalink to &quot;延伸资料&quot;">​</a></h2><ul><li>使用自定义驱动程序进行自动化测试：<a href="https://www.electronjs.org/zh/docs/latest/tutorial/automated-testing-with-a-custom-driver" target="_blank" rel="noreferrer">使用自定义驱动程序进行自动化测试 | Electron (electronjs.org)</a></li><li>spectron启动失败：<a href="https://github.com/electron-userland/spectron/issues/489" target="_blank" rel="noreferrer">https://github.com/electron-userland/spectron/issues/489</a></li><li>平衡单元测试和端到端测试：<a href="https://www.infoq.cn/article/balancing-unit-and-end-to-end-tests" target="_blank" rel="noreferrer">https://www.infoq.cn/article/balancing-unit-and-end-to-end-tests</a></li><li>S测试：<a href="https://www.sitepoint.com/javascript-testing-unit-functional-integration/" target="_blank" rel="noreferrer">https://www.sitepoint.com/javascript-testing-unit-functional-integration/</a></li></ul>',15)]))}const g=t(o,[["render",n]]);export{u as __pageData,g as default};
