import{_ as n,c as a,o as p,ah as l}from"./chunks/framework.DqD713j2.js";const e="/FrontEndLearnNotes/assets/16882890cb316f76tplv-t2oaga2asx-jj-mark3024000q75.DwqgMUPH.webp",o="/FrontEndLearnNotes/assets/16882890cb43f904tplv-t2oaga2asx-jj-mark3024000q75.UM5EAOIH.webp",d=JSON.parse('{"title":"利用网页版微信API做一个微信机器人","description":"","frontmatter":{},"headers":[],"relativePath":"Document/微信开发/利用网页版微信API做一个微信机器人.md","filePath":"Document/微信开发/利用网页版微信API做一个微信机器人.md","lastUpdated":1750954157000}'),r={name:"Document/微信开发/利用网页版微信API做一个微信机器人.md"};function c(t,s,F,i,B,y){return p(),a("div",null,s[0]||(s[0]=[l('<h1 id="利用网页版微信api做一个微信机器人" tabindex="-1">利用网页版微信API做一个微信机器人 <a class="header-anchor" href="#利用网页版微信api做一个微信机器人" aria-label="Permalink to &quot;利用网页版微信API做一个微信机器人&quot;">​</a></h1><p>前一阵子一个朋友找我，问我能不能搞一个微信自动加好友的软件，(在普通人眼里,程序员就是专门写木马病毒外挂软件的三流黑客。不会写那就连三流都不是。</p><p>所以为了证明我是三流黑客，我随便百度了两个现成的给他。本来事情到这里应该结束了的,不过本着探索的精神，想顺便了解一下这种外挂的原理，于是百歌谷度了一下，最终原理没找到，倒是找到几个有意思的 github 仓库，利用网页版的微信 API 做第三方微信.</p><p>先看个效果？</p><p><img src="'+e+'" alt="img"><img src="'+o+`" alt="img"></p><h3 id="步骤" tabindex="-1">步骤 <a class="header-anchor" href="#步骤" aria-label="Permalink to &quot;步骤&quot;">​</a></h3><p>我们看看大致步骤</p><ol><li>获取 UUID</li><li>根据 UUID 获取二维码</li><li>扫码登陆, 获取登陆信息</li><li>拿登陆信息换初始化数据</li><li>拿数据初始化</li><li>获取好友列表和消息列表</li><li>发送消息</li></ol><p>以下为具体过程,不感兴趣的可以直接拉到末尾查看源码仓库</p><blockquote><p>需要注意的是，每一步的请求所使用的方法(POST/GET) 和 Content-Type 都是不一样的，下面我都有标注，如果有请求不通的请参考 gtihub 源码.</p></blockquote><h3 id="一、获取-uuid" tabindex="-1">一、获取 UUID <a class="header-anchor" href="#一、获取-uuid" aria-label="Permalink to &quot;一、获取 UUID&quot;">​</a></h3><p>接口地址：<a href="https://wx.qq.com/jslogin" target="_blank" rel="noreferrer">https://wx.qq.com/jslogin</a></p><p>请求方法 POST</p><p>参数类型(content-type) application/x-www-form-urlencoded</p><p>参数</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#FFFFFF;">    appid</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">&#39;wx</span><span style="color:#D19A66;">782</span><span style="color:#FFFFFF;">c</span><span style="color:#D19A66;">26e4</span><span style="color:#FFFFFF;">c</span><span style="color:#D19A66;">19</span><span style="color:#FFFFFF;">acffb&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#FFFFFF;">    fun</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">&#39;new&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#FFFFFF;">    lang</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">&#39;zh_CN&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#FFFFFF;">     _</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">new</span><span style="color:#FFFFFF;"> Date().valueOf()</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>除了最后一个当前时间戳不是固定的,其他的3个参数都是写死的,照抄即可,调用成功的话,会到一个字符串 <code>window.QRLogin.code = 200; window.QRLogin.uuid = &quot;obizONtqZA==&quot;;</code>, 需要自己想办法截取到 <code>window.QRLogin.uuid =</code> 后面的那串字符,即 UUID.</p><h3 id="二、获取二维码" tabindex="-1">二、获取二维码 <a class="header-anchor" href="#二、获取二维码" aria-label="Permalink to &quot;二、获取二维码&quot;">​</a></h3><p>这一步很简单,有了 UUID 后,我们可以直接请求 <code>&#39;https://wx.qq.com/qrcode/&#39; + UUID</code> 获取到二维码. 获取到二维码以后,先别急着去扫描二维码,因为我们要先去监听二维码的扫描状态,这样我们才能知道什么时候被登陆.</p><p>请求方式 GET 无需参数</p><h3 id="三、监听二维码的扫描结果" tabindex="-1">三、监听二维码的扫描结果 <a class="header-anchor" href="#三、监听二维码的扫描结果" aria-label="Permalink to &quot;三、监听二维码的扫描结果&quot;">​</a></h3><p>接口地址：<a href="https://wx.qq.com/cgi-bin/mmwebwx-bin/login" target="_blank" rel="noreferrer">https://wx.qq.com/cgi-bin/mmwebwx-bin/login</a></p><p>请求方法 GET</p><p>参数类型(content-type) application/x-www-form-urlencoded</p><p>参数</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#FFFFFF;">    tip</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#FFFFFF;">    uuid</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">&#39;obizONtqZA==&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#FFFFFF;">    _</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">new</span><span style="color:#FFFFFF;"> Date().valueOf()</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#FFFFFF;">    loginicon</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>tip 取值 0 或 1, 监听分2个阶段,第一阶段,监听用户是否扫码,tip 为 0,第二阶段,监听用户是否在微信上点确认登陆,tip 为 1.</p><p>uuid 就是第一步获取到的那个 UUID</p><p>_ 当前时间戳</p><p>loginicon 我猜应该是否扫码完返回用户头像,都填 true 即可.</p><p>返回结果,当你扫描二维码的时候,接口会返回你一个这样的对象</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#FFFFFF;">    &#39;window.code&#39;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">201</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#FFFFFF;">    &#39;window.userAvatar&#39;</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">头像的</span><span style="color:#FFFFFF;"> base</span><span style="color:#D19A66;">64</span><span style="color:#FFFFFF;"> 地址</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>得到的 code 是 201, 说明已扫码,但并不代表已登陆,还需要继续监听是否在手机微信上点击 确认登陆 按钮(重复上面步骤,把 参数里的 tip 改为 1 即可)</p><p>这步如果成功的话,会返回一个如下对象</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#FFFFFF;">    &#39;window.code&#39;</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">&#39;</span><span style="color:#D19A66;">200</span><span style="color:#FFFFFF;">&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#FFFFFF;">    &#39;window.redirect_uri&#39;</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">&#39;https:</span><span style="color:#7F848E;font-style:italic;">//wx.qq.com/cgi-bin/mmwebwx-bin/webwxnewloginpage?ticket=ARD37_ikx-Kakd2i0W-f-E7q@qrticket_0&amp;uuid=4f6yOkV4AA==&amp;lang=zh_CN&amp;scan=1548300672&#39; }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="四、获取初始化数据-敏感数据" tabindex="-1">四、获取初始化数据(敏感数据) <a class="header-anchor" href="#四、获取初始化数据-敏感数据" aria-label="Permalink to &quot;四、获取初始化数据(敏感数据)&quot;">​</a></h3><p>上一步获取到的数据里面的 <code>window.redirect_uri</code> 里包含了一个 url 和一些 查询参数,直接请求这个地址好像没办法成功,需要将 url 和 参数拆分,然后加入其他参数</p><p>接口地址 就是上面的 url</p><p>请求方法 GET</p><p>参数类型(content-type) application/x-www-form-urlencoded</p><p>参数</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#FFFFFF;">    ticket</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">上面得到的</span><span style="color:#FFFFFF;"> ticket</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#FFFFFF;">    uuid</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">上面得到的</span><span style="color:#FFFFFF;"> uuid</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#FFFFFF;">    lang</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">&#39;zh_CN&#39;</span><span style="color:#ABB2BF;">,  </span><span style="color:#7F848E;font-style:italic;">// 固定</span></span>
<span class="line"><span style="color:#FFFFFF;">    scan</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">上面得到的</span><span style="color:#FFFFFF;"> scan</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#FFFFFF;">    fun</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">&#39;new&#39;</span><span style="color:#7F848E;font-style:italic;"> // 固定</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>这一步的返回的头部里面,会有个 cookie ,需要存起来,接来来得到请求头里面要带上这个 cookie,另外就是一个 xml 格式的 敏感的信息,也是要存起来.</p><blockquote><p>tip： xml 格式可以用 <a href="https://github.com/Leonidas-from-XIV/node-xml2js" target="_blank" rel="noreferrer">xml2js</a> 转换成 json.</p></blockquote><h3 id="五、初始化" tabindex="-1">五、初始化 <a class="header-anchor" href="#五、初始化" aria-label="Permalink to &quot;五、初始化&quot;">​</a></h3><p>呼,到这一步,终于接近登陆成功了,只需再调用以下接口,初始化以下</p><p>接口地址 <code>https://wx.qq.com/cgi-bin/mmwebwx-bin/webwxinit?r=\${~(new Date().valueOf())}</code></p><p>请求方法 POST</p><p>参数类型(content-type) application/json</p><p>参数</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#FFFFFF;">    BaseRequest</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#FFFFFF;">        DeviceID</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">&#39;e</span><span style="color:#D19A66;">747337466044216</span><span style="color:#FFFFFF;">&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 这个好像随便填都可以</span></span>
<span class="line"><span style="color:#FFFFFF;">        Sid</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">上一步获取到的</span><span style="color:#FFFFFF;"> wxsid</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#FFFFFF;">        Uin</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">上一步获取到的</span><span style="color:#FFFFFF;"> wxuin</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#FFFFFF;">        Skey</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">上一步获取到的</span><span style="color:#FFFFFF;"> skey</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>这里有 2 个地方跟之前不同的,第一是地址后面要跟一个时间戳,而且这个时间戳还要按位取反,第二个是请求参数是放在 BaseRequest 下面,而不是对象的一级属性下面.</p><p>返回的数据里面有 2 个数据需要保存起来,一个是 data.SyncKey, 一个是 res.data.User.UserName,后面都会用到</p><p>到此才真正完成登陆,下面如果你不需要好友列表的话,可以直接收取消息了</p><h3 id="六、检测新消息" tabindex="-1">六、检测新消息 <a class="header-anchor" href="#六、检测新消息" aria-label="Permalink to &quot;六、检测新消息&quot;">​</a></h3><p>接口地址：<a href="https://webpush.wx.qq.com/cgi-bin/mmwebwx-bin/synccheck" target="_blank" rel="noreferrer">https://webpush.wx.qq.com/cgi-bin/mmwebwx-bin/synccheck</a></p><p>请求方法 GET</p><p>参数类型(content-type) application/json</p><p>参数</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> time</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Date</span><span style="color:#ABB2BF;">().</span><span style="color:#61AFEF;">getTime</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> synckey</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &#39;&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> sk</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> data</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">SyncKey</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">List</span><span style="color:#56B6C2;"> ||</span><span style="color:#ABB2BF;"> []   </span><span style="color:#7F848E;font-style:italic;">// data.SyncKey 就是上一步获取到的那个</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> &lt;</span><span style="color:#E5C07B;"> sk</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E06C75;">    synckey</span><span style="color:#56B6C2;"> +=</span><span style="color:#98C379;"> \`</span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">sk</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">].</span><span style="color:#E06C75;">Key</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">_</span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">sk</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">].</span><span style="color:#E06C75;">Val</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">\`</span></span>
<span class="line"><span style="color:#C678DD;">    if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> !==</span><span style="color:#E5C07B;"> sk</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">length</span><span style="color:#56B6C2;"> -</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">) </span><span style="color:#E06C75;">synckey</span><span style="color:#56B6C2;"> +=</span><span style="color:#98C379;"> &#39;|&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 传递的参数</span></span>
<span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">    r</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">time</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    sid</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">第四步拿到的</span><span style="color:#E06C75;"> wxsid</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    uin</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">第四步拿到的</span><span style="color:#E06C75;"> wxuin</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    skey</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">第四步拿到的</span><span style="color:#E06C75;"> skey</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    deviceid</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;e747337466044216&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 同上一步</span></span>
<span class="line"><span style="color:#E06C75;">    synckey</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">synckey</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    _</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">time</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>返回内容的 data 里面 包含如下内容</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">window</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">synccheck</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">{</span><span style="color:#E06C75;">retcode</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;">&quot;0&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">selector</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;">&quot;2&quot;</span><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>如果 selector 是 2, 说明有新消息,走下一步,获取消息内容</p><h3 id="七、获取消息内容" tabindex="-1">七、获取消息内容 <a class="header-anchor" href="#七、获取消息内容" aria-label="Permalink to &quot;七、获取消息内容&quot;">​</a></h3><p>接口地址：<a href="https://wx.qq.com/cgi-bin/mmwebwx-bin/webwxsync" target="_blank" rel="noreferrer">https://wx.qq.com/cgi-bin/mmwebwx-bin/webwxsync</a></p><p>请求方法 POST</p><p>参数类型(content-type) application/json</p><p>参数</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#FFFFFF;">    BaseRequest</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#FFFFFF;">        Uin</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">第四步拿到的</span><span style="color:#FFFFFF;"> wxuin</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#FFFFFF;">        Sid</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">第四步拿到的</span><span style="color:#FFFFFF;"> wxsid</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#FFFFFF;">        Skey</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">第四步拿到的</span><span style="color:#FFFFFF;"> skey</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#FFFFFF;">        DeviceID</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">&#39;e</span><span style="color:#D19A66;">747337466044216</span><span style="color:#FFFFFF;">&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 同上一步</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#FFFFFF;">    SyncKey</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">data.SyncKey</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 还记得上一步我们费尽千辛万苦转换这个数据吗？ 你没看错,这里不需要转换,就是这么神奇</span></span>
<span class="line"><span style="color:#FFFFFF;">    rr</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">~(new</span><span style="color:#FFFFFF;"> Date().valueOf())</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>返回结果里面有个 <code>data.AddMsgList</code> 就是消息列表了,还有个 <code>data.SyncCheckKey</code> 就是下次请求的时候用的 <code>SyncKey</code>, 每次都会变的.</p><p>AddMsgList 是一个数组,里面可能包含多条消息,消息的自动比较多,就不一一说明了,这里说说 2 个比较重要的字段,其他的字段有兴趣的可以自己打印出来看一下.</p><p>FromUserName 对方的微信名,说是微信名,其实是一个 @ 或 @@ 开头的内部的id, 完全不可读,据我猜测 @ 开头的应该是普通好友, @@ 开头的是群或者公众号之类的</p><p>Content 消息内容</p><p>有了消息内容,和发消息的人,我们就可以回复对方,不过回复什么？ 当然不可能写一大堆 if else 或者 switch case 去适应各种情况,不妨网上搜索一下 <code>价值一个亿的ai代码</code> 哈哈哈</p><h3 id="八、获取自动回复内容" tabindex="-1">八、获取自动回复内容 <a class="header-anchor" href="#八、获取自动回复内容" aria-label="Permalink to &quot;八、获取自动回复内容&quot;">​</a></h3><p>这边我用的是图灵机器人的 API <a href="https://www.tuling123.com/" target="_blank" rel="noreferrer">地址</a>，当然你也可以用其他的。</p><p>接口地址：<a href="https://openapi.tuling123.com/openapi/api/v2" target="_blank" rel="noreferrer">https://openapi.tuling123.com/openapi/api/v2</a></p><p>请求方法 POST</p><p>参数类型(content-type) application/json</p><p>参数</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{ </span><span style="color:#FFFFFF;">perception</span><span style="color:#ABB2BF;">: { </span><span style="color:#FFFFFF;">inputText</span><span style="color:#ABB2BF;">: { </span><span style="color:#FFFFFF;">text</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">&#39;待回复的消息&#39;</span><span style="color:#ABB2BF;"> } }, </span><span style="color:#FFFFFF;">userInfo</span><span style="color:#ABB2BF;">: { </span><span style="color:#FFFFFF;">apiKey</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">tulingApiKey</span><span style="color:#ABB2BF;">,  </span><span style="color:#7F848E;font-style:italic;">// 在图灵官网申请 userId: tulingUserId</span><span style="color:#7F848E;font-style:italic;">   // 同上 </span></span>
<span class="line"><span style="color:#ABB2BF;">                                                           }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>你要是懒得去申请的话,可以在我的项目里面复制, 在 <code>src/global.js</code> 里面,在返回的内容里面 <code>data.results[0].values.text</code> 下面可以看到图灵给你生成的自动回复内容(results是一个数组,支持一次回复多条)</p><h3 id="九、回复消息" tabindex="-1">九、回复消息 <a class="header-anchor" href="#九、回复消息" aria-label="Permalink to &quot;九、回复消息&quot;">​</a></h3><p>拿到自动回复以后,我们只需要把它发给你的好友,即完成一次自动对话.</p><p>接口地址：<a href="https://wx.qq.com/cgi-bin/mmwebwx-bin/webwxsendmsg" target="_blank" rel="noreferrer">https://wx.qq.com/cgi-bin/mmwebwx-bin/webwxsendmsg</a></p><p>请求方法 POST</p><p>参数类型(content-type) application/json</p><p>参数</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> timeStamp</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Date</span><span style="color:#ABB2BF;">().</span><span style="color:#61AFEF;">getTime</span><span style="color:#ABB2BF;">() </span><span style="color:#56B6C2;">+</span><span style="color:#98C379;"> &#39;&#39;</span><span style="color:#56B6C2;"> +</span><span style="color:#ABB2BF;"> (</span><span style="color:#D19A66;">9000</span><span style="color:#56B6C2;"> *</span><span style="color:#E5C07B;"> Math</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">random</span><span style="color:#ABB2BF;">() </span><span style="color:#56B6C2;">+</span><span style="color:#D19A66;"> 1000</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">    BaseRequest</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">      Uin</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">同上</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">      Sid</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">同上</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">      Skey</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">同上</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">      DeviceID</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">同上</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#E06C75;">    Msg</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">      Type</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">,  </span><span style="color:#7F848E;font-style:italic;">// 消息类型 1 是文字消息,其他的暂时没用过</span></span>
<span class="line"><span style="color:#E06C75;">      Content</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;回复的内容&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">      FromUserName</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;你的用户名,在第五步有拿到&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">      ToUserName</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;对方的微信名 第七步的 FromUserName&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">      LocalID</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">timeStamp</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">      ClientMsgId</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">timeStamp</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>发送成功的话,会返回如下内容</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#FFFFFF;">    BaseResponse</span><span style="color:#ABB2BF;">: { </span><span style="color:#FFFFFF;">Ret</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#FFFFFF;">ErrMsg</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">&#39;&#39;</span><span style="color:#ABB2BF;"> },</span></span>
<span class="line"><span style="color:#FFFFFF;">    MsgID</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">&#39;</span><span style="color:#D19A66;">2033517278669301361</span><span style="color:#FFFFFF;">&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#FFFFFF;">    LocalID</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">&#39;&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>好了,这样我们的一个自动回复机器人就完成了。完整的代码：<a href="https://github.com/noahlam/wxbot" target="_blank" rel="noreferrer">noahlam/wxbot (github.com)</a></p><p>被封的几率特别高，我感觉可以控制一个延迟量，来防止脚本检测</p><p>同类型的脚本：<a href="https://github.com/youfou/wxpy" target="_blank" rel="noreferrer">youfou/wxpy: 微信机器人 / 可能是最优雅的微信个人号 API ✨✨ (github.com)</a></p><p><a href="https://blog.csdn.net/qq_39241986/article/details/117538088" target="_blank" rel="noreferrer">原创｜Python wxpy模块的有趣应用，微信机器人，微信好友分析搞定-CSDN博客</a></p><p><a href="https://wxpy.readthedocs.io/zh/latest/" target="_blank" rel="noreferrer">wxpy: 用 Python 玩微信 — wxpy 0.3.9.8 文档</a></p><p><a href="https://github.com/littlecodersh/ItChat" target="_blank" rel="noreferrer">littlecodersh/ItChat: A complete and graceful API for Wechat. 微信个人号接口、微信机器人及命令行微信，三十行即可自定义个人号机器人。 (github.com)</a></p><p><a href="https://itchat.readthedocs.io/zh/latest/" target="_blank" rel="noreferrer">项目简介 - itchat</a></p>`,98)]))}const u=n(r,[["render",c]]);export{d as __pageData,u as default};
