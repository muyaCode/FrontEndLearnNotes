import{_ as a,c as e,o as n,ah as t}from"./chunks/framework.DqD713j2.js";const b=JSON.parse('{"title":"Express快速开发脚手架","description":"","frontmatter":{},"headers":[],"relativePath":"Document/Node后端框架开发/Express框架/Express快速开发脚手架.md","filePath":"Document/Node后端框架开发/Express框架/Express快速开发脚手架.md","lastUpdated":1750954157000}'),l={name:"Document/Node后端框架开发/Express框架/Express快速开发脚手架.md"};function p(r,s,o,d,c,i){return n(),e("div",null,s[0]||(s[0]=[t(`<h1 id="express快速开发脚手架" tabindex="-1">Express快速开发脚手架 <a class="header-anchor" href="#express快速开发脚手架" aria-label="Permalink to &quot;Express快速开发脚手架&quot;">​</a></h1><p>生成器工具express-generator（又称为脚手架工具） 可以快速创建一个express应用的骨架（应用骨架是指我们在项目开发过程中常用的目录或文件，比如：css目录、js目录、img目录），以提高开发效率。</p><h2 id="_1-使用步骤" tabindex="-1">1 使用步骤 <a class="header-anchor" href="#_1-使用步骤" aria-label="Permalink to &quot;1 使用步骤&quot;">​</a></h2><h3 id="_1-1-全局安装express-generator" tabindex="-1">1.1 全局安装express-generator <a class="header-anchor" href="#_1-1-全局安装express-generator" aria-label="Permalink to &quot;1.1 全局安装express-generator&quot;">​</a></h3><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> i</span><span style="color:#98C379;"> express-generator</span><span style="color:#D19A66;"> -g</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_1-2-使用脚手架初始化项目" tabindex="-1">1.2 使用脚手架初始化项目 <a class="header-anchor" href="#_1-2-使用脚手架初始化项目" aria-label="Permalink to &quot;1.2 使用脚手架初始化项目&quot;">​</a></h3><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># --view=ejs 使用ejs模板引擎</span></span>
<span class="line"><span style="color:#61AFEF;">express</span><span style="color:#D19A66;"> --view=ejs</span><span style="color:#98C379;"> 项目包名</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_1-3-进入目录-安装所有需要的模块" tabindex="-1">1.3 进入目录, 安装所有需要的模块 <a class="header-anchor" href="#_1-3-进入目录-安装所有需要的模块" aria-label="Permalink to &quot;1.3 进入目录, 安装所有需要的模块&quot;">​</a></h3><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#56B6C2;">cd</span><span style="color:#98C379;"> 项目包名</span></span>
<span class="line"><span style="color:#61AFEF;">然后</span></span>
<span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> install</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="_1-4-启动项目" tabindex="-1">1.4 启动项目 <a class="header-anchor" href="#_1-4-启动项目" aria-label="Permalink to &quot;1.4 启动项目&quot;">​</a></h3><p>项目自己的package.json文件中的“scripts”配置项，如果配置如下：【重点】</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#98C379;">&quot;scripts&quot;</span><span style="color:#ABB2BF;">: {  </span></span>
<span class="line"><span style="color:#E06C75;">  &quot;start&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;node ./bin/www&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">  &quot;hot&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;nodemon  ./bin/www&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>命令行终端窗口使用<code>npm run start</code>或 <code>npm run hot</code>来运行项目，当“scripts”配置项中的键名为&quot;start&quot;时则可以省力run，直接使用npm start来运行项目。</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;">  start</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="_1-5-浏览器访问" tabindex="-1">1.5 浏览器访问 <a class="header-anchor" href="#_1-5-浏览器访问" aria-label="Permalink to &quot;1.5 浏览器访问&quot;">​</a></h2><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">locaohost:端口号</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="_2-目录及文件介绍" tabindex="-1">2 目录及文件介绍 <a class="header-anchor" href="#_2-目录及文件介绍" aria-label="Permalink to &quot;2 目录及文件介绍&quot;">​</a></h2><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">bin</span><span style="color:#98C379;"> -</span><span style="color:#98C379;"> 项目启动为文件目录</span></span>
<span class="line"><span style="color:#61AFEF;">public</span><span style="color:#98C379;"> -</span><span style="color:#98C379;"> 公共的静态资源目录</span></span>
<span class="line"><span style="color:#61AFEF;">routes</span><span style="color:#98C379;"> -</span><span style="color:#98C379;"> 路由模块目录</span></span>
<span class="line"><span style="color:#61AFEF;">views</span><span style="color:#98C379;"> -</span><span style="color:#98C379;"> ejs模板文件目录</span></span>
<span class="line"><span style="color:#61AFEF;">app.js</span><span style="color:#98C379;"> -</span><span style="color:#98C379;"> 项目入口文件</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="前后端数据交互总结" tabindex="-1">前后端数据交互总结 <a class="header-anchor" href="#前后端数据交互总结" aria-label="Permalink to &quot;前后端数据交互总结&quot;">​</a></h2><table tabindex="0"><thead><tr><th>请求方法</th><th>编码格式</th><th>前端要传输的数据格式</th><th>后端如何获取</th><th>应用场景</th></tr></thead><tbody><tr><td>GET</td><td>url地址后面（querystring）</td><td>url?key1=value1&amp;key2=value2</td><td>不需要中间件:req.query</td><td>获取数据</td></tr><tr><td>POST</td><td>applicaion/x-www-form-urlencoded</td><td>form-data: key1=value1&amp;key2=value2</td><td>express.urlencoded( { extend:true } )</td><td>提交数据</td></tr><tr><td>POST</td><td>applicaion/json（只能通过ajax）</td><td>request-payload: &#39;{ &quot;key1&quot;:&quot;value1&quot;,&quot;key2&quot;:&quot;value2&quot; }&#39;</td><td>express.json()</td><td></td></tr><tr><td>POST</td><td>mutilpart/form-data（可以使用表单）</td><td>文件流</td><td></td><td>文件上传</td></tr><tr><td>DELETE</td><td>同post</td><td></td><td></td><td>删除数据</td></tr><tr><td>PUT</td><td>同post</td><td></td><td></td><td>更新数据</td></tr></tbody></table>`,20)]))}const h=a(l,[["render",p]]);export{b as __pageData,h as default};
