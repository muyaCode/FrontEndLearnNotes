import{_ as a,c as n,o as l,ah as e}from"./chunks/framework.DqD713j2.js";const b=JSON.parse('{"title":"Dart 语言基础","description":"","frontmatter":{},"headers":[],"relativePath":"Document/移动端软件开发/Flutter框架/Dart语言基础.md","filePath":"Document/移动端软件开发/Flutter框架/Dart语言基础.md","lastUpdated":1750954157000}'),p={name:"Document/移动端软件开发/Flutter框架/Dart语言基础.md"};function r(o,s,t,c,i,B){return l(),n("div",null,s[0]||(s[0]=[e(`<h1 id="dart-语言基础" tabindex="-1">Dart 语言基础 <a class="header-anchor" href="#dart-语言基础" aria-label="Permalink to &quot;Dart 语言基础&quot;">​</a></h1><p>dart 语言 <strong>文档和教程</strong>：&lt;<a href="https://www.codingdict.com/article/21908" target="_blank" rel="noreferrer">Dart 教程 - Dart 教程 | 编程字典 (codingdict.com)</a>&gt;</p><p>其他快速入门：</p><ul><li><a href="https://www.jianshu.com/p/d90ba097c741" target="_blank" rel="noreferrer">Dart 入门 - 简书 (jianshu.com)</a></li><li><a href="https://www.jianshu.com/p/4bc97a8a8449" target="_blank" rel="noreferrer">Dart 入门 - 简书 (jianshu.com)</a></li></ul><h2 id="环境安装" tabindex="-1">环境安装 <a class="header-anchor" href="#环境安装" aria-label="Permalink to &quot;环境安装&quot;">​</a></h2><p>官网：<a href="https://dart.cn/" target="_blank" rel="noreferrer">Dart 编程语言主页 | Dart 中文文档 | Dart</a></p><p>Dart SDK 安装：<a href="https://dart.cn/get-dart" target="_blank" rel="noreferrer">获取 Dart SDK | Dart</a></p><p>官网在线练习：<a href="https://dart.cn/#try-dart" target="_blank" rel="noreferrer">Dart 编程语言主页 | Dart 中文文档 | Dart</a></p><h2 id="语言风格" tabindex="-1">语言风格 <a class="header-anchor" href="#语言风格" aria-label="Permalink to &quot;语言风格&quot;">​</a></h2><p>代码每一行 严格分号;</p><p>注释：和 JavaScript 一样</p><ul><li><p>单行注释</p></li><li><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 我是单行注释</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p>多行注释</p></li><li><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">* 我是多行注释</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">*/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li></ul><h2 id="变量和常量" tabindex="-1">变量和常量 <a class="header-anchor" href="#变量和常量" aria-label="Permalink to &quot;变量和常量&quot;">​</a></h2><h3 id="变量" tabindex="-1">变量 <a class="header-anchor" href="#变量" aria-label="Permalink to &quot;变量&quot;">​</a></h3><h4 id="指定值" tabindex="-1">指定值 <a class="header-anchor" href="#指定值" aria-label="Permalink to &quot;指定值&quot;">​</a></h4><p>初始化指定了值的类型，b 的类型就指定成什么值</p><p>可以通过 var 进行类型推断</p><ul><li>b 的后面属于什么类型会自动推断出来</li><li>判断属于的类型后，变量的类型便不可更改</li></ul><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> b </span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>初始赋值后，后续值不可修改</p><p>编译函数过程中得到的值也可以</p><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">final</span><span style="color:#ABB2BF;"> d </span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="不指定值类型" tabindex="-1">不指定值类型 <a class="header-anchor" href="#不指定值类型" aria-label="Permalink to &quot;不指定值类型&quot;">​</a></h4><p>初始化没有指定类型，a 是动态类型</p><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> a;</span></span>
<span class="line"><span style="color:#ABB2BF;">a </span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;"> 2</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">a </span><span style="color:#56B6C2;">=</span><span style="color:#98C379;"> &quot;hello&quot;</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>变量作用域</p><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="常量" tabindex="-1">常量 <a class="header-anchor" href="#常量" aria-label="Permalink to &quot;常量&quot;">​</a></h3><p>只能直接指定值，编译得到的值不能给它赋值</p><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> e </span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;"> 10</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="内置类型" tabindex="-1">内置类型 <a class="header-anchor" href="#内置类型" aria-label="Permalink to &quot;内置类型&quot;">​</a></h2><h3 id="numbers-数值类型" tabindex="-1">numbers-数值类型 <a class="header-anchor" href="#numbers-数值类型" aria-label="Permalink to &quot;numbers-数值类型&quot;">​</a></h3><h4 id="int-整数值" tabindex="-1">int-整数值 <a class="header-anchor" href="#int-整数值" aria-label="Permalink to &quot;int-整数值&quot;">​</a></h4><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">int</span><span style="color:#ABB2BF;"> a </span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="double-浮点数" tabindex="-1">double-浮点数 <a class="header-anchor" href="#double-浮点数" aria-label="Permalink to &quot;double-浮点数&quot;">​</a></h4><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">double</span><span style="color:#ABB2BF;"> b </span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;"> 1.1</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="数值类型的方法" tabindex="-1">数值类型的方法 <a class="header-anchor" href="#数值类型的方法" aria-label="Permalink to &quot;数值类型的方法&quot;">​</a></h4><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">a.</span><span style="color:#61AFEF;">floor</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">a.</span><span style="color:#61AFEF;">ceil</span><span style="color:#ABB2BF;">()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="string-字符串类型" tabindex="-1">String-字符串类型 <a class="header-anchor" href="#string-字符串类型" aria-label="Permalink to &quot;String-字符串类型&quot;">​</a></h3><h4 id="强类型声明" tabindex="-1">强类型声明 <a class="header-anchor" href="#强类型声明" aria-label="Permalink to &quot;强类型声明&quot;">​</a></h4><p>UTF-16 编码-字符序列声明</p><p>字符串可以单引号&#39; &#39; ， 可以双引号&quot; &quot;</p><p>&#39;&#39;&#39; &#39;&#39;&#39; 三个单引号多行字符串</p><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;"> str </span><span style="color:#56B6C2;">=</span><span style="color:#98C379;"> &quot;sss&quot;</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="变量声明" tabindex="-1">变量声明 <a class="header-anchor" href="#变量声明" aria-label="Permalink to &quot;变量声明&quot;">​</a></h4><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> str </span><span style="color:#56B6C2;">=</span><span style="color:#98C379;"> &quot;aaa&quot;</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="booleans-布尔类型" tabindex="-1">booleans-布尔类型 <a class="header-anchor" href="#booleans-布尔类型" aria-label="Permalink to &quot;booleans-布尔类型&quot;">​</a></h3><h4 id="强类型声明-1" tabindex="-1">强类型声明 1 <a class="header-anchor" href="#强类型声明-1" aria-label="Permalink to &quot;强类型声明 1&quot;">​</a></h4><p>0 和 1 不能代表布尔类型</p><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">bool</span><span style="color:#ABB2BF;"> isTrue </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> flase;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="lists-列表类型" tabindex="-1">lists-列表类型 <a class="header-anchor" href="#lists-列表类型" aria-label="Permalink to &quot;lists-列表类型&quot;">​</a></h3><h4 id="list" tabindex="-1">List <a class="header-anchor" href="#list" aria-label="Permalink to &quot;List&quot;">​</a></h4><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> arr1 </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> new</span><span style="color:#E5C07B;"> List</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">List</span><span style="color:#ABB2BF;"> arr2 </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> [</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">];</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> arr3 </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> [</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">22</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">6</span><span style="color:#ABB2BF;">];</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> a </span><span style="color:#56B6C2;">=</span><span style="color:#56B6C2;"> &lt;</span><span style="color:#E5C07B;">String</span><span style="color:#56B6C2;">&gt;</span><span style="color:#ABB2BF;">[];</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="常用操作" tabindex="-1">常用操作 <a class="header-anchor" href="#常用操作" aria-label="Permalink to &quot;常用操作&quot;">​</a></h4><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">arr1[</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;"> 100</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">arr.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">300</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// 添加</span></span>
<span class="line"><span style="color:#ABB2BF;">arr.</span><span style="color:#61AFEF;">remove</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">300</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// 删除</span></span>
<span class="line"><span style="color:#ABB2BF;">arr.</span><span style="color:#61AFEF;">removeAt</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// 下标删除</span></span>
<span class="line"><span style="color:#ABB2BF;">arr.</span><span style="color:#61AFEF;">indexOf</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// 查找数字</span></span>
<span class="line"><span style="color:#ABB2BF;">...</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="maps-键值对-对象" tabindex="-1">maps-键值对 对象 <a class="header-anchor" href="#maps-键值对-对象" aria-label="Permalink to &quot;maps-键值对 对象&quot;">​</a></h3><h4 id="声明-1" tabindex="-1">声明 1 <a class="header-anchor" href="#声明-1" aria-label="Permalink to &quot;声明 1&quot;">​</a></h4><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> gifts </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#98C379;">    &#39;first&#39;</span><span style="color:#C678DD;"> :</span><span style="color:#98C379;"> &#39;partridge&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">    &#39;age&#39;</span><span style="color:#C678DD;"> :</span><span style="color:#D19A66;"> 18</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="声明-2" tabindex="-1">声明 2 <a class="header-anchor" href="#声明-2" aria-label="Permalink to &quot;声明 2&quot;">​</a></h4><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">Map</span><span style="color:#ABB2BF;"> gifts </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#D19A66;">    1</span><span style="color:#C678DD;"> :</span><span style="color:#98C379;"> &#39;partridge&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;">    2</span><span style="color:#C678DD;"> :</span><span style="color:#98C379;"> &#39;sss&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="使用构造函数声明" tabindex="-1">使用构造函数声明 <a class="header-anchor" href="#使用构造函数声明" aria-label="Permalink to &quot;使用构造函数声明&quot;">​</a></h4><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> gifts </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> new</span><span style="color:#E5C07B;"> Map</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">gifts[</span><span style="color:#98C379;">&#39;first&#39;</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#98C379;"> &#39;partridge&#39;</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="runes-字符集-32" tabindex="-1">Runes-字符集 32 <a class="header-anchor" href="#runes-字符集-32" aria-label="Permalink to &quot;Runes-字符集 32&quot;">​</a></h3><p>字符、标点符号、表情符号的值</p><h4 id="utf-32-编码字符序列声明" tabindex="-1">UTF-32 编码字符序列声明 <a class="header-anchor" href="#utf-32-编码字符序列声明" aria-label="Permalink to &quot;UTF-32 编码字符序列声明&quot;">​</a></h4><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> a </span><span style="color:#56B6C2;">=</span><span style="color:#98C379;"> &quot;</span><span style="color:#56B6C2;">\\u</span><span style="color:#98C379;">2665&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">Runes</span><span style="color:#ABB2BF;"> b </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> new</span><span style="color:#E5C07B;"> Runes</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;</span><span style="color:#56B6C2;">\\u</span><span style="color:#98C379;">2665&quot;</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="symblos-操作符、标识符" tabindex="-1">symblos-操作符、标识符 <a class="header-anchor" href="#symblos-操作符、标识符" aria-label="Permalink to &quot;symblos-操作符、标识符&quot;">​</a></h3><p>混淆后的代码，标识符的名字被混淆了，但是 Symbol 的名字不会改变</p><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> a </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> Symblo</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;name&quot;</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// 第一种声明方式</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> b </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> #b; </span><span style="color:#7F848E;font-style:italic;">// 第二种声明方式</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="运算符" tabindex="-1">运算符 <a class="header-anchor" href="#运算符" aria-label="Permalink to &quot;运算符&quot;">​</a></h2><h3 id="算术运算符" tabindex="-1">算术运算符 <a class="header-anchor" href="#算术运算符" aria-label="Permalink to &quot;算术运算符&quot;">​</a></h3><table tabindex="0"><thead><tr><th>算术运算符</th><th>作用</th></tr></thead><tbody><tr><td>+</td><td>加</td></tr><tr><td>-</td><td>减</td></tr><tr><td>*</td><td>乘</td></tr><tr><td>/</td><td>除</td></tr><tr><td>~/</td><td>整除</td></tr><tr><td>-expr</td><td>负号</td></tr><tr><td>%</td><td>取余</td></tr></tbody></table><h3 id="递增递减运算符" tabindex="-1">递增递减运算符 <a class="header-anchor" href="#递增递减运算符" aria-label="Permalink to &quot;递增递减运算符&quot;">​</a></h3><h4 id="a" tabindex="-1">++a <a class="header-anchor" href="#a" aria-label="Permalink to &quot;++a&quot;">​</a></h4><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">a</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">a</span><span style="color:#56B6C2;">+</span><span style="color:#D19A66;">1</span><span style="color:#7F848E;font-style:italic;"> // 值为a+1</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 先加再输出</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="a-1" tabindex="-1">a++ <a class="header-anchor" href="#a-1" aria-label="Permalink to &quot;a++&quot;">​</a></h4><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">a</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">a</span><span style="color:#56B6C2;">+</span><span style="color:#D19A66;">1</span><span style="color:#7F848E;font-style:italic;"> // 值为a</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 先输出再加</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="a-2" tabindex="-1">--a <a class="header-anchor" href="#a-2" aria-label="Permalink to &quot;--a&quot;">​</a></h4><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">a</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">a</span><span style="color:#56B6C2;">+</span><span style="color:#D19A66;">1</span><span style="color:#7F848E;font-style:italic;"> // 值为a-1</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 先减再输出</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="a-3" tabindex="-1">a-- <a class="header-anchor" href="#a-3" aria-label="Permalink to &quot;a--&quot;">​</a></h4><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">a</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">a</span><span style="color:#56B6C2;">+</span><span style="color:#D19A66;">1</span><span style="color:#7F848E;font-style:italic;"> // 值为a</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 先输出再减</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="类型测试操作符" tabindex="-1">类型测试操作符 <a class="header-anchor" href="#类型测试操作符" aria-label="Permalink to &quot;类型测试操作符&quot;">​</a></h3><h4 id="类型转换" tabindex="-1">类型转换 <a class="header-anchor" href="#类型转换" aria-label="Permalink to &quot;类型转换&quot;">​</a></h4><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> str </span><span style="color:#56B6C2;">=</span><span style="color:#98C379;"> &#39;aaa&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">str </span><span style="color:#C678DD;">as</span><span style="color:#ABB2BF;"> object</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="当类型是相应的类型时返回-true-不是则返回-false" tabindex="-1">当类型是相应的类型时返回 true，不是则返回 false <a class="header-anchor" href="#当类型是相应的类型时返回-true-不是则返回-false" aria-label="Permalink to &quot;当类型是相应的类型时返回 true，不是则返回 false&quot;">​</a></h4><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> obj </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> {};</span></span>
<span class="line"><span style="color:#ABB2BF;">obj is object</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="当类型不是相应的类型时返回-true" tabindex="-1">当类型不是相应的类型时返回 true <a class="header-anchor" href="#当类型不是相应的类型时返回-true" aria-label="Permalink to &quot;当类型不是相应的类型时返回 true&quot;">​</a></h4><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> obj </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> {};</span></span>
<span class="line"><span style="color:#ABB2BF;">obj is</span><span style="color:#56B6C2;">!</span><span style="color:#ABB2BF;"> object</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="赋值操作符" tabindex="-1">赋值操作符 <a class="header-anchor" href="#赋值操作符" aria-label="Permalink to &quot;赋值操作符&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:center;">赋值操作符</th><th style="text-align:center;">作用</th></tr></thead><tbody><tr><td style="text-align:center;">=</td><td style="text-align:center;"></td></tr><tr><td style="text-align:center;">??=</td><td style="text-align:center;">a = value;<br>b ??= value;<br>如果 b 为空，则将值分配给 b；否则，b 保持不变</td></tr><tr><td style="text-align:center;">-=</td><td style="text-align:center;"></td></tr><tr><td style="text-align:center;">/=</td><td style="text-align:center;"></td></tr><tr><td style="text-align:center;">%=</td><td style="text-align:center;"></td></tr><tr><td style="text-align:center;">&gt;&gt;=</td><td style="text-align:center;"></td></tr><tr><td style="text-align:center;">&lt;&lt;=</td><td style="text-align:center;"></td></tr><tr><td style="text-align:center;">&amp;=</td><td style="text-align:center;"></td></tr><tr><td style="text-align:center;">|=</td><td style="text-align:center;"></td></tr><tr><td style="text-align:center;">^=</td><td style="text-align:center;"></td></tr><tr><td style="text-align:center;">+=</td><td style="text-align:center;"></td></tr><tr><td style="text-align:center;">*=</td><td style="text-align:center;"></td></tr><tr><td style="text-align:center;">~/=</td><td style="text-align:center;"></td></tr></tbody></table><h3 id="逻辑运算符" tabindex="-1">逻辑运算符 <a class="header-anchor" href="#逻辑运算符" aria-label="Permalink to &quot;逻辑运算符&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:center;">逻辑运算符</th><th style="text-align:center;">作用</th></tr></thead><tbody><tr><td style="text-align:center;">!expr</td><td style="text-align:center;">逻辑反</td></tr><tr><td style="text-align:center;">||</td><td style="text-align:center;">逻辑或</td></tr><tr><td style="text-align:center;">&amp;&amp;</td><td style="text-align:center;">逻辑与</td></tr></tbody></table><h3 id="位运算符" tabindex="-1">位运算符 <a class="header-anchor" href="#位运算符" aria-label="Permalink to &quot;位运算符&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:center;">位运算符</th><th style="text-align:center;">作用</th></tr></thead><tbody><tr><td style="text-align:center;">&amp;</td><td style="text-align:center;">与</td></tr><tr><td style="text-align:center;">|</td><td style="text-align:center;">或</td></tr><tr><td style="text-align:center;">^</td><td style="text-align:center;">异或</td></tr><tr><td style="text-align:center;">~expr</td><td style="text-align:center;">一元位补码(0s 变为 1s，1s 变为 0s)</td></tr><tr><td style="text-align:center;">&lt;&lt;</td><td style="text-align:center;">左移</td></tr><tr><td style="text-align:center;">&gt;&gt;</td><td style="text-align:center;">右移</td></tr></tbody></table><h3 id="条件表达式" tabindex="-1">条件表达式 <a class="header-anchor" href="#条件表达式" aria-label="Permalink to &quot;条件表达式&quot;">​</a></h3><p>如果条件为真，返回 expr1，否则返回 expr2</p><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">condition  </span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;"> expr1 </span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> expr2;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>如果 expr1 为空则返回它的值，否则计算并返回 expr2 的值</p><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">expr1 </span><span style="color:#C678DD;">??</span><span style="color:#ABB2BF;"> expr2;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="级联符号" tabindex="-1">级联符号 <a class="header-anchor" href="#级联符号" aria-label="Permalink to &quot;级联符号&quot;">​</a></h3><p>级联(...)允许对同一对象执行一系列操作</p><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">...text </span><span style="color:#56B6C2;">=</span><span style="color:#98C379;"> &#39; &#39;</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="流程控制" tabindex="-1">流程控制 <a class="header-anchor" href="#流程控制" aria-label="Permalink to &quot;流程控制&quot;">​</a></h2><h3 id="条件控制" tabindex="-1">条件控制 <a class="header-anchor" href="#条件控制" aria-label="Permalink to &quot;条件控制&quot;">​</a></h3><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;">(){}</span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;">{}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="循环" tabindex="-1">循环 <a class="header-anchor" href="#循环" aria-label="Permalink to &quot;循环&quot;">​</a></h3><h4 id="for-循环" tabindex="-1">for 循环 <a class="header-anchor" href="#for-循环" aria-label="Permalink to &quot;for 循环&quot;">​</a></h4><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> i </span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">; i</span><span style="color:#56B6C2;">&lt;</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">; i++){}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="while-循环" tabindex="-1">while 循环 <a class="header-anchor" href="#while-循环" aria-label="Permalink to &quot;while 循环&quot;">​</a></h4><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">while</span><span style="color:#ABB2BF;">(count</span><span style="color:#56B6C2;">&lt;=</span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">){}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="do-while-循环" tabindex="-1">do while 循环 <a class="header-anchor" href="#do-while-循环" aria-label="Permalink to &quot;do while 循环&quot;">​</a></h4><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="跳出循环-结束当前循环" tabindex="-1">跳出循环-结束当前循环 <a class="header-anchor" href="#跳出循环-结束当前循环" aria-label="Permalink to &quot;跳出循环-结束当前循环&quot;">​</a></h4><p>break</p><h4 id="结束循环" tabindex="-1">结束循环 <a class="header-anchor" href="#结束循环" aria-label="Permalink to &quot;结束循环&quot;">​</a></h4><p>continue</p><h3 id="分支选择" tabindex="-1">分支选择 <a class="header-anchor" href="#分支选择" aria-label="Permalink to &quot;分支选择&quot;">​</a></h3><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">switch</span><span style="color:#ABB2BF;">(name){</span></span>
<span class="line"><span style="color:#C678DD;">case</span><span style="color:#98C379;"> &quot;zhangsan&quot;</span><span style="color:#C678DD;">:</span></span>
<span class="line"><span style="color:#61AFEF;">  print</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;张三&quot;</span><span style="color:#ABB2BF;">)；</span></span>
<span class="line"><span style="color:#C678DD;">  break</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">default:</span></span>
<span class="line"><span style="color:#61AFEF;">  print</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;查无此人&quot;</span><span style="color:#ABB2BF;">)；</span></span>
<span class="line"><span style="color:#C678DD;">  break</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="断言" tabindex="-1">断言 <a class="header-anchor" href="#断言" aria-label="Permalink to &quot;断言&quot;">​</a></h3><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">assert</span><span style="color:#ABB2BF;">()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="方法定义" tabindex="-1">方法定义 <a class="header-anchor" href="#方法定义" aria-label="Permalink to &quot;方法定义&quot;">​</a></h2><h3 id="三种方式" tabindex="-1">三种方式 <a class="header-anchor" href="#三种方式" aria-label="Permalink to &quot;三种方式&quot;">​</a></h3><p>1</p><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 1.String 返回值类型，bool string list map num class</span></span>
<span class="line"><span style="color:#E5C07B;">String</span><span style="color:#61AFEF;"> getUser</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;"> name){</span></span>
<span class="line"><span style="color:#C678DD;">  return</span><span style="color:#98C379;"> &quot;</span><span style="color:#ABB2BF;">$</span><span style="color:#E06C75;font-style:italic;">name</span><span style="color:#98C379;"> is very good&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>2</p><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 2. dynamic 方式</span></span>
<span class="line"><span style="color:#61AFEF;">getUser2</span><span style="color:#ABB2BF;">(name){</span></span>
<span class="line"><span style="color:#C678DD;">  return</span><span style="color:#98C379;"> &quot;</span><span style="color:#ABB2BF;">$</span><span style="color:#E06C75;font-style:italic;">name</span><span style="color:#98C379;"> is very good&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>3</p><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 3.箭头函数的写法</span></span>
<span class="line"><span style="color:#E5C07B;">String</span><span style="color:#61AFEF;"> getUser3</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;"> name) =&gt; </span><span style="color:#98C379;">&quot;</span><span style="color:#ABB2BF;">$</span><span style="color:#E06C75;font-style:italic;">name</span><span style="color:#98C379;"> is very good&quot;</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="程序调用入口" tabindex="-1">程序调用入口 <a class="header-anchor" href="#程序调用入口" aria-label="Permalink to &quot;程序调用入口&quot;">​</a></h3><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> main</span><span style="color:#ABB2BF;">(){</span><span style="color:#61AFEF;">print</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">getUser</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;张三&quot;</span><span style="color:#ABB2BF;">))}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="参数定义" tabindex="-1">参数定义 <a class="header-anchor" href="#参数定义" aria-label="Permalink to &quot;参数定义&quot;">​</a></h3><p>必传参数</p><ul><li><code>num id</code></li></ul><p>可选命名参数</p><ul><li><code>{bool,flag,String name}</code></li></ul><p>可选位置参数</p><ul><li><code>[bool,flag,String name]</code></li></ul><p>默认值</p><ul><li><code>name = &quot;hello&quot;</code></li></ul><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">getProduct</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">num</span><span style="color:#ABB2BF;"> id,{</span><span style="color:#E5C07B;">bool</span><span style="color:#ABB2BF;">,flag,</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;"> name </span><span style="color:#56B6C2;">=</span><span style="color:#98C379;"> &quot;hello&quot;</span><span style="color:#ABB2BF;">}){}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="匿名方法" tabindex="-1">匿名方法 <a class="header-anchor" href="#匿名方法" aria-label="Permalink to &quot;匿名方法&quot;">​</a></h3><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> getName </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> (){</span></span>
<span class="line"><span style="color:#61AFEF;">  print</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;hello&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"><span style="color:#61AFEF;">getAll</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Funtion</span><span style="color:#ABB2BF;"> cb){</span></span>
<span class="line"><span style="color:#61AFEF;">  cb</span><span style="color:#ABB2BF;">([</span><span style="color:#98C379;">&quot;hello haha&quot;</span><span style="color:#ABB2BF;">]);</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> main</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"><span style="color:#61AFEF;">  getName</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#61AFEF;">  getAll</span><span style="color:#ABB2BF;">((data){</span></span>
<span class="line"><span style="color:#61AFEF;">    print</span><span style="color:#ABB2BF;">(data);</span></span>
<span class="line"><span style="color:#ABB2BF;">  });</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="函数内部变量作用域" tabindex="-1">函数内部变量作用域 <a class="header-anchor" href="#函数内部变量作用域" aria-label="Permalink to &quot;函数内部变量作用域&quot;">​</a></h3><p>大括号里定义的变量就只能在大括号{}里访问</p><h3 id="函数闭包" tabindex="-1">函数闭包 <a class="header-anchor" href="#函数闭包" aria-label="Permalink to &quot;函数闭包&quot;">​</a></h3><p>一个 闭包 是一个方法的对象，该对象都能访问自己作用域内的变量(既捕获了变量)</p><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">count</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"><span style="color:#C678DD;">  var</span><span style="color:#ABB2BF;"> n </span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// local scope</span></span>
<span class="line"><span style="color:#C678DD;">  return</span><span style="color:#ABB2BF;"> (){</span></span>
<span class="line"><span style="color:#ABB2BF;">    n++;</span></span>
<span class="line"><span style="color:#61AFEF;">    print</span><span style="color:#ABB2BF;">(n);</span></span>
<span class="line"><span style="color:#ABB2BF;">  };</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> main</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"><span style="color:#C678DD;">   var</span><span style="color:#ABB2BF;"> func </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> count</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#61AFEF;">   func</span><span style="color:#ABB2BF;">(); </span><span style="color:#7F848E;font-style:italic;">// 输出 1</span></span>
<span class="line"><span style="color:#61AFEF;">   func</span><span style="color:#ABB2BF;">(); </span><span style="color:#7F848E;font-style:italic;">// 输出 2</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="面向对象-类的定义" tabindex="-1">面向对象-类的定义 <a class="header-anchor" href="#面向对象-类的定义" aria-label="Permalink to &quot;面向对象-类的定义&quot;">​</a></h2><h3 id="基本定义" tabindex="-1">基本定义 <a class="header-anchor" href="#基本定义" aria-label="Permalink to &quot;基本定义&quot;">​</a></h3><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">class</span><span style="color:#E5C07B;"> Animal</span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // 私有成员变量 &quot;_&quot;(实例属性)</span></span>
<span class="line"><span style="color:#E5C07B;">  String</span><span style="color:#ABB2BF;"> name;</span></span>
<span class="line"><span style="color:#E5C07B;">  int</span><span style="color:#ABB2BF;"> _age;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // 给私有属性添加一个getter的访问器</span></span>
<span class="line"><span style="color:#C678DD;">  in</span><span style="color:#C678DD;"> get</span><span style="color:#ABB2BF;"> age{</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">._age;</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // 给私有属性添加一个setter的存储器</span></span>
<span class="line"><span style="color:#C678DD;">  set</span><span style="color:#61AFEF;"> age</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">int</span><span style="color:#ABB2BF;"> age){</span></span>
<span class="line"><span style="color:#E5C07B;">    this</span><span style="color:#ABB2BF;">._age </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> age;</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // 私有方法</span></span>
<span class="line"><span style="color:#C678DD;">  void</span><span style="color:#61AFEF;"> _learn</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"><span style="color:#61AFEF;">    print</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;learn 的私有方法&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // 类变量 属于类本身</span></span>
<span class="line"><span style="color:#C678DD;">  static</span><span style="color:#E5C07B;"> List</span><span style="color:#ABB2BF;"> tags ;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // 类方法</span></span>
<span class="line"><span style="color:#C678DD;">  static</span><span style="color:#61AFEF;"> sleep</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"><span style="color:#61AFEF;">    print</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;Animal 睡觉了&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // 成员方法</span></span>
<span class="line"><span style="color:#61AFEF;">  eat</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"><span style="color:#61AFEF;">    print</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;</span><span style="color:#ABB2BF;">$</span><span style="color:#E06C75;font-style:italic;">name</span><span style="color:#98C379;"> is eating&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // 构造方法 一个类只有一个</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // 生成类的对象 初始化实例属性</span></span>
<span class="line"><span style="color:#E5C07B;">  Animal</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;"> name,</span><span style="color:#E5C07B;">int</span><span style="color:#ABB2BF;"> age) {</span></span>
<span class="line"><span style="color:#E5C07B;">    this</span><span style="color:#ABB2BF;">.name </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> name;</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // 命名的构造方法</span></span>
<span class="line"><span style="color:#E5C07B;">  Student</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">withName</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><p>d</p><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> main</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"><span style="color:#C678DD;">  var</span><span style="color:#ABB2BF;"> cat </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> Animal</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;cat&quot;</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// new Animal(); ，可以省略new</span></span>
<span class="line"><span style="color:#61AFEF;">  print</span><span style="color:#ABB2BF;">(cat.name);</span></span>
<span class="line"><span style="color:#ABB2BF;">  cat.</span><span style="color:#61AFEF;">eat</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">  Animal</span><span style="color:#ABB2BF;">.tags </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> [</span><span style="color:#98C379;">&quot;可爱&quot;</span><span style="color:#ABB2BF;">];</span></span>
<span class="line"><span style="color:#61AFEF;">  print</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Animal</span><span style="color:#ABB2BF;">.tags);</span></span>
<span class="line"><span style="color:#E5C07B;">  Animal</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">sleep</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // 常量构造方法</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // 类生成的对象不可改变时使用</span></span>
<span class="line"><span style="color:#C678DD;">  const</span><span style="color:#ABB2BF;"> s1 </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> Student</span><span style="color:#ABB2BF;">(“张三”);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // 访问私有成员</span></span>
<span class="line"><span style="color:#ABB2BF;">  cat.</span><span style="color:#61AFEF;">learn</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="final-定义属性时" tabindex="-1">final 定义属性时 <a class="header-anchor" href="#final-定义属性时" aria-label="Permalink to &quot;final 定义属性时&quot;">​</a></h3><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="工厂构造方法" tabindex="-1">工厂构造方法 <a class="header-anchor" href="#工厂构造方法" aria-label="Permalink to &quot;工厂构造方法&quot;">​</a></h3><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">class</span><span style="color:#E5C07B;"> Person</span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#C678DD;">  static</span><span style="color:#E5C07B;"> Map</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;">Person</span><span style="color:#ABB2BF;">&gt;_cache;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  //工厂构造器中访问</span></span>
<span class="line"><span style="color:#C678DD;">  factory</span><span style="color:#E5C07B;"> Person</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"><span style="color:#C678DD;">    if</span><span style="color:#ABB2BF;">(_cache </span><span style="color:#56B6C2;">==</span><span style="color:#D19A66;"> null</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#ABB2BF;">      _cache </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> new</span><span style="color:#E5C07B;"> Map</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;">Person</span><span style="color:#ABB2BF;">&gt;();</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">    if</span><span style="color:#ABB2BF;">(_cache[</span><span style="color:#98C379;">&quot;p&quot;</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">==</span><span style="color:#D19A66;"> null</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#ABB2BF;">      _cache[</span><span style="color:#98C379;">&quot;p&quot;</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> Person</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">_inner</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#ABB2BF;"> _cache[</span><span style="color:#98C379;">&quot;p&quot;</span><span style="color:#ABB2BF;">];</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // 命名私有的构造方法</span></span>
<span class="line"><span style="color:#E5C07B;">  Person</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">_inner</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#61AFEF;">  say</span><span style="color:#ABB2BF;">(){}</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h3 id="对象的仿真函数-call" tabindex="-1">对象的仿真函数 call <a class="header-anchor" href="#对象的仿真函数-call" aria-label="Permalink to &quot;对象的仿真函数 call&quot;">​</a></h3><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">class</span><span style="color:#E5C07B;"> Student</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#61AFEF;">  call</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">int</span><span style="color:#ABB2BF;"> a,</span><span style="color:#E5C07B;">int</span><span style="color:#ABB2BF;"> b){</span></span>
<span class="line"><span style="color:#61AFEF;">    print</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;</span><span style="color:#ABB2BF;">\${</span><span style="color:#E06C75;font-style:italic;">a</span><span style="color:#ABB2BF;">+</span><span style="color:#E06C75;font-style:italic;">b</span><span style="color:#ABB2BF;">}</span><span style="color:#98C379;"> 如果类实现了call方法，则该类的对象可以作为方法使用 </span><span style="color:#ABB2BF;">$</span><span style="color:#E06C75;font-style:italic;">b</span><span style="color:#98C379;">&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> main</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"><span style="color:#C678DD;">  var</span><span style="color:#ABB2BF;"> s </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> Student</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#61AFEF;">   s</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="类的继承" tabindex="-1">类的继承 <a class="header-anchor" href="#类的继承" aria-label="Permalink to &quot;类的继承&quot;">​</a></h3><p>继承写法</p><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">class</span><span style="color:#E5C07B;"> A</span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E5C07B;">  A</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">widthName</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 继承父类</span></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#E5C07B;"> B</span><span style="color:#C678DD;"> extends</span><span style="color:#E5C07B;"> A</span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E5C07B;">  B</span><span style="color:#ABB2BF;">()</span><span style="color:#C678DD;">:</span><span style="color:#E5C07B;">super</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">widthName</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>子类可以 继承或者覆盖重写 父类的方法</p><p>子类重写：get、set 方法</p><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">@override</span></span>
<span class="line"><span style="color:#E5C07B;">  int</span><span style="color:#C678DD;"> get</span><span style="color:#ABB2BF;"> x =&gt; </span><span style="color:#E5C07B;">super</span><span style="color:#ABB2BF;">.x;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">  @override</span></span>
<span class="line"><span style="color:#C678DD;">  void</span><span style="color:#C678DD;"> set</span><span style="color:#61AFEF;"> x</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">int</span><span style="color:#ABB2BF;"> _x) {</span></span>
<span class="line"><span style="color:#E5C07B;">    super</span><span style="color:#ABB2BF;">.x </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> _x;</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>构造方法的继承-子类指向构造父类方法</p><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">B</span><span style="color:#ABB2BF;">()</span><span style="color:#C678DD;">:</span><span style="color:#E5C07B;">super</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">widthName</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="抽象类-abstract" tabindex="-1">抽象类-abstract <a class="header-anchor" href="#抽象类-abstract" aria-label="Permalink to &quot;抽象类-abstract&quot;">​</a></h3><p>抽象类不能实例化，不能有对象-主要是用来让子类继承</p><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">abstract</span><span style="color:#C678DD;"> class</span><span style="color:#E5C07B;"> Preson</span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  //普通方法或者属性</span></span>
<span class="line"><span style="color:#61AFEF;">  say</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  //抽象方法:子类必须实现</span></span>
<span class="line"><span style="color:#61AFEF;">  sleep</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#E5C07B;"> Student</span><span style="color:#C678DD;"> extends</span><span style="color:#E5C07B;"> Person</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">  @override</span></span>
<span class="line"><span style="color:#61AFEF;">  sleep</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // TODO: implement sleep</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#D19A66;"> null</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="类和类之间的高级用法" tabindex="-1">类和类之间的高级用法 <a class="header-anchor" href="#类和类之间的高级用法" aria-label="Permalink to &quot;类和类之间的高级用法&quot;">​</a></h3><h4 id="接口类型" tabindex="-1">接口类型 <a class="header-anchor" href="#接口类型" aria-label="Permalink to &quot;接口类型&quot;">​</a></h4><p>面向对象的高级用法: 类与类之间的关系 接口</p><p>interface：</p><ul><li>1.接口中的所有属性或者方法，子类都需要实现</li><li>2.一个类可以实现多个接口，从而多继承</li></ul><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">abstract</span><span style="color:#C678DD;"> class</span><span style="color:#E5C07B;"> Person</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">  String</span><span style="color:#ABB2BF;"> name;</span></span>
<span class="line"><span style="color:#61AFEF;">  say</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#61AFEF;">  eat</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#E5C07B;"> Driver</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#61AFEF;">  drive</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//当使用implements 类，这个类就被当做接口</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//子类都必须重写</span></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#E5C07B;"> Student</span><span style="color:#C678DD;"> implements</span><span style="color:#E5C07B;"> Person</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;">Driver</span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#C678DD;">  @override</span></span>
<span class="line"><span style="color:#61AFEF;">  eat</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // TODO: implement eat</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#D19A66;"> null</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">  @override</span></span>
<span class="line"><span style="color:#61AFEF;">  say</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // TODO: implement say</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#D19A66;"> null</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">  @override</span></span>
<span class="line"><span style="color:#E5C07B;">  String</span><span style="color:#ABB2BF;"> name;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">  @override</span></span>
<span class="line"><span style="color:#61AFEF;">  drive</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // TODO: implement drive</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#D19A66;"> null</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br></div></div><p>当使用 implements 类，这个类就被当做接口</p><h4 id="混合-mixins" tabindex="-1">混合 mixins <a class="header-anchor" href="#混合-mixins" aria-label="Permalink to &quot;混合 mixins&quot;">​</a></h4><p>mixins 实现类的多继承 with</p><p>with 来实现类的继承,不可以显示申明构造方法</p><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">class</span><span style="color:#E5C07B;"> A</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#61AFEF;">  a</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"><span style="color:#61AFEF;">    print</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;a&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#E5C07B;"> B</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#61AFEF;">  b</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"><span style="color:#61AFEF;">    print</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;b&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#E5C07B;"> C</span><span style="color:#C678DD;"> with</span><span style="color:#E5C07B;"> A</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;">B</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#61AFEF;">  c</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"><span style="color:#61AFEF;">    print</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;c&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 调用</span></span>
<span class="line"><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> main</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"><span style="color:#C678DD;">  var</span><span style="color:#ABB2BF;"> c </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> C</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">  c.</span><span style="color:#61AFEF;">a</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">  c.</span><span style="color:#61AFEF;">b</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h4 id="枚举" tabindex="-1">枚举 <a class="header-anchor" href="#枚举" aria-label="Permalink to &quot;枚举&quot;">​</a></h4><p>用户自定义的语义化类型</p><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">//枚举</span></span>
<span class="line"><span style="color:#C678DD;">enum</span><span style="color:#E5C07B;"> Color</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  red, </span><span style="color:#7F848E;font-style:italic;">//0</span></span>
<span class="line"><span style="color:#ABB2BF;">  yellow,</span></span>
<span class="line"><span style="color:#ABB2BF;">  blue</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">showColor</span><span style="color:#ABB2BF;">(name){</span></span>
<span class="line"><span style="color:#C678DD;">  switch</span><span style="color:#ABB2BF;">(name){</span></span>
<span class="line"><span style="color:#C678DD;">    case</span><span style="color:#E5C07B;"> Color</span><span style="color:#ABB2BF;">.blue</span><span style="color:#C678DD;">:</span></span>
<span class="line"><span style="color:#61AFEF;">      print</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;</span><span style="color:#ABB2BF;">$</span><span style="color:#E06C75;font-style:italic;">name</span><span style="color:#98C379;"> is color&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">      break</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">    case</span><span style="color:#E5C07B;"> Color</span><span style="color:#ABB2BF;">.yellow</span><span style="color:#C678DD;">:</span></span>
<span class="line"><span style="color:#61AFEF;">      print</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;</span><span style="color:#ABB2BF;">$</span><span style="color:#E06C75;font-style:italic;">name</span><span style="color:#98C379;"> is color&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">      break</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> main</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"><span style="color:#61AFEF;">   showColor</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Color</span><span style="color:#ABB2BF;">.blue);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h4 id="泛型" tabindex="-1">泛型 <a class="header-anchor" href="#泛型" aria-label="Permalink to &quot;泛型&quot;">​</a></h4><p>作用：类型的约束，把类型申明延迟到使用的时候指定</p><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">class</span><span style="color:#E5C07B;"> User</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//泛型方法 T</span></span>
<span class="line"><span style="color:#61AFEF;">show</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;">&gt;(</span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;"> a){</span></span>
<span class="line"><span style="color:#61AFEF;">  print</span><span style="color:#ABB2BF;">(a);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#E5C07B;"> Person</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;">&gt; {</span></span>
<span class="line"><span style="color:#61AFEF;">  say</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;"> a){</span></span>
<span class="line"><span style="color:#61AFEF;">    print</span><span style="color:#ABB2BF;">(a);</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> main</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  //泛型列表</span></span>
<span class="line"><span style="color:#C678DD;">  var</span><span style="color:#ABB2BF;"> list </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> new</span><span style="color:#E5C07B;"> List</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">&gt;();</span></span>
<span class="line"><span style="color:#ABB2BF;">  list.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;1&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">  var</span><span style="color:#ABB2BF;"> users </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> new</span><span style="color:#E5C07B;"> List</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">User</span><span style="color:#ABB2BF;">&gt;();</span></span>
<span class="line"><span style="color:#ABB2BF;">  users.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#E5C07B;"> User</span><span style="color:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#61AFEF;">  show</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">&gt;(</span><span style="color:#98C379;">&quot;hello&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#61AFEF;">  show</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">int</span><span style="color:#ABB2BF;">&gt;(</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">  var</span><span style="color:#ABB2BF;"> p </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> Person</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">&gt;();</span></span>
<span class="line"><span style="color:#ABB2BF;">  p.</span><span style="color:#61AFEF;">say</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;hello&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h2 id="异步编程" tabindex="-1">异步编程 <a class="header-anchor" href="#异步编程" aria-label="Permalink to &quot;异步编程&quot;">​</a></h2><h3 id="async-await" tabindex="-1">async await <a class="header-anchor" href="#async-await" aria-label="Permalink to &quot;async await&quot;">​</a></h3><h3 id="future" tabindex="-1">Future <a class="header-anchor" href="#future" aria-label="Permalink to &quot;Future&quot;">​</a></h3><h2 id="dart-的-库" tabindex="-1">Dart 的 库 <a class="header-anchor" href="#dart-的-库" aria-label="Permalink to &quot;Dart 的 库&quot;">​</a></h2><h3 id="导入库" tabindex="-1">导入库 <a class="header-anchor" href="#导入库" aria-label="Permalink to &quot;导入库&quot;">​</a></h3><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> ‘libs/hello.dart’; </span><span style="color:#7F848E;font-style:italic;">// 导入库</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> ‘libs/hello.dart’ </span><span style="color:#C678DD;">as</span><span style="color:#ABB2BF;"> hello; </span><span style="color:#7F848E;font-style:italic;">// 导入库 和 设置别名</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> ‘libs/hello.dart’ </span><span style="color:#C678DD;">as</span><span style="color:#ABB2BF;"> hello </span><span style="color:#C678DD;">show</span><span style="color:#ABB2BF;"> getSome; </span><span style="color:#7F848E;font-style:italic;">// 只导入库的getSonme方法 和 设置别名</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="系统内置库" tabindex="-1">系统内置库 <a class="header-anchor" href="#系统内置库" aria-label="Permalink to &quot;系统内置库&quot;">​</a></h3><p>官网：<a href="https://api.dartlang.org" target="_blank" rel="noreferrer">https://api.dartlang.org</a></p><h4 id="导入内置库" tabindex="-1">导入内置库 <a class="header-anchor" href="#导入内置库" aria-label="Permalink to &quot;导入内置库&quot;">​</a></h4><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> ‘dart:io’;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="内置库分类" tabindex="-1">内置库分类 <a class="header-anchor" href="#内置库分类" aria-label="Permalink to &quot;内置库分类&quot;">​</a></h4><p>CORE</p><p>VM</p><p>WEB</p><h3 id="pub-包管理系统中的库" tabindex="-1">Pub 包管理系统中的库 <a class="header-anchor" href="#pub-包管理系统中的库" aria-label="Permalink to &quot;Pub 包管理系统中的库&quot;">​</a></h3><p><a href="https://pub.dev/packages" target="_blank" rel="noreferrer">https://pub.dev/packages</a></p><p><a href="https://pub.fluter-io.cn/packages" target="_blank" rel="noreferrer">https://pub.fluter-io.cn/packages</a></p><p><a href="https://pub.dartlang.org/flutter/" target="_blank" rel="noreferrer">https://pub.dartlang.org/flutter/</a></p><h4 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h4><p>1.项目根目录新建 pubspec.yaml 文件</p><p>2.pubspec.yaml 文件里 配置 名称、描述、依赖</p><ul><li><p>具体配置语法</p><p>3.然后运行 pub get 获取包下载到本地目录</p><p>4.项目引入库 import ’package:http/http.dart‘ as http ;</p></li><li><p>看文档使用</p></li></ul>`,208)]))}const y=a(p,[["render",r]]);export{b as __pageData,y as default};
