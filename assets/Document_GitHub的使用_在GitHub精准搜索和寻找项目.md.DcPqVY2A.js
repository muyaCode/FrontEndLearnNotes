import{_ as e,c as a,o,ah as r}from"./chunks/framework.DqD713j2.js";const d="/FrontEndLearnNotes/assets/image-20240401175304275.nW8c-i5U.png",i="/FrontEndLearnNotes/assets/9ea415bae5f348158b975e2574463837tplv-k3u1fbpfcp-jj-mark3024000q75.BEQkKcAF.webp",s="/FrontEndLearnNotes/assets/8bbb5a03014045ecbd66f1210aa77365tplv-k3u1fbpfcp-jj-mark3024000q75.uwbI9zlb.webp",p="/FrontEndLearnNotes/assets/8f9d381dcd9d4cf7bb9ed8617b45905etplv-k3u1fbpfcp-jj-mark3024000q75.Df5BTH1t.webp",l="/FrontEndLearnNotes/assets/523e2513f9894bd69927e1ca6f489e7ctplv-k3u1fbpfcp-jj-mark3024000q75.BuhLUJvx.webp",q=JSON.parse('{"title":"在 GitHub 精准搜索和寻找项目","description":"","frontmatter":{},"headers":[],"relativePath":"Document/GitHub的使用/在GitHub精准搜索和寻找项目.md","filePath":"Document/GitHub的使用/在GitHub精准搜索和寻找项目.md","lastUpdated":1750954157000}'),c={name:"Document/GitHub的使用/在GitHub精准搜索和寻找项目.md"};function n(h,t,u,b,g,m){return o(),a("div",null,t[0]||(t[0]=[r('<h1 id="在-github-精准搜索和寻找项目" tabindex="-1">在 GitHub 精准搜索和寻找项目 <a class="header-anchor" href="#在-github-精准搜索和寻找项目" aria-label="Permalink to &quot;在 GitHub 精准搜索和寻找项目&quot;">​</a></h1><p>参考：<a href="https://github.com/FrontEndGitHub/FrontEndGitHub/issues/4" target="_blank" rel="noreferrer">恕我直言，你可能连 GitHub 搜索都不会用 - 如何精准搜索的神仙技巧 · Issue #4 · FrontEndGitHub/FrontEndGitHub</a></p><h2 id="_1-直接搜索技术栈相关" tabindex="-1">1.直接搜索技术栈相关 <a class="header-anchor" href="#_1-直接搜索技术栈相关" aria-label="Permalink to &quot;1.直接搜索技术栈相关&quot;">​</a></h2><h2 id="_2-根据-最匹配、最多-star-来进行排序、选择相应的语言、选择仓库或者代码来进行筛选" tabindex="-1">2.根据 最匹配、最多 Star 来进行排序、选择相应的语言、选择仓库或者代码来进行筛选 <a class="header-anchor" href="#_2-根据-最匹配、最多-star-来进行排序、选择相应的语言、选择仓库或者代码来进行筛选" aria-label="Permalink to &quot;2.根据 最匹配、最多 Star 来进行排序、选择相应的语言、选择仓库或者代码来进行筛选&quot;">​</a></h2><p><img src="'+d+'" alt="image-20240401175304275"></p><h2 id="_3-搜索语法" tabindex="-1">3.搜索语法 <a class="header-anchor" href="#_3-搜索语法" aria-label="Permalink to &quot;3.搜索语法&quot;">​</a></h2><ul><li><p>搜索 GitHub 时，你可以构建匹配特定数字和单词的查询</p></li><li><p>1）查询大于或小于另一个值的值</p><ul><li><p>1.您可以使用 &gt;、&gt;=、&lt; 和 &lt;= 搜索大于、大于等于、小于以及小于等于另一个值的值。</p><ul><li><p>&gt;<em>n</em> <a href="https://github.com/search?utf8=%E2%9C%93&amp;q=vue+stars%3A%3E1000&amp;type=Repositories" target="_blank" rel="noreferrer">cats vue:&gt;1000</a> 匹配含有 &quot;vue&quot; 字样、星标超过 1000 个的仓库</p></li><li><p>&gt;=<em>n</em> <a href="https://github.com/search?utf8=%E2%9C%93&amp;q=vue+topics%3A%3E%3D5&amp;type=Repositories" target="_blank" rel="noreferrer">vue topics:&gt;=5</a> 匹配含有 &quot;vue&quot; 字样、有 5 个或更多主题的仓库</p></li><li><p>&lt;<em>n</em> <a href="https://github.com/search?utf8=%E2%9C%93&amp;q=vue+size%3A%3C10000&amp;type=Code" target="_blank" rel="noreferrer">vue size:&lt;10000</a> 匹配小于 10 KB 的文件中含有 &quot;vue&quot; 字样的代码</p></li><li><p>&lt;=<em>n</em> <a href="https://github.com/search?utf8=%E2%9C%93&amp;q=vue+stars%3A%3C%3D50&amp;type=Repositories" target="_blank" rel="noreferrer">vue stars:&lt;=50</a> 匹配含有 &quot;vue&quot; 字样、星标不超过 50 个的仓库</p></li></ul></li><li><p>2.还可以使用 范围查询 搜索大于等于或小于等于另一个值的值。</p><ul><li><p><em>n</em>..* <a href="https://github.com/search?utf8=%E2%9C%93&amp;q=vue+stars%3A10..*&amp;type=Repositories" target="_blank" rel="noreferrer">vue stars:10..*</a> 等同于 stars:&gt;=10 并匹配含有 &quot;vue&quot; 字样、有 10 个或更多星号的仓库。</p></li><li><p>*..<em>n</em> <a href="https://github.com/search?utf8=%E2%9C%93&amp;q=vue+stars%3A%22*..10%22&amp;type=Repositories" target="_blank" rel="noreferrer">vue stars:*..10</a> 等同于 stars:&lt;=10 并匹配含有 &quot;vue&quot; 字样、有不超过 10 个星号的仓库。</p></li></ul></li></ul></li><li><p>2）查询范围之间的值</p><ul><li><p>您可以使用范围语法 <em>n</em>..<em>n</em> 搜索范围内的值，其中第一个数字 n 是最低值，而第二个是最高值。</p></li><li><p><em>n</em>..<em>n</em></p><ul><li><a href="https://github.com/search?utf8=%E2%9C%93&amp;q=cats+stars%3A10..50&amp;type=Repositories" target="_blank" rel="noreferrer">vue stars:10..50</a> 匹配含有 &quot;vue&quot; 字样、有 10 到 50 个星号的仓库。</li></ul></li></ul></li><li><p>3）查询日期</p><ul><li><p>您可以通过使用 &gt;、&gt;=、&lt;、&lt;= 和 范围查询 搜索早于或晚于另一个日期，或者位于日期范围内的日期。</p></li><li><p>日期格式必须遵循 <a href="http://en.wikipedia.org/wiki/ISO_8601" target="_blank" rel="noreferrer">ISO8601</a> 标准，即 YYYY-MM-DD（年-月-日）。</p><ul><li><p>&gt;<em>YYYY</em>-<em>MM</em>-<em>DD</em> <a href="https://github.com/search?utf8=%E2%9C%93&amp;q=vue+created%3A%3E2016-04-29&amp;type=Issues" target="_blank" rel="noreferrer">vue created:&gt;2016-04-29</a> 匹配含有 &quot;vue&quot; 字样、在 2016 年 4 月 29 日之后创建的议题。</p></li><li><p>&gt;=<em>YYYY</em>-<em>MM</em>-<em>DD</em> <a href="https://github.com/search?utf8=%E2%9C%93&amp;q=vue+created%3A%3E%3D2017-04-01&amp;type=Issues" target="_blank" rel="noreferrer">vue created:&gt;=2017-04-01</a> 匹配含有 &quot;vue&quot; 字样、在 2017 年 4 月 1 日或之后创建的议题。</p></li><li><p>&lt;<em>YYYY</em>-<em>MM</em>-<em>DD</em> <a href="https://github.com/search?q=vue+pushed%3A%3C2012-07-05&amp;type=Code&amp;utf8=%E2%9C%93" target="_blank" rel="noreferrer">vue pushed:&lt;2012-07-05</a> 匹配在 2012 年 7 月 5 日之前推送的仓库中含有 &quot;vue&quot; 字样的代码。</p></li><li><p>&lt;=<em>YYYY</em>-<em>MM</em>-<em>DD</em> <a href="https://github.com/search?utf8=%E2%9C%93&amp;q=vue+created%3A%3C%3D2012-07-04&amp;type=Issues" target="_blank" rel="noreferrer">vue created:&lt;=2012-07-04</a> 匹配含有 &quot;vue&quot; 字样、在 2012 年 7 月 4 日或之前创建的议题。</p></li><li><p><em>YYYY</em>-<em>MM</em>-<em>DD</em>..<em>YYYY</em>-<em>MM</em>-<em>DD</em> <a href="https://github.com/search?utf8=%E2%9C%93&amp;q=vue+pushed%3A2016-04-30..2016-07-04&amp;type=Repositories" target="_blank" rel="noreferrer">vue pushed:2016-04-30..2016-07-04</a> 匹配含有 &quot;vue&quot; 字样、在 2016 年 4 月末到 7 月之间推送的仓库。</p></li><li><p><em>YYYY</em>-<em>MM</em>-<em>DD</em>..* <a href="https://github.com/search?utf8=%E2%9C%93&amp;q=vue+created%3A2012-04-30..*&amp;type=Issues" target="_blank" rel="noreferrer">vue created:2012-04-30..*</a> 匹配在 2012 年 4 月 30 日之后创建、含有 &quot;vue&quot; 字样的议题。</p></li><li><p>*..<em>YYYY</em>-<em>MM</em>-<em>DD</em> <a href="https://github.com/search?utf8=%E2%9C%93&amp;q=vue+created%3A*..2012-07-04&amp;type=Issues" target="_blank" rel="noreferrer">vue created:*..2012-04-30</a> 匹配在 2012 年 7 月 4 日之前创建、含有 &quot;vue&quot; 字样的议题。</p></li><li><p>您也可以在日期后添加可选的时间信息 THH:MM:SS+00:00，以便按小时、分钟和秒进行搜索。 这是 T，随后是 HH:MM:SS（时-分-秒）和 UTC 偏移 (+00:00)</p></li><li><p><em>YYYY</em>-<em>MM</em>-<em>DD</em>T<em>HH</em>:<em>MM</em>:<em>SS</em>+<em>00</em>:<em>00</em> <a href="https://github.com/search?utf8=%E2%9C%93&amp;q=vue+created%3A2017-01-01T01%3A00%3A00%2B07%3A00..2017-03-01T15%3A30%3A15%2B07%3A00&amp;type=Issues" target="_blank" rel="noreferrer">vue created:2017-01-01T01:00:00+07:00..2017-03-01T15:30:15+07:00</a> 匹配在 2017 年 1 月 1 日凌晨 1 点（UTC 偏移为 07:00）与 2017 年 3 月 1 日下午 3 点（UTC 偏移为 07:00）之间创建的议题。 UTC 偏移量 07:00，2017 年 3 月 1 日下午 3 点。 UTC 偏移量 07:00。</p></li><li><p><em>YYYY</em>-<em>MM</em>-<em>DD</em>T<em>HH</em>:<em>MM</em>:<em>SS</em>Z <a href="https://github.com/search?utf8=%E2%9C%93&amp;q=vue+created%3A2016-03-21T14%3A11%3A00Z..2016-04-07T20%3A45%3A00Z&amp;type=Issues" target="_blank" rel="noreferrer">vue created:2016-03-21T14:11:00Z..2016-04-07T20:45:00Z</a> 匹配在 2016 年 3 月 21 日下午 2:11 与 2016 年 4 月 7 日晚上 8:45 之间创建的议题。</p></li></ul></li></ul></li><li><p>4）排除特定结果</p><ul><li><p>您可以使用 NOT 语法排除包含特定字词的结果。 NOT 运算符只能用于字符串关键词， 不适用于数字或日期</p><ul><li>NOT <a href="https://github.com/search?q=hello+NOT+world&amp;type=Repositories" target="_blank" rel="noreferrer">hello NOT world</a> 匹配含有 &quot;hello&quot; 字样但不含有 &quot;world&quot; 字样的仓库。</li></ul></li><li><p>缩小搜索结果范围的另一种途径是排除特定的子集。 您可以为任何搜索限定符添加 - 前缀，以排除该限定符匹配的所有结果</p><ul><li><p>-<em>QUALIFIER</em> <a href="https://github.com/search?q=vue+stars%3A%3E10+-language%3Ajavascript&amp;type=Repositories" target="_blank" rel="noreferrer">vue stars:&gt;10 -language:javascript</a> 匹配含有 &quot;vue&quot; 字样、有超过 10 个星号但并非以 JavaScript 编写的仓库。</p></li><li><p>​ <a href="https://github.com/search?utf8=%E2%9C%93&amp;q=mentions%3Adefunkt+-org%3Agithub&amp;type=Issues" target="_blank" rel="noreferrer">mentions:biaochenxuying -org:github</a> 匹配提及 <a href="https://github.com/biaochenxuying" target="_blank" rel="noreferrer">@biaochenxuying</a> 且不在 GitHub 组织仓库中的议题</p></li></ul></li></ul></li><li><p>5）对带有空格的查询使用引号</p><ul><li><p>如果搜索含有空格的查询，您需要用引号将其括起来。 例如：</p><ul><li><p><a href="https://github.com/search?utf8=%E2%9C%93&amp;q=cats+NOT+%22hello+world%22&amp;type=Repositories" target="_blank" rel="noreferrer">cats NOT &quot;hello world&quot;</a> 匹配含有 &quot;vue&quot; 字样但不含有 &quot;hello world&quot; 字样的仓库。</p></li><li><p><a href="https://github.com/search?utf8=%E2%9C%93&amp;q=build+label%3A%22bug+fix%22&amp;type=Issues" target="_blank" rel="noreferrer">build label:&quot;bug fix&quot;</a> 匹配具有标签 &quot;bug fix&quot;、含有 &quot;build&quot; 字样的议题。</p></li></ul></li><li><p>某些非字母数字符号（例如空格）会从引号内的代码搜索查询中删除，因此结果可能出乎意料。</p></li></ul></li><li><h2 id="_6-对带有空格的查询使用引号" tabindex="-1">6）对带有空格的查询使用引号 <a class="header-anchor" href="#_6-对带有空格的查询使用引号" aria-label="Permalink to &quot;6）对带有空格的查询使用引号&quot;">​</a></h2></li><li><h2 id="_7-使用用户名的查询" tabindex="-1">7）使用用户名的查询 <a class="header-anchor" href="#_7-使用用户名的查询" aria-label="Permalink to &quot;7）使用用户名的查询&quot;">​</a></h2></li></ul><h2 id="_4-高级搜索" tabindex="-1">4.高级搜索 <a class="header-anchor" href="#_4-高级搜索" aria-label="Permalink to &quot;4.高级搜索&quot;">​</a></h2><h2 id="开源项目的组成部分" tabindex="-1"><strong>开源项目的组成部分</strong> <a class="header-anchor" href="#开源项目的组成部分" aria-label="Permalink to &quot;**开源项目的组成部分**&quot;">​</a></h2><p>先来了解一下一个开源项目有哪些搜索的关键点：</p><ul><li><p>name: 项目名</p></li><li><p>description: 项目的简要描述</p></li><li><p>项目的源码</p></li><li><p>README.md: 项目的详细情况的介绍</p></li><li><p>star 数和 fork 数</p></li><li><p>项目的最近更新日期：项目是否活跃更新</p></li></ul><h2 id="如何搜索" tabindex="-1"><strong>如何搜索</strong> <a class="header-anchor" href="#如何搜索" aria-label="Permalink to &quot;**如何搜索**&quot;">​</a></h2><p>默认搜索是从 master 分支搜索代码</p><p>搜索语句不能有特殊字符如., : ; / \\ ` &#39; &quot; = * ! ? # $ &amp; + ^ | ~ &lt; &gt; ( ) { } [].</p><p>直接搜索框内 搜索相关项目名：”vue“，然后回车</p><p>搜索结果会显示非常多的开源项目，让你应接不暇，无从下手，很多小伙伴搜到这一步就放弃了，因为项目太多了，根本找不到如何找到自己感兴趣的开源项目，所以这样搜索非常的不准确。所以我们来学习一下稍微精确一点的搜索方法。</p><h3 id="仓库详情" tabindex="-1">仓库详情： <a class="header-anchor" href="#仓库详情" aria-label="Permalink to &quot;仓库详情：&quot;">​</a></h3><p>打开一个项目，看下一个项目主页包含哪些信息，我已经做了标注：</p><p><img src="https://pic2.zhimg.com/80/v2-a9efbdddea6f83c4526cbea8c61179d5_720w.jpg" alt=""></p><p><img src="https://pic3.zhimg.com/80/v2-9b2a8124f8ae833197f00004abcd350e_720w.jpg" alt=""></p><p>上图可以看到，一个项目含有的基本信息，这些信息都可以通过搜索框来来匹配，从而更快的找到目标项目。通常星数，观看数，更新日期，表示了一个项目的火热程度。比如说我想搜索 readme 中含有 “web development” 关键字，主要编程语言为 ”Python“，星数大于 3000 的项目，就可以这样搜索：</p><p>&quot;web development&quot; in:readme language:python stars:&gt;3000</p><p>搜索结果就只有 14 个，大大减轻了自己筛选的负担，结果如下：</p><p><img src="https://pic1.zhimg.com/80/v2-f6e13df10d9d6ddf82de17ac6fb3f124_720w.jpg" alt=""></p><p>下面列举下 GitHub 相关的搜索技巧：</p><p>1.常用词含义</p><ul><li>watch：会持续收到项目的动态</li><li>fork：复制某个项目到自己的仓库</li><li>star：可以理解为点赞</li><li>clone：将项目下载到本地</li><li>follow：关注你感兴趣的作者，会收到他们的动态</li></ul><h3 id="_1、通过-in-关键字搜索" tabindex="-1">1、通过 in 关键字搜索 <a class="header-anchor" href="#_1、通过-in-关键字搜索" aria-label="Permalink to &quot;1、通过 in 关键字搜索&quot;">​</a></h3><p>关键字 in 可以搜索出 GitHub 上的资源名称 name、说明 description 和 readme 文件中的内容。description 就是 About 那一块的信息。</p><p>比如说 <code>python in:name,description,readme</code> 其中，逗号分割表示或的意思，意思就是三者中只要有一个有 python 就行。 （1）公式 xxx in:name 项目名包含 xxx 的 xxx in:description 项目描述包含 xxx 的 xxx in:readme 项目 （2）case 搜索项目名或者 readme 中包含秒杀的项目 seckill in:name,readme</p><h6 id="进行精准搜索的筛选条件-关键字可以是多个-以空格分割" tabindex="-1">进行精准搜索的筛选条件：（关键字可以是多个，以空格分割） <a class="header-anchor" href="#进行精准搜索的筛选条件-关键字可以是多个-以空格分割" aria-label="Permalink to &quot;进行精准搜索的筛选条件：（关键字可以是多个，以空格分割）&quot;">​</a></h6><ul><li><p>in:name [关键词]// 按照仓库项目名搜索</p></li><li><p>in:readme [关键词]// 按照 README 文档内容搜索</p></li><li><p>in:description [关键词]// 按照 description 摘要搜索</p></li></ul><h3 id="_2、通过-stars、fork-数量搜索" tabindex="-1">2、通过 stars、fork 数量搜索 <a class="header-anchor" href="#_2、通过-stars、fork-数量搜索" aria-label="Permalink to &quot;2、通过 stars、fork 数量搜索&quot;">​</a></h3><p>搜索 GitHub 时用 star 数量和 fork 数量判断这个项目是否优秀的标准之一，我们可以使用 大小，小于，范围等方式过滤：</p><p><code>python in:name stars:&gt;1000 forks:&gt;500</code> 就表示星数大于 1000 且 forks 数大于 500，名字中含有 python 的项目。</p><p>如果要指定范围，可以这样：</p><p><code>python in:name stars:5000..10000</code> 表示星数在 5000 到 10000 之间，名字中有 python 的项目。</p><p>（1）公式 :&gt; 或者 :&gt;= 数字 1..数字 2</p><p>（2）case 查找 star 数大于等于 5000 的 springboot 项目 springboot stars:&gt;=5000 查找 fork 数大于 500 的 springcloud 项目 springcloud forks:&gt;500 查找 fork 在 100 到 200 之间并且 stars 数在 80 到 100 之间的 springboot 项目 springboot forks:100..200 stars:80..100</p><h6 id="stars、forks、language、pushed-筛选条件" tabindex="-1">stars、forks、language、pushed 筛选条件： <a class="header-anchor" href="#stars、forks、language、pushed-筛选条件" aria-label="Permalink to &quot;stars、forks、language、pushed 筛选条件：&quot;">​</a></h6><ul><li><p><strong>stars:&gt;[num][关键词]</strong> // 筛选 stars 数量大于某个值的仓库</p></li><li><p><strong>stars:start..end</strong>：stars:10..20[关键词] // 筛选 stars 数量在 start 和 end 区间的仓库</p></li><li><p><strong>fork:start..end</strong> // 筛选 stars 数量在 start 和 end 区间的仓库</p></li><li><p><strong>forks:&gt;3000</strong> // forks 数大于 xxx</p></li><li><p><strong>language:xxx</strong> // 编程语言是 xxx</p></li><li><p><strong>display language:scss</strong> // 搜索用 scss 写的包含 display 的代码</p></li><li><p><strong>pushed:&gt;YYYY-MM-DD</strong> // 最后更新时间大于 YYYY-MM-DD</p></li><li><p><strong>created:&gt;YYYY-MM-DD</strong> // 创建时间大于 YYYY-MM-DD</p></li></ul><h3 id="_3、按项目创建、更新时间搜索" tabindex="-1">3、按项目创建、更新时间搜索 <a class="header-anchor" href="#_3、按项目创建、更新时间搜索" aria-label="Permalink to &quot;3、按项目创建、更新时间搜索&quot;">​</a></h3><p>按创建、更新时间搜索可以把版本老旧的资源筛选出去，比如说:</p><ul><li><p>按创建时间：<code>created:&gt;=YYYY-MM-DD</code></p></li><li><p>按更新时间：<code>pushed:&gt;=YYYY-MM-DD</code></p></li></ul><p>比如说搜索 2021 年之后创建的 Python 项目：<code>python in:name created:&gt;=2021-01-01 pushed:&gt;=2021-01-01</code></p><h3 id="_4、按文件、路径内容搜索" tabindex="-1">4、按文件、路径内容搜索 <a class="header-anchor" href="#_4、按文件、路径内容搜索" aria-label="Permalink to &quot;4、按文件、路径内容搜索&quot;">​</a></h3><p>在 GitHub 还可以按文件内容和文件路径搜索，不过有一定的限制，首先必须登录，此外项目的文件不能太多，文件不能太大，在需要搜索 fork 资源 时，只能搜索到 star 数量比父级资源多的 fork 资源，并需要加上 fork:true 查询，搜索结果最多可显示同一文件的两个分段，但文件内可能有更多结果，不能使用通配符。</p><p>语法格式：</p><ul><li><p>按文件内容 <code>关键字 in:file</code></p></li><li><p>按文件路径 <code>关键字 in:path</code></p></li></ul><p>比如：<code>python in:file,path</code></p><h6 id="搜索路径和搜索文件" tabindex="-1">搜索路径和搜索文件： <a class="header-anchor" href="#搜索路径和搜索文件" aria-label="Permalink to &quot;搜索路径和搜索文件：&quot;">​</a></h6><p><strong>octocat in:file</strong> // 搜索文件中有 octocat 的代码</p><p><strong>octocat in:path</strong> // 搜索路径中有 octocat 的代码</p><p><strong>octocat in:file,path</strong> // 搜索路径中有 octocat 的代码或者文件中有 octocat 的代码</p><p><strong>console path:app/public</strong> // 在 app/public directory 目录下搜索 console 关键字</p><p><strong>form path:cgi-bin language:perl</strong> // 搜索 cgi-bin 目录下包含 form 的 perl 代码</p><h6 id="通过文件名搜索" tabindex="-1">通过文件名搜索 <a class="header-anchor" href="#通过文件名搜索" aria-label="Permalink to &quot;通过文件名搜索&quot;">​</a></h6><p><strong>filename:.vimrc commands</strong> // 搜索 文件名匹配*.vimrc* 并且包含 commands 的代码</p><p><strong>minitest filename:test_helper path:test language:ruby</strong> // 在 test 目录中搜索包含 minitest 且文件名匹配&quot;<em>test_helper</em>&quot;的代码</p><p><strong>form path:cgi-bin extension:pm</strong> // 搜索 cgi-bin 目录下以 pm 为扩展名的代码</p><p><strong>icon size:&gt;200000 extension:css</strong> // 搜索超过 200kb 包含 icon 的 css 代码</p><p><strong>user:github extension:rb</strong> // 通过用户或者组织来查找</p><h3 id="_5、按文件名、大小、扩展名搜索" tabindex="-1">5、按文件名、大小、扩展名搜索 <a class="header-anchor" href="#_5、按文件名、大小、扩展名搜索" aria-label="Permalink to &quot;5、按文件名、大小、扩展名搜索&quot;">​</a></h3><p>语法格式如下：</p><ul><li><p>按文件名搜索：<code>关键字 filename:FILENAME</code></p></li><li><p>按文件大小搜索：<code>关键字 size:&gt;=大小</code></p></li><li><p>按扩展名搜索：<code>关键字 extension:EXTENSION</code></p></li></ul><p>举个例子：<code>python filename:aaa size:&gt;10 extension:py</code></p><p><img src="https://pic3.zhimg.com/80/v2-64195fcd1dcff12fbc0c1a18673f13e6_720w.jpg" alt=""></p><h3 id="_6、按编程语言来搜索" tabindex="-1">6、按编程语言来搜索 <a class="header-anchor" href="#_6、按编程语言来搜索" aria-label="Permalink to &quot;6、按编程语言来搜索&quot;">​</a></h3><p>语法格式：<code>关键字 language:LANGUAGE</code></p><p>比如：<code>python language:javascript</code> 表示搜索 javascrip 语言中关于 python 的项目。</p><p>搜索一个 springboot 项目，你是否就直接输入 springboot 关键字直接搜索，但是搜索出了 118,085 个结果，当然了，你还可以做一些简单的排序，比如通过 stars、forks 的数量。</p><p><img src="https://pic3.zhimg.com/80/v2-3b3c25fda57ed285028b16f4d509bbc6_720w.jpg" alt=""></p><h3 id="_7、根据某个人或组织进行搜索" tabindex="-1">7、根据某个人或组织进行搜索 <a class="header-anchor" href="#_7、根据某个人或组织进行搜索" aria-label="Permalink to &quot;7、根据某个人或组织进行搜索&quot;">​</a></h3><ul><li>这个可以用来精准搜索你关注的大神是不是提交了新的项目</li></ul><ol><li>搜索特定个人的项目： <ul><li><strong>语法：</strong> <code>user:用户名 关键字</code></li></ul></li><li>搜索特定组织的项目： <ul><li><strong>语法：</strong> <code>org:组织名 关键字</code></li></ul></li></ol><h6 id="某个组织或个人的仓库、被关注人数-followers" tabindex="-1">某个组织或个人的仓库、被关注人数 followers： <a class="header-anchor" href="#某个组织或个人的仓库、被关注人数-followers" aria-label="Permalink to &quot;某个组织或个人的仓库、被关注人数 followers：&quot;">​</a></h6><p><strong>org:wang</strong></p><p><strong>user:joshlong</strong></p><p><strong>followers:&gt;5000</strong></p><table tabindex="0"><thead><tr><th>示例</th><th>说明</th></tr></thead><tbody><tr><td>user:torvalds linux kernel</td><td>搜索用户 Linus Torvalds 的项目中包含 &quot;linux kernel&quot; 的内容</td></tr><tr><td>org:Microsoft azure cloud</td><td>搜索 Microsoft 组织的项目中包含 &quot;azure cloud&quot; 的内容</td></tr></tbody></table><p><img src="'+i+'" alt="torvalds"></p><h3 id="_8、根据仓库的-license-搜索" tabindex="-1">8、根据仓库的 LICENSE 搜索 <a class="header-anchor" href="#_8、根据仓库的-license-搜索" aria-label="Permalink to &quot;8、根据仓库的 LICENSE 搜索&quot;">​</a></h3><p>在使用任何开源项目之前，最好详细阅读并理解项目所采用的具体授权协议，因为有的开源项目作者是明确禁止商用的，如果你使用在商业上，后面会很麻烦的！</p><p><strong>按照许可证搜索：</strong></p><ul><li><strong>语法：</strong> <code>license:许可证类型 关键字</code></li></ul><h6 id="仓库的大小和开源许可证筛选" tabindex="-1">仓库的大小和开源许可证筛选： <a class="header-anchor" href="#仓库的大小和开源许可证筛选" aria-label="Permalink to &quot;仓库的大小和开源许可证筛选：&quot;">​</a></h6><p><strong>size:&gt;=[num]</strong>    // num 以 K 为单位</p><p><strong>license:apache-2.0</strong></p><table tabindex="0"><thead><tr><th>示例</th><th>说明</th></tr></thead><tbody><tr><td>license:gpl encryption</td><td>搜索包含 GPL 许可证的仓库中含有 &quot;encryption&quot; 关键字的项目</td></tr></tbody></table><p><img src="'+s+'" alt="img"></p><h3 id="_5-高亮显示某一行代码" tabindex="-1">5.高亮显示某一行代码 <a class="header-anchor" href="#_5-高亮显示某一行代码" aria-label="Permalink to &quot;5.高亮显示某一行代码&quot;">​</a></h3><p>地址后面紧跟#L 数字</p><p>地址后面紧跟#L 数字 1-数字 2</p><p>例如：<a href="https://github.com/527515025/springBoot/blob/master/springboot-mybatis/src/main/java/com/us/example/util/CommonUtil.java#L21-L47" target="_blank" rel="noreferrer">springBoot/CommonUtil.java at master · 527515025/springBoot · GitHub</a></p><h3 id="_6-项目内搜索" tabindex="-1">6.项目内搜索 <a class="header-anchor" href="#_6-项目内搜索" aria-label="Permalink to &quot;6.项目内搜索&quot;">​</a></h3><p>英文 t：<a href="https://help.github.com/en/articles/keyboard-shortcuts" target="_blank" rel="noreferrer">https://help.github.com/en/articles/keyboard-shortcuts</a></p><h3 id="_7-搜索某个地区内的牛逼人物" tabindex="-1">7.搜索某个地区内的牛逼人物 <a class="header-anchor" href="#_7-搜索某个地区内的牛逼人物" aria-label="Permalink to &quot;7.搜索某个地区内的牛逼人物&quot;">​</a></h3><p>（1）公式</p><p>location：地区</p><p>language：语言</p><p>（2）case</p><p>location:guangzhou language:java</p><h3 id="_4-awesome-关键字" tabindex="-1">4.&quot;awesome&quot;关键字 <a class="header-anchor" href="#_4-awesome-关键字" aria-label="Permalink to &quot;4.&quot;awesome&quot;关键字&quot;">​</a></h3><p>搜索优秀的 redis 相关项目，框架，教程</p><p>GitHub 上有各种 awesome 系列，简单来说就是这个系列搜罗整理了 GitHub 上各领域的资源大汇总，比如有 awesome-android, awesome-ios, awesome-java, awesome-Python 等等。</p><p>例如:awesome redis</p><p>（1）公式 awesome 关键字 awesome 系列一般是用来收集学习、工具、书籍类相关的项目 （2）case 搜索优秀的 redis 相关的项目，包括框架、教程等 awesome redis</p><h3 id="_10、热门搜索-github-trend-和-github-topic" tabindex="-1">10、热门搜索（GitHub Trend 和 GitHub Topic） <a class="header-anchor" href="#_10、热门搜索-github-trend-和-github-topic" aria-label="Permalink to &quot;10、热门搜索（GitHub Trend 和 GitHub Topic）&quot;">​</a></h3><ul><li>GitHub Trend 允许你查看当前在 GitHub 上受欢迎的项目，根据不同的编程语言和时间范围进行筛选</li></ul><p><img src="'+p+'" alt="img"></p><ul><li>GitHub Topic 是一种对项目进行标签分类的方式。GitHub 上的项目可以被分配到不同的主题标签，使得你可以通过主题来浏览和发现项目。</li></ul><p><img src="'+l+'" alt="img"></p><h3 id="高级搜索" tabindex="-1">高级搜索 <a class="header-anchor" href="#高级搜索" aria-label="Permalink to &quot;高级搜索&quot;">​</a></h3><p>除了使用这种特定的限定词来筛选之外，其实 github 还给我们提供了一种筛选的搜索链接。</p><p><a href="https://github.com/search/advanced" target="_blank" rel="noreferrer">https://github.com/search/advanced</a></p><p>其实就是界面化的搜索条件筛选框，想不起搜索关键词或者单词的时候可以收藏这个高级搜索界面哈。</p><p><img src="https://pic4.zhimg.com/80/v2-83d13cedef24e57a976b7690a41b963f_720w.jpg" alt=""></p><h2 id="高级的搜索" tabindex="-1">高级的搜索 <a class="header-anchor" href="#高级的搜索" aria-label="Permalink to &quot;高级的搜索&quot;">​</a></h2><h3 id="按仓库名称、说明或自述文件内容搜索" tabindex="-1">按仓库名称、说明或自述文件内容搜索 <a class="header-anchor" href="#按仓库名称、说明或自述文件内容搜索" aria-label="Permalink to &quot;按仓库名称、说明或自述文件内容搜索&quot;">​</a></h3><p>通过 <code>in</code> 限定符，您可以将搜索限制为仓库名称、仓库说明、自述文件内容或这些的任意组合。</p><p>如果省略此限定符，则只搜索仓库名称和说明。</p><table tabindex="0"><thead><tr><th>限定符</th><th>示例</th></tr></thead><tbody><tr><td><code>in:name</code></td><td><strong>vue in:name</strong> 匹配其名称中含有 &quot;jquery&quot; 的仓库。</td></tr><tr><td><code>in:description</code></td><td><strong>vue in:name,description</strong> 匹配其名称或说明中含有 &quot;vue&quot; 的仓库。</td></tr><tr><td><code>in:readme</code></td><td><strong>vue in:readme</strong> 匹配其自述文件中提及 &quot;vue&quot; 的仓库。</td></tr><tr><td><code>repo:owner/name</code></td><td><strong>repo:haha/blog</strong> 匹配特定仓库名称，比如：用户为 biaochenxuhaha。</td></tr></tbody></table><p><img src="https://mmbiz.qpic.cn/sz_mmbiz_png/icLlxzKkLGIdGEBlUsciaFEhJwsnIBX2yCSa1QxwPfPovyJvxAjFJDiaqvEd4RUanzOk96gMjGm2IvP2ahfLSzF1Q/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt=""></p><h3 id="在用户或组织的仓库内搜索" tabindex="-1">在用户或组织的仓库内搜索 <a class="header-anchor" href="#在用户或组织的仓库内搜索" aria-label="Permalink to &quot;在用户或组织的仓库内搜索&quot;">​</a></h3><p>要在 <code>特定用户或组织</code> 拥有的所有仓库中搜索，您可以使用 <code>user</code> 或 <code>org</code> 限定符。</p><table tabindex="0"><thead><tr><th>限定符</th><th>示例</th></tr></thead><tbody><tr><td><code>user:*USERNAME*</code></td><td><strong>user:haha forks:&gt;=100</strong> 匹配来自 @biaochenxuhaha 复刻的仓库。</td></tr><tr><td><code>org:*ORGNAME*</code></td><td><strong>org:github</strong> 匹配来自 GitHub 的仓库。</td></tr></tbody></table><h3 id="按仓库大小搜索" tabindex="-1">按仓库大小搜索 <a class="header-anchor" href="#按仓库大小搜索" aria-label="Permalink to &quot;按仓库大小搜索&quot;">​</a></h3><p><code>size</code> 限定符使用 大于、小于和范围限定符 查找匹配特定大小（以千字节为单位）的仓库。</p><table tabindex="0"><thead><tr><th>限定符</th><th>示例</th></tr></thead><tbody><tr><td><code>size:*n*</code></td><td><strong>size:1000</strong> 匹配恰好为 1 MB 的仓库。</td></tr><tr><td></td><td><strong>size:&gt;=30000</strong> 匹配至少为 30 MB 的仓库。</td></tr><tr><td></td><td><strong>size:&lt;50</strong> 匹配小于 50 KB 的仓库。</td></tr><tr><td></td><td><strong>size:50..120</strong> 匹配介于 50 KB 与 120 KB 之间的仓库。</td></tr></tbody></table><p><img src="https://mmbiz.qpic.cn/sz_mmbiz_png/icLlxzKkLGIdGEBlUsciaFEhJwsnIBX2yCzASAZwmdWLp4lz9PKLXia7kTDqCBeOzUIt8yqbelWVmjjPtlS22TTIQ/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt=""></p><h3 id="按关注者数量搜索" tabindex="-1">按关注者数量搜索 <a class="header-anchor" href="#按关注者数量搜索" aria-label="Permalink to &quot;按关注者数量搜索&quot;">​</a></h3><p>您可以使用 <code>followers</code> 限定符以及大于、小于和范围限定符基于仓库拥有的关注者数量过滤仓库。</p><table tabindex="0"><thead><tr><th>限定符</th><th>示例</th></tr></thead><tbody><tr><td><code>followers:*n*</code></td><td><strong>node followers:&gt;=10000</strong> 匹配有 10,000 或更多关注者提及文字 &quot;node&quot; 的仓库。</td></tr><tr><td></td><td><strong>styleguide linter followers:1..10</strong> 匹配拥有 1 到 10 个关注者并且提及 &quot;styleguide linter&quot; 一词的的仓库。</td></tr></tbody></table><p><img src="https://mmbiz.qpic.cn/sz_mmbiz_png/icLlxzKkLGIdGEBlUsciaFEhJwsnIBX2yCN9NbvGsjNK09VOl2C39sVaDG5sAoXickMu7AcGoEfICLl6iaybVvJLBg/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt=""></p><p><img src="https://mmbiz.qpic.cn/sz_mmbiz_png/icLlxzKkLGIdGEBlUsciaFEhJwsnIBX2yCLnficJXCLibUH27oO22vaXhQANUOibIg6q3nKy41Gp5aBQ7oIHyUfAkkw/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt=""></p><h3 id="按复刻数量搜索" tabindex="-1">按复刻数量搜索 <a class="header-anchor" href="#按复刻数量搜索" aria-label="Permalink to &quot;按复刻数量搜索&quot;">​</a></h3><p><code>forks</code> 限定符使用大于、小于和范围限定符指定仓库应具有的复刻数量。</p><table tabindex="0"><thead><tr><th>限定符</th><th>示例</th></tr></thead><tbody><tr><td><code>forks:*n*</code></td><td><strong>forks:5</strong> 匹配只有 5 个复刻的仓库。</td></tr><tr><td></td><td><strong>forks:&gt;=205</strong> 匹配具有至少 205 个复刻的仓库。</td></tr><tr><td></td><td><strong>forks:&lt;90</strong> 匹配具有少于 90 个复刻的仓库。</td></tr><tr><td></td><td><strong>forks:10..20</strong> 匹配具有 10 到 20 个复刻的仓库。</td></tr></tbody></table><p><img src="https://mmbiz.qpic.cn/sz_mmbiz_png/icLlxzKkLGIdGEBlUsciaFEhJwsnIBX2yC3mN7gjtfO8WCXDcjEUgLOwt3KJ1vickT0ibWAR6wkLJEGbCjjOe8iakmw/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt=""></p><h3 id="按星号数量搜索" tabindex="-1">按星号数量搜索 <a class="header-anchor" href="#按星号数量搜索" aria-label="Permalink to &quot;按星号数量搜索&quot;">​</a></h3><p>您可以使用 大于、小于和范围限定符 基于仓库具有的 星标 数量搜索仓库</p><table tabindex="0"><thead><tr><th>限定符</th><th>示例</th></tr></thead><tbody><tr><td><code>stars:*n*</code></td><td><strong>stars:500</strong> 匹配恰好具有 500 个星号的仓库。</td></tr><tr><td></td><td><strong>stars:10..20</strong> 匹配具有 10 到 20 个星号、小于 1000 KB 的仓库。</td></tr><tr><td></td><td><strong>stars:&gt;=500 fork:true language:vue</strong> 匹配具有至少 500 个星号，包括复刻的星号（以 vue 编写）的仓库。</td></tr></tbody></table><p><img src="https://mmbiz.qpic.cn/sz_mmbiz_png/icLlxzKkLGIdGEBlUsciaFEhJwsnIBX2yCQBdYoSPJibIHlEnLEzjHFZtO612HblPGVxPzGL4P18XkfbLBhxR3r0w/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt=""></p><h3 id="按仓库创建或上次更新时间搜索" tabindex="-1">按仓库创建或上次更新时间搜索 <a class="header-anchor" href="#按仓库创建或上次更新时间搜索" aria-label="Permalink to &quot;按仓库创建或上次更新时间搜索&quot;">​</a></h3><p>你可以基于创建时间或上次更新时间过滤仓库。</p><ul><li><p>对于仓库创建，您可以使用 <code>created</code> 限定符；</p></li><li><p>要了解仓库上次更新的时间，您要使用 <code>pushed</code> 限定符。 <code>pushed</code> 限定符将返回仓库列表，按仓库中任意分支上最近进行的提交排序。</p></li></ul><p>两者均采用日期作为参数。日期格式必须遵循 ISO8601 标准，即 <code>YYYY-MM-DD</code>（年-月-日）。</p><p>也可以在日期后添加可选的时间信息 <code>THH:MM:SS+00:00</code>，以便按小时、分钟和秒进行搜索。这是 <code>T</code>，随后是 <code>HH:MM:SS</code>（时-分-秒）和 UTC 偏移 (<code>+00:00</code>)。</p><p>日期支持 <code>大于、小于和范围限定符</code>。</p><table tabindex="0"><thead><tr><th>限定符</th><th>示例</th></tr></thead><tbody><tr><td><code>created:*YYYY-MM-DD*</code></td><td><strong>vue created:&lt;2020-01-01</strong> 匹配具有 &quot;vue&quot; 字样、在 2020 年之前创建的仓库。</td></tr><tr><td><code>pushed:*YYYY-MM-DD*</code></td><td><strong>css pushed:&gt;2020-02-01</strong> 匹配具有 &quot;css&quot; 字样、在 2020 年 1 月之后收到推送的仓库。</td></tr><tr><td></td><td><strong>vue pushed:&gt;=2020-03-06 fork:only</strong> 匹配具有 &quot;vue&quot; 字样、在 2020 年 3 月 6 日或之后收到推送并且作为复刻的仓库。</td></tr></tbody></table><p><img src="https://mmbiz.qpic.cn/sz_mmbiz_png/icLlxzKkLGIdGEBlUsciaFEhJwsnIBX2yCoWshDlLH8dZsIRa5RtY2ZmxEvPmaqjMKovhgaq6W4picJh0DBDadlsA/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt=""></p><h3 id="按语言搜索" tabindex="-1">按语言搜索 <a class="header-anchor" href="#按语言搜索" aria-label="Permalink to &quot;按语言搜索&quot;">​</a></h3><p>您可以基于其编写采用的主要语言搜索仓库。</p><table tabindex="0"><thead><tr><th>限定符</th><th>示例</th></tr></thead><tbody><tr><td><code>language:*LANGUAGE*</code></td><td><strong>vue language:javascript</strong> 匹配具有 &quot;vue&quot; 字样、以 JavaScript 编写的仓库。</td></tr></tbody></table><p><img src="https://mmbiz.qpic.cn/sz_mmbiz_png/icLlxzKkLGIdGEBlUsciaFEhJwsnIBX2yCmCxQkG6EudA5U1n2cNHeDgugicyPIGUfTXkdZIqBg96OcEYb27HjLSw/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt=""></p><h3 id="按主题搜索" tabindex="-1">按主题搜索 <a class="header-anchor" href="#按主题搜索" aria-label="Permalink to &quot;按主题搜索&quot;">​</a></h3><p>您可以查找归类为特定 主题 的所有仓库。</p><table tabindex="0"><thead><tr><th>限定符</th><th>示例</th></tr></thead><tbody><tr><td><code>topic:*TOPIC*</code></td><td><strong>topic:algorithm</strong> 匹配已归类为 &quot;algorithm&quot; 主题的仓库。</td></tr></tbody></table><p>估计又有很多人不知道 GitHub 上有话题一说的吧。</p><p><img src="https://mmbiz.qpic.cn/sz_mmbiz_png/icLlxzKkLGIdGEBlUsciaFEhJwsnIBX2yC76bJAsxUZuoAj6VaCM7jlHXFN0eoAsAxqvux0HFkSw2kKHehnltoOg/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt=""></p><p><img src="https://mmbiz.qpic.cn/sz_mmbiz_png/icLlxzKkLGIdGEBlUsciaFEhJwsnIBX2yCHkqcYe0x7vTd8KK3F7BJW3rBPGhx1a3QkWJ92cj2SeK05e4ppVFwjA/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt=""></p><h3 id="按主题数量搜索" tabindex="-1">按主题数量搜索 <a class="header-anchor" href="#按主题数量搜索" aria-label="Permalink to &quot;按主题数量搜索&quot;">​</a></h3><p>您可以使用 <code>topics</code> 限定符以及 大于、小于和范围限定符 按应用于仓库的 主题 数量搜索仓库。</p><table tabindex="0"><thead><tr><th>限定符</th><th>示例</th></tr></thead><tbody><tr><td><code>topics:*n*</code></td><td><strong>topics:5</strong> 匹配具有五个主题的仓库。</td></tr><tr><td></td><td><strong>topics:&gt;3</strong> 匹配超过三个主题的仓库。</td></tr></tbody></table><p><img src="https://mmbiz.qpic.cn/sz_mmbiz_png/icLlxzKkLGIdGEBlUsciaFEhJwsnIBX2yCfA0M8XJQEXunHqS3YHic6j1swrBNMZwJ4P0piauBW5I8Ic5jzfgnClgw/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt=""></p><h3 id="使用可视界面搜索" tabindex="-1">使用可视界面搜索 <a class="header-anchor" href="#使用可视界面搜索" aria-label="Permalink to &quot;使用可视界面搜索&quot;">​</a></h3><p>还可以使用 search page 或 advanced search page 搜索 GitHub 哦。</p><p>这种搜索方式，估计就更少人知道了吧。</p><p>advanced search page 提供用于构建搜索查询的可视界面。</p><p>您可以按各种因素过滤搜索，例如仓库具有的星标数或复刻数。在填写高级搜索字段时，您的查询将在顶部搜索栏中自动构建。</p><p><img src="https://mmbiz.qpic.cn/sz_mmbiz_gif/icLlxzKkLGIdGEBlUsciaFEhJwsnIBX2yCco0zcJEAEp7K2icCImFiczTCse4r7xF0NicU0Wn4UAMdZrIXcGTaaI1icw/640?wx_fmt=gif&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="">高级搜索</p><h3 id="按许可搜索" tabindex="-1">按许可搜索 <a class="header-anchor" href="#按许可搜索" aria-label="Permalink to &quot;按许可搜索&quot;">​</a></h3><p>您可以按其许可搜索仓库。您必须使用许可关键词按特定许可或许可系列过滤仓库。</p><table tabindex="0"><thead><tr><th>限定符</th><th>示例</th></tr></thead><tbody><tr><td><code>license:*LICENSE_KEYWORD*</code></td><td><strong>license:apache-2.0</strong> 匹配根据 Apache License 2.0 授权的仓库。</td></tr></tbody></table><h3 id="按公共或私有仓库搜索" tabindex="-1">按公共或私有仓库搜索 <a class="header-anchor" href="#按公共或私有仓库搜索" aria-label="Permalink to &quot;按公共或私有仓库搜索&quot;">​</a></h3><p>您可以基于仓库是公共还是私有来过滤搜索。</p><table tabindex="0"><thead><tr><th>限定符</th><th>示例</th></tr></thead><tbody><tr><td><code>is:public</code></td><td><strong>is:public org:github</strong> 匹配 GitHub 拥有的公共仓库。</td></tr><tr><td><code>is:private</code></td><td><strong>is:private pages</strong> 匹配您有访问权限且包含 &quot;pages&quot; 字样的私有仓库。</td></tr></tbody></table><h3 id="按公共或私有仓库搜索-1" tabindex="-1">按公共或私有仓库搜索 <a class="header-anchor" href="#按公共或私有仓库搜索-1" aria-label="Permalink to &quot;按公共或私有仓库搜索&quot;">​</a></h3><p>您可以根据仓库是否为镜像以及托管于其他位置托管来搜索它们。</p><table tabindex="0"><thead><tr><th>限定符</th><th>示例</th></tr></thead><tbody><tr><td><code>mirror:true</code></td><td><strong>mirror:true GNOME</strong> 匹配是镜像且包含 &quot;GNOME&quot; 字样的仓库。</td></tr><tr><td><code>mirror:false</code></td><td><strong>mirror:false GNOME</strong> 匹配并非镜像且包含 &quot;GNOME&quot; 字样的仓库。</td></tr></tbody></table><h3 id="基于仓库是否已存档搜索" tabindex="-1">基于仓库是否已存档搜索 <a class="header-anchor" href="#基于仓库是否已存档搜索" aria-label="Permalink to &quot;基于仓库是否已存档搜索&quot;">​</a></h3><p>你可以基于仓库是否已存档来搜索仓库。</p><table tabindex="0"><thead><tr><th>限定符</th><th>示例</th></tr></thead><tbody><tr><td><code>archived:true</code></td><td><strong>archived:true GNOME</strong> 匹配已存档且包含 &quot;GNOME&quot; 字样的仓库。</td></tr><tr><td><code>archived:false</code></td><td><strong>archived:false GNOME</strong> 匹配未存档且包含 &quot;GNOME&quot; 字样的仓库。</td></tr></tbody></table><h3 id="基于具有-good-first-issue-或-help-wanted-标签的议题数量搜索" tabindex="-1">基于具有 <code>good first issue</code> 或 <code>help wanted</code> 标签的议题数量搜索 <a class="header-anchor" href="#基于具有-good-first-issue-或-help-wanted-标签的议题数量搜索" aria-label="Permalink to &quot;基于具有 `good first issue` 或 `help wanted` 标签的议题数量搜索&quot;">​</a></h3><p>您可以使用限定符 <code>help-wanted-issues:&gt;n</code> 和 <code>good-first-issues:&gt;n</code> 搜索具有最少数量标签为 <code>help-wanted</code> 或 <code>good-first-issue</code> 议题的仓库。</p><table tabindex="0"><thead><tr><th>限定符</th><th>示例</th></tr></thead><tbody><tr><td><code>good-first-issues:&gt;n</code></td><td><strong>good-first-issues:&gt;2 javascript</strong> 匹配具有超过两个标签为 <code>good-first-issue</code> 的议题且包含 &quot;javascript&quot; 字样的仓库。</td></tr><tr><td><code>help-wanted-issues:&gt;n</code></td><td><strong>help-wanted-issues:&gt;4 react</strong> 匹配具有超过四个标签为 <code>help-wanted</code> 的议题且包含 &quot;React&quot; 字样的仓库。</td></tr></tbody></table><h2 id="搜索语法" tabindex="-1">搜索语法 <a class="header-anchor" href="#搜索语法" aria-label="Permalink to &quot;搜索语法&quot;">​</a></h2><p>搜索 GitHub 时，你可以构建匹配特定数字和单词的查询。</p><h3 id="查询大于或小于另一个值的值" tabindex="-1">查询大于或小于另一个值的值 <a class="header-anchor" href="#查询大于或小于另一个值的值" aria-label="Permalink to &quot;查询大于或小于另一个值的值&quot;">​</a></h3><p>您可以使用 <code>&gt;</code>、<code>&gt;=</code>、<code>&lt;</code> 和 <code>&lt;=</code> 搜索大于、大于等于、小于以及小于等于另一个值的值。</p><table tabindex="0"><thead><tr><th>查询</th><th>示例</th></tr></thead><tbody><tr><td><code>&gt;*n*</code></td><td><strong>cats vue:&gt;1000</strong> 匹配含有 &quot;vue&quot; 字样、星标超过 1000 个的仓库。</td></tr><tr><td><code>&gt;=*n*</code></td><td><strong>vue topics:&gt;=5</strong> 匹配含有 &quot;vue&quot; 字样、有 5 个或更多主题的仓库。</td></tr><tr><td><code>&lt;*n*</code></td><td><strong>vue size:&lt;10000</strong> 匹配小于 10 KB 的文件中含有 &quot;vue&quot; 字样的代码。</td></tr><tr><td><code>&lt;=*n*</code></td><td><strong>vue stars:&lt;=50</strong> 匹配含有 &quot;vue&quot; 字样、星标不超过 50 个的仓库。</td></tr></tbody></table><p>您还可以使用 范围查询 搜索大于等于或小于等于另一个值的值。</p><table tabindex="0"><thead><tr><th>查询</th><th>示例</th></tr></thead><tbody><tr><td><code>*n*..*</code></td><td><strong>vue stars:10..*</strong> 等同于 <code>stars:&gt;=10</code> 并匹配含有 &quot;vue&quot; 字样、有 10 个或更多星号的仓库。</td></tr><tr><td><code>*..*n*</code></td><td><strong>vue stars:*..10</strong> 等同于 <code>stars:&lt;=10</code> 并匹配含有 &quot;vue&quot; 字样、有不超过 10 个星号的仓库。</td></tr></tbody></table><h3 id="查询范围之间的值" tabindex="-1">查询范围之间的值 <a class="header-anchor" href="#查询范围之间的值" aria-label="Permalink to &quot;查询范围之间的值&quot;">​</a></h3><p>您可以使用范围语法 <code>*n*..*n*</code> 搜索范围内的值，其中第一个数字 <em>n</em> 是最低值，而第二个是最高值。</p><table tabindex="0"><thead><tr><th>查询</th><th>示例</th></tr></thead><tbody><tr><td><code>*n*..*n*</code></td><td><strong>vue stars:10..50</strong> 匹配含有 &quot;vue&quot; 字样、有 10 到 50 个星号的仓库。</td></tr></tbody></table><h3 id="查询日期" tabindex="-1">查询日期 <a class="header-anchor" href="#查询日期" aria-label="Permalink to &quot;查询日期&quot;">​</a></h3><p>您可以通过使用 <code>&gt;</code>、<code>&gt;=</code>、<code>&lt;</code>、<code>&lt;=</code> 和 范围查询 搜索早于或晚于另一个日期，或者位于日期范围内的日期。</p><p>日期格式必须遵循 ISO8601 标准，即 <code>YYYY-MM-DD</code>（年-月-日）。</p><table tabindex="0"><thead><tr><th>查询</th><th>示例</th></tr></thead><tbody><tr><td><code>&gt;*YYYY*-*MM*-*DD*</code></td><td><strong>vue created:&gt;2016-04-29</strong> 匹配含有 &quot;vue&quot; 字样、在 2016 年 4 月 29 日之后创建的议题。</td></tr><tr><td><code>&gt;=*YYYY*-*MM*-*DD*</code></td><td><strong>vue created:&gt;=2017-04-01</strong> 匹配含有 &quot;vue&quot; 字样、在 2017 年 4 月 1 日或之后创建的议题。</td></tr><tr><td><code>&lt;*YYYY*-*MM*-*DD*</code></td><td><strong>vue pushed:&lt;2012-07-05</strong> 匹配在 2012 年 7 月 5 日之前推送的仓库中含有 &quot;vue&quot; 字样的代码。</td></tr><tr><td><code>&lt;=*YYYY*-*MM*-*DD*</code></td><td><strong>vue created:&lt;=2012-07-04</strong> 匹配含有 &quot;vue&quot; 字样、在 2012 年 7 月 4 日或之前创建的议题。</td></tr><tr><td><code>*YYYY*-*MM*-*DD*..*YYYY*-*MM*-*DD*</code></td><td><strong>vue pushed:2016-04-30..2016-07-04</strong> 匹配含有 &quot;vue&quot; 字样、在 2016 年 4 月末到 7 月之间推送的仓库。</td></tr><tr><td><code>*YYYY*-*MM*-*DD*..*</code></td><td><strong>vue created:2012-04-30..*</strong> 匹配在 2012 年 4 月 30 日之后创建、含有 &quot;vue&quot; 字样的议题。</td></tr><tr><td><code>*..*YYYY*-*MM*-*DD*</code></td><td><strong>vue created:*..2012-04-30</strong> 匹配在 2012 年 7 月 4 日之前创建、含有 &quot;vue&quot; 字样的议题。</td></tr></tbody></table><p>您也可以在日期后添加可选的时间信息 <code>THH:MM:SS+00:00</code>，以便按小时、分钟和秒进行搜索。这是 <code>T</code>，随后是 <code>HH:MM:SS</code>（时-分-秒）和 UTC 偏移 (<code>+00:00</code>)。</p><table tabindex="0"><thead><tr><th>查询</th><th>示例</th></tr></thead><tbody><tr><td><code>*YYYY*-*MM*-*DD*T*HH*:*MM*:*SS*+*00*:*00*</code></td><td><strong>vue created:2017-01-01T01:00:00+07:00..2017-03-01T15:30:15+07:00</strong> 匹配在 2017 年 1 月 1 日凌晨 1 点（UTC 偏移为 <code>07:00</code>）与 2017 年 3 月 1 日下午 3 点（UTC 偏移为 <code>07:00</code>）之间创建的议题。UTC 偏移量 <code>07:00</code>，2017 年 3 月 1 日下午 3 点。UTC 偏移量 <code>07:00</code>。</td></tr><tr><td><code>*YYYY*-*MM*-*DD*T*HH*:*MM*:*SS*Z</code></td><td><strong>vue created:2016-03-21T14:11:00Z..2016-04-07T20:45:00Z</strong> 匹配在 2016 年 3 月 21 日下午 2:11 与 2016 年 4 月 7 日晚上 8:45 之间创建的议题。</td></tr></tbody></table><h3 id="排除特定结果" tabindex="-1">排除特定结果 <a class="header-anchor" href="#排除特定结果" aria-label="Permalink to &quot;排除特定结果&quot;">​</a></h3><p>您可以使用 <code>NOT</code> 语法排除包含特定字词的结果。 <code>NOT</code> 运算符只能用于字符串关键词， 不适用于数字或日期。</p><table tabindex="0"><thead><tr><th>查询</th><th>示例</th></tr></thead><tbody><tr><td><code>NOT</code></td><td><strong>hello NOT world</strong> 匹配含有 &quot;hello&quot; 字样但不含有 &quot;world&quot; 字样的仓库。</td></tr></tbody></table><p>缩小搜索结果范围的另一种途径是排除特定的子集。您可以为任何搜索限定符添加 <code>-</code> 前缀，以排除该限定符匹配的所有结果。</p><table tabindex="0"><thead><tr><th>查询</th><th>示例</th></tr></thead><tbody><tr><td><code>-*QUALIFIER*</code></td><td><strong>vue stars:&gt;10 -language:javascript</strong> 匹配含有 &quot;vue&quot; 字样、有超过 10 个星号但并非以 JavaScript 编写的仓库。</td></tr><tr><td></td><td><strong>mentions:haha -org:github</strong> 匹配提及 [haha] 且不在 GitHub 组织仓库中的议题</td></tr></tbody></table><h3 id="对带有空格的查询使用引号" tabindex="-1">对带有空格的查询使用引号 <a class="header-anchor" href="#对带有空格的查询使用引号" aria-label="Permalink to &quot;对带有空格的查询使用引号&quot;">​</a></h3><p>如果搜索含有空格的查询，您需要用引号将其括起来。例如：</p><ul><li><p>cats NOT &quot;hello world&quot; 匹配含有 &quot;vue&quot; 字样但不含有 &quot;hello world&quot; 字样的仓库。</p></li><li><p>build label:&quot;bug fix&quot; 匹配具有标签 &quot;bug fix&quot;、含有 &quot;build&quot; 字样的议题。</p></li></ul><p>某些非字母数字符号（例如空格）会从引号内的代码搜索查询中删除，因此结果可能出乎意料。</p><h3 id="使用用户名的查询" tabindex="-1">使用用户名的查询 <a class="header-anchor" href="#使用用户名的查询" aria-label="Permalink to &quot;使用用户名的查询&quot;">​</a></h3><p>如果搜索查询包含需要用户名的限定符，例如 <code>user</code>、<code>actor</code> 或 <code>assignee</code>，您可以使用任何 GitHub 用户名指定特定人员，或使用 <code>@me</code> 指定当前用户。</p><table tabindex="0"><thead><tr><th>查询</th><th>示例</th></tr></thead><tbody><tr><td><code>QUALIFIER:USERNAME</code></td><td><code>author:haha</code> 匹配 [haha] 创作的提交。</td></tr><tr><td><code>QUALIFIER:@me</code></td><td><code>is:issue assignee:@me</code> 匹配已分配给结果查看者的议题</td></tr></tbody></table><p><code>@me</code> 只能与限定符一起使用，而不能用作搜索词，例如 <code>@me main.workflow</code>。</p><h2 id="学习" tabindex="-1">学习 <a class="header-anchor" href="#学习" aria-label="Permalink to &quot;学习&quot;">​</a></h2><p>其实，以上很多内容的都是来自于 GitHub 的官方文档，如果你还想学习更多技巧，请看</p><p>GitHub 官方文档 : <a href="https://docs.github.com/cn" target="_blank" rel="noreferrer">GitHub Documentation</a></p><p><img src="https://mmbiz.qpic.cn/sz_mmbiz_png/icLlxzKkLGIdGEBlUsciaFEhJwsnIBX2yCPiaKmk35QpSdkjpVxLODUWuU4t9M9eFFxNwPIodlSau5OialZcTk4g4g/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt=""></p><p><img src="https://mmbiz.qpic.cn/sz_mmbiz_png/icLlxzKkLGIdGEBlUsciaFEhJwsnIBX2yCAhfRA7scfAU9rPJFSeIgdFX72LlsIiczPBg3vpGaEQbvMVc4zBT1FQA/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt=""></p><p>如果你还不了解或者不会使用 GitHub ，可以看看这一章节：</p><p>Git 和 GitHub 学习资源 ：<a href="https://docs.github.com/cn/free-pro-team@latest/github/getting-started-with-github/git-and-github-learning-resources" target="_blank" rel="noreferrer">Git 和 GitHub 学习资源 - GitHub Docs</a></p><p><img src="https://mmbiz.qpic.cn/sz_mmbiz_png/icLlxzKkLGIdGEBlUsciaFEhJwsnIBX2yC2pXMd6z8TTjcckJHZ7x0WjTbdkzyf04APnsOLZUib5D8iaa8ZOk0G6EQ/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt=""></p><h2 id="_2-follow" tabindex="-1">2. Follow <a class="header-anchor" href="#_2-follow" aria-label="Permalink to &quot;2. Follow&quot;">​</a></h2><p>关注 GitHub 上活跃的大牛。</p><p>GitHub 主页有一个类似微信的朋友圈，所有你关注的人（相当于微信的好友）的动作，比如 create、star、fork 了某个项目都会出现在你的时间线上，这种方式适合我这种比较懒的人，不用主动去找项目，而这种基本是我每天获取信息的一个很重要的方式。</p><p>一些大牛 create、star、fork 了某个项目，很大程度是因为该项目做的好，或者对他有用的。</p><p>比如：github 上的 actions 功能刚出不是很久，很多人还不会用，然后阮玉峰老师今天就创建了一个 github-actions-demo 的仓库。</p><p>再比如：还有过几天就是中秋了，所以很多人抢票回家，所以不少人 star 了 12306 的智能刷票，订票的项目。</p><p>比如下图就是我关注的一些大牛在今天点了 Star 的项目。</p><p><img src="https://camo.githubusercontent.com/139ff2e4ac302cf3abda906fca2925d5bfa7b5d6a4ad7c191007ca17fc298be8/68747470733a2f2f75706c6f61642d696d616765732e6a69616e7368752e696f2f75706c6f61645f696d616765732f31323839303831392d623439336165616564343566333466662e706e673f696d6167654d6f6772322f6175746f2d6f7269656e742f7374726970253743696d61676556696577322f322f772f31323430" alt=""></p><p>不知道怎么关注这些人？那么很简单，关注我 haha ，以及我 GitHub 上关注的一些大牛，基本就差不多了，因为我关注的很多在 GitHub 上活跃的大牛，平时看到活跃的大牛也会继续关注。</p><p><img src="https://camo.githubusercontent.com/ca09d66d9ba308c82d5560c9b04366e9a38a435185becab6ef89a843443ccc24/68747470733a2f2f75706c6f61642d696d616765732e6a69616e7368752e696f2f75706c6f61645f696d616765732f31323839303831392d356236333161653332303630356536352e706e673f696d6167654d6f6772322f6175746f2d6f7269656e742f7374726970253743696d61676556696577322f322f772f31323430" alt=""></p><p>可能很多人不想 Follow 别人，因为不想被别人看到，不想承认别人比自己优秀。</p><p>但我想说：<strong>承认别人比自己优秀不丢脸</strong>。</p><p>Vue.js 的作者尤雨溪够牛 B 吧，都关注了不少大牛呢，都虚心向别人学习呢，更何况我们呢。</p><p><img src="https://camo.githubusercontent.com/848a88f4be979de723aa41214469c0dbe20e0eb34a6c69518026cab96f76a20e/68747470733a2f2f75706c6f61642d696d616765732e6a69616e7368752e696f2f75706c6f61645f696d616765732f31323839303831392d353562623935343730313037353462302e706e673f696d6167654d6f6772322f6175746f2d6f7269656e742f7374726970253743696d61676556696577322f322f772f31323430" alt=""></p><p>活跃是指：经常在 GitHub 上做开源项目、 Star 别人优秀项目、Fork 别人优秀项目、Flow 别人、或者写博客。</p><p>但是你关注太多比你的 level 高太多的大牛用处不是很大的，往往对你现在的帮助不是很大，所以关注顶级大牛的目的应该是更好的知道行业的动态或者方向。</p><p>多关注一些 level 高一两级的大牛，比如你是初级前端，那你应该关注多一些中级或者高级的前端， 只比你的 level 高一两级的前端现在关注的内容或者知识往往是你即将要学到或者用到的。</p><p>至于为什么只关注活跃的大牛呢，因为自己能从他那里有所收获，如果某个技术大牛确实很厉害，但是对你没什么帮助，关注 TA 有个毛用嘛！</p><h2 id="_3-explore-repositories" tabindex="-1">3. Explore Repositories <a class="header-anchor" href="#_3-explore-repositories" aria-label="Permalink to &quot;3. Explore Repositories&quot;">​</a></h2><p>github 也会推一些你可能感兴趣的仓库给你的，只要你一打开 <a href="https://github.com/" target="_blank" rel="noreferrer">github.com</a> 网站，就出现了。比如下图是今天推送给我的仓库。</p><p><img src="https://camo.githubusercontent.com/939f520995dd8fd973d98b4c2e901938709832b588dfbc6b15eaaac407202850/68747470733a2f2f75706c6f61642d696d616765732e6a69616e7368752e696f2f75706c6f61645f696d616765732f31323839303831392d626365333462333266626433303232302e706e673f696d6167654d6f6772322f6175746f2d6f7269656e742f7374726970253743696d61676556696577322f322f772f31323430" alt=""></p><h2 id="_4-explore" tabindex="-1">4. Explore <a class="header-anchor" href="#_4-explore" aria-label="Permalink to &quot;4. Explore&quot;">​</a></h2><h3 id="_4-1-trending" tabindex="-1">4.1 Trending <a class="header-anchor" href="#_4-1-trending" aria-label="Permalink to &quot;4.1 Trending&quot;">​</a></h3><p>Trending：趋势的意思。</p><p>在 Trending 页面，你可以看到最近一些热门的开源项目或者开发者，这个页面可以算是很多人主动获取一些开源项目和活跃开发者最好的途径。</p><p>首先点击 Explore =&gt; Trending。</p><ul><li><p>可以选择看开源项目还是开发者，切换 Repositories 和 Developers 即可。</p></li><li><p>可以选择「当天热门」、「一周之内热门」和「一月之内热门」来查看。</p></li><li><p>可以选择语言类来查看，比如你想查看最近热门的 Vue 项目，那么右边就可以选择 Vue 语言。</p></li></ul><p><img src="https://camo.githubusercontent.com/002d16124178e092fb9cf8f19affb4ebb6c414ab3fcfe4f36ad290ed46c84cfe/68747470733a2f2f75706c6f61642d696d616765732e6a69616e7368752e696f2f75706c6f61645f696d616765732f31323839303831392d363263646562393461326538363436662e706e673f696d6167654d6f6772322f6175746f2d6f7269656e742f7374726970253743696d61676556696577322f322f772f31323430" alt=""></p><p>这个页面推荐大家每隔几天就去看下，主动发掘一些优秀的开源项目。</p><h3 id="_4-2-topics" tabindex="-1">4.2 Topics <a class="header-anchor" href="#_4-2-topics" aria-label="Permalink to &quot;4.2 Topics&quot;">​</a></h3><p>Topics 里面也可以看某个话题或者领域内最优秀的项目。</p><p>比如前端领域： <a href="https://github.com/topics/frontend" target="_blank" rel="noreferrer">Front end</a></p><p><img src="https://camo.githubusercontent.com/18856a12e22e123213cf4fc07c4737dc65208bb3ef12bcafbc28bbf46ea436b0/68747470733a2f2f75706c6f61642d696d616765732e6a69616e7368752e696f2f75706c6f61645f696d616765732f31323839303831392d396565333363373130623638333930312e706e673f696d6167654d6f6772322f6175746f2d6f7269656e742f7374726970253743696d61676556696577322f322f772f31323430" alt=""></p><h2 id="_5-star" tabindex="-1">5. Star <a class="header-anchor" href="#_5-star" aria-label="Permalink to &quot;5. Star&quot;">​</a></h2><p>因为笔者也做过几个开源项目，所以知道 star 数会给作者动力的，越多人点 star ，维护这个开源项目的驱动力就越足。</p><p>笔者经常看到不错的、有趣的、有用的，或者现在没用，以后会用到的优秀开源项目，都会 star 一下，当是给这个开源的作者一份鼓励，希望 TA 更好的维护这个开源项目，以后用到的时候可以在 star 过的项目里面找出来。</p><p>笔者不想 fork 别人的项目，除非想深入研究该项目的源码才会 fork。</p><p><strong>别人是把 fork 当收藏，而我把是 star 当收藏，把 fork 当研究</strong>。</p><p>所以你也可以在某些大牛的 star 列表里面找优秀开源项目，比如笔者就 star 了不少优秀的开源项目，如下图。</p><p><img src="https://camo.githubusercontent.com/7aea620ae3dd9ab855cd719298af53421be4b9f8b28ad5a2bdeec3723e6ecfee/68747470733a2f2f75706c6f61642d696d616765732e6a69616e7368752e696f2f75706c6f61645f696d616765732f31323839303831392d663836366233306433613330626134302e706e673f696d6167654d6f6772322f6175746f2d6f7269656e742f7374726970253743696d61676556696577322f322f772f31323430" alt=""></p><p>如果你在笔者的 <a href="https://github.com/haha?tab=stars" target="_blank" rel="noreferrer">star 列表</a> 里面找的话，你应该会有惊喜，你会发现很多有趣实用的项目的。</p><p>因为笔者 star 过前端学习、教程、免费电子书、工具、资源、面试、Git 的奇技淫巧、有趣实用的项目等等。</p><p>比如：</p><ul><li><p><a href="https://github.com/syhyz1990/baiduyun" target="_blank" rel="noreferrer">油猴脚本 一个脚本搞定百度网盘下载</a></p></li><li><p><a href="https://github.com/crifan/scientific_network_summary" target="_blank" rel="noreferrer">总结关于科学上网的概念方法及工具</a></p></li></ul><h2 id="_6-search" tabindex="-1">6. Search <a class="header-anchor" href="#_6-search" aria-label="Permalink to &quot;6. Search&quot;">​</a></h2><p>除了平时主动发现优秀开源项目之外，主动搜索又是非常重要的技能，很多百度或者 google 不到的东西，在 github 上都能找到。</p><p>输入搜索关键字，可以选择排序的方式、语言、仓库。</p><p><img src="https://camo.githubusercontent.com/ced95dadeeeba73a235b7af2df0e806896d98f6a10cf270841e68f695eb169e6/68747470733a2f2f75706c6f61642d696d616765732e6a69616e7368752e696f2f75706c6f61645f696d616765732f31323839303831392d386664336463303331316166313661322e706e673f696d6167654d6f6772322f6175746f2d6f7269656e742f7374726970253743696d61676556696577322f322f772f31323430" alt=""></p><p><a href="https://blog.csdn.net/PaperJack/article/details/118543980" target="_blank" rel="noreferrer">73 个 GitHub 高级搜索技巧_执章学长的博客-CSDN 博客_github 高级搜索技巧</a></p><h2 id="轻松发现开源项目" tabindex="-1">轻松发现开源项目 <a class="header-anchor" href="#轻松发现开源项目" aria-label="Permalink to &quot;轻松发现开源项目&quot;">​</a></h2><p><strong>开源不仅仅是合并一个 <code>Pull Request</code>（<code>PR</code>）。</strong></p><p>在这个互联互通的世界里，成为开源社区的一员可能是开启新机遇、实现个人成长的关键。对我而言，这是一个在无需工作的情况下产生影响、在数百万用户中留下印记的机会。你参与编码、共同合作、扩展社交网络。但最重要的是，你受到欢迎，并且时刻与经验丰富的人互动。</p><blockquote><p><strong>小贴士</strong>：为了长期利益，选择好的组织而不是单个存储库。</p></blockquote><p>大多数人都苦于如何找到优秀的开源项目。本文为你提供了多种选项，量身定制，完美适应你的需求。</p><h3 id="trending-repositories-on-github-today" tabindex="-1"><a href="https://github.com/trending" target="_blank" rel="noreferrer">Trending repositories on GitHub today</a> <a class="header-anchor" href="#trending-repositories-on-github-today" aria-label="Permalink to &quot;[Trending repositories on GitHub today](https://github.com/trending)&quot;">​</a></h3><p>你可以根据<code>Spoken Language</code>、<code>Programming Language</code>和<code>Date</code>来查找热门的仓库。这些都是能够提升你在开源社区中信誉和声望的精选仓库。</p><h3 id="github-advanced-filters" tabindex="-1"><code>GitHub Advanced Filters</code> <a class="header-anchor" href="#github-advanced-filters" aria-label="Permalink to &quot;`GitHub Advanced Filters`&quot;">​</a></h3><p>如：<a href="https://github.com/search?q=Vue&amp;type=repositories" target="_blank" rel="noreferrer">Repository search results (github.com)</a></p><p>如果你想完全掌控搜索，那么这个选项正是为你量身打造的。你可以使用 60 多个选项进行过滤，包括<code>Language</code>、<code>Number of Stars</code>、<code>Number of Forks</code>、<code>License</code>、<code>Issues</code>，甚至是<code>Commits</code>。</p><h3 id="good-first-issue-make-your-first-open-source-contribution" tabindex="-1"><a href="https://goodfirstissue.dev/" target="_blank" rel="noreferrer">Good First Issue: Make your first open-source contribution</a> <a class="header-anchor" href="#good-first-issue-make-your-first-open-source-contribution" aria-label="Permalink to &quot;[Good First Issue: Make your first open-source contribution](https://goodfirstissue.dev/)&quot;">​</a></h3><p>如果你刚开始涉足开源，请不要把它弄得比实际情况更复杂。请记住，适合新贡献者的问题通常会被标记为“<code>good first issue</code>”或“<code>help wanted</code>”，这有助于你进行首次开源贡献。你可以通过友好的用户界面找到几个好的首次贡献机会，并选择你偏好的编程语言。</p><h3 id="up-for-grabs-up-for-grabs-net" tabindex="-1"><a href="https://up-for-grabs.net/" target="_blank" rel="noreferrer">Up For Grabs (up-for-grabs.net)</a> <a class="header-anchor" href="#up-for-grabs-up-for-grabs-net" aria-label="Permalink to &quot;[Up For Grabs (up-for-grabs.net)](https://up-for-grabs.net/)&quot;">​</a></h3><p>这个选项是寻找优秀开源项目的最受欢迎的网站之一。你可以按照项目名称 (<code>name</code>) 和标签 (<code>label</code>)（例如 <code>good first issues</code>）进行筛选，同时探索 <code>popular tags</code>（例如 <code>JavaScript</code> 和 <code>Python</code>）。此外，你还可以查看仓库的最后更新时间。</p><h3 id="first-contributions" tabindex="-1"><a href="https://firstcontributions.github.io/" target="_blank" rel="noreferrer">First Contributions</a> <a class="header-anchor" href="#first-contributions" aria-label="Permalink to &quot;[First Contributions](https://firstcontributions.github.io/)&quot;">​</a></h3><p>一个网站，你可以使用你喜好的编程语言作为过滤器，从预定义的列表中搜索项目。</p><h3 id="contribute-quine" tabindex="-1"><a href="https://quine.sh/contribute" target="_blank" rel="noreferrer">Contribute - Quine</a> <a class="header-anchor" href="#contribute-quine" aria-label="Permalink to &quot;[Contribute - Quine](https://quine.sh/contribute)&quot;">​</a></h3><p><code>Quine</code> 帮助你通过为开源项目做出贡献来积累声誉。他们拥有自己的排行榜、任务，以及许多创新功能。你可以在不注册的情况下搜索项目，但我强烈建议你注册并进行探索。该网站的突出特点是它显示了<code>PR</code>合并的时间（以小时为单位），展示了当前月份有多少新的贡献者，并详细说明了问题的类型。这为你提供了对项目的清晰了解。</p><p>你甚至可以向你的个人资料添加小部件。所以，赶紧去探索吧！</p><h3 id="highlights-opensauced" tabindex="-1"><a href="https://app.opensauced.pizza/feed" target="_blank" rel="noreferrer">Highlights | OpenSauced</a> <a class="header-anchor" href="#highlights-opensauced" aria-label="Permalink to &quot;[Highlights | OpenSauced](https://app.opensauced.pizza/feed)&quot;">​</a></h3><p>有大量的统计数据可以增加可信度，提供了一些相关的过滤选项，例如<code>Top 100 Repos</code>、<code>Minimum 5 Contributors</code>、<code>Recent</code>、<code>Most Active</code>。</p><p>你可以查看<code>PR Velocity</code>和<code>PR Overview</code>，并使用<code>language</code>或<code>tags</code>进行过滤。</p><p>在<code>Open Sauced</code>中，有许多特色功能，它会为你的开源之旅推荐一些特别适合的优秀仓库。</p><p>还有许多其他功能，比如创建亮点来跟踪你选择的仓库中的活动。</p><h3 id="home-gsoc-organizations" tabindex="-1"><a href="https://www.gsocorganizations.dev/" target="_blank" rel="noreferrer">Home | GSoC Organizations</a> <a class="header-anchor" href="#home-gsoc-organizations" aria-label="Permalink to &quot;[Home | GSoC Organizations](https://www.gsocorganizations.dev/)&quot;">​</a></h3><p>根据我的经验，对组织的贡献带来的好处远远超过对个别仓库的贡献。你肯定听说过“<code>Google Summer of Code</code>”，许多知名组织都会参与其中。在这里，你可以探索“<code>Google Summer of Code</code>”中所有被接受的组织列表，了解它们使用的技术栈，并可以按照主题和类别进行过滤。</p>',298)]))}const x=e(c,[["render",n]]);export{q as __pageData,x as default};
