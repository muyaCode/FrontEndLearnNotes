import{_ as n,c as a,o as l,ah as p}from"./chunks/framework.DqD713j2.js";const e="/FrontEndLearnNotes/assets/62fb8b2fc932ead983b0ded3980dfde9.Dafxq51p.webp",o="/FrontEndLearnNotes/assets/30895373bf7a71bd1f07d10100168d35.CLlDT3wt.webp",t="/FrontEndLearnNotes/assets/a0790fcfb021b2e8efe5b5cdcdb0c770.B5mOiY5y.webp",r="/FrontEndLearnNotes/assets/77b4bc33bb545e4947ed1fcb6671811a.BLyOwd9l.webp",c="/FrontEndLearnNotes/assets/964da0d1315c48345f4d8654f399b987.CDmJMImq.webp",i="/FrontEndLearnNotes/assets/07dc5a0b60cf986ac726e07e4a65cbde.Cff7LkwQ.webp",B="/FrontEndLearnNotes/assets/b57bfbd81bee910d770bf30f9ef55460.Ditqfl1M.webp",y="/FrontEndLearnNotes/assets/3e1b53096dfa121eed740e516eee203b.CIC8KHSZ.webp",u="/FrontEndLearnNotes/assets/8f8de5293750486f1f9f1faa715e5e3d.BRxBYYf1.webp",b="/FrontEndLearnNotes/assets/a1aaf54d9fe2606f0dccfba73053d329.BJQdfjdL.webp",d="/FrontEndLearnNotes/assets/1f5dc37f900a142aaf4fc2d85d725ecc.Dnflwmgf.webp",F="/FrontEndLearnNotes/assets/b21af96572f21c41395cb5b803613265.DEoTA1qn.webp",m="/FrontEndLearnNotes/assets/640-498479489.DehRkyTo.webp",k=JSON.parse('{"title":"VSCode 插件开发教程","description":"","frontmatter":{},"headers":[],"relativePath":"Document/VSCode插件开发/VSCode插件开发教程.md","filePath":"Document/VSCode插件开发/VSCode插件开发教程.md","lastUpdated":1750954157000}'),C={name:"Document/VSCode插件开发/VSCode插件开发教程.md"};function A(E,s,h,q,v,g){return l(),a("div",null,s[0]||(s[0]=[p(`<h1 id="vscode-插件开发教程" tabindex="-1">VSCode 插件开发教程 <a class="header-anchor" href="#vscode-插件开发教程" aria-label="Permalink to &quot;VSCode 插件开发教程&quot;">​</a></h1><p><a href="https://www.cnblogs.com/liuxianan/p/vscode-plugin-overview.html" target="_blank" rel="noreferrer">VSCode 插件开发全攻略（一）概览 - 我是小茗同学 - 博客园 (cnblogs.com)</a></p><p>因为 vscode 本身是基于 electron 开发的，所以总体来说开发插件就是在写 node 代码，额外再加一些编辑器 api，插件发布的过程和 npm 包的发布很类似。</p><p>vscode 官方提供的脚手架还帮忙加上了调试配置，调试非常方便。</p><h2 id="visual-studio-code-拓展开发-api" tabindex="-1">Visual Studio Code 拓展开发 API <a class="header-anchor" href="#visual-studio-code-拓展开发-api" aria-label="Permalink to &quot;Visual Studio Code 拓展开发 API&quot;">​</a></h2><p>拓展开发 API 文档：<a href="https://code.visualstudio.com/api" target="_blank" rel="noreferrer">扩展 API |Visual Studio Code 扩展 API</a></p><p>指南：<a href="https://code.visualstudio.com/api/extension-guides/overview" target="_blank" rel="noreferrer">扩展指南 |Visual Studio Code 扩展 API</a></p><p>示例代码：<a href="https://github.com/microsoft/vscode-extension-samples" target="_blank" rel="noreferrer">microsoft/vscode-extension-samples: Sample code illustrating the VS Code extension API. (github.com)</a></p><p>用户体验 UX 指南：<a href="https://code.visualstudio.com/api/ux-guidelines/overview" target="_blank" rel="noreferrer">用户体验指南 |Visual Studio Code 扩展 API</a></p><p>如果要查找已发布的扩展，请前往 <a href="https://marketplace.visualstudio.com/vscode" target="_blank" rel="noreferrer">VS Code 扩展市场</a></p><h2 id="环境准备" tabindex="-1">环境准备 <a class="header-anchor" href="#环境准备" aria-label="Permalink to &quot;环境准备&quot;">​</a></h2><p>这个很简单，我就直接拷贝过来了。</p><ul><li>nodejs: 建议使用 LTS 版本</li><li>npm: 建议最新版本</li><li>yeoman : npm install -g yo</li><li>generator-code : npm install -g generator-code</li></ul><p>另外小<code>TIPS</code>，我们平时直接安装的插件所在目录是<code>~/.vscode/extensions</code>，有兴趣的可以看看这些插件是怎么实现的。</p><h2 id="脚手架" tabindex="-1">脚手架 <a class="header-anchor" href="#脚手架" aria-label="Permalink to &quot;脚手架&quot;">​</a></h2><p>安装的 yo 可以直接生成一个 Hello World 版本的插件目录。执行</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">yo</span><span style="color:#98C379;"> code</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>即会提示一些问题，按照个人喜好填写即可，最后会生成样板代码:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#56B6C2;">.</span></span>
<span class="line"><span style="color:#61AFEF;">├──</span><span style="color:#98C379;"> CHANGELOG.md</span><span style="color:#98C379;">                 插件变更记录</span></span>
<span class="line"><span style="color:#61AFEF;">├──</span><span style="color:#98C379;"> README.md</span></span>
<span class="line"><span style="color:#61AFEF;">├──</span><span style="color:#98C379;"> extension.js</span><span style="color:#98C379;">                 插件入口main文件</span></span>
<span class="line"><span style="color:#61AFEF;">├──</span><span style="color:#98C379;"> jsconfig.json</span><span style="color:#98C379;">                编辑器关于js的配置</span></span>
<span class="line"><span style="color:#61AFEF;">├──</span><span style="color:#98C379;"> package.json</span><span style="color:#98C379;">                 全局配置</span></span>
<span class="line"><span style="color:#61AFEF;">├──</span><span style="color:#98C379;"> test</span><span style="color:#98C379;">                         测试代码文件夹</span></span>
<span class="line"><span style="color:#61AFEF;">│</span><span style="color:#98C379;">   ├──</span><span style="color:#98C379;"> extension.test.js</span></span>
<span class="line"><span style="color:#61AFEF;">│</span><span style="color:#98C379;">   └──</span><span style="color:#98C379;"> index.js</span></span>
<span class="line"><span style="color:#61AFEF;">├──</span><span style="color:#98C379;"> vsc-extension-quickstart.md</span><span style="color:#98C379;">  新手介绍</span></span>
<span class="line"><span style="color:#61AFEF;">└──</span><span style="color:#98C379;"> yarn.lock</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>其中的<code>quickstart.md</code>是新手引导，里面包含了对文件的作用解析、如何运行插件、测试插等等，推荐去看一看，我们在下面也会介绍一些。除此之外在 package.json 里也包含了很多非常重要的信息：</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;name&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;hello-world&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 插件名称</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;displayName&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;hello-world&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 插件显示名称</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;description&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;hello world&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 插件描述</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;version&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;0.0.1&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;publisher&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;my&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 插件发布者</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;engines&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;vscode&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;^1.35.0&quot;</span><span style="color:#7F848E;font-style:italic;"> // 运行插件需要vscode最低版本</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;categories&quot;</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;Other&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;activationEvents&quot;</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;onCommand:extension.helloWorld&quot;</span><span style="color:#ABB2BF;">], </span><span style="color:#7F848E;font-style:italic;">// 如何激活插件:在命令面板(Command+Shift+P吊起)输入helloWorld. 注意command名需要在contributes.commands中有配置</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;main&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;./extension.js&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 插件入口</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;contributes&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;commands&quot;</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// 此数组表示插件支持的所有命令</span></span>
<span class="line"><span style="color:#ABB2BF;">			{</span></span>
<span class="line"><span style="color:#E06C75;">				&quot;command&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;extension.helloWorld&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 命令对应的Command，需要和代码里保持一致</span></span>
<span class="line"><span style="color:#E06C75;">				&quot;title&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;Hello World&quot;</span><span style="color:#7F848E;font-style:italic;"> // 命令的显示名称</span></span>
<span class="line"><span style="color:#ABB2BF;">			}</span></span>
<span class="line"><span style="color:#ABB2BF;">		]</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;scripts&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// 正常的npm script</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;postinstall&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;node ./node_modules/vscode/bin/install&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;test&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;node ./node_modules/vscode/bin/test&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;devDependencies&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// 依赖包</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;typescript&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;^3.3.1&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;vscode&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;^1.1.28&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;eslint&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;^5.13.0&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;@types/node&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;^10.12.21&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;@types/mocha&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;^2.2.42&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div><h2 id="启动、调试插件" tabindex="-1">启动、调试插件 <a class="header-anchor" href="#启动、调试插件" aria-label="Permalink to &quot;启动、调试插件&quot;">​</a></h2><h3 id="启动运行" tabindex="-1">启动运行 <a class="header-anchor" href="#启动运行" aria-label="Permalink to &quot;启动运行&quot;">​</a></h3><p>脚手架生成的其实就是一个 node 应用，直接按 F5 即可运行。对配置感兴趣的也可以查看根目录下的<code>.vscode/launch.json</code>。</p><p>跑起来以后默认会新开一个 vscode 窗口，然后会发现什么都没有发生，这是由插件的启动方式决定的，配置于<code>package.json</code>里的<code>activationEvents</code>项。常用的有：</p><ul><li><code>onLanguage</code> 在打开特定语言类型的文件后激活</li><li><code>onCommand</code> 在执行特定命令后激活</li></ul><p>由于我们的插件是配置的<code>onCommand</code>启动，并且指定的命令名是<code>Hello World</code>，所以我们在新开的<code>vscode</code>窗口中按下快捷键<code>Command+Shift+P</code>后再找到<code>Hello World</code>,选中并执行即可。</p><p><img src="`+e+'" alt="img"></p><p>最后顺利的话，编辑器右下角会弹出 Hello World!。</p><p><img src="'+o+`" alt="img"></p><p>如果细心的话，还会在源窗口的控制台的调试控制台 tab 中看到如下输出：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">Congratulations,</span><span style="color:#98C379;"> your</span><span style="color:#98C379;"> extension</span><span style="color:#98C379;"> &quot;hello-world&quot;</span><span style="color:#98C379;"> is</span><span style="color:#98C379;"> now</span><span style="color:#98C379;"> active!</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这个就是由插件的真正代码部分输出的了。我们接下来看看 extension.js 的内容：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// vscode编辑器api入口</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> vscode</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;vscode&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * 此生命周期方法在插件激活时执行</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#E5C07B;font-style:italic;"> {vscode.ExtensionContext}</span><span style="color:#E06C75;font-style:italic;"> context</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> activate</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">context</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// console的各种方法都是输出在\`调试控制台\`tab下</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;Congratulations, your extension &quot;hello-world&quot; is now active!&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// registerCommand用于注册命令并提供具体逻辑，命令名需要和package.json里写的一致。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 回调函数在命令被触发时执行。</span></span>
<span class="line"><span style="color:#C678DD;">	let</span><span style="color:#E06C75;"> disposable</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> vscode</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">commands</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">registerCommand</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#98C379;">		&quot;extension.helloWorld&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#C678DD;">		function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// 在编辑器右下角展示一个message box</span></span>
<span class="line"><span style="color:#E5C07B;">			vscode</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">window</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">showInformationMessage</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;Hello World!&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">		}</span></span>
<span class="line"><span style="color:#ABB2BF;">	);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 将registerCommand的返回值放入subscriptions可以自动执行内存回收逻辑。</span></span>
<span class="line"><span style="color:#E5C07B;">	context</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">subscriptions</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">push</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">disposable</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#E5C07B;">exports</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">activate</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> activate</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 当插件被设置为无效时执行此生命周期钩子</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> deactivate</span><span style="color:#ABB2BF;">() {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">	activate</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">	deactivate</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><p>以上就是此插件的完整逻辑了，配置注释是很简单的。可以看到主要就是两个生命周期函数，另外搭配一些编辑器 api 就完成了。</p><h3 id="调试" tabindex="-1">调试 <a class="header-anchor" href="#调试" aria-label="Permalink to &quot;调试&quot;">​</a></h3><p>脚手架已经贴心的帮我们加了调试配置，我们只用添加断点即可：</p><p><img src="`+t+`" alt="img"></p><h3 id="command-配置" tabindex="-1">Command 配置 <a class="header-anchor" href="#command-配置" aria-label="Permalink to &quot;Command 配置&quot;">​</a></h3><p>上面提到了生成一个 command 只需要 2 步，先是利用 vscode.commands.registerCommand 注册一个，然后再到 package.json 里的 contributes.commands 中配置即可。围绕 command 还可以做一些其他事情，最常见的就是配置右键菜单和快捷键。</p><h3 id="右键菜单" tabindex="-1">右键菜单 <a class="header-anchor" href="#右键菜单" aria-label="Permalink to &quot;右键菜单&quot;">​</a></h3><p>表示右键的菜单里出现指定 command，配置方法：</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#98C379;">&quot;contributes&quot;</span><span style="color:#ABB2BF;">:{</span></span>
<span class="line"><span style="color:#E06C75;">  &quot;menus&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">    &quot;editor/context&quot;</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#ABB2BF;">      {</span></span>
<span class="line"><span style="color:#E06C75;">        &quot;when&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;editorHasSelection &amp;&amp; resourceFilename =~ /.js|.vue|.ts/&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 出现时机，当编辑器中有选中文本同时文件名后缀是js/vue/ts</span></span>
<span class="line"><span style="color:#E06C75;">        &quot;command&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;extension.starling_textSearch&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 需要在\`contributes.commands\`存在此命令</span></span>
<span class="line"><span style="color:#E06C75;">        &quot;group&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;6_Starling&quot;</span><span style="color:#7F848E;font-style:italic;"> // 命令所在的组，右键菜单可以分组，组与组之间存在分隔线</span></span>
<span class="line"><span style="color:#ABB2BF;">      },</span></span>
<span class="line"><span style="color:#ABB2BF;">    ]</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p><img src="`+r+`" alt="img"></p><h3 id="快捷键" tabindex="-1">快捷键 <a class="header-anchor" href="#快捷键" aria-label="Permalink to &quot;快捷键&quot;">​</a></h3><p>有了快捷键后，就不用每次在命令面板里查找并运行命令了，同样是在 package.json 中配置：</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#98C379;">&quot;contributes&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">  &quot;keybindings&quot;</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#ABB2BF;">    {</span></span>
<span class="line"><span style="color:#E06C75;">      &quot;command&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;extension.starling_textSearch&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">      &quot;key&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;ctrl+f11&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 在Windows上的快捷键</span></span>
<span class="line"><span style="color:#E06C75;">      &quot;mac&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;cmd+f11&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 在mac上的快捷键</span></span>
<span class="line"><span style="color:#E06C75;">      &quot;when&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;editorTextFocus&quot;</span><span style="color:#7F848E;font-style:italic;"> // 出现时机， 当编辑器焦点在某个文本中</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">  ],</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="发布" tabindex="-1">发布 <a class="header-anchor" href="#发布" aria-label="Permalink to &quot;发布&quot;">​</a></h3><p>主要参考的是官方文档</p><p>首先需要安装 vsce 工具：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> install</span><span style="color:#D19A66;"> -g</span><span style="color:#98C379;"> vsce</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>本地打包将插件打包成.vsix 文件。</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">vsce</span><span style="color:#98C379;"> package</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>会在项目根目录生成 hello-world-0.0.1.vsix，然后在编辑器的插件面板选择从 VSIX 安装即可：</p><p><img src="`+c+`" alt="img"></p><h3 id="发布到插件市场" tabindex="-1">发布到插件市场 <a class="header-anchor" href="#发布到插件市场" aria-label="Permalink to &quot;发布到插件市场&quot;">​</a></h3><ul><li>需要获取一个 token，参考官方文档</li><li>利用 token 创建一个 publisher，这是在插件市场的用户</li></ul><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">vsce</span><span style="color:#98C379;"> create-publisher</span><span style="color:#ABB2BF;"> (publisher </span><span style="color:#98C379;">name</span><span style="color:#ABB2BF;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>本地登录此用户</li></ul><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">vsce</span><span style="color:#98C379;"> login</span><span style="color:#ABB2BF;"> (publisher </span><span style="color:#98C379;">name</span><span style="color:#ABB2BF;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>发布插件</li></ul><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">vsce</span><span style="color:#98C379;"> publish</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>顺利的话在控制台会提示发布成功，然后过几分钟就可以在插件市场搜到自己的插件啦！?</p><h3 id="版本升级" tabindex="-1">版本升级 <a class="header-anchor" href="#版本升级" aria-label="Permalink to &quot;版本升级&quot;">​</a></h3><p>当插件内容发生变更时，重新发布时最好更新版本号，vsce 可以遵循语义化版本指定升级大(major)/小(minor)/补丁(patch)版本，也可以直接指定版本号。例如只升级小版本：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">vsce</span><span style="color:#98C379;"> publish</span><span style="color:#98C379;"> minor</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>如果插件代码在 gitlab 上，因为仓库在内网，需要事先将 README 里的图片替换为公网 cdn 上的路径。</p><h3 id="snippets" tabindex="-1">snippets <a class="header-anchor" href="#snippets" aria-label="Permalink to &quot;snippets&quot;">​</a></h3><p>snippets 是代码片段，可以理解为代码快捷键，在输入很少量触发代码后即可联想出一大坨关联代码，非常方便。对于 js、ts、vue 都可以在插件市场找到非常多的 snippets 插件。</p><p>开发 snippets 只用两步：</p><ul><li>编写 snippets 映射文件，它是一个 json，例如 javascript.json：</li></ul><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;this$t&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;prefix&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;tt&#39;&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 触发代码</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;body&quot;</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// 联想出来的关联代码</span></span>
<span class="line"><span style="color:#98C379;">			&quot;this.</span><span style="color:#56B6C2;">\\\\</span><span style="color:#98C379;">$t(&#39;\${1:key}&#39;)&quot;</span><span style="color:#7F848E;font-style:italic;"> // \${1: key} 是占位符，联想出来后会自动聚焦在这里</span></span>
<span class="line"><span style="color:#ABB2BF;">		],</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;description&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;this.$t&quot;</span><span style="color:#7F848E;font-style:italic;"> // snippets描述，当有多个匹配的代码片段时，可以用来识别</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><ul><li>在 package.json 中配置</li></ul><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#98C379;">&quot;contributes&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">  &quot;snippets&quot;</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#ABB2BF;">    {</span></span>
<span class="line"><span style="color:#E06C75;">      &quot;language&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;javascript&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 代码片段起作用的语言类型</span></span>
<span class="line"><span style="color:#E06C75;">      &quot;path&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;./src/snippets/javascript.json&quot;</span><span style="color:#7F848E;font-style:italic;"> // 对应的映射文件</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">  ]</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>最后就可以在编辑器看到效果了：</p><p><img src="`+i+`" alt="img"></p><ul><li>更多细节参考 snippets-syntax</li></ul><h3 id="插件默认配置" tabindex="-1">插件默认配置 <a class="header-anchor" href="#插件默认配置" aria-label="Permalink to &quot;插件默认配置&quot;">​</a></h3><p>很多插件是需要一些额外配置才能工作的，设置默认配置同样在 package.json 里：</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#98C379;">&quot;contributes&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">  &quot;configuration&quot;</span><span style="color:#ABB2BF;">: { </span><span style="color:#7F848E;font-style:italic;">// 默认配置</span></span>
<span class="line"><span style="color:#E06C75;">    &quot;type&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;object&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    &quot;title&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    &quot;required&quot;</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#98C379;">      &quot;sid&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">    ],</span></span>
<span class="line"><span style="color:#E06C75;">    &quot;properties&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">      &quot;includes&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">        &quot;type&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;Array&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        &quot;default&quot;</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#98C379;">          &quot;json&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">        ],</span></span>
<span class="line"><span style="color:#E06C75;">        &quot;description&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;文件类型过滤器&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>默认配置是 json schema 格式，在覆盖默认配置时如果校验出错会有提示。</p><p>插件中使用 getConfiguration 来读取配置：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> getConfig</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">	const</span><span style="color:#E5C07B;"> config</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> vscode</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">workspace</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getConfiguration</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#C678DD;">	const</span><span style="color:#E5C07B;"> includes</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">[] | undefined </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> config</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">get</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;includes&quot;</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// 获取指定配置项</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">	return</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">		includes</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">includes</span><span style="color:#56B6C2;"> ||</span><span style="color:#ABB2BF;"> [],</span></span>
<span class="line"><span style="color:#ABB2BF;">	};</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="监听配置项修改" tabindex="-1">监听配置项修改 <a class="header-anchor" href="#监听配置项修改" aria-label="Permalink to &quot;监听配置项修改&quot;">​</a></h3><p>在用户安装了插件后，可能会修改配置，如何实时监听配置项的修改呢？vscode 提供了 onDidChangeConfiguration 事件监听。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">vscode</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">workspace</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">onDidChangeConfiguration</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">event</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">	const</span><span style="color:#E5C07B;"> configList</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> [</span><span style="color:#98C379;">&quot;includes&quot;</span><span style="color:#ABB2BF;">];</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// affectsConfiguration: 判断是否变更了指定配置项</span></span>
<span class="line"><span style="color:#C678DD;">	const</span><span style="color:#E5C07B;"> affected</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> configList</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">some</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">item</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#E5C07B;"> event</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">affectsConfiguration</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">item</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#C678DD;">	if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">affected</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// do some thing ...</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="常见编辑器-api" tabindex="-1">常见编辑器 api <a class="header-anchor" href="#常见编辑器-api" aria-label="Permalink to &quot;常见编辑器 api&quot;">​</a></h3><p>所有 vscode 相关 api 都可以在官网文档查找，vscode 内部也集成了.d.ts 文件，编辑器内直接跳转定义即可。这里只列举一些常见的 api.</p><ul><li>messgae</li></ul><p>用于展示提示性消息，出现在编辑器右下角，而不是顶部或右上角。</p><p>和 console 类似，提供了普通消息、警告消息、错误消息。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">vscode</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">window</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">showInformationMessage</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;普通消息&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">vscode</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">window</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">showWarningMessage</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;警告消息&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">vscode</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">window</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">showErrorMessage</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;错误消息&quot;</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>消息也支持交互按钮，当选中按钮时返回的是按钮本身：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">vscode</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">window</span></span>
<span class="line"><span style="color:#ABB2BF;">	.</span><span style="color:#61AFEF;">showErrorMessage</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#98C379;">		\`与starling的远程交互依赖vscode-starling.sid配置项\`</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">		&quot;打开配置项&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">	)</span></span>
<span class="line"><span style="color:#ABB2BF;">	.</span><span style="color:#61AFEF;">then</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">selection</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">		if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">selection</span><span style="color:#56B6C2;"> ===</span><span style="color:#98C379;"> &quot;打开配置项&quot;</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">			vscode</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">commands</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">executeCommand</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;workbench.action.openSettings&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">		}</span></span>
<span class="line"><span style="color:#ABB2BF;">	});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p><img src="`+B+`" alt="img"></p><h3 id="input-box" tabindex="-1">input box <a class="header-anchor" href="#input-box" aria-label="Permalink to &quot;input box&quot;">​</a></h3><p>在编辑器顶部展示一个 input 输入框，使用 vscode.window.showInputBox,会返回一个 Promise:</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> text</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> | undefined </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> await</span><span style="color:#E5C07B;"> vscode</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">window</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">showInputBox</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#98C379;">  &#39;最后一步，输入文案&#39;</span></span>
<span class="line"><span style="color:#E06C75;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><img src="`+y+`" alt="img"></p><h3 id="quick-pick" tabindex="-1">quick pick <a class="header-anchor" href="#quick-pick" aria-label="Permalink to &quot;quick pick&quot;">​</a></h3><p>用于从一组选项中选择一个，类似于 select 组件。使用 vscode.window.showQuickPick，同样返回一个 Promise，resolve 时得到被选中的选项或 undefined：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> lang</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> | undefined </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> await</span><span style="color:#E5C07B;"> vscode</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">window</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">showQuickPick</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;">	[</span><span style="color:#98C379;">&quot;en&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;zh&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;ja&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">	{</span></span>
<span class="line"><span style="color:#E06C75;">		placeHolder</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;第一步：选择语言&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><img src="`+u+`" alt="img"></p><p>每个选项也可以是对象类型：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> option</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;"> | undefined </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> await</span><span style="color:#E5C07B;"> vscode</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">window</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">showQuickPick</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;">	[</span></span>
<span class="line"><span style="color:#ABB2BF;">		{ </span><span style="color:#E06C75;">id</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;a&quot;</span><span style="color:#ABB2BF;"> },</span></span>
<span class="line"><span style="color:#ABB2BF;">		{ </span><span style="color:#E06C75;">id</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;b&quot;</span><span style="color:#ABB2BF;"> },</span></span>
<span class="line"><span style="color:#ABB2BF;">		{ </span><span style="color:#E06C75;">id</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;c&quot;</span><span style="color:#ABB2BF;"> },</span></span>
<span class="line"><span style="color:#ABB2BF;">	],</span></span>
<span class="line"><span style="color:#ABB2BF;">	{</span></span>
<span class="line"><span style="color:#E06C75;">		placeHolder</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;select an option&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="output-channel" tabindex="-1">output channel <a class="header-anchor" href="#output-channel" aria-label="Permalink to &quot;output channel&quot;">​</a></h3><p>在利用 Control + ~打开控制台后，会出现 4 个 tab，从左到右依次是问题、输出、调试控制台、终端。output channel 就是用于控制输出 tab 的内容，可以往其中追加文本、追加行、清空，可以将其看成一个简单的文件。output channel 适用于一次展示大量信息.</p><p>使用 vscode.window.createOutputChannel 创建 output channel 实例，然后就可以操作各种 api 了。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> opc</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> vscode</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">window</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">createOutputChannel</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;textSearch&quot;</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// 可以有多个OutputChannel共存，使用参数名区分</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">opc</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">clear</span><span style="color:#ABB2BF;">(); </span><span style="color:#7F848E;font-style:italic;">// 清空</span></span>
<span class="line"><span style="color:#E5C07B;">opc</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">appendLine</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;水电费&quot;</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// 追加一行</span></span>
<span class="line"><span style="color:#E5C07B;">opc</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">show</span><span style="color:#ABB2BF;">(); </span><span style="color:#7F848E;font-style:italic;">// 打开控制台并切换到OutputChannel tab</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>一个例子：</p><p><img src="`+b+`" alt="img"></p><h3 id="file-selector" tabindex="-1">file selector <a class="header-anchor" href="#file-selector" aria-label="Permalink to &quot;file selector&quot;">​</a></h3><p>有些时候需要操作本地文件系统，例如选择某个文件、将文件保存到指定位置等。</p><ul><li>保存文件到指定位置使用 showSaveDialog，它会打开文件选择器弹窗，选择了保存路径后点击确定会返回选中的路径，如果点击取消会返回 undefined。</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 让用户手动选择文件的的存储路径</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> uri</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> await</span><span style="color:#E5C07B;"> vscode</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">window</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">showSaveDialog</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">	filters</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">		zip</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;zip&quot;</span><span style="color:#ABB2BF;">], </span><span style="color:#7F848E;font-style:italic;">// 文件类型过滤</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#56B6C2;">!</span><span style="color:#E06C75;">uri</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">	return</span><span style="color:#D19A66;"> false</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">writeFile</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">uri</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">fsPath</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// 写入文件</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ul><li>文件选择 showOpenDialog 同样会打开文件选择器弹窗，不过这次是用于选择文件,如果有选择文件会返回选中的文件路径，反之返回 undefined。</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// showOpenDialog返回的是文件路径数组</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> uris</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> await</span><span style="color:#E5C07B;"> window</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">showOpenDialog</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">	canSelectFolders</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 是否可以选择文件夹</span></span>
<span class="line"><span style="color:#E06C75;">	canSelectMany</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 是否可以选择多个文件</span></span>
<span class="line"><span style="color:#E06C75;">	filters</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">		json</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;json&quot;</span><span style="color:#ABB2BF;">], </span><span style="color:#7F848E;font-style:italic;">// 文件类型过滤</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#56B6C2;">!</span><span style="color:#E06C75;">uris</span><span style="color:#56B6C2;"> ||</span><span style="color:#56B6C2;"> !</span><span style="color:#E5C07B;">uris</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">	return</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">handleFiles</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">uris</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p><img src="`+d+'" alt="img"></p><h3 id="hover" tabindex="-1">hover <a class="header-anchor" href="#hover" aria-label="Permalink to &quot;hover&quot;">​</a></h3><p>有时候需要在 hover 到文本上时展示一些提示信息，例如 eslint 插件在 hover 到不合规的代码上时会展示具体违反了哪些规则：</p><p><img src="'+F+`" alt="img"></p><p>处理 hover 需要注册一个 hover 处理器，vscode 会在 hover 到文本上时自动调用处理器，同时传递 hover 相关的信息。例如一个展示光标所在的单词 hover 处理器：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * document: 打开的文本</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * position：hover的位置</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * token： 用于取消hover处理器作用</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C678DD;">async</span><span style="color:#C678DD;"> function</span><span style="color:#61AFEF;"> hover</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic;">	document</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">vscode</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">TextDocument</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic;">	position</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">vscode</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">Position</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic;">	token</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">vscode</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">CancellationToken</span></span>
<span class="line"><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">	const</span><span style="color:#E5C07B;"> line</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">lineAt</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">position</span><span style="color:#ABB2BF;">).</span><span style="color:#E06C75;">text</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// 光标所在的行</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// getWordRangeAtPosition获取光标所在单词的行列号范围；getText获取指定范围的文本</span></span>
<span class="line"><span style="color:#C678DD;">	const</span><span style="color:#E5C07B;"> positionWord</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getText</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#E5C07B;">		document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getWordRangeAtPosition</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">position</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">	);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;光标所在位置的单词是：&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">positionWord</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// registerHoverProvider的第一个参数数组表明此处理器的作用范围</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> hoverDisposable</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> vscode</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">languages</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">registerHoverProvider</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;">	[</span><span style="color:#98C379;">&quot;javascript&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;vue&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">	{</span></span>
<span class="line"><span style="color:#E06C75;">		provideHover</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">hover</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">context</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">subscriptions</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">push</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">hoverDisposable</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h3 id="selection" tabindex="-1">selection <a class="header-anchor" href="#selection" aria-label="Permalink to &quot;selection&quot;">​</a></h3><p>与 hover 类似，有时候需要处理选中的文本，获取它是通过 vscode.TextEditor 实例上的属性，有两个相关属性</p><ul><li>selections：所有被选中的文本信息</li><li>selection：第一个被选中的文本信息， 等同于 selections[0]</li></ul><p>获取 TextEditor 的一个方法是通过注册 textEditorCommand,会在回调函数里提供 TextEditor 实例，例如展示选中文本：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> command</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> vscode</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">commands</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">registerTextEditorCommand</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#98C379;">	&quot;extension.selection&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#C678DD;">	function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">textEditor</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">edit</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">		const</span><span style="color:#E5C07B;"> text</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> textEditor</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getText</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">textEditor</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">selection</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">		console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;选中的文本是:&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">text</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">context</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">subscriptions</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">push</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">command</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="filesystemwatcher" tabindex="-1">FileSystemWatcher <a class="header-anchor" href="#filesystemwatcher" aria-label="Permalink to &quot;FileSystemWatcher&quot;">​</a></h3><p>用于监听文件是否发生了变化，可以监听到新建、更新、删除这 3 种事件,也可以选择忽略其中某个类型事件。创建 watcher 是利用 vscode.workspace.createFileSystemWatcher：</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> createFileSystemWatcher</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic;">	globPattern</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">GlobPattern</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic;">	ignoreCreateEvents</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">boolean</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic;">	ignoreChangeEvents</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">boolean</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic;">	ignoreDeleteEvents</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">boolean</span></span>
<span class="line"><span style="color:#ABB2BF;">): </span><span style="color:#E5C07B;">FileSystemWatcher</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>例如监听所有 js 文件的变动：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> watcher</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> vscode</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">workspace</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">createFileSystemWatcher</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;*.js&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">watcher</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">onDidChange</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">e</span><span style="color:#C678DD;"> =&gt;</span><span style="color:#ABB2BF;"> { </span><span style="color:#7F848E;font-style:italic;">// 文件发生更新</span></span>
<span class="line"><span style="color:#E5C07B;">  console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;js changed,&#39;</span><span style="color:#E5C07B;"> e</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">fsPath</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"><span style="color:#E5C07B;">watcher</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">onDidCreate</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">e</span><span style="color:#C678DD;"> =&gt;</span><span style="color:#ABB2BF;"> { </span><span style="color:#7F848E;font-style:italic;">// 新建了js文件</span></span>
<span class="line"><span style="color:#E5C07B;">  console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;js created,&#39;</span><span style="color:#E5C07B;"> e</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">fsPath</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"><span style="color:#E5C07B;">watcher</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">onDidDelete</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">e</span><span style="color:#C678DD;"> =&gt;</span><span style="color:#ABB2BF;"> { </span><span style="color:#7F848E;font-style:italic;">// 删除了js文件</span></span>
<span class="line"><span style="color:#E5C07B;">  console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;js deleted,&#39;</span><span style="color:#E5C07B;"> e</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">fsPath</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h1 id="使用-rust-开发-vs-code-扩展" tabindex="-1">使用 Rust 开发 VS Code 扩展 <a class="header-anchor" href="#使用-rust-开发-vs-code-扩展" aria-label="Permalink to &quot;使用 Rust 开发 VS Code 扩展&quot;">​</a></h1><p>Visual Studio Code 现在支持通过 WebAssembly 执行引擎扩展运行 WASM 二进制文件。这使得开发者能够将 Rust 编写的程序编译为 WebAssembly，并在 VS Code 中直接运行。</p><p>完成这一过程的关键技术是<code>组件模型</code>，该模型通过 WIT 文件标准化 WebAssembly 组件与宿主环境的交互。</p><p>原文同时提供了 Rust 计算器示例，展示了如何在 VS Code 扩展中集成用 Rust 编写的库，并生成 Rust 和 TypeScript 绑定</p><p>原文链接 <a href="https://code.visualstudio.com/blogs/2024/05/08/wasm" target="_blank" rel="noreferrer">https://code.visualstudio.com/blogs/2024/05/08/wasm</a></p><h2 id="egui-在-web-中使用多线程" tabindex="-1">egui 在 web 中使用多线程 <a class="header-anchor" href="#egui-在-web-中使用多线程" aria-label="Permalink to &quot;egui 在 web 中使用多线程&quot;">​</a></h2><p>作者在将桌面应用移植到 Web 过程中，通过使用 egui 进行 GUI 编写，并通过 WebWorkers 替代线程来进行计算密集型任务，以提升用户体验和性能。</p><p>通过引入<code>gloo-worker</code> crate，并调整相关 Rust 代码和 index.html 文件，实现了 WebWorker 的创建和通信</p><p>原文链接 <a href="https://voelklmichael.github.io/Blog/2024/05/12/egui-wasm-threads.html" target="_blank" rel="noreferrer">https://voelklmichael.github.io/Blog/2024/05/12/egui-wasm-threads.html</a></p><h2 id="bevy-ios-iap-bevy-中提供-ios-原生-storekit2-api" tabindex="-1">bevy_ios_iap: Bevy 中提供 IOS 原生 StoreKit2 API <a class="header-anchor" href="#bevy-ios-iap-bevy-中提供-ios-原生-storekit2-api" aria-label="Permalink to &quot;bevy_ios_iap: Bevy 中提供 IOS 原生 StoreKit2 API&quot;">​</a></h2><p><code>bevy_ios_iap</code> 提供从 Bevy Apps 内部访问 iOS 原生 StoreKit2 Swift API。它使用 Swift-Bridge 自动生成胶水代码并传输数据类型。</p><p><img src="`+m+'" alt="图片"></p><p>原文链接 <a href="https://github.com/rustunit/bevy_ios_iap" target="_blank" rel="noreferrer">https://github.com/rustunit/bevy_ios_iap</a></p><h2 id="rust-构建决策树" tabindex="-1">Rust 构建决策树 <a class="header-anchor" href="#rust-构建决策树" aria-label="Permalink to &quot;Rust 构建决策树&quot;">​</a></h2><p>决策树可以处理分类或回归任务，适用于类别或连续型特征。作者选择了<code>polars</code> crate 来加载和处理数据，以简化数据集特征的访问和迭代过滤。使用 Gini 不纯度指标评估最有效的分割点，并通过数据分割来计算这个指标。最终，通过选择数量最多的类别来进行类别预测。</p><p>原文链接：<a href="https://noiseonthenet.space/noise/2024/05/sowing-a-decision-tree" target="_blank" rel="noreferrer">https://noiseonthenet.space/noise/2024/05/sowing-a-decision-tree</a></p>',149)]))}const w=n(C,[["render",A]]);export{k as __pageData,w as default};
