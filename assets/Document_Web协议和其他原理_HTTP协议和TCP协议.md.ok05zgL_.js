import{_ as e,c as l,o as a,ah as i}from"./chunks/framework.DqD713j2.js";const r="/FrontEndLearnNotes/assets/tpchttp.C3QiV50w.png",n="/FrontEndLearnNotes/assets/connection.DHbEOjqw.png",d="/FrontEndLearnNotes/assets/keepalive.DAm3-jrs.png",s="/FrontEndLearnNotes/assets/pipeline.CQr2wwWJ.png",o="/FrontEndLearnNotes/assets/urlformat.DORgkO3J.png",h="/FrontEndLearnNotes/assets/request.B6QCP-UO.png",c="/FrontEndLearnNotes/assets/requestheader.B23ESoKD.png",p="/FrontEndLearnNotes/assets/trace.Ds9c4MRO.png",f="/FrontEndLearnNotes/assets/response.DRvmlCC6.png",g="/FrontEndLearnNotes/assets/responseheader.Usadf8eS.png",u="/FrontEndLearnNotes/assets/compress.DMCcM63Q.png",x="/FrontEndLearnNotes/assets/encoding.hw0iiLDR.png",y="/FrontEndLearnNotes/assets/mime.9D5Vnlvu.png",_="/FrontEndLearnNotes/assets/form-data.Dc5uvC-t.png",b="/FrontEndLearnNotes/assets/byteranges.DjhMruUe.png",m="/FrontEndLearnNotes/assets/partial.CGFvxZEB.png",P="/FrontEndLearnNotes/assets/bytes.CYcD-PQV.png",q="/FrontEndLearnNotes/assets/proxy.CcGGE4KW.png",T="/FrontEndLearnNotes/assets/gate-way.BNdKgSPm.png",N=JSON.parse('{"title":"HTTP 协议和 TCP 协议","description":"","frontmatter":{},"headers":[],"relativePath":"Document/Web协议和其他原理/HTTP协议和TCP协议.md","filePath":"Document/Web协议和其他原理/HTTP协议和TCP协议.md","lastUpdated":1750954157000}'),k={name:"Document/Web协议和其他原理/HTTP协议和TCP协议.md"};function C(E,t,R,L,H,U){return a(),l("div",null,t[0]||(t[0]=[i('<h1 id="http-协议和-tcp-协议" tabindex="-1">HTTP 协议和 TCP 协议 <a class="header-anchor" href="#http-协议和-tcp-协议" aria-label="Permalink to &quot;HTTP 协议和 TCP 协议&quot;">​</a></h1><p>参考书籍：HTTP 协议详解</p><p>文档笔记：<a href="http://www.zhufengpeixun.com/strong/html/14.http-1.html" target="_blank" rel="noreferrer">http://www.zhufengpeixun.com/strong/html/14.http-1.html</a></p><h2 id="http-协议介绍" tabindex="-1">HTTP 协议介绍 <a class="header-anchor" href="#http-协议介绍" aria-label="Permalink to &quot;HTTP 协议介绍&quot;">​</a></h2><ul><li>超文本传输协议：HyperText Transfer Protocol</li><li>规定了客户端和服务端如何通讯</li><li>是互联网世界数据通讯的标准和基石</li></ul><h2 id="http-协议入门" tabindex="-1">HTTP 协议入门 <a class="header-anchor" href="#http-协议入门" aria-label="Permalink to &quot;HTTP 协议入门&quot;">​</a></h2><p>为什么？绝大多数的 Web 应用，都构建在 HTTP 协议之上</p><p>是什么？无状态、B/S 模式应用层协议，多基于 TCP 协议</p><p>包含什么?</p><p>请求：报文格式(报头、正文、URI) 、请求方法、请求头</p><p>响应：状态码、消息报头、响应正文</p><p>FAQ?</p><p>常见请求头: User-Agent、Cookie、Referrer</p><p>常见响应头: Content-Type、Content-Length、Cache</p><p>常见状态码: 2XX、3XX、4XX、5XX</p><h2 id="_1-http-协议和-tcp-协议" tabindex="-1">1.HTTP 协议和 TCP 协议 <a class="header-anchor" href="#_1-http-协议和-tcp-协议" aria-label="Permalink to &quot;1.HTTP 协议和 TCP 协议&quot;">​</a></h2><p><img src="'+r+'" alt="tcp-http"></p><h3 id="_1-1-长链接" tabindex="-1">1.1 长链接 <a class="header-anchor" href="#_1-1-长链接" aria-label="Permalink to &quot;1.1 长链接&quot;">​</a></h3><p><img src="'+n+'" alt="long"></p><p><img src="'+d+'" alt="keepalive"></p><h3 id="_1-2-管线化" tabindex="-1">1.2 管线化 <a class="header-anchor" href="#_1-2-管线化" aria-label="Permalink to &quot;1.2 管线化&quot;">​</a></h3><p><img src="'+s+'" alt="pipeline"></p><h2 id="_2-uri-和-url" tabindex="-1">2. URI 和 URL <a class="header-anchor" href="#_2-uri-和-url" aria-label="Permalink to &quot;2. URI 和 URL&quot;">​</a></h2><h3 id="_2-1-uri" tabindex="-1">2.1 URI <a class="header-anchor" href="#_2-1-uri" aria-label="Permalink to &quot;2.1 URI&quot;">​</a></h3><p>URI(Uniform Resource Identifier)是统一资源标识符,在某个规则下能把这个资源独一无二标示出来，比如人的身份证号</p><ul><li>Uniform 不用根据上下文来识别资源指定的访问方式</li><li>Resource 可以标识的任何东西</li><li>Identifier 表示可标识的对象</li></ul><h3 id="_2-2-url" tabindex="-1">2.2 URL <a class="header-anchor" href="#_2-2-url" aria-label="Permalink to &quot;2.2 URL&quot;">​</a></h3><p>统一资源定位符，表示资源的地点，URL 时使用浏览器访问 WEB 页面时需要输入的网页地址</p><ul><li>Uniform 不用根据上下文来识别资源指定的访问方式</li><li>Resource 可以标识的任何东西</li><li>Location 定位</li></ul><h3 id="_2-2-1-url-的格式" tabindex="-1">2.2.1 URL 的格式 <a class="header-anchor" href="#_2-2-1-url-的格式" aria-label="Permalink to &quot;2.2.1 URL 的格式&quot;">​</a></h3><p><img src="'+o+'" alt="url"></p><ul><li>协议类型</li><li>登录信息</li><li>服务器地址</li><li>服务器端口号</li><li>带层次的文件路径</li><li>查询字符串</li><li>片段标识符</li></ul><h2 id="_3-http" tabindex="-1">3. HTTP <a class="header-anchor" href="#_3-http" aria-label="Permalink to &quot;3. HTTP&quot;">​</a></h2><ul><li>请求的一方叫客户端，响应的一方叫服务器端</li><li>通过请求和响应达成通信</li><li>HTTP 是一种不保存状态的协议</li></ul><h3 id="_3-1-请求报文" tabindex="-1">3.1 请求报文 <a class="header-anchor" href="#_3-1-请求报文" aria-label="Permalink to &quot;3.1 请求报文&quot;">​</a></h3><p><img src="'+h+'" alt="request"></p><p><img src="'+c+'" alt="request-header"></p><h4 id="_3-1-1-请求行" tabindex="-1">3.1.1 请求行 <a class="header-anchor" href="#_3-1-1-请求行" aria-label="Permalink to &quot;3.1.1 请求行&quot;">​</a></h4><h5 id="_3-1-1-1-方法" tabindex="-1">3.1.1.1 方法 <a class="header-anchor" href="#_3-1-1-1-方法" aria-label="Permalink to &quot;3.1.1.1 方法&quot;">​</a></h5><ul><li>GET：获取资源</li><li>POST：向服务器端发送数据，传输实体主体</li><li>PUT：传输文件</li><li>HEAD：获取报文首部</li><li>DELETE：删除文件</li><li>OPTIONS：询问支持的方法</li><li>TRACE：追踪路径</li><li><img src="'+p+'" alt="trace"></li></ul><h5 id="_3-1-1-2-协议-版本号" tabindex="-1">3.1.1.2 协议/版本号 <a class="header-anchor" href="#_3-1-1-2-协议-版本号" aria-label="Permalink to &quot;3.1.1.2 协议/版本号&quot;">​</a></h5><h5 id="_3-1-1-3-url" tabindex="-1">3.1.1.3 URL <a class="header-anchor" href="#_3-1-1-3-url" aria-label="Permalink to &quot;3.1.1.3 URL&quot;">​</a></h5><h5 id="_3-1-1-4-请求头" tabindex="-1">3.1.1.4 请求头 <a class="header-anchor" href="#_3-1-1-4-请求头" aria-label="Permalink to &quot;3.1.1.4 请求头&quot;">​</a></h5><ul><li>General Header：通用首部</li><li>Request Header：请求首部</li><li>Response Header：响应首部</li><li>Entity Header Fields：实体首部</li></ul><h5 id="_3-1-1-5-请求体" tabindex="-1">3.1.1.5 请求体 <a class="header-anchor" href="#_3-1-1-5-请求体" aria-label="Permalink to &quot;3.1.1.5 请求体&quot;">​</a></h5><ul><li></li></ul><h3 id="_3-2-响应报文" tabindex="-1">3.2 响应报文 <a class="header-anchor" href="#_3-2-响应报文" aria-label="Permalink to &quot;3.2 响应报文&quot;">​</a></h3><p>HTTP 协议和 TCP 协议</p><p><img src="'+f+'" alt="response"></p><p>HTTP 协议和 TCP 协议</p><p><img src="'+g+'" alt="responseheader"></p><p>3.2.1 响应行</p><p>3.2.2 响应头</p><p>3.2.3 响应体</p><h3 id="_3-3-编码" tabindex="-1">3.3 编码 <a class="header-anchor" href="#_3-3-编码" aria-label="Permalink to &quot;3.3 编码&quot;">​</a></h3><p>HTTP 可以在传输的过程中通过编码提升传输效率，但是会消耗更多的 CPU 时间。</p><h4 id="_3-3-1-编码压缩" tabindex="-1">3.3.1 编码压缩 <a class="header-anchor" href="#_3-3-1-编码压缩" aria-label="Permalink to &quot;3.3.1 编码压缩&quot;">​</a></h4><p>发送文件时可以先用 ZIP 压缩功能后再发送文件</p><p><img src="'+u+'" alt="encoding"></p><ul><li>gzip</li><li>compress</li><li>deflate</li><li>identify</li></ul><h4 id="_3-3-2-分割发送的分块传输编码" tabindex="-1">3.3.2 分割发送的分块传输编码 <a class="header-anchor" href="#_3-3-2-分割发送的分块传输编码" aria-label="Permalink to &quot;3.3.2 分割发送的分块传输编码&quot;">​</a></h4><p>请求的实体在尚未传输完成前浏览器不能显示。所以在传输大容量数据时，通过把数据分割成多块，能让浏览器逐步显示页面。</p><p><img src="'+x+'" alt="encoding"></p><h4 id="_3-3-3-多部分对象集合" tabindex="-1">3.3.3 多部分对象集合 <a class="header-anchor" href="#_3-3-3-多部分对象集合" aria-label="Permalink to &quot;3.3.3 多部分对象集合&quot;">​</a></h4><ul><li>一份报文主体中可以包含多类型实体。</li><li>使用 boundary 字符串来划分多部分对象指明的各类实体。在各个实体起始行之前插入**--<strong>标记,多部分对象集合最后插入</strong>--**标记</li></ul><p><img src="'+y+'" alt="mime"></p><h5 id="_3-3-3-1-multiparty-form-data" tabindex="-1">3.3.3.1 multiparty/form-data <a class="header-anchor" href="#_3-3-3-1-multiparty-form-data" aria-label="Permalink to &quot;3.3.3.1 multiparty/form-data&quot;">​</a></h5><p>上传表单时使用 multiparty/form-data</p><p><img src="'+_+'" alt="form-data"></p><h5 id="_3-3-3-2-multipart-byteranges-206-particial-content" tabindex="-1">3.3.3.2 multipart/byteranges 206(Particial Content) <a class="header-anchor" href="#_3-3-3-2-multipart-byteranges-206-particial-content" aria-label="Permalink to &quot;3.3.3.2 multipart/byteranges 206(Particial Content)&quot;">​</a></h5><p>状态码(Partical Content)响应报文中包含多个范围时使用</p><ul><li><img src="'+b+'" alt="byteranges"></li></ul><h4 id="_3-3-4-获取部分内容的范围请求" tabindex="-1">3.3.4 获取部分内容的范围请求 <a class="header-anchor" href="#_3-3-4-获取部分内容的范围请求" aria-label="Permalink to &quot;3.3.4 获取部分内容的范围请求&quot;">​</a></h4><p>为了实现中断恢复下载的需求，需要能下载指定下载的实体范围</p><ul><li>请求头中的 Range 来指定 资源的 byte 范围</li><li>响应会返回状态码 206 响应报文</li><li>对于多重范围的范围请求，响应会在首部字段<code>Content-Type</code>中标明<code>multipart/byteranges</code></li><li><img src="'+m+'" alt="partial"></li><li><img src="'+P+'" alt="bytes"></li></ul><h3 id="_3-4-内容协商" tabindex="-1">3.4 内容协商 <a class="header-anchor" href="#_3-4-内容协商" aria-label="Permalink to &quot;3.4 内容协商&quot;">​</a></h3><ul><li>首部字段 <ul><li>Accept</li><li>Accept-Charset</li><li>Accept-Encoding</li><li>Accept-Language</li><li>Content-Language</li></ul></li><li>协商类型 <ul><li>服务器驱动</li><li>客户端驱动协商</li><li>透明协商</li></ul></li></ul><h3 id="_3-5-状态码" tabindex="-1">3.5 状态码 <a class="header-anchor" href="#_3-5-状态码" aria-label="Permalink to &quot;3.5 状态码&quot;">​</a></h3><p>状态码负责表示客户端请求的返回结果、标记服务器端是否正常、通知出现的错误</p><h4 id="_3-5-1-状态码类别" tabindex="-1">3.5.1 状态码类别 <a class="header-anchor" href="#_3-5-1-状态码类别" aria-label="Permalink to &quot;3.5.1 状态码类别&quot;">​</a></h4><table tabindex="0"><thead><tr><th style="text-align:left;">类别</th><th style="text-align:left;">原因短语</th><th></th></tr></thead><tbody><tr><td style="text-align:left;">1XX</td><td style="text-align:left;">Informational(信息性状态码)</td><td></td></tr><tr><td style="text-align:left;">2XX</td><td style="text-align:left;">Success(成功状态码)</td><td></td></tr><tr><td style="text-align:left;">3XX</td><td style="text-align:left;">Redirection(重定向)</td><td></td></tr><tr><td style="text-align:left;">4XX</td><td style="text-align:left;">Client Error(客户端错误状态码)</td><td></td></tr><tr><td style="text-align:left;">5XX</td><td style="text-align:left;">Server Error(服务器错误状态吗)</td><td></td></tr></tbody></table><h4 id="_3-5-2-2xx-成功" tabindex="-1">3.5.2 2XX 成功 <a class="header-anchor" href="#_3-5-2-2xx-成功" aria-label="Permalink to &quot;3.5.2 2XX 成功&quot;">​</a></h4><ul><li>200(OK 客户端发过来的数据被正常处理</li><li>204(Not Content 正常响应，没有实体</li><li>206(Partial Content 范围请求，返回部分数据，响应报文中由 Content-Range 指定实体内容</li></ul><h4 id="_3-5-3-3xx-重定向" tabindex="-1">3.5.3 3XX 重定向 <a class="header-anchor" href="#_3-5-3-3xx-重定向" aria-label="Permalink to &quot;3.5.3 3XX 重定向&quot;">​</a></h4><ul><li>301(Moved Permanently) 永久重定向</li><li>302(Found) 临时重定向，规范要求方法名不变，但是都会改变</li><li>303(See Other) 和 302 类似，但必须用 GET 方法</li><li>304(Not Modified) 状态未改变 配合(If-Match、If-Modified-Since、If-None_Match、If-Range、If-Unmodified-Since)</li><li>307(Temporary Redirect) 临时重定向，不该改变请求方法</li></ul><h4 id="_3-5-4-4xx-客户端错误" tabindex="-1">3.5.4 4XX 客户端错误 <a class="header-anchor" href="#_3-5-4-4xx-客户端错误" aria-label="Permalink to &quot;3.5.4 4XX 客户端错误&quot;">​</a></h4><ul><li>400(Bad Request) 请求报文语法错误</li><li>401 (unauthorized) 需要认证</li><li>403(Forbidden) 服务器拒绝访问对应的资源</li><li>404(Not Found) 服务器上无法找到资源</li></ul><h4 id="_3-5-5-5xx-服务器端错误" tabindex="-1">3.5.5 5XX 服务器端错误 <a class="header-anchor" href="#_3-5-5-5xx-服务器端错误" aria-label="Permalink to &quot;3.5.5 5XX 服务器端错误&quot;">​</a></h4><ul><li>500(Internal Server Error)服务器故障</li><li>503(Service Unavailable) 服务器处于超负载或正在停机维护</li></ul><h2 id="_4-web-服务器" tabindex="-1">4. Web 服务器 <a class="header-anchor" href="#_4-web-服务器" aria-label="Permalink to &quot;4. Web 服务器&quot;">​</a></h2><h3 id="_4-1-虚拟主机-virtual-host" tabindex="-1">4.1 虚拟主机(Virtual Host) <a class="header-anchor" href="#_4-1-虚拟主机-virtual-host" aria-label="Permalink to &quot;4.1 虚拟主机(Virtual Host)&quot;">​</a></h3><p>一台 HTTP 服务器上搭建多个 Web 站点,客户端发送请求时必须在 Host 首部完整指定主机名或域名的 URL</p><h3 id="_4-2-通信转发程序-代理、网关" tabindex="-1">4.2 通信转发程序:代理、网关 <a class="header-anchor" href="#_4-2-通信转发程序-代理、网关" aria-label="Permalink to &quot;4.2 通信转发程序:代理、网关&quot;">​</a></h3><h4 id="_4-2-1-代理" tabindex="-1">4.2.1 代理 <a class="header-anchor" href="#_4-2-1-代理" aria-label="Permalink to &quot;4.2.1 代理&quot;">​</a></h4><p>代理就是客户端和服务器的中间人</p><p><img src="'+q+'" alt="proxy"></p><h5 id="_4-2-1-1-为啥使用代理" tabindex="-1">4.2.1.1 为啥使用代理 <a class="header-anchor" href="#_4-2-1-1-为啥使用代理" aria-label="Permalink to &quot;4.2.1.1 为啥使用代理&quot;">​</a></h5><ul><li><p>利用缓存技术减少网络流量</p></li><li><p>组织内部针对网站进行访问控制</p></li><li><p>获取访问日志</p></li></ul><h5 id="_4-2-1-2-代理的分类" tabindex="-1">4.2.1.2 代理的分类 <a class="header-anchor" href="#_4-2-1-2-代理的分类" aria-label="Permalink to &quot;4.2.1.2 代理的分类&quot;">​</a></h5><ul><li><p>缓存代理 会预先把资源副本保存在服务器上</p></li><li><p>透明代理 不对报文进行任何加工</p></li></ul><h4 id="_4-2-2-网关" tabindex="-1">4.2.2 网关 <a class="header-anchor" href="#_4-2-2-网关" aria-label="Permalink to &quot;4.2.2 网关&quot;">​</a></h4><p>接收从客户端发送来的数据时，会转发给其他服务器处理，再由自己返回</p><ul><li>使通信线路上的服务器提供非 HTTP 协议服务</li><li>提高通信安全性</li></ul><p><img src="'+T+'" alt="encoding"></p><h2 id="_5-首部" tabindex="-1">5. 首部 <a class="header-anchor" href="#_5-首部" aria-label="Permalink to &quot;5. 首部&quot;">​</a></h2><h3 id="_5-1-通用首部字段" tabindex="-1">5.1 通用首部字段 <a class="header-anchor" href="#_5-1-通用首部字段" aria-label="Permalink to &quot;5.1 通用首部字段&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;">首部字段名</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">Cache-Control</td><td style="text-align:left;">控制缓存行为</td></tr><tr><td style="text-align:left;">Connection</td><td style="text-align:left;">链接的管理</td></tr><tr><td style="text-align:left;">Date</td><td style="text-align:left;">报文日期</td></tr><tr><td style="text-align:left;">Pragma</td><td style="text-align:left;">报文指令</td></tr><tr><td style="text-align:left;">Trailer</td><td style="text-align:left;">报文尾部的首部</td></tr><tr><td style="text-align:left;">Trasfer-Encoding</td><td style="text-align:left;">指定报文主体的传输编码方式</td></tr><tr><td style="text-align:left;">Upgrade</td><td style="text-align:left;">升级为其他协议</td></tr><tr><td style="text-align:left;">Via</td><td style="text-align:left;">代理服务器信息</td></tr><tr><td style="text-align:left;">Warning</td><td style="text-align:left;">错误通知</td></tr></tbody></table><h3 id="_5-2-请求首部字段" tabindex="-1">5.2 请求首部字段 <a class="header-anchor" href="#_5-2-请求首部字段" aria-label="Permalink to &quot;5.2 请求首部字段&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;">首部字段名</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">Accept</td><td style="text-align:left;">用户代理可处理的媒体类型</td></tr><tr><td style="text-align:left;">Accept-Charset</td><td style="text-align:left;">优先的字符集</td></tr><tr><td style="text-align:left;">Accept-Encoding</td><td style="text-align:left;">优先的编码</td></tr><tr><td style="text-align:left;">Accept-Langulage</td><td style="text-align:left;">优先的语言</td></tr><tr><td style="text-align:left;">Authorization</td><td style="text-align:left;">Web 认证信息</td></tr><tr><td style="text-align:left;">Expect</td><td style="text-align:left;">期待服务器的特定行为</td></tr><tr><td style="text-align:left;">From</td><td style="text-align:left;">用户的电子邮箱地址</td></tr><tr><td style="text-align:left;">Host</td><td style="text-align:left;">请求资源所在的服务器</td></tr><tr><td style="text-align:left;">If-Match</td><td style="text-align:left;">比较实体标记</td></tr><tr><td style="text-align:left;">If-Modified-Since</td><td style="text-align:left;">比较资源的更新时间</td></tr><tr><td style="text-align:left;">If-None-Match</td><td style="text-align:left;">比较实体标记</td></tr><tr><td style="text-align:left;">If-Range</td><td style="text-align:left;">资源未更新时发送实体 Byte 的范围请求</td></tr><tr><td style="text-align:left;">If-Unmodified-Since</td><td style="text-align:left;">比较资源的更新时间(和 If-Modified-Since 相反)</td></tr><tr><td style="text-align:left;">Max-Forwards</td><td style="text-align:left;">最大传输跳数</td></tr><tr><td style="text-align:left;">Proxy-Authorization</td><td style="text-align:left;">代理服务器需要客户端认证</td></tr><tr><td style="text-align:left;">Range</td><td style="text-align:left;">实体字节范围请求</td></tr><tr><td style="text-align:left;">Referer</td><td style="text-align:left;">请求中的 URI 的原始获取方</td></tr><tr><td style="text-align:left;">TE</td><td style="text-align:left;">传输编码的优先级</td></tr><tr><td style="text-align:left;">User-Agent</td><td style="text-align:left;">HTTP 客户端程序的信息</td></tr></tbody></table><h3 id="_5-3-响应首部字段" tabindex="-1">5.3 响应首部字段 <a class="header-anchor" href="#_5-3-响应首部字段" aria-label="Permalink to &quot;5.3 响应首部字段&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;">首部字段名</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">Accept-Ranges</td><td style="text-align:left;">是否接受字节范围</td></tr><tr><td style="text-align:left;">Age</td><td style="text-align:left;">资源的创建时间</td></tr><tr><td style="text-align:left;">ETag</td><td style="text-align:left;">资源的匹配信息</td></tr><tr><td style="text-align:left;">Location</td><td style="text-align:left;">客户端重定向至指定的 URI</td></tr><tr><td style="text-align:left;">Proxy-Authenticate</td><td style="text-align:left;">代理服务器对客户端的认证信息</td></tr><tr><td style="text-align:left;">Retry-After</td><td style="text-align:left;">再次发送请求的时机</td></tr><tr><td style="text-align:left;">Server</td><td style="text-align:left;">服务器的信息</td></tr><tr><td style="text-align:left;">Vary</td><td style="text-align:left;">代理服务器缓存的管理信息</td></tr><tr><td style="text-align:left;">www-Authenticate</td><td style="text-align:left;">服务器对客户端的认证</td></tr></tbody></table><h3 id="_5-4-实体首部字段" tabindex="-1">5.4 实体首部字段 <a class="header-anchor" href="#_5-4-实体首部字段" aria-label="Permalink to &quot;5.4 实体首部字段&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;">首部字段名</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">Allow</td><td style="text-align:left;">资源可支持的 HTTP 方法</td></tr><tr><td style="text-align:left;">Content-Encoding</td><td style="text-align:left;">实体的编码方式</td></tr><tr><td style="text-align:left;">Content-Language</td><td style="text-align:left;">实体的自然语言</td></tr><tr><td style="text-align:left;">Content-Length</td><td style="text-align:left;">实体的内容大小(字节为单位)</td></tr><tr><td style="text-align:left;">Content-Location</td><td style="text-align:left;">替代对应资源的 URI</td></tr><tr><td style="text-align:left;">Content-MD5</td><td style="text-align:left;">实体的报文摘要</td></tr><tr><td style="text-align:left;">Content-Range</td><td style="text-align:left;">实体的位置范围</td></tr><tr><td style="text-align:left;">Content-Type</td><td style="text-align:left;">实体主体的媒体类型</td></tr><tr><td style="text-align:left;">Expires</td><td style="text-align:left;">实体过期时间</td></tr><tr><td style="text-align:left;">Last-Modified</td><td style="text-align:left;">资源的最后修改时间</td></tr></tbody></table>',113)]))}const I=e(k,[["render",C]]);export{N as __pageData,I as default};
