import{_ as e,c as t,o as r,ah as o}from"./chunks/framework.DqD713j2.js";const p=JSON.parse('{"title":"LLRT简介和资源","description":"","frontmatter":{},"headers":[],"relativePath":"Document/其他前端包管理工具/LLRT/LLRT简介和资源.md","filePath":"Document/其他前端包管理工具/LLRT/LLRT简介和资源.md","lastUpdated":1750954157000}'),l={name:"Document/其他前端包管理工具/LLRT/LLRT简介和资源.md"};function c(s,a,i,d,n,h){return r(),t("div",null,a[0]||(a[0]=[o('<h1 id="llrt简介和资源" tabindex="-1">LLRT简介和资源 <a class="header-anchor" href="#llrt简介和资源" aria-label="Permalink to &quot;LLRT简介和资源&quot;">​</a></h1><h2 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">​</a></h2><p>LLRT（低延迟运行时）是<code>亚马逊</code>推出的一种轻量级 JavaScript 运行时。旨在满足对快速高效的无服务器应用程序不断增长的需求。</p><p>LLRT 优势：</p><ul><li>🔥 不使用 <code>V8</code> 引擎，而是采用 Rust 构建，确保高效内存使用。就像给应用程序装了涡轮增压器，速度瞬间飙升！💨</li><li>🔥 使用 <code>QuickJS</code> 作为 JavaScript 引擎，快速启动不是梦！就像闪电一样快，让你的应用程序瞬间响应！⚡</li></ul><h3 id="llrt-兼容性" tabindex="-1">LLRT 兼容性 <a class="header-anchor" href="#llrt-兼容性" aria-label="Permalink to &quot;LLRT 兼容性&quot;">​</a></h3><blockquote><p><code>LLRT</code> 仅支持一小部分 <code>Node.js API</code>。它不是 Node.js 的替代品，也永远不会是。下面是部分支持的 API 和模块的高级概述。有关更多详细信息，请参阅 API 文档：<a href="https://github.com/awslabs/llrt/blob/main/API.md" target="_blank" rel="noreferrer">https://github.com/awslabs/llrt/blob/main/API.md</a></p></blockquote><h2 id="相关网址资源" tabindex="-1">相关网址资源 <a class="header-anchor" href="#相关网址资源" aria-label="Permalink to &quot;相关网址资源&quot;">​</a></h2><p>开源地址：<a href="https://github.com/awslabs/llrt" target="_blank" rel="noreferrer">https://github.com/awslabs/llrt</a></p><p>官网：</p>',10)]))}const _=e(l,[["render",c]]);export{p as __pageData,_ as default};
