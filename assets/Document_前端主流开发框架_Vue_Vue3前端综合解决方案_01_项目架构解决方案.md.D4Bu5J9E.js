import{_ as s,c as e,o as n,ah as l}from"./chunks/framework.DqD713j2.js";const o="/FrontEndLearnNotes/assets/v-premission%E6%8C%87%E4%BB%A4.DTiOJwdf.jpg",u=JSON.parse('{"title":"02_项目架构解决方案","description":"","frontmatter":{},"headers":[],"relativePath":"Document/前端主流开发框架/Vue/Vue3前端综合解决方案/01_项目架构解决方案.md","filePath":"Document/前端主流开发框架/Vue/Vue3前端综合解决方案/01_项目架构解决方案.md","lastUpdated":1750954157000}'),r={name:"Document/前端主流开发框架/Vue/Vue3前端综合解决方案/01_项目架构解决方案.md"};function t(p,a,i,c,h,d){return n(),e("div",null,a[0]||(a[0]=[l('<h1 id="_02-项目架构解决方案" tabindex="-1">02_项目架构解决方案 <a class="header-anchor" href="#_02-项目架构解决方案" aria-label="Permalink to &quot;02\\_项目架构解决方案&quot;">​</a></h1><h3 id="项目配置" tabindex="-1">项目配置： <a class="header-anchor" href="#项目配置" aria-label="Permalink to &quot;项目配置：&quot;">​</a></h3><h4 id="环境变量处理方案" tabindex="-1">环境变量处理方案： <a class="header-anchor" href="#环境变量处理方案" aria-label="Permalink to &quot;环境变量处理方案：&quot;">​</a></h4><p>生产环境(正式运行环境) 和 开发环境(测试环境) 的环境变量配置：</p><h4 id="接口模块封装方案-请求拦截器和响应拦截器" tabindex="-1">接口模块封装方案：请求拦截器和响应拦截器 <a class="header-anchor" href="#接口模块封装方案-请求拦截器和响应拦截器" aria-label="Permalink to &quot;接口模块封装方案：请求拦截器和响应拦截器&quot;">​</a></h4><p>Axios 请求拦截器：</p><p>Axios 响应拦截器：</p><h4 id="接口请求动态封装方案" tabindex="-1">接口请求动态封装方案： <a class="header-anchor" href="#接口请求动态封装方案" aria-label="Permalink to &quot;接口请求动态封装方案：&quot;">​</a></h4><p>src/api 文件夹内写新建相关后端模块接口文件，封装相关接口：</p><h4 id="数据-mock-方案" tabindex="-1">数据 mock 方案： <a class="header-anchor" href="#数据-mock-方案" aria-label="Permalink to &quot;数据 mock 方案：&quot;">​</a></h4><p><a href="https://blog.csdn.net/longfan_/article/details/125808212" target="_blank" rel="noreferrer">如何 mock 数据<em>longfan</em>的博客-CSDN 博客_如何 mock 数据</a></p><p>Mock.js：<a href="http://mockjs.com/" target="_blank" rel="noreferrer">http://mockjs.com/</a></p><hr><h3 id="用户鉴权" tabindex="-1">用户鉴权： <a class="header-anchor" href="#用户鉴权" aria-label="Permalink to &quot;用户鉴权：&quot;">​</a></h3><h4 id="token-处理方案" tabindex="-1">Token 处理方案： <a class="header-anchor" href="#token-处理方案" aria-label="Permalink to &quot;Token 处理方案：&quot;">​</a></h4><h4 id="登录鉴权方案" tabindex="-1">登录鉴权方案： <a class="header-anchor" href="#登录鉴权方案" aria-label="Permalink to &quot;登录鉴权方案：&quot;">​</a></h4><h4 id="主动登出方案" tabindex="-1">主动登出方案： <a class="header-anchor" href="#主动登出方案" aria-label="Permalink to &quot;主动登出方案：&quot;">​</a></h4><h4 id="被动登出方案" tabindex="-1">被动登出方案： <a class="header-anchor" href="#被动登出方案" aria-label="Permalink to &quot;被动登出方案：&quot;">​</a></h4><hr><h3 id="用户的系统权限" tabindex="-1">用户的系统权限： <a class="header-anchor" href="#用户的系统权限" aria-label="Permalink to &quot;用户的系统权限：&quot;">​</a></h3><h4 id="_1-判断权限动态生成路由" tabindex="-1">1.判断权限动态生成路由： <a class="header-anchor" href="#_1-判断权限动态生成路由" aria-label="Permalink to &quot;1.判断权限动态生成路由：&quot;">​</a></h4><p><strong>权限设定：</strong></p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">meta: { </span><span style="color:#FFFFFF;">title</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;路由标题&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#FFFFFF;">icon</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;edit&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#FFFFFF;">roles</span><span style="color:#ABB2BF;">: [</span><span style="color:#FFFFFF;">&#39;admin</span><span style="color:#D19A66;">1</span><span style="color:#FFFFFF;">&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#FFFFFF;">&#39;admin</span><span style="color:#D19A66;">2</span><span style="color:#FFFFFF;">&#39;</span><span style="color:#ABB2BF;">] }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>配合动态路由生成权限的路由：</strong></p><p>1.从 router 里面读取 asyncRoutes 和 constantRoutes 的路由</p><p>2.登录后获取角色权限 roles</p><p>3.roles 是否包含 admin 权限：roles.includes(&#39;admin&#39;)</p><p>4.包含 admin 权限，将过滤后的 asyncRoutes 存到 vuex 中</p><p>5.不包含包含 admin 权限，遍历 routes 是否有访问权限，是，再遍历 children，过滤 children 更新 children，更新路由存入 res，将过滤后的 asyncRoutes 存到 vuex 中</p><p>6.asyncRoutes 和 constantRoutes 的路由合并：constantRoutes.concat(routes)</p><h4 id="功能-按钮-权限处理方案" tabindex="-1">功能(按钮)权限处理方案： <a class="header-anchor" href="#功能-按钮-权限处理方案" aria-label="Permalink to &quot;功能(按钮)权限处理方案：&quot;">​</a></h4><p>v-premission 指令：v-premission=“[&#39;admin&#39;,&#39;admin2&#39;]” 指令定义：</p><p><img src="'+o+`" alt="v-premission指令.jpg"></p><h4 id="rbac-权限分控系统" tabindex="-1">RBAC 权限分控系统： <a class="header-anchor" href="#rbac-权限分控系统" aria-label="Permalink to &quot;RBAC 权限分控系统：&quot;">​</a></h4><hr><h3 id="导航" tabindex="-1">导航： <a class="header-anchor" href="#导航" aria-label="Permalink to &quot;导航：&quot;">​</a></h3><h4 id="根据动态路由表生成菜单" tabindex="-1">根据动态路由表生成菜单： <a class="header-anchor" href="#根据动态路由表生成菜单" aria-label="Permalink to &quot;根据动态路由表生成菜单：&quot;">​</a></h4><p>permission 登录之后获取 token 后，根据权限生成的路由动态遍历出菜单</p><p>利用递归菜单组件组件（菜单组件自己调用自己）来完成多层菜单和菜单子选项 children 的遍历，显示出全部菜单</p><h4 id="动态路由生成面包屑导航方案" tabindex="-1">动态路由生成面包屑导航方案： <a class="header-anchor" href="#动态路由生成面包屑导航方案" aria-label="Permalink to &quot;动态路由生成面包屑导航方案：&quot;">​</a></h4><p>Breadcrumb</p><p>把路由和面包屑进行映射：<mark>router.matched</mark>属性：路由匹配过程的信息</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 根据路由生成面包屑</span></span>
<span class="line"><span style="color:#61AFEF;">getBreadcrumb</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">  let</span><span style="color:#E06C75;"> matched</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">router</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">matched</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">filter</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">item</span><span style="color:#C678DD;"> =&gt;</span><span style="color:#E5C07B;"> item</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">meta</span><span style="color:#56B6C2;"> &amp;&amp;</span><span style="color:#E5C07B;"> item</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">meta</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">  const</span><span style="color:#E5C07B;"> first</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> matched</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // 不是首页，便链接路由</span></span>
<span class="line"><span style="color:#C678DD;">  if</span><span style="color:#ABB2BF;">(</span><span style="color:#56B6C2;">!</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">isDashboard</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">first</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#E06C75;">    matched</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> [{</span><span style="color:#E06C75;">path</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;/dashboard&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">meta</span><span style="color:#ABB2BF;">: { </span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;Dashboard&#39;</span><span style="color:#ABB2BF;"> }}].</span><span style="color:#61AFEF;">concat</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">matched</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // 级别筛选</span></span>
<span class="line"><span style="color:#E5C07B;">  this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">levelList</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> matched</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">filter</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">item</span><span style="color:#C678DD;"> =&gt;</span><span style="color:#E5C07B;"> item</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">meta</span><span style="color:#56B6C2;"> &amp;&amp;</span><span style="color:#E5C07B;"> item</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">meta</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">title</span><span style="color:#56B6C2;"> &amp;&amp;</span><span style="color:#E5C07B;"> item</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">meta</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">breadcrumb</span><span style="color:#56B6C2;"> !==</span><span style="color:#D19A66;"> false</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><hr><h3 id="测试" tabindex="-1">测试： <a class="header-anchor" href="#测试" aria-label="Permalink to &quot;测试：&quot;">​</a></h3><hr><h3 id="其他开发中的解决方案" tabindex="-1">其他开发中的解决方案： <a class="header-anchor" href="#其他开发中的解决方案" aria-label="Permalink to &quot;其他开发中的解决方案：&quot;">​</a></h3><h4 id="图标-icon-方案" tabindex="-1">图标 icon 方案： <a class="header-anchor" href="#图标-icon-方案" aria-label="Permalink to &quot;图标 icon 方案：&quot;">​</a></h4><ol><li><p>icon 图片</p><ol><li>啊啊啊</li></ol></li><li><p>图标库里打包成图标字体</p><ol><li>对对对</li></ol></li><li><p>纯 css 写的 icon</p><ol><li>哈哈哈</li></ol></li><li><p>svg 图标：</p><ol><li>嗯嗯嗯</li></ol></li></ol><h4 id="联动处理" tabindex="-1">联动处理： <a class="header-anchor" href="#联动处理" aria-label="Permalink to &quot;联动处理：&quot;">​</a></h4><h4 id="动画处理" tabindex="-1">动画处理： <a class="header-anchor" href="#动画处理" aria-label="Permalink to &quot;动画处理：&quot;">​</a></h4><h4 id="国际化-in18-解决方案" tabindex="-1">国际化 in18 解决方案： <a class="header-anchor" href="#国际化-in18-解决方案" aria-label="Permalink to &quot;国际化 in18 解决方案：&quot;">​</a></h4><h4 id="动态主题处理方案" tabindex="-1">动态主题处理方案： <a class="header-anchor" href="#动态主题处理方案" aria-label="Permalink to &quot;动态主题处理方案：&quot;">​</a></h4><h4 id="全屏处理方案" tabindex="-1">全屏处理方案： <a class="header-anchor" href="#全屏处理方案" aria-label="Permalink to &quot;全屏处理方案：&quot;">​</a></h4><h4 id="页面检索处理方案" tabindex="-1">页面检索处理方案： <a class="header-anchor" href="#页面检索处理方案" aria-label="Permalink to &quot;页面检索处理方案：&quot;">​</a></h4><h4 id="tagsview-处理方案" tabindex="-1">TagsView 处理方案： <a class="header-anchor" href="#tagsview-处理方案" aria-label="Permalink to &quot;TagsView 处理方案：&quot;">​</a></h4><h4 id="功能引导处理方案" tabindex="-1">功能引导处理方案： <a class="header-anchor" href="#功能引导处理方案" aria-label="Permalink to &quot;功能引导处理方案：&quot;">​</a></h4><h4 id="多组件" tabindex="-1">多组件： <a class="header-anchor" href="#多组件" aria-label="Permalink to &quot;多组件：&quot;">​</a></h4><h4 id="基于文件选择和拖拽的-excel-导入方案" tabindex="-1">基于文件选择和拖拽的 Excel 导入方案： <a class="header-anchor" href="#基于文件选择和拖拽的-excel-导入方案" aria-label="Permalink to &quot;基于文件选择和拖拽的 Excel 导入方案：&quot;">​</a></h4><p>选择：</p><p>拖拽：</p><h4 id="excel-数据导出方案" tabindex="-1">Excel 数据导出方案： <a class="header-anchor" href="#excel-数据导出方案" aria-label="Permalink to &quot;Excel 数据导出方案：&quot;">​</a></h4><h4 id="动态表格处理方案" tabindex="-1">动态表格处理方案： <a class="header-anchor" href="#动态表格处理方案" aria-label="Permalink to &quot;动态表格处理方案：&quot;">​</a></h4><h4 id="拖拽表格处理方案" tabindex="-1">拖拽表格处理方案： <a class="header-anchor" href="#拖拽表格处理方案" aria-label="Permalink to &quot;拖拽表格处理方案：&quot;">​</a></h4><h4 id="辅助库选择标准" tabindex="-1">辅助库选择标准： <a class="header-anchor" href="#辅助库选择标准" aria-label="Permalink to &quot;辅助库选择标准：&quot;">​</a></h4><h4 id="markdown-编辑器方案" tabindex="-1">Markdown 编辑器方案： <a class="header-anchor" href="#markdown-编辑器方案" aria-label="Permalink to &quot;Markdown 编辑器方案：&quot;">​</a></h4><h4 id="富文本编辑器方案" tabindex="-1">富文本编辑器方案： <a class="header-anchor" href="#富文本编辑器方案" aria-label="Permalink to &quot;富文本编辑器方案：&quot;">​</a></h4><h4 id="告警" tabindex="-1">告警： <a class="header-anchor" href="#告警" aria-label="Permalink to &quot;告警：&quot;">​</a></h4><h4 id="打包优化处理方案" tabindex="-1">打包优化处理方案： <a class="header-anchor" href="#打包优化处理方案" aria-label="Permalink to &quot;打包优化处理方案：&quot;">​</a></h4><h4 id="服务器、域名购买与备案标准" tabindex="-1">服务器、域名购买与备案标准： <a class="header-anchor" href="#服务器、域名购买与备案标准" aria-label="Permalink to &quot;服务器、域名购买与备案标准：&quot;">​</a></h4><h4 id="前端项目发布部署方案" tabindex="-1">前端项目发布部署方案： <a class="header-anchor" href="#前端项目发布部署方案" aria-label="Permalink to &quot;前端项目发布部署方案：&quot;">​</a></h4>`,71)]))}const m=s(r,[["render",t]]);export{u as __pageData,m as default};
