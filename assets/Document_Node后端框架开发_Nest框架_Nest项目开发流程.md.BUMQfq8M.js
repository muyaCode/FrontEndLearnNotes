import{_ as a,c as n,o as l,ah as p}from"./chunks/framework.DqD713j2.js";const d=JSON.parse('{"title":"Nest项目开发流程","description":"","frontmatter":{},"headers":[],"relativePath":"Document/Node后端框架开发/Nest框架/Nest项目开发流程.md","filePath":"Document/Node后端框架开发/Nest框架/Nest项目开发流程.md","lastUpdated":1750954157000}'),e={name:"Document/Node后端框架开发/Nest框架/Nest项目开发流程.md"};function o(r,s,t,c,i,B){return l(),n("div",null,s[0]||(s[0]=[p(`<h1 id="nest项目开发流程" tabindex="-1">Nest项目开发流程 <a class="header-anchor" href="#nest项目开发流程" aria-label="Permalink to &quot;Nest项目开发流程&quot;">​</a></h1><p><a href="https://juejin.cn/post/7281570246111576120" target="_blank" rel="noreferrer">NestJS学习之优秀项目分析与最佳实践 - 掘金 (juejin.cn)</a></p><h2 id="使用工具" tabindex="-1">使用工具 <a class="header-anchor" href="#使用工具" aria-label="Permalink to &quot;使用工具&quot;">​</a></h2><ul><li>浏览器</li><li>编辑器</li><li>命令行工具</li><li>请求工具</li><li>代码版本管理工具</li></ul><h2 id="执行顺序" tabindex="-1">执行顺序 <a class="header-anchor" href="#执行顺序" aria-label="Permalink to &quot;执行顺序&quot;">​</a></h2><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">客户端请求</span><span style="color:#D19A66;"> ---</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#98C379;"> 中间件</span><span style="color:#D19A66;"> ---</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#98C379;"> 守卫</span><span style="color:#D19A66;"> ---</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#98C379;"> 拦截器之前</span><span style="color:#D19A66;"> ---</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#98C379;"> 管道</span><span style="color:#D19A66;"> ---</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#98C379;"> 控制器处理并响应</span><span style="color:#D19A66;"> ---</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#98C379;"> 拦截器之后</span><span style="color:#D19A66;"> ---</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#98C379;"> 过滤器</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="nest装饰器" tabindex="-1">nest装饰器 <a class="header-anchor" href="#nest装饰器" aria-label="Permalink to &quot;nest装饰器&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:center;">nest装饰器</th><th style="text-align:center;">express 对象</th></tr></thead><tbody><tr><td style="text-align:center;">@Request()</td><td style="text-align:center;">req</td></tr><tr><td style="text-align:center;">@Response()</td><td style="text-align:center;">res</td></tr><tr><td style="text-align:center;">@Next()</td><td style="text-align:center;">next</td></tr><tr><td style="text-align:center;">@Session()</td><td style="text-align:center;">req.session</td></tr><tr><td style="text-align:center;">@Param(param?: string)</td><td style="text-align:center;">req.params / req.params[param]</td></tr><tr><td style="text-align:center;">@Body(param?: string)</td><td style="text-align:center;">req.body / req.body[param]</td></tr><tr><td style="text-align:center;">@Query(param?: string)</td><td style="text-align:center;">req.query / req.query[param]</td></tr><tr><td style="text-align:center;">@Headers(param?: string)</td><td style="text-align:center;">req.headers / req.headers[param]</td></tr></tbody></table><h2 id="数据库操作" tabindex="-1">数据库操作 <a class="header-anchor" href="#数据库操作" aria-label="Permalink to &quot;数据库操作&quot;">​</a></h2><p>@nestjs/mongoose库</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> install</span><span style="color:#98C379;"> mongoose</span><span style="color:#98C379;"> @nestjs/mongoose</span><span style="color:#D19A66;"> --save</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>typeorm 库</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> install</span><span style="color:#D19A66;"> --save</span><span style="color:#98C379;"> @nestjs/typeorm</span><span style="color:#98C379;"> typeorm</span><span style="color:#98C379;"> mysql</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="配置fastify" tabindex="-1">配置Fastify <a class="header-anchor" href="#配置fastify" aria-label="Permalink to &quot;配置Fastify&quot;">​</a></h2><h3 id="集成步骤" tabindex="-1">集成步骤 <a class="header-anchor" href="#集成步骤" aria-label="Permalink to &quot;集成步骤&quot;">​</a></h3><h4 id="_1-安装依赖-nestjs-platform-fastify" tabindex="-1">1.安装依赖@nestjs/platform-fastify <a class="header-anchor" href="#_1-安装依赖-nestjs-platform-fastify" aria-label="Permalink to &quot;1.安装依赖@nestjs/platform-fastify&quot;">​</a></h4><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> i</span><span style="color:#D19A66;"> --save</span><span style="color:#98C379;"> @nestjs/platform-fastify</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="_2-配置适配器" tabindex="-1">2.配置适配器 <a class="header-anchor" href="#_2-配置适配器" aria-label="Permalink to &quot;2.配置适配器&quot;">​</a></h4><p>安装 fastify 后，我们可以使用 FastifyAdapter，修改src/main.ts文件</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">NestFactory</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;@nestjs/core&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">FastifyAdapter</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">NestFastifyApplication</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;@nestjs/platform-fastify&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">ApplicationModule</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;./app.module&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">async</span><span style="color:#C678DD;"> function</span><span style="color:#61AFEF;"> bootstrap</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">  const</span><span style="color:#E5C07B;"> app</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> await</span><span style="color:#E5C07B;"> NestFactory</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">create</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">NestFastifyApplication</span><span style="color:#ABB2BF;">&gt;(</span><span style="color:#E06C75;">ApplicationModule</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> FastifyAdapter</span><span style="color:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // 默认情况下，\`Fastify\`仅在 \`localhost 127.0.0.1\` 接口上监听</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // 改成 0.0.0.0 接受其他主机上的连接</span></span>
<span class="line"><span style="color:#C678DD;">  await</span><span style="color:#E5C07B;"> app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">listen</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">3000</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;0.0.0.0&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#61AFEF;">bootstrap</span><span style="color:#ABB2BF;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="src下的文件夹目录" tabindex="-1">src下的文件夹目录 <a class="header-anchor" href="#src下的文件夹目录" aria-label="Permalink to &quot;src下的文件夹目录&quot;">​</a></h2><h3 id="配置路径别名" tabindex="-1">配置路径别名 <a class="header-anchor" href="#配置路径别名" aria-label="Permalink to &quot;配置路径别名&quot;">​</a></h3><p>tsconfig.json</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 配置路径别名</span></span>
<span class="line"><span style="color:#98C379;">&quot;paths&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#98C379;">    &quot;@/*&quot;</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#98C379;">        &quot;src/*&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">    ],</span></span>
<span class="line"><span style="color:#ABB2BF;">},</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="服务里的目录module或server" tabindex="-1">服务里的目录module或server <a class="header-anchor" href="#服务里的目录module或server" aria-label="Permalink to &quot;服务里的目录module或server&quot;">​</a></h3><h4 id="dto" tabindex="-1">dto <a class="header-anchor" href="#dto" aria-label="Permalink to &quot;dto&quot;">​</a></h4><p>客户端传输数据到服务端，数据传输对象</p><h4 id="classes" tabindex="-1">classes <a class="header-anchor" href="#classes" aria-label="Permalink to &quot;classes&quot;">​</a></h4><p>swagger传输示例文件夹</p><h4 id="interfaces" tabindex="-1">interfaces <a class="header-anchor" href="#interfaces" aria-label="Permalink to &quot;interfaces&quot;">​</a></h4><p>待定</p><h4 id="schema或者model" tabindex="-1">schema或者model <a class="header-anchor" href="#schema或者model" aria-label="Permalink to &quot;schema或者model&quot;">​</a></h4><p>数据库模型定义的文件夹</p><h3 id="公用目录common" tabindex="-1">公用目录common <a class="header-anchor" href="#公用目录common" aria-label="Permalink to &quot;公用目录common&quot;">​</a></h3><h4 id="filters" tabindex="-1">filters <a class="header-anchor" href="#filters" aria-label="Permalink to &quot;filters&quot;">​</a></h4><ul><li>异常过滤器目录</li><li>http-exception.filter.ts</li></ul><h4 id="guards" tabindex="-1">guards <a class="header-anchor" href="#guards" aria-label="Permalink to &quot;guards&quot;">​</a></h4><h5 id="角色控制守卫" tabindex="-1">角色控制守卫 <a class="header-anchor" href="#角色控制守卫" aria-label="Permalink to &quot;角色控制守卫&quot;">​</a></h5><p>roles.guard.ts</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">CanActivate</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">ExecutionContext</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">Injectable</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;@nestjs/common&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">Reflector</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;@nestjs/core&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#61AFEF;">Injectable</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> class</span><span style="color:#E5C07B;"> RolesGuard</span><span style="color:#C678DD;"> implements</span><span style="color:#E5C07B;"> CanActivate</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">  constructor</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">private</span><span style="color:#C678DD;"> readonly</span><span style="color:#E06C75;font-style:italic;"> reflector</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Reflector</span><span style="color:#ABB2BF;">) {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">  canActivate</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">context</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">ExecutionContext</span><span style="color:#ABB2BF;">): </span><span style="color:#E5C07B;">boolean</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 通过reflector反射， 从decorators反射器，获取roles</span></span>
<span class="line"><span style="color:#C678DD;">    const</span><span style="color:#E5C07B;"> roles</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">reflector</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">get</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">[]&gt;(</span><span style="color:#98C379;">&#39;roles&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">context</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getHandler</span><span style="color:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#C678DD;">    if</span><span style="color:#ABB2BF;"> (</span><span style="color:#56B6C2;">!</span><span style="color:#E06C75;">roles</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">      return</span><span style="color:#D19A66;"> true</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#C678DD;">    const</span><span style="color:#E5C07B;"> request</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> context</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">switchToHttp</span><span style="color:#ABB2BF;">().</span><span style="color:#61AFEF;">getRequest</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#C678DD;">    const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">user</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> request</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">query</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // const hasRole = () =&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    //   user.roles.some(role =&gt; !!roles.find(item =&gt; item === role));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // return user &amp;&amp; user.roles &amp;&amp; hasRole();</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#56B6C2;"> !!</span><span style="color:#E5C07B;">roles</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">find</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">role</span><span style="color:#C678DD;"> =&gt;</span><span style="color:#E06C75;"> role</span><span style="color:#56B6C2;"> ===</span><span style="color:#E06C75;"> user</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h5 id="局部在模块中使用" tabindex="-1">局部在模块中使用 <a class="header-anchor" href="#局部在模块中使用" aria-label="Permalink to &quot;局部在模块中使用&quot;">​</a></h5><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">Controller</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">Get</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">Query</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">UseGuards</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;@nestjs/common&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">ApiTags</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">ApiBearerAuth</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;@nestjs/swagger&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">RolesGuard</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;../../common/guards/roles.guard&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">Roles</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;../../common/decorators/roles.decorator&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">RoleGuardService</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;./role-guard.service&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#61AFEF;">ApiBearerAuth</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#61AFEF;">ApiTags</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;role-guard&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 角色守卫</span></span>
<span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#61AFEF;">UseGuards</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">RolesGuard</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#61AFEF;">Controller</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;/role-guard&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> class</span><span style="color:#E5C07B;"> RoleGuardController</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">  constructor</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">private</span><span style="color:#C678DD;"> readonly</span><span style="color:#E06C75;font-style:italic;"> roleGuardService</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">RoleGuardService</span><span style="color:#ABB2BF;">) {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // 查询</span></span>
<span class="line"><span style="color:#ABB2BF;">  @</span><span style="color:#61AFEF;">Get</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // 反射器使用</span></span>
<span class="line"><span style="color:#ABB2BF;">  @</span><span style="color:#61AFEF;">Roles</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;admin&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#61AFEF;">  fetch</span><span style="color:#ABB2BF;">(@</span><span style="color:#61AFEF;">Query</span><span style="color:#ABB2BF;">() { </span><span style="color:#E06C75;font-style:italic;">id</span><span style="color:#ABB2BF;"> }): </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">roleGuardService</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">fetch</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">id</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h5 id="全局在main-ts使用" tabindex="-1">全局在main.ts使用 <a class="header-anchor" href="#全局在main-ts使用" aria-label="Permalink to &quot;全局在main.ts使用&quot;">​</a></h5><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 全局角色控制守卫</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// app.useGlobalGuards(new RolesGuard());</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="decorators" tabindex="-1">decorators <a class="header-anchor" href="#decorators" aria-label="Permalink to &quot;decorators&quot;">​</a></h4><h5 id="反射器目录" tabindex="-1">反射器目录 <a class="header-anchor" href="#反射器目录" aria-label="Permalink to &quot;反射器目录&quot;">​</a></h5><p>roles.decorator.ts</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">SetMetadata</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;@nestjs/common&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//  导出反射器：通过SetMetadata 将传入的roles 设置到roles里到roles.guard.ts</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> const</span><span style="color:#61AFEF;"> Roles</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> (...</span><span style="color:#E06C75;font-style:italic;">roles</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">[]) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#61AFEF;"> SetMetadata</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;roles&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">roles</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h5 id="和guards在模块中使用" tabindex="-1">和guards在模块中使用 <a class="header-anchor" href="#和guards在模块中使用" aria-label="Permalink to &quot;和guards在模块中使用&quot;">​</a></h5><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">Controller</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">Get</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">Query</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">UseGuards</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;@nestjs/common&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">ApiTags</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">ApiBearerAuth</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;@nestjs/swagger&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">RolesGuard</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;../../common/guards/roles.guard&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">Roles</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;../../common/decorators/roles.decorator&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">RoleGuardService</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;./role-guard.service&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#61AFEF;">ApiBearerAuth</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#61AFEF;">ApiTags</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;role-guard&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 角色守卫</span></span>
<span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#61AFEF;">UseGuards</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">RolesGuard</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#61AFEF;">Controller</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;/role-guard&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> class</span><span style="color:#E5C07B;"> RoleGuardController</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">  constructor</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">private</span><span style="color:#C678DD;"> readonly</span><span style="color:#E06C75;font-style:italic;"> roleGuardService</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">RoleGuardService</span><span style="color:#ABB2BF;">) {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // 查询</span></span>
<span class="line"><span style="color:#ABB2BF;">  @</span><span style="color:#61AFEF;">Get</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // decorators反射器使用</span></span>
<span class="line"><span style="color:#ABB2BF;">  @</span><span style="color:#61AFEF;">Roles</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;admin&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#61AFEF;">  fetch</span><span style="color:#ABB2BF;">(@</span><span style="color:#61AFEF;">Query</span><span style="color:#ABB2BF;">() { </span><span style="color:#E06C75;font-style:italic;">id</span><span style="color:#ABB2BF;"> }): </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">roleGuardService</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">fetch</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">id</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h4 id="interceptors" tabindex="-1">interceptors <a class="header-anchor" href="#interceptors" aria-label="Permalink to &quot;interceptors&quot;">​</a></h4><p>待定</p><h4 id="middleware" tabindex="-1">middleware <a class="header-anchor" href="#middleware" aria-label="Permalink to &quot;middleware&quot;">​</a></h4><p>中间件目录</p><p>logger.middleware.ts</p><h4 id="pipes" tabindex="-1">pipes <a class="header-anchor" href="#pipes" aria-label="Permalink to &quot;pipes&quot;">​</a></h4><p>管道目录：转换和验证前端传来的参数数据</p><h5 id="parse-int-pipe-ts" tabindex="-1">parse-int.pipe.ts <a class="header-anchor" href="#parse-int-pipe-ts" aria-label="Permalink to &quot;parse-int.pipe.ts&quot;">​</a></h5><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">PipeTransform</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">Injectable</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">ArgumentMetadata</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">BadRequestException</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;@nestjs/common&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#61AFEF;">Injectable</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> class</span><span style="color:#E5C07B;"> ParseIntPipe</span><span style="color:#C678DD;"> implements</span><span style="color:#E5C07B;"> PipeTransform</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">&gt; {</span></span>
<span class="line"><span style="color:#C678DD;">  async</span><span style="color:#61AFEF;"> transform</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">value</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">metadata</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">ArgumentMetadata</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">    const</span><span style="color:#E5C07B;"> val</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> parseInt</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">    if</span><span style="color:#ABB2BF;"> (</span><span style="color:#61AFEF;">isNaN</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">val</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#C678DD;">      throw</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> BadRequestException</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;Validation failed&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E06C75;"> val</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h5 id="validation-pipe-ts" tabindex="-1">validation.pipe.ts <a class="header-anchor" href="#validation-pipe-ts" aria-label="Permalink to &quot;validation.pipe.ts&quot;">​</a></h5><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">  ArgumentMetadata</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">  HttpException</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">  HttpStatus</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">  Injectable</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">  PipeTransform</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">  Type</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">} </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;@nestjs/common&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">plainToClass</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;class-transformer&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">validate</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;class-validator&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#61AFEF;">Injectable</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> class</span><span style="color:#E5C07B;"> ValidationPipe</span><span style="color:#C678DD;"> implements</span><span style="color:#E5C07B;"> PipeTransform</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">any</span><span style="color:#ABB2BF;">&gt; {</span></span>
<span class="line"><span style="color:#C678DD;">  async</span><span style="color:#61AFEF;"> transform</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">value</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">any</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">metadata</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">ArgumentMetadata</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // tslint:disable-next-line</span></span>
<span class="line"><span style="color:#E5C07B;">    console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">    const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">metatype</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> metadata</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">    if</span><span style="color:#ABB2BF;"> (</span><span style="color:#56B6C2;">!</span><span style="color:#E06C75;">metatype</span><span style="color:#56B6C2;"> ||</span><span style="color:#56B6C2;"> !</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">toValidate</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">metatype</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#C678DD;">      return</span><span style="color:#E06C75;"> value</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#C678DD;">    const</span><span style="color:#E5C07B;"> object</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> plainToClass</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">metatype</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">    const</span><span style="color:#E5C07B;"> errors</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> await</span><span style="color:#61AFEF;"> validate</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">object</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">    if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">errors</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">length</span><span style="color:#56B6C2;"> &gt;</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">      const</span><span style="color:#E5C07B;"> errObj</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {};</span></span>
<span class="line"><span style="color:#E5C07B;">      errors</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">forEach</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">err</span><span style="color:#C678DD;"> =&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">        const</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">          property</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E5C07B;">          constraints</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">        } </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> err</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">        errObj</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">property</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">values</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">constraints</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">      });</span></span>
<span class="line"><span style="color:#C678DD;">      throw</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> HttpException</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;">        { </span><span style="color:#E06C75;">message</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;Request params validation failed&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">error</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">errObj</span><span style="color:#ABB2BF;"> },</span></span>
<span class="line"><span style="color:#E5C07B;">        HttpStatus</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">BAD_REQUEST</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">      );</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E06C75;"> value</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">  private</span><span style="color:#61AFEF;"> toValidate</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">metatype</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Type</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">any</span><span style="color:#ABB2BF;">&gt;): </span><span style="color:#E5C07B;">boolean</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">    const</span><span style="color:#E5C07B;"> types</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> [</span><span style="color:#E06C75;">String</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">Boolean</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">Number</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">Array</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">Object</span><span style="color:#ABB2BF;">];</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#56B6C2;"> !</span><span style="color:#E5C07B;">types</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">find</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">type</span><span style="color:#C678DD;"> =&gt;</span><span style="color:#E06C75;"> metatype</span><span style="color:#56B6C2;"> ===</span><span style="color:#E06C75;"> type</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br></div></div><h3 id="项目配置集中管理config" tabindex="-1">项目配置集中管理config <a class="header-anchor" href="#项目配置集中管理config" aria-label="Permalink to &quot;项目配置集中管理config&quot;">​</a></h3><h4 id="数据库配置" tabindex="-1">数据库配置 <a class="header-anchor" href="#数据库配置" aria-label="Permalink to &quot;数据库配置&quot;">​</a></h4><p>database.ts</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">join</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;path&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> default</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">  type</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;mysql&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // host: &#39;localhost&#39;,</span></span>
<span class="line"><span style="color:#E06C75;">  socketPath</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;/tmp/mysql.sock&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">  port</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">3306</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">  username</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;root&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">  password</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;xiaoerxiaoer&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">  database</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;nest&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">  entities</span><span style="color:#ABB2BF;">: [</span><span style="color:#61AFEF;">join</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">__dirname</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;../&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;**/**.entity{.ts,.js}&#39;</span><span style="color:#ABB2BF;">)],</span></span>
<span class="line"><span style="color:#E06C75;">  synchronize</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h4 id="邮件发送配置" tabindex="-1">邮件发送配置 <a class="header-anchor" href="#邮件发送配置" aria-label="Permalink to &quot;邮件发送配置&quot;">​</a></h4><p>email.ts</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">join</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;path&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">PugAdapter</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;@nestjs-modules/mailer/dist/adapters/pug.adapter&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> default</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">  transport</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;smtps://1255968521@qq.com:tsjjzmqcmhmoheje@smtp.qq.com&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">  defaults</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">    from</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;&quot;nest-modules&quot; &lt;modules@nestjs.com&gt;&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span>
<span class="line"><span style="color:#E06C75;">  template</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">    dir</span><span style="color:#ABB2BF;">: </span><span style="color:#61AFEF;">join</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">__dirname</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;../templates/email/&#39;</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#E06C75;">    adapter</span><span style="color:#ABB2BF;">: </span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> PugAdapter</span><span style="color:#ABB2BF;">(),</span></span>
<span class="line"><span style="color:#E06C75;">    options</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">      strict</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h4 id="任务队列配置" tabindex="-1">任务队列配置 <a class="header-anchor" href="#任务队列配置" aria-label="Permalink to &quot;任务队列配置&quot;">​</a></h4><p>Redis</p><h4 id="定时任务配置" tabindex="-1">定时任务配置 <a class="header-anchor" href="#定时任务配置" aria-label="Permalink to &quot;定时任务配置&quot;">​</a></h4><p>待定</p><h4 id="服务请求的监控" tabindex="-1">服务请求的监控 <a class="header-anchor" href="#服务请求的监控" aria-label="Permalink to &quot;服务请求的监控&quot;">​</a></h4><p>两个依赖包</p><ul><li>nest-status-monitor</li><li>@nestjs/platform-socket.io</li></ul><p>statusMonitor.ts</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="core" tabindex="-1">core <a class="header-anchor" href="#core" aria-label="Permalink to &quot;core&quot;">​</a></h3><p>待定</p><h2 id="mongodb-mongoose索引、内置crud方法扩展" tabindex="-1">MongoDB-mongoose索引、内置CRUD方法扩展 <a class="header-anchor" href="#mongodb-mongoose索引、内置crud方法扩展" aria-label="Permalink to &quot;MongoDB-mongoose索引、内置CRUD方法扩展&quot;">​</a></h2><h3 id="网站" tabindex="-1">网站 <a class="header-anchor" href="#网站" aria-label="Permalink to &quot;网站&quot;">​</a></h3><ul><li>GitHub：<a href="https://github.com/Automattic/mongoose" target="_blank" rel="noreferrer">https://github.com/Automattic/mongoose</a></li><li>官网：<a href="https://mongoosejs.com/" target="_blank" rel="noreferrer">https://mongoosejs.com/</a></li><li>中文网：<a href="http://www.mongoosejs.net/" target="_blank" rel="noreferrer">http://www.mongoosejs.net/</a></li><li>模型API：<a href="https://mongoosejs.com/docs/api/model.html" target="_blank" rel="noreferrer">https://mongoosejs.com/docs/api/model.html</a></li></ul><h2 id="mongodb数据库的windows系统安装" tabindex="-1">MongoDB数据库的windows系统安装 <a class="header-anchor" href="#mongodb数据库的windows系统安装" aria-label="Permalink to &quot;MongoDB数据库的windows系统安装&quot;">​</a></h2><h3 id="相关网站" tabindex="-1">相关网站 <a class="header-anchor" href="#相关网站" aria-label="Permalink to &quot;相关网站&quot;">​</a></h3><ul><li>官网：<a href="https://www.mongodb.com/" target="_blank" rel="noreferrer">https://www.mongodb.com/</a></li><li>安装教程(菜鸟教程)：<a href="https://www.runoob.com/mongodb/mongodb-window-install.html" target="_blank" rel="noreferrer">https://www.runoob.com/mongodb/mongodb-window-install.html</a></li><li>中文网：<a href="https://www.mongodb.org.cn/" target="_blank" rel="noreferrer">https://www.mongodb.org.cn/</a></li></ul><h2 id="使用redis" tabindex="-1">使用redis <a class="header-anchor" href="#使用redis" aria-label="Permalink to &quot;使用redis&quot;">​</a></h2><ul><li>微服务教程：<a href="https://docs.nestjs.cn/8/microservices?id=redis" target="_blank" rel="noreferrer">https://docs.nestjs.cn/8/microservices?id=redis</a></li><li>windows本地使用redis：<a href="https://github.com/MicrosoftArchive/redis/releases" target="_blank" rel="noreferrer">https://github.com/MicrosoftArchive/redis/releases</a></li><li>除了windows的redis：<a href="https://redis.io/download/" target="_blank" rel="noreferrer">https://redis.io/download/</a></li><li>安装 @liaoliaots/nestjs-redis ioredis 包 <ul><li><a href="https://www.npmjs.com/package/@liaoliaots/nestjs-redis#usage" target="_blank" rel="noreferrer">https://www.npmjs.com/package/@liaoliaots/nestjs-redis#usage</a></li><li><a href="https://github.com/liaoliaots/nestjs-redis" target="_blank" rel="noreferrer">https://github.com/liaoliaots/nestjs-redis</a></li></ul></li></ul><h3 id="客户端使用文档" tabindex="-1">客户端使用文档 <a class="header-anchor" href="#客户端使用文档" aria-label="Permalink to &quot;客户端使用文档&quot;">​</a></h3><ul><li>菜鸟教程-redis客户端命令：<a href="https://www.runoob.com/redis/redis-keys.html" target="_blank" rel="noreferrer">https://www.runoob.com/redis/redis-keys.html</a></li><li>官网文档：<a href="https://redis.io/commands/" target="_blank" rel="noreferrer">https://redis.io/commands/</a></li><li>在node中使用的库文档：<a href="https://www.npmjs.com/package/redis" target="_blank" rel="noreferrer">https://www.npmjs.com/package/redis</a></li></ul>`,89)]))}const b=a(e,[["render",o]]);export{d as __pageData,b as default};
