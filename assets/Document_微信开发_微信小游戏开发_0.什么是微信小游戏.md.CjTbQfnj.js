import{_ as i,c as l,o as e,ah as t}from"./chunks/framework.DqD713j2.js";const r="/FrontEndLearnNotes/assets/image-20240227193032587.BQSCmRPe.png",o="/FrontEndLearnNotes/assets/image-20240227193223206.C3mCx7Ce.png",n="/FrontEndLearnNotes/assets/image-20240227200915192.DkkEJga8.png",b=JSON.parse('{"title":"什么是微信小游戏","description":"","frontmatter":{},"headers":[],"relativePath":"Document/微信开发/微信小游戏开发/0.什么是微信小游戏.md","filePath":"Document/微信开发/微信小游戏开发/0.什么是微信小游戏.md","lastUpdated":1750954157000}'),s={name:"Document/微信开发/微信小游戏开发/0.什么是微信小游戏.md"};function h(d,a,p,c,m,u){return e(),l("div",null,a[0]||(a[0]=[t('<h1 id="什么是微信小游戏" tabindex="-1">什么是微信小游戏 <a class="header-anchor" href="#什么是微信小游戏" aria-label="Permalink to &quot;什么是微信小游戏&quot;">​</a></h1><h2 id="基于-dom-的-h5-小游戏" tabindex="-1">基于 DOM 的 H5 小游戏 <a class="header-anchor" href="#基于-dom-的-h5-小游戏" aria-label="Permalink to &quot;基于 DOM 的 H5 小游戏&quot;">​</a></h2><ul><li>游戏逻辑 is dom 操作+相关资源</li><li>页面结构 div</li><li>游戏界面 css</li></ul><h2 id="基于-canvas-的-h5-小游戏" tabindex="-1">基于 canvas 的 H5 小游戏 <a class="header-anchor" href="#基于-canvas-的-h5-小游戏" aria-label="Permalink to &quot;基于 canvas 的 H5 小游戏&quot;">​</a></h2><p><img src="'+r+'" alt="image-20240227193032587"></p><p>游戏逻辑 js+相关资源</p><p>canvas API</p><ul><li>rect</li><li>arc</li><li>moveTo</li><li>lineTo</li></ul><p>可以迁移到微信小游戏开发。</p><h2 id="基于游戏引擎的-h5-小游戏" tabindex="-1">基于游戏引擎的 H5 小游戏 <a class="header-anchor" href="#基于游戏引擎的-h5-小游戏" aria-label="Permalink to &quot;基于游戏引擎的 H5 小游戏&quot;">​</a></h2><p><img src="'+o+'" alt="image-20240227193223206"></p><ul><li>App Webview</li><li>生成 H5 游戏代码</li><li>脚本 游戏逻辑</li><li>H5 游戏引擎</li></ul><p>现在很多游戏引擎都支持一次编写，编译出很多平台的源码。从而达到多平台开发小游戏的目的。</p><h2 id="微信小游戏" tabindex="-1">微信小游戏 <a class="header-anchor" href="#微信小游戏" aria-label="Permalink to &quot;微信小游戏&quot;">​</a></h2><p>微信小游戏是一种基于微信平台的游戏产品，它可以让用户在微信内部即点即玩，无需下载安装，同时享受微信的社交能力和原生体验。</p><p>微信小游戏是基于微信原生功能特性的、仅保留 HTML5 游戏特性的综合技术。小游戏保留了 H5 中游戏相关的技术，而在此基础上又追加了小程序部分特性能力。这样出来的游戏，技术更专注、特点更微信。</p><p>微信小游戏的开发主要依托于 HTML5 技术，尤其是 Canvas 2D 和 WebGL 渲染接口，同时也提供了微信的原生 SDK，用于实现用户登录、转发、排行榜等功能。</p><p>Canvas 是 HTML5 提供的一个元素，用于在网页上绘制图形，包括 2D 和 3D 的图形。Canvas 可以用于开发 H5 小游戏和微信小游戏，但不能混用。</p><p><strong>Canvas 2D 可以用于开发 2D 的游戏，如消除类、跑酷类等，而 WebGL 可以用于开发 3D 的游戏，如坦克大战、跳一跳等。</strong></p><h2 id="微信小游戏与-h5-小游戏有以下几个区别" tabindex="-1">微信小游戏与 H5 小游戏有以下几个区别 <a class="header-anchor" href="#微信小游戏与-h5-小游戏有以下几个区别" aria-label="Permalink to &quot;微信小游戏与 H5 小游戏有以下几个区别&quot;">​</a></h2><p><a href="https://cloud.tencent.com/developer/article/2186619" target="_blank" rel="noreferrer">浅显易懂的说清楚小游戏和 H5 游戏的技术区别-腾讯云开发者社区-腾讯云 (tencent.com)</a></p><ul><li>运行环境：微信小游戏不是运行在浏览器中，而是运行在微信的原生环境中，使用独立的 JavaScript 引擎和渲染引擎，因此性能更稳定和可控。</li><li>本地缓存：微信小游戏支持 4M 的本地包和 50M 的物理缓存，可以提高游戏的加载速度和用户体验，而 H5 小游戏没有本地包，缓存也受浏览器的限制。</li><li>产品支持：微信小游戏可以利用微信的强大入口和社交传播，获取更多的用户和流量，而 H5 小游戏的入口较少，传播也不便捷。</li><li>API 支持：微信小游戏提供了丰富的微信内部 SDK，可以实现用户登录、转发、排行榜、支付、广告等功能，而 H5 小游戏只能使用浏览器的标准 API，功能受限。</li><li>微信小游戏相比 APP 游戏轻量级</li><li>微信小游戏相比 H5 游戏性能好</li></ul><h2 id="h5-小游戏迁移到微信小游戏" tabindex="-1">H5 小游戏迁移到微信小游戏 <a class="header-anchor" href="#h5-小游戏迁移到微信小游戏" aria-label="Permalink to &quot;H5 小游戏迁移到微信小游戏&quot;">​</a></h2><h3 id="支持的引擎" tabindex="-1">支持的引擎 <a class="header-anchor" href="#支持的引擎" aria-label="Permalink to &quot;支持的引擎&quot;">​</a></h3><p>H5 游戏</p><ul><li>javascript 逻辑</li><li>H5 游戏引擎</li><li>浏览器 API</li><li>webview 特性</li><li>IOS/Andorid 操作系统</li></ul><p>微信小游戏</p><ul><li>javascript 逻辑</li><li>微信小游戏游戏引擎</li><li>微信小游戏 SDK</li><li>webview 特性</li><li>IOS/Andorid 操作系统</li></ul><h3 id="加载核心游戏包-4m-加载过程如下" tabindex="-1">加载核心游戏包 4M，加载过程如下 <a class="header-anchor" href="#加载核心游戏包-4m-加载过程如下" aria-label="Permalink to &quot;加载核心游戏包 4M，加载过程如下&quot;">​</a></h3><p>小游戏</p><ol><li>下载小游戏包</li><li>加载 game.js</li><li>运行游戏脚本</li><li>wx.downloadFile 加载远程资源</li><li>启动首场景</li></ol><p>浏览器</p><ol><li>请求 index.html</li><li>加载引擎脚本和游戏脚本</li><li>按需加载资源</li><li>启动首场景</li></ol><h3 id="微信小游戏-adapter-模拟浏览器-bom、dom-api" tabindex="-1">微信小游戏 Adapter：模拟浏览器 BOM、DOM API <a class="header-anchor" href="#微信小游戏-adapter-模拟浏览器-bom、dom-api" aria-label="Permalink to &quot;微信小游戏 Adapter：模拟浏览器 BOM、DOM API&quot;">​</a></h3><p><img src="'+n+'" alt="image-20240227200915192"></p>',35)]))}const H=i(s,[["render",h]]);export{b as __pageData,H as default};
