import{_ as s,c as o,o as n,ah as r}from"./chunks/framework.DqD713j2.js";const l=JSON.parse('{"title":"Github Actions全平台应用打包","description":"","frontmatter":{},"headers":[],"relativePath":"Document/跨平台桌面端开发/Github Actions全平台应用打包.md","filePath":"Document/跨平台桌面端开发/Github Actions全平台应用打包.md","lastUpdated":1750954157000}'),e={name:"Document/跨平台桌面端开发/Github Actions全平台应用打包.md"};function i(a,t,p,g,c,u){return n(),o("div",null,t[0]||(t[0]=[r('<h1 id="github-actions全平台应用打包" tabindex="-1">Github Actions全平台应用打包 <a class="header-anchor" href="#github-actions全平台应用打包" aria-label="Permalink to &quot;Github Actions全平台应用打包&quot;">​</a></h1><blockquote><p>GitHub 的持续集成和持续部署（CI/CD）平台，允许用户自动化他们的构建、测试和部署工作流程。通过在 GitHub 仓库中创建工作流程，开发者可以在每次提交代码、创建拉取请求（PR）、或者定义的其他事件发生时自动运行这些工作流程。</p></blockquote><p>需要 <strong>科学上网</strong>，有个 <strong>Github账号</strong>，以这个开源项目为例，演示下具体打包操作：</p><ul><li>**c001apk **<a href="https://github.com/bggRGjQaUbCoE/c001apk" target="_blank" rel="noreferrer">https://github.com/bggRGjQaUbCoE/c001apk</a></li></ul><p>① 点击 <strong>Fork</strong>→ 页面跳转后直接按「<strong>Create fork</strong>」</p><p>![图片](./Github Actions全平台应用打包.assets/640.webp)![图片](./Github Actions全平台应用打包.assets/640-1714654540941-1.webp)② 接着会自动跳转我们Fork的项目，接着点击「<strong>Actions</strong>」，点击下述按钮：</p><p>![图片](./Github Actions全平台应用打包.assets/640-1714654540941-2.webp)③ 点击「<strong>CI</strong>」→ 「<strong>Run workflow</strong>」→ 「<strong>Run workflow</strong>」</p><p>![图片](./Github Actions全平台应用打包.assets/640-1714654540941-3.webp)④ 然后可以看到 <strong>打包脚本正在执行</strong>：</p><p>![图片](./Github Actions全平台应用打包.assets/640-1714654540941-4.webp)⑤ 打包需要时间，可以过一阵子再来看，出现绿色✅，说明 <strong>打包成功</strong>：</p><p>![图片](./Github Actions全平台应用打包.assets/640-1714654540941-5.webp)⑥ 点进去，点击「<strong>build</strong>」，找到「<strong>Upload release</strong>」，在这里找到打包好的** apk文件的url**：**</p><p>![图片](./Github Actions全平台应用打包.assets/640-1714654540941-6.webp)<strong>⑦ 点击url后会 <strong>自动下载</strong>，得到一个apk压缩包，解压安装即可~</strong></p><p>![图片](./Github Actions全平台应用打包.assets/640-1714654540941-7.webp)</p><p>还是非常简单，除了打APK外，也可以 <strong>打iOS包</strong>，但需要提供：</p><ul><li>苹果打包 <strong>证书(.p12)</strong>，以及导出证书的密码。</li><li>证书对应的 <strong>描述文件(.mobileprovision)</strong>。</li></ul>',14)]))}const h=s(e,[["render",i]]);export{l as __pageData,h as default};
