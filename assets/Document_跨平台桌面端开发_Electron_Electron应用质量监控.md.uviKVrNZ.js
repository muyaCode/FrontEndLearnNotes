import{_ as n,c as a,o as e,ah as l}from"./chunks/framework.DqD713j2.js";const o="/FrontEndLearnNotes/assets/electron%E7%A8%8B%E5%BA%8F%E5%B4%A9%E6%BA%83.BjbSht-J.jpg",p="/FrontEndLearnNotes/assets/Electron%E5%B4%A9%E6%BA%83%E7%9B%91%E6%8E%A7%E5%AE%9E%E8%B7%B5.BFCQl1sH.jpg",u=JSON.parse('{"title":"Electron应用质量监控","description":"","frontmatter":{},"headers":[],"relativePath":"Document/跨平台桌面端开发/Electron/Electron应用质量监控.md","filePath":"Document/跨平台桌面端开发/Electron/Electron应用质量监控.md","lastUpdated":1750954157000}'),r={name:"Document/跨平台桌面端开发/Electron/Electron应用质量监控.md"};function t(c,s,i,B,d,y){return e(),a("div",null,s[0]||(s[0]=[l('<h1 id="electron应用质量监控" tabindex="-1">Electron应用质量监控 <a class="header-anchor" href="#electron应用质量监控" aria-label="Permalink to &quot;Electron应用质量监控&quot;">​</a></h1><h2 id="electron的质量保障-web超集" tabindex="-1">Electron的质量保障：Web超集 <a class="header-anchor" href="#electron的质量保障-web超集" aria-label="Permalink to &quot;Electron的质量保障：Web超集&quot;">​</a></h2><table tabindex="0"><thead><tr><th></th><th>开发</th><th>测试</th><th>上线</th><th>监控</th></tr></thead><tbody><tr><td>Web侧</td><td>代码静态检查、强类型语言、Code Review</td><td>单元测试、性能测试、UI自动化测试、冒烟测试</td><td>灰度发布、回滚</td><td>性能监控、异常监控、用户行为监控</td></tr><tr><td>Electron侧</td><td></td><td>+Electron测试(Spectron)</td><td>+功能开关、+热修复</td><td>+崩溃监控</td></tr></tbody></table><h2 id="electron崩溃监控关键步骤" tabindex="-1">Electron崩溃监控关键步骤 <a class="header-anchor" href="#electron崩溃监控关键步骤" aria-label="Permalink to &quot;Electron崩溃监控关键步骤&quot;">​</a></h2><p><img src="'+o+`" alt="electron程序崩溃"></p><h2 id="崩溃监控-服务端" tabindex="-1">崩溃监控--服务端 <a class="header-anchor" href="#崩溃监控-服务端" aria-label="Permalink to &quot;崩溃监控--服务端&quot;">​</a></h2><p>需要实现一个submitUrl的POST接口，请求为multipart/form-data格式</p><ul><li><code>ver</code> String - Electron 的版本</li><li><code>platform</code> String -例如win32!</li><li><code>process_type</code> String - 例如renderer!</li><li><code>guid</code> String-例如5e1286fc-da97-479e-918b-6bfb0c3d1c72&#39;</li><li><code>_version</code> String- <code>package.json</code> 里的版本号</li><li><code>_productName</code> String - <code>crashReporter</code> <code>options</code> 对象中的产品名字</li><li><code>prod</code> String- 基础产品名字.在这种情况下为 Electron.</li><li><code>_companyName</code> String - <code>crashReporter</code> <code>options</code> 对象中的公司名称</li><li><code>upload_file_minidump</code> File - <code>minidump</code> 格式的崩溃报告</li><li>All level one properties of the <code>extra</code> object in the <code>crashReporter</code> <code>options</code> object.</li></ul><h3 id="服务端也是在-updater-server-中-完成-崩溃监控-代码逻辑" tabindex="-1">服务端也是在 <code>updater-server</code> 中 完成 崩溃监控 代码逻辑 <a class="header-anchor" href="#服务端也是在-updater-server-中-完成-崩溃监控-代码逻辑" aria-label="Permalink to &quot;服务端也是在 \`updater-server\` 中 完成 崩溃监控 代码逻辑&quot;">​</a></h3><p>1.在koa项目中安装 <code>koa-multer</code> 库</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> i</span><span style="color:#98C379;"> @koa/multer</span><span style="color:#98C379;"> multer</span><span style="color:#D19A66;"> --save</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 或</span></span>
<span class="line"><span style="color:#61AFEF;">yarn</span><span style="color:#98C379;"> add</span><span style="color:#98C379;"> @koa/multer</span><span style="color:#98C379;"> multer</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>2.在index.js中</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> multer</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;@koa/multer&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 创建崩溃日志目录</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> uploadCrash</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> multer</span><span style="color:#ABB2BF;">({</span><span style="color:#E06C75;">dest</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;crash/&#39;</span><span style="color:#ABB2BF;">});</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 上传客户端软件崩溃日志</span></span>
<span class="line"><span style="color:#E5C07B;">router</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">post</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;/crash&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">uploadCrash</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">single</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;upload_file_minidump&#39;</span><span style="color:#ABB2BF;">), (</span><span style="color:#E06C75;font-style:italic;">ctx</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">next</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">  console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;软件崩溃日志：&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">req</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // 存DB（数据库）</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="崩溃监控-客户端" tabindex="-1">崩溃监控--客户端 <a class="header-anchor" href="#崩溃监控-客户端" aria-label="Permalink to &quot;崩溃监控--客户端&quot;">​</a></h2><p>electron 的<code>crashReporter</code>模块文档：<a href="https://www.electronjs.org/zh/docs/latest/api/crash-reporter" target="_blank" rel="noreferrer">crashReporter | Electron (electronjs.org)</a></p><p>初始化崩溃监控：crashReporter.start(options)</p><ul><li>companyName</li><li>submitURL</li><li>extra (字符串，自定义数据，一般会传上用户信息、业务信息</li></ul><p>更新extra属性：crashReporter.addExtraParameter(key, value)</p><p>主进程和渲染进程都需要初始化</p><h3 id="electron客户端中-完成-崩溃监控-代码逻辑" tabindex="-1">electron客户端中 完成 崩溃监控 代码逻辑 <a class="header-anchor" href="#electron客户端中-完成-崩溃监控-代码逻辑" aria-label="Permalink to &quot;electron客户端中 完成 崩溃监控 代码逻辑&quot;">​</a></h3><p>1.electron主进程目录中新建<code>crash-reporter.js</code> 错误收集功能模块</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">crashReporter</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;electron&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// electron程序崩溃日志上传</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> crashReporterInit</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E5C07B;">  crashReporter</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">start</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">    productName</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;remote_control&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    companyName</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;muya&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    submitURL</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;http://127.0.0.1:33855/crash&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  });</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">crashReporterInit</span><span style="color:#ABB2BF;"> };</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>2.在main.js中导入使用，和测试electron程序崩溃</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">crashReporterInit</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;./crash-reporter&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 在这个生命周期上传</span></span>
<span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;will-finish-launching&#39;</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // electron程序崩溃日志上传</span></span>
<span class="line"><span style="color:#61AFEF;">    crashReporterInit</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 监听应用激活：在这个生命周期中测试崩溃</span></span>
<span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;activate&#39;</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 测试electron程序崩溃</span></span>
<span class="line"><span style="color:#E5C07B;">    process</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">crash</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>3.启动应用，点击激活应用触发崩溃</p><h2 id="崩溃日志分析" tabindex="-1">崩溃日志分析 <a class="header-anchor" href="#崩溃日志分析" aria-label="Permalink to &quot;崩溃日志分析&quot;">​</a></h2><h3 id="崩溃日志解析" tabindex="-1">崩溃日志解析 <a class="header-anchor" href="#崩溃日志解析" aria-label="Permalink to &quot;崩溃日志解析&quot;">​</a></h3><p>下载并解压electron symbol：<a href="https://github.com/electron/electron/release" target="_blank" rel="noreferrer">https://github.com/electron/electron/release</a></p><ul><li>Macelectron-vxXX-darwin-x64-symbols.zip</li><li>Winelectron-vxXX-win32-ia32-symbols.zip</li></ul><p>服务端解析dmp文件</p><ul><li><p>node-minidump：<a href="https://github.com/electron/node-minidump" target="_blank" rel="noreferrer">electron/node-minidump: Node module to process minidump files (github.com)</a></p></li><li><p>node-minidump解析代码</p><ul><li><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> minidump</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">minidump</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> fs</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;fs&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">minidump</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">addSymbolPath</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;./symbols/electron-v23.2.0-darwin-x64-symbols/breakpad_symbols/&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">minidump</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">walkStack</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;./e1989fb5bc4e7177f39f9e493d6221b9&#39;</span><span style="color:#ABB2BF;">, (</span><span style="color:#E06C75;font-style:italic;">err</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">res</span><span style="color:#ABB2BF;">)</span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">    fs</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">writeFileSync</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;./res.txt&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">res</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></li></ul></li><li><p><a href="https://backtrace.io/blog/backtrace/electron-crash-repserver/" target="_blank" rel="noreferrer">https://backtrace.io/blog/backtrace/electron-crash-repserver/</a></p></li></ul><h3 id="崩溃监控-小技巧" tabindex="-1">崩溃监控-小技巧 <a class="header-anchor" href="#崩溃监控-小技巧" aria-label="Permalink to &quot;崩溃监控-小技巧&quot;">​</a></h3><p>渲染进程崩溃后提示用户重新加载</p><p>通过preload统一初始化崩溃监控</p><p>主进程、渲染进程通过process.crash()可以模拟崩溃</p><h2 id="崩溃治理的难点" tabindex="-1">崩溃治理的难点 <a class="header-anchor" href="#崩溃治理的难点" aria-label="Permalink to &quot;崩溃治理的难点&quot;">​</a></h2><p>定位出错栈困难</p><ul><li>Native错误栈、无操作上下文</li></ul><p>调试门槛高</p><ul><li>如果我们要调试electron主进程(electron内核)，需要用到C++的知识，用到像GDB这样的一些调试工具</li><li>C++、lldb/GDB</li></ul><p>运行环境复杂</p><ul><li>机器型号、系统、其他软件</li></ul><h2 id="崩溃治理的经验总结" tabindex="-1">崩溃治理的经验总结 <a class="header-anchor" href="#崩溃治理的经验总结" aria-label="Permalink to &quot;崩溃治理的经验总结&quot;">​</a></h2><ul><li>用户操作日志和系统信息非常重要</li><li>及时升级Electron</li><li>复现和定位问题比治理重要</li><li>社区响应快</li><li>devtool在治理内存问题非常有效</li></ul><h2 id="美团electron崩溃监控实践" tabindex="-1">美团Electron崩溃监控实践 <a class="header-anchor" href="#美团electron崩溃监控实践" aria-label="Permalink to &quot;美团Electron崩溃监控实践&quot;">​</a></h2><p><img src="`+p+`" alt="Electron崩溃监控实践"></p><p>electron主进程中的异常监控</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;uncaughtException&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">error</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    //上报异常</span></span>
<span class="line"><span style="color:#ABB2BF;">       </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 异常日志</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="延伸资料" tabindex="-1">延伸资料 <a class="header-anchor" href="#延伸资料" aria-label="Permalink to &quot;延伸资料&quot;">​</a></h3><ul><li><a href="http://seenaburns.com/debugging-electron-memory-usagel" target="_blank" rel="noreferrer">http://seenaburns.com/debugging-electron-memory-usagel</a></li><li><a href="https://cloud.tencent.com/developer/article/1084368" target="_blank" rel="noreferrer">https://cloud.tencent.com/developer/article/1084368</a></li><li><a href="https://juejin.im/post/5c5ee47be51d457f95354c82" target="_blank" rel="noreferrer">https://juejin.im/post/5c5ee47be51d457f95354c82</a></li><li><a href="https://developers.google.com/web/tools/chrome-devtools/memoryproblems?hl=zh-cn" target="_blank" rel="noreferrer">https://developers.google.com/web/tools/chrome-devtools/memoryproblems?hl=zh-cn</a></li></ul>`,50)]))}const m=n(r,[["render",t]]);export{u as __pageData,m as default};
