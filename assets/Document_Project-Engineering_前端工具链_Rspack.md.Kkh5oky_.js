import{_ as e,c as t,o as r,ah as p}from"./chunks/framework.DqD713j2.js";const s="/FrontEndLearnNotes/assets/3bae9f63dfa049daa80e31a076457ea4tplv-k3u1fbpfcp-jj-mark3024000q75.CniZMtxf.webp",h=JSON.parse('{"title":"Rspack打包工具","description":"","frontmatter":{},"headers":[],"relativePath":"Document/Project-Engineering/前端工具链/Rspack.md","filePath":"Document/Project-Engineering/前端工具链/Rspack.md","lastUpdated":1750954157000}'),c={name:"Document/Project-Engineering/前端工具链/Rspack.md"};function o(n,a,i,l,d,k){return r(),t("div",null,a[0]||(a[0]=[p('<h1 id="rspack打包工具" tabindex="-1">Rspack打包工具 <a class="header-anchor" href="#rspack打包工具" aria-label="Permalink to &quot;Rspack打包工具&quot;">​</a></h1><h2 id="相关网址" tabindex="-1">相关网址 <a class="header-anchor" href="#相关网址" aria-label="Permalink to &quot;相关网址&quot;">​</a></h2><p>Rspack官网：<a href="https://www.rspack.dev/zh/" target="_blank" rel="noreferrer">https://www.rspack.dev/zh/</a></p><p>Rspack开源地址：<a href="https://github.com/web-infra-dev/rspack" target="_blank" rel="noreferrer">web-infra-dev/rspack: A fast Rust-based web bundler 🦀️ (github.com)</a></p><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p>2023 年 3 月 10 号，字节跳动 Web Infra 团队正式宣布发布了 Rspack。</p><p>Rspack ：</p><ul><li>配置几乎跟 webpack 一模一样，连插件和 loader 的 API 也基本相同，这使得现有的 webpack 项目迁移成本非常低。</li><li>Rspack 支持 JS 编写 loader 和 plugin，没想到吧？但确实如此(感兴趣的可以看看 napi-rs)，这意味着大部分的 webpack 生态可以直接复用，这使得 Rspack 生态有非常好的开端。</li><li>也正是由于 Rspack 支持 JS 编写 loader 和 plugin，这使得扩展门槛非常低，你不会 Rust 也可以写 loader 和 plugin，直接用 JS 就可以开发。</li></ul><p>到如今，Rspack 在业界已经有了相当大的影响力了，不少的国外知名项目，比如 <code>Discord</code> 等等，都已经接入 Rspack，并且获得了 5~10 倍的性能提升。前不久，《现代 JavaScript 库开发：原理、技术与实战》作者颜海镜老哥也将团队的巨型项目(50w 行代码)从 webpack 迁移到了 Rspack，获得了 10 倍以上的性能收益，不禁要为 Rspack &quot;代颜&quot;：</p><p><img src="'+s+'" alt="img"></p><p>Rspack 的出现，让我们能够看到了 Rust 前端构建工具这个赛道的可行性，基于 Rust 的构建工具，原来也可以低成本地落地到生产环境，也可以非常&quot;接地气&quot;。</p>',11)]))}const _=e(c,[["render",o]]);export{h as __pageData,_ as default};
