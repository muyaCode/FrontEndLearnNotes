import{_ as n,c as a,o as l,ah as e}from"./chunks/framework.DqD713j2.js";const b=JSON.parse('{"title":"02_Prettier-前端代码格式化工具","description":"","frontmatter":{},"headers":[],"relativePath":"Document/前端综合解决方案/02_Prettier-前端代码格式化工具.md","filePath":"Document/前端综合解决方案/02_Prettier-前端代码格式化工具.md","lastUpdated":1750954157000}'),p={name:"Document/前端综合解决方案/02_Prettier-前端代码格式化工具.md"};function t(o,s,r,c,i,u){return l(),a("div",null,s[0]||(s[0]=[e(`<h1 id="_02-prettier-前端代码格式化工具" tabindex="-1">02_Prettier-前端代码格式化工具 <a class="header-anchor" href="#_02-prettier-前端代码格式化工具" aria-label="Permalink to &quot;02_Prettier-前端代码格式化工具&quot;">​</a></h1><p>GitHub：<a href="https://github.com/prettier/prettier" target="_blank" rel="noreferrer">https://github.com/prettier/prettier</a></p><p>官网：<a href="https://prettier.io/" target="_blank" rel="noreferrer">https://prettier.io/</a></p><p>官网文档：<a href="https://prettier.io/docs/en/index.html" target="_blank" rel="noreferrer">https://prettier.io/docs/en/index.html</a></p><p>官网在线试用配置工具：<a href="https://prettier.io/playground/" target="_blank" rel="noreferrer">Prettier v2.7.1</a></p><p>中文网：<a href="https://www.prettier.cn/" target="_blank" rel="noreferrer">Prettier 中文网</a></p><p>中文网文档：<a href="https://www.prettier.cn/docs/index.html" target="_blank" rel="noreferrer">What is Prettier? · Prettier 中文网</a></p><p>中文网在线试用配置工具：<a href="https://www.prettier.cn/playground/" target="_blank" rel="noreferrer">Prettier v2.5.1</a></p><h2 id="_01-什么是-prettier" tabindex="-1">01.什么是 prettier <a class="header-anchor" href="#_01-什么是-prettier" aria-label="Permalink to &quot;01.什么是 prettier&quot;">​</a></h2><p>prettier 是一个代码格式化工具，支持下列编程语言的代码格式化</p><ul><li>JavaScript (including experimental features)</li><li><a href="https://facebook.github.io/jsx/" target="_blank" rel="noreferrer">JSX</a></li><li><a href="https://angular.io/" target="_blank" rel="noreferrer">Angular</a></li><li><a href="https://vuejs.org/" target="_blank" rel="noreferrer">Vue</a></li><li><a href="https://flow.org/" target="_blank" rel="noreferrer">Flow</a></li><li><a href="https://www.typescriptlang.org/" target="_blank" rel="noreferrer">TypeScript</a></li><li>CSS, <a href="https://lesscss.org/" target="_blank" rel="noreferrer">Less</a>, and <a href="https://sass-lang.com/" target="_blank" rel="noreferrer">SCSS</a></li><li><a href="https://en.wikipedia.org/wiki/HTML" target="_blank" rel="noreferrer">HTML</a></li><li><a href="https://json.org/" target="_blank" rel="noreferrer">JSON</a></li><li><a href="https://graphql.org/" target="_blank" rel="noreferrer">GraphQL</a></li><li><a href="https://commonmark.org/" target="_blank" rel="noreferrer">Markdown</a>, including <a href="https://github.github.com/gfm/" target="_blank" rel="noreferrer">GFM</a> and <a href="https://mdxjs.com/" target="_blank" rel="noreferrer">MDX</a></li><li><a href="https://yaml.org/" target="_blank" rel="noreferrer">YAML</a></li></ul><p>和其他 lint 工具比如 eslint 的区别</p><p>prettier 的配置项比较少（容易配置），且只专注于代码样式，而 eslint 还提供语法检查，现在的 eslint 也集成了 formatter 功能。</p><p>eslint 能做的显然更多更杂，prettier 的出现是为了降低 eslint 的工作量，减少 eslint 的配置。</p><p>prettier 相比 eslint 支持更多文件的格式化。</p><p>也支持目前市面上所有主流的编辑器：</p><h2 id="_02-使用方法" tabindex="-1">02.使用方法 <a class="header-anchor" href="#_02-使用方法" aria-label="Permalink to &quot;02.使用方法&quot;">​</a></h2><h3 id="prettier-的使用可分为两种方式" tabindex="-1">prettier 的使用可分为两种方式： <a class="header-anchor" href="#prettier-的使用可分为两种方式" aria-label="Permalink to &quot;prettier 的使用可分为两种方式：&quot;">​</a></h3><h4 id="_1、使用编辑器的插件" tabindex="-1"><strong>1、使用编辑器的插件</strong> <a class="header-anchor" href="#_1、使用编辑器的插件" aria-label="Permalink to &quot;**1、使用编辑器的插件**&quot;">​</a></h4><p>使用编辑器插件是最为方便的一种方法，编写完代码，只需要一键即可格式化编写的代码，非常方便。</p><h5 id="在插件市场搜索prettier-选择-prettier-code-formatter-插件安装后-进行以下配置" tabindex="-1">在插件市场搜索<code>Prettier</code>：选择 <code>Prettier - Code formatter</code> 插件安装后，进行以下配置： <a class="header-anchor" href="#在插件市场搜索prettier-选择-prettier-code-formatter-插件安装后-进行以下配置" aria-label="Permalink to &quot;在插件市场搜索\`Prettier\`：选择 \`Prettier - Code formatter\` 插件安装后，进行以下配置：&quot;">​</a></h5><p>在项目根目录中新建 perttier 的默认配置文件，能够写入 YML、JSON 的配置格式，并且支持.yaml/.yml/.json/.js 后缀，也可以不带后缀；： <code>.prettierrc</code> 文件，写入配置：</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// .prettierrc 文件</span></span>
<span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;"> &quot;extends&quot;</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#98C379;"> &quot;airbnb&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;"> &quot;prettier&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;"> &quot;prettier/vue&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;"> ],</span></span>
<span class="line"><span style="color:#E06C75;"> &quot;semi&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 结尾不用分号, 默认true</span></span>
<span class="line"><span style="color:#E06C75;"> &quot;singleQuote&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 使用单引号代替双引号，默认false(在jsx中配置无效, 默认都是双引号)</span></span>
<span class="line"><span style="color:#E06C75;"> &quot;trailingComma&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;all&quot;</span><span style="color:#FFFFFF;"> |</span><span style="color:#98C379;"> &quot;es5&quot;</span><span style="color:#FFFFFF;"> |</span><span style="color:#98C379;"> &quot;none&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 多行语法中的最后一行是否添加逗号</span></span>
<span class="line"><span style="color:#E06C75;"> &quot;printWidth&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">200</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 超过最大值换行</span></span>
<span class="line"><span style="color:#E06C75;"> &quot;htmlWhitespaceSensitivity&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;ignore&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;"> &quot;disableLanguages&quot;</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;vue&quot;</span><span style="color:#ABB2BF;">] </span><span style="color:#7F848E;font-style:italic;">// 不格式化vue文件，vue文件的格式化单独设置</span></span>
<span class="line"><span style="color:#98C379;"> &quot;bracketSpacing&quot;</span><span style="color:#FFFFFF;">:</span><span style="color:#D19A66;"> true</span><span style="color:#7F848E;font-style:italic;"> // 对象中的空格 默认true</span></span>
<span class="line"><span style="color:#98C379;"> &quot;tabWidth&quot;</span><span style="color:#FFFFFF;">:</span><span style="color:#D19A66;"> 2</span><span style="color:#ABB2BF;">,  </span><span style="color:#7F848E;font-style:italic;">// tab缩进大小,默认为2</span></span>
<span class="line"><span style="color:#E06C75;">  &quot;useTabs&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 使用tab缩进，默认false</span></span>
<span class="line"><span style="color:#E06C75;">  &quot;jsxBracketSameLine&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 在jsx中把&#39;&gt;&#39; 是否单独放一行</span></span>
<span class="line"><span style="color:#E06C75;">  &quot;jsxSingleQuote&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 在jsx中使用单引号代替双引号</span></span>
<span class="line"><span style="color:#E06C75;">  &quot;proseWrap&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">&#39;preserve&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// &quot;always&quot; - 当超出print width（上面有这个参数）时就折行 &quot;never&quot; - 不折行 &quot;perserve&quot; - 按照文件原样折行</span></span>
<span class="line"><span style="color:#E06C75;">  &quot;trailingComma&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">&#39;none&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 对象最后一项默认格式化会加逗号</span></span>
<span class="line"><span style="color:#E06C75;">  &quot;arrowParens&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">&#39;avoid&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 箭头函数参数括号 默认avoid 可选 avoid(能省略括号的时候就省略)| always(总是有括号)</span></span>
<span class="line"><span style="color:#E06C75;">  &quot;bracketSpacing&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 对象中的空格 默认true{ foo: bar } false:{foo: bar}</span></span>
<span class="line"><span style="color:#E06C75;">  &quot;printWidth&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">100</span><span style="color:#7F848E;font-style:italic;"> // 一行多长，超过的会换行</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p><strong>vscode 编辑器设置为例进行说明：</strong></p><p>VSCode 编辑器有两种配置，一是编辑器配置，二是项目工作区配置：</p><p><strong>编辑器全局配置设置：</strong></p><ol><li><p>三种打开设置方式：</p><ul><li><p>\`\`文件-&gt;首选项 -&gt; 设置 -&gt; 搜索 Prettier\`</p></li><li><p><code>左下角设置图标 -&gt; 设置 -&gt; 搜索 Prettier</code></p></li><li><p>快捷键 <code>ctrl+shift+p</code> ，然后搜索：Settings -&gt; 选择 -&gt; 首选项：打开设置 -&gt; 搜索 Prettier - &gt; 可以找到并点击 <u>在 settings.json 中编辑</u></p></li></ul></li></ol><p><strong>项目工作区配置：</strong></p><ul><li><p>1.工作区 或 项目里新建文件夹和文件：.vscode -&gt; settings.json</p></li><li><p>2.然后在 settings.json 填写配置</p></li></ul><blockquote><p>Prettierc 配置可以配合 VSCode 编辑器的保存时格式化代码使用：和上面 <code>编辑器全局配置设置</code> 步骤，最后一步搜索 save - &gt;勾选 <code>Editor: Format On Save</code></p></blockquote><p>下面的 VSCode 的 setting.json 配置是我自己的对于 HTML/CSS/JS/LESS 文件的 prettier 格式化规则：</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 使能每一种语言默认格式化规则</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;[html]&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;editor.defaultFormatter&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;esbenp.prettier-vscode&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;[css]&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;editor.defaultFormatter&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;esbenp.prettier-vscode&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;[less]&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;editor.defaultFormatter&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;esbenp.prettier-vscode&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;[javascript]&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;editor.defaultFormatter&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;esbenp.prettier-vscode&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	/*  prettier的配置 */</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;prettier.printWidth&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">100</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 超过最大值换行</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;prettier.tabWidth&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 缩进字节数</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;prettier.useTabs&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 缩进不使用tab，使用空格</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;prettier.semi&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 句尾添加分号</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;prettier.singleQuote&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 使用单引号代替双引号</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;prettier.proseWrap&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;preserve&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 默认值。因为使用了一些折行敏感型的渲染器（如GitHub comment）而按照markdown文本样式进行折行</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;prettier.arrowParens&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;avoid&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">//  (x) =&gt; {} 箭头函数参数只有一个时是否要有小括号。avoid：省略括号</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;prettier.bracketSpacing&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 在对象，数组括号与文字之间加空格 &quot;{ foo: bar }&quot;</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;prettier.disableLanguages&quot;</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;vue&quot;</span><span style="color:#ABB2BF;">], </span><span style="color:#7F848E;font-style:italic;">// 不格式化vue文件，vue文件的格式化单独设置</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;prettier.endOfLine&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;auto&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 结尾是 \\n \\r \\n\\r auto</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;prettier.eslintIntegration&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">//不让prettier使用eslint的代码格式进行校验</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;prettier.htmlWhitespaceSensitivity&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;ignore&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;prettier.ignorePath&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;.prettierignore&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 不使用prettier格式化的文件填写在项目的.prettierignore文件中</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;prettier.jsxBracketSameLine&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 在jsx中把&#39;&gt;&#39; 是否单独放一行</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;prettier.jsxSingleQuote&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 在jsx中使用单引号代替双引号</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;prettier.parser&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;babylon&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 格式化的解析器，默认是babylon</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;prettier.requireConfig&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// Require a &#39;prettierconfig&#39; to format prettier</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;prettier.stylelintIntegration&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">//不让prettier使用stylelint的代码格式进行校验</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;prettier.trailingComma&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;es5&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 在对象或数组最后一个元素后面是否加逗号（在ES5中加尾逗号）</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;prettier.tslintIntegration&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#7F848E;font-style:italic;"> // 不让prettier使用tslint的代码格式进行校验</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div><p>上面只是一些基本的语言的格式化规范，prettier 每一个属性的配置都有详细的说明，可以根据自己的情况进行调整。</p><p>相信每个在 vscode 上编写 vue 的都会下载 Vetur 插件，它目前是 vscode 上面最好用的一款 vue 插件。现在要说的是，如何使用 prettier 格式化 vue 的代码。你没法使用类似格式化 html/css/js 的方式来格式化 vue 格式的代码，像下面这样子的：</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;[vue]&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;editor.defaultFormatter&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;esbenp.prettier-vscode&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>这样 prettier 是不认识的。不过幸运的是，Vetur 插件内部默认使用 prettier 进行格式化的，但是由于 Vetur 的默认格式化配置与我们期望的有所出入，所以我们需要单独对 Vetur 的 prettier 进行配置，如下：</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;vetur.format.defaultFormatter.html&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;prettier&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;vetur.format.defaultFormatter.js&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;prettier&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;vetur.format.defaultFormatter.less&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;prettier&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;vetur.format.defaultFormatterOptions&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;prettier&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">			&quot;printWidth&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">160</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">			&quot;singleQuote&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 使用单引号</span></span>
<span class="line"><span style="color:#E06C75;">			&quot;semi&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 末尾使用分号</span></span>
<span class="line"><span style="color:#E06C75;">			&quot;tabWidth&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">			&quot;arrowParens&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;avoid&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">			&quot;bracketSpacing&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">			&quot;proseWrap&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;preserve&quot;</span><span style="color:#7F848E;font-style:italic;"> // 代码超出是否要换行 preserve保留</span></span>
<span class="line"><span style="color:#ABB2BF;">		}</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>这些配置是不会和之前配置的 prettier 规则冲突的。</p><p>值得提一句的是，Vetur 对于 html 文件默认使用的是 prettyhtml，但是由于 prettier 也可以支持 html 的格式化，所以我觉得统一使用 prettier 对全语言的格式化是比较简洁的，也希望 prettier 能够对更多的语言进行支持。</p><h4 id="_2、使用脚本的方式" tabindex="-1"><strong>2、使用脚本的方式</strong> <a class="header-anchor" href="#_2、使用脚本的方式" aria-label="Permalink to &quot;**2、使用脚本的方式**&quot;">​</a></h4><p>这种方式就是使用 prettier 指令在命令行窗口对单一文件进行格式化。</p><p>首先需要安装 prettier 全局指令：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> install</span><span style="color:#D19A66;"> -g</span><span style="color:#98C379;"> prettier</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>可以使用  <strong>prettier -v</strong>  检查是否安装完成。</p><p>安装好之后，使用下面指令对 xxx.js 文件进行格式化（使用的是 prettier 默认的配置规则）。</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">//</span><span style="color:#98C379;"> prettier--write</span><span style="color:#ABB2BF;"> &lt;</span><span style="color:#98C379;">文件路劲+文件</span><span style="color:#ABB2BF;">名&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">prettier</span><span style="color:#D19A66;"> --write</span><span style="color:#98C379;"> ./xxx.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>当然，默认的配置规则是不符合我们的需求的，我们需要自定义配置规则。</p><p>书写自定义规则的文件需要是下面几种文件和格式：</p><ul><li><code>.prettierrc</code>  文件，支持 yaml 和 json 格式；或者加上 .yaml/.yml/.json 后缀名</li><li><code>.prettierrc.toml</code>  文件（当为 toml 格式的时候，后缀是必须的）</li><li><code>prettier.config.js</code>  或者 .prettierrc.js，需要返回一个对象</li><li><code>package.json</code>  文件中加上&quot;prettier&quot;属性</li></ul><p>在项目中，安装到开发依赖上</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> install</span><span style="color:#D19A66;"> --save-dev</span><span style="color:#D19A66;"> --save-exact</span><span style="color:#98C379;"> prettier</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h5 id="忽略不想格式化的文件" tabindex="-1">忽略不想格式化的文件 <a class="header-anchor" href="#忽略不想格式化的文件" aria-label="Permalink to &quot;忽略不想格式化的文件&quot;">​</a></h5><p>项目根目录创建 <a href="https://prettier.io/docs/en/ignore.html" target="_blank" rel="noreferrer">.prettierignore</a> 文件，忽略你不希望格式化的文件，node_modules 是默认会被忽略的目录。</p><p>他的用法就类似于<code>.gitignore</code>，下面是官方给的例子</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># Ignore artifacts:</span></span>
<span class="line"><span style="color:#61AFEF;">node_modules</span></span>
<span class="line"><span style="color:#61AFEF;">dist</span></span>
<span class="line"><span style="color:#61AFEF;">public</span></span>
<span class="line"><span style="color:#61AFEF;">.vscode</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h5 id="命令行执行格式化" tabindex="-1">命令行执行格式化 <a class="header-anchor" href="#命令行执行格式化" aria-label="Permalink to &quot;命令行执行格式化&quot;">​</a></h5><p>在项目中手动调用 prettier 命令行进行格式化</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npx</span><span style="color:#98C379;"> prettier</span><span style="color:#D19A66;"> --write</span><span style="color:#98C379;"> .</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>提前查看会格式化哪些文件，不实际执行格式化</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npx</span><span style="color:#98C379;"> prettier</span><span style="color:#D19A66;"> --check</span><span style="color:#98C379;"> .</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>实际使用过程中，还是直接用编辑器的插件的，设置成保存的时候执行格式化。</p><h3 id="解决-prettier-插件-和-eslint-的冲突" tabindex="-1">解决 prettier 插件 和 eslint 的冲突 <a class="header-anchor" href="#解决-prettier-插件-和-eslint-的冲突" aria-label="Permalink to &quot;解决 prettier 插件 和 eslint 的冲突&quot;">​</a></h3><ul><li><p>安装 <a href="https://github.com/prettier/eslint-config-prettier%23installation" target="_blank" rel="noreferrer">eslint-config-prettier</a>，这个插件会把 eslint 中可能导致冲突的规则关掉</p><ul><li><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">yarn</span><span style="color:#98C379;"> add</span><span style="color:#D19A66;"> --dev</span><span style="color:#98C379;"> eslint-config-prettier</span><span style="color:#98C379;"> eslint-plugin-prettier</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p><code>eslint-config-prettier</code>：是一个 eslint 配置，把 eslint 里所有和 prettier 冲突的配置都关闭，需要在<code>.eslintrc.*</code>文件里加下 extends 的选项（<strong>要放最底下</strong>，这样才能进行全面覆盖）：</p></li><li><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// .eslintrc.*</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // ...其他配置</span></span>
<span class="line"><span style="color:#FFFFFF;">  extends</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#FFFFFF;">      &#39;eslint:recommended&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#FFFFFF;">      &#39;pluin:vue/essential&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#FFFFFF;">      &#39;plugin:prettier/recommended&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">  ],</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // ...</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 上面plugin:prettier/recommended的原子配置</span></span>
<span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">  &quot;extends&quot;</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;prettier&quot;</span><span style="color:#ABB2BF;">],        </span><span style="color:#7F848E;font-style:italic;">// 生效 eslint-config-prettier 屏蔽配置</span></span>
<span class="line"><span style="color:#E06C75;">  &quot;plugins&quot;</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;prettier&quot;</span><span style="color:#ABB2BF;">],        </span><span style="color:#7F848E;font-style:italic;">// 生效 eslint-plugin-prettier 提示配置</span></span>
<span class="line"><span style="color:#E06C75;">  &quot;rules&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">    &quot;prettier/prettier&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;error&quot;</span><span style="color:#ABB2BF;">,   </span><span style="color:#7F848E;font-style:italic;">// prettier报错的级别，红色波浪线</span></span>
<span class="line"><span style="color:#E06C75;">    &quot;arrow-body-style&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;off&quot;</span><span style="color:#ABB2BF;">,      </span><span style="color:#7F848E;font-style:italic;">// 冲突无法解决，直接关闭</span></span>
<span class="line"><span style="color:#E06C75;">    &quot;prefer-arrow-callback&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;off&quot;</span><span style="color:#7F848E;font-style:italic;">  // 冲突无法解决，直接关闭</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div></li><li><p><code>eslint-plugin-prettier</code>：eslint 的插件，可以让 eslint 用 prettier 的配置来进行<strong>错误提示</strong>，如下图所示，只要提示框中有<code>eslint(prettier/prettier)</code>  就说明这个插件生效了。</p></li><li><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c7143f3a262e41a78e59ad7070a4ec9d~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp" alt=""></p></li></ul></li><li><p>或者在.eslintrc.js 里面的 rules 选项配置：<code>&quot;space-before-function-paren&quot;: &quot;off&quot;</code>，然后重启项目</p></li></ul><h3 id="git-hooks" tabindex="-1">git hooks <a class="header-anchor" href="#git-hooks" aria-label="Permalink to &quot;git hooks&quot;">​</a></h3><p>可以设置在 git 提交之前执行一次格式化( <strong>pre-commit hook</strong> )，这样我们仓库里的代码就都是格式化好的了。</p><p>只需要在 package.json 里面加入一些配置。</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;husky&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;hooks&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">			&quot;pre-commit&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;lint-staged&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">		}</span></span>
<span class="line"><span style="color:#ABB2BF;">	},</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;lint-staged&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">		&quot;**/*&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;prettier --write --ignore-unknown&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p><strong>如果你使用 eslint，请确保 lint-staged 里，eslint 的执行顺序放在前面</strong></p><p>需要安装<a href="https://github.com/typicode/husky" target="_blank" rel="noreferrer">husky</a> 和 <a href="https://github.com/okonet/lint-staged" target="_blank" rel="noreferrer">lint-staged</a>这两个依赖才能实现，其中 husky 是帮助我们添加 git hooks 的工具，而 lint-staged 则是筛选那些 staged 的 git 文件执行 lint。</p><p>执行<code>npx mrm lint-staged</code>就会把两个工具都安装好。</p><h3 id="用注释忽略格式化代码" tabindex="-1">用注释忽略格式化代码 <a class="header-anchor" href="#用注释忽略格式化代码" aria-label="Permalink to &quot;用注释忽略格式化代码&quot;">​</a></h3><p><code>// prettier-ignore</code>注释会忽略抽象语法树下一行代码的格式化</p><p>举个例子</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">matrix</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// prettier-ignore</span></span>
<span class="line"><span style="color:#61AFEF;">matrix</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#D19A66;">  1</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;">  0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;">  0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1</span></span>
<span class="line"><span style="color:#ABB2BF;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>执行 prettier 格式化后:</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">matrix</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// prettier-ignore</span></span>
<span class="line"><span style="color:#61AFEF;">matrix</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#D19A66;">  1</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;">  0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;">  0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1</span></span>
<span class="line"><span style="color:#ABB2BF;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h4 id="jsx-中的注释" tabindex="-1">JSX 中的注释 <a class="header-anchor" href="#jsx-中的注释" aria-label="Permalink to &quot;JSX 中的注释&quot;">​</a></h4><div class="language-jsx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#C678DD;">	{</span><span style="color:#7F848E;font-style:italic;">/* prettier-ignore */</span><span style="color:#C678DD;">}</span></span>
<span class="line"><span style="color:#ABB2BF;">	&lt;</span><span style="color:#E06C75;">span</span><span style="color:#D19A66;font-style:italic;">     ugly</span><span style="color:#D19A66;font-style:italic;">  format</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;&#39;</span><span style="color:#ABB2BF;">   /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="html-中的注释" tabindex="-1">HTML 中的注释 <a class="header-anchor" href="#html-中的注释" aria-label="Permalink to &quot;HTML 中的注释&quot;">​</a></h4><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">&lt;!-- prettier-ignore --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">div</span><span style="color:#D19A66;">         class</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;x&quot;</span><span style="color:#ABB2BF;">       &gt;hello world&lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">            &gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">&lt;!-- prettier-ignore-attribute --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">div</span></span>
<span class="line"><span style="color:#D19A66;">	(mousedown)</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;       onStart    (    )         &quot;</span></span>
<span class="line"><span style="color:#D19A66;">	(mouseup)</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;         onEnd      (    )         &quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">&lt;!-- prettier-ignore-attribute (mouseup) --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">div</span></span>
<span class="line"><span style="color:#D19A66;">	(mousedown)</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;onStart()&quot;</span></span>
<span class="line"><span style="color:#D19A66;">	(mouseup)</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;         onEnd      (    )         &quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h4 id="css-中的注释" tabindex="-1">CSS 中的注释 <a class="header-anchor" href="#css-中的注释" aria-label="Permalink to &quot;CSS 中的注释&quot;">​</a></h4><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/* prettier-ignore */</span></span>
<span class="line"><span style="color:#D19A66;">.my</span><span style="color:#C678DD;">    ugly rule</span></span>
<span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="markdown-中的注释" tabindex="-1">MarkDown 中的注释 <a class="header-anchor" href="#markdown-中的注释" aria-label="Permalink to &quot;MarkDown 中的注释&quot;">​</a></h4><div class="language-markdown line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">&lt;!-- prettier-ignore --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">Do   not    format   this</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="忽略一定范围的代码" tabindex="-1">忽略一定范围的代码 <a class="header-anchor" href="#忽略一定范围的代码" aria-label="Permalink to &quot;忽略一定范围的代码&quot;">​</a></h4><p><em>available in v1.12.0+</em></p><p>通常实在文件顶部使用来取消一些自动生成内容的格式化</p><p>比如 markdown 里的 toc 和表格等</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">&lt;!-- prettier-ignore-start --&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">&lt;!-- SOMETHING AUTO-GENERATED BY TOOLS - START --&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">| MY | AWESOME | AUTO-GENERATED | TABLE | |-|-|-|-| | a | b | c | d |</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">&lt;!-- SOMETHING AUTO-GENERATED BY TOOLS - END --&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">&lt;!-- prettier-ignore-end --&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h4 id="yaml" tabindex="-1">YAML <a class="header-anchor" href="#yaml" aria-label="Permalink to &quot;YAML&quot;">​</a></h4><div class="language-yaml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># prettier-ignore</span></span>
<span class="line"><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">  : </span><span style="color:#98C379;">value</span></span>
<span class="line"><span style="color:#E06C75;">hello</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">world</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="graphql" tabindex="-1">GraphQL <a class="header-anchor" href="#graphql" aria-label="Permalink to &quot;GraphQL&quot;">​</a></h4><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  # prettier-ignore</span></span>
<span class="line"><span style="color:#61AFEF;">  addReaction(input:</span><span style="color:#98C379;">{superLongInputFieldName:</span><span style="color:#61AFEF;">&quot;MDU6SXNzdWUyMzEzOTE1NTE=&quot;</span><span style="color:#61AFEF;">,content:HOORAY}</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#61AFEF;">    reaction</span><span style="color:#98C379;"> {content}</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h4 id="handlebars" tabindex="-1">Handlebars <a class="header-anchor" href="#handlebars" aria-label="Permalink to &quot;Handlebars&quot;">​</a></h4><div class="language-jsx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{{</span><span style="color:#56B6C2;">!</span><span style="color:#E06C75;"> prettier</span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">ignore</span><span style="color:#ABB2BF;"> }}</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &quot;hello! my parent was ignored&quot;</span></span>
<span class="line"><span style="color:#C678DD;">  {</span><span style="color:#ABB2BF;">{#my-crazy-component     </span><span style="color:#98C379;">&quot;shall&quot;</span><span style="color:#E06C75;">     be=</span><span style="color:#98C379;">&quot;preserved&quot;</span><span style="color:#ABB2BF;">}</span><span style="color:#C678DD;">}</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E5C07B;">This</span></span>
<span class="line"><span style="color:#D19A66;font-style:italic;">      is</span><span style="color:#56B6C2;">  =</span><span style="color:#98C379;">  &quot;also preserved as is&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">    /&gt;</span></span>
<span class="line"><span style="color:#C678DD;">  {</span><span style="color:#ABB2BF;">{/my-crazy-</span><span style="color:#E06C75;">component</span><span style="color:#ABB2BF;">}</span><span style="color:#C678DD;">}</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="_03-使用配置文件进行配置" tabindex="-1">03.使用配置文件进行配置 <a class="header-anchor" href="#_03-使用配置文件进行配置" aria-label="Permalink to &quot;03.使用配置文件进行配置&quot;">​</a></h2><p>最推荐的使用方式是使用配置文件。</p><p>prettier 支持的配置文件的优先级如下，它使用 <a href="https://github.com/davidtheclark/cosmiconfig" target="_blank" rel="noreferrer">cosmiconfig</a>提供配置文件支持的：</p><ul><li>A <code>&quot;prettier&quot;</code> key in your <code>package.json</code> file.</li><li>A <code>.prettierrc</code> file written in JSON or YAML.</li><li>A <code>.prettierrc.json</code>, <code>.prettierrc.yml</code>, <code>.prettierrc.yaml</code>, or <code>.prettierrc.json5</code> file.</li><li>A <code>.prettierrc.js</code>, <code>.prettierrc.cjs</code>, <code>prettier.config.js</code>, or <code>prettier.config.cjs</code> file that exports an object using <code>module.exports</code>.</li><li>A <code>.prettierrc.toml</code> file.</li></ul><p>这里我使用 <code>.prettierrc.js</code>来配置，因为偏好 json 那种风格的配置文件，但是 json 有个最大的问题是不支持注释。所以我这里用了 js，把每一项都写上了注释，方便以后改的时候查看。</p><p>vscode 读取这种单独配置文件的优先级会高于插件内配置。</p><h3 id="可配置选项" tabindex="-1">可配置选项 <a class="header-anchor" href="#可配置选项" aria-label="Permalink to &quot;可配置选项&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 1.一行代码的最大字符数，默认是80(printWidth: &lt;int&gt;)</span></span>
<span class="line"><span style="color:#E06C75;">	printWidth</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">80</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 2.tab宽度为2空格(tabWidth: &lt;int&gt;)</span></span>
<span class="line"><span style="color:#E06C75;">	tabWidth</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 3.是否使用tab来缩进，我们使用空格(useTabs: &lt;bool&gt;)</span></span>
<span class="line"><span style="color:#E06C75;">	useTabs</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 4.结尾是否添加分号，false的情况下只会在一些导致ASI错误的其工况下在开头加分号，我选择无分号结尾的风格(semi: &lt;bool&gt;)</span></span>
<span class="line"><span style="color:#E06C75;">	semi</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 5.使用单引号(singleQuote: &lt;bool&gt;)</span></span>
<span class="line"><span style="color:#E06C75;">	singleQuote</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 6.object对象中key值是否加引号（quoteProps: &quot;&lt;as-needed|consistent|preserve&gt;&quot;）as-needed只有在需求要的情况下加引号，consistent是有一个需要引号就统一加，preserve是保留用户输入的引号</span></span>
<span class="line"><span style="color:#E06C75;">	quoteProps</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;as-needed&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 7.在jsx文件中的引号需要单独设置（jsxSingleQuote: &lt;bool&gt;）</span></span>
<span class="line"><span style="color:#E06C75;">	jsxSingleQuote</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 8.尾部逗号设置，es5是尾部逗号兼容es5，none就是没有尾部逗号，all是指所有可能的情况，需要node8和es2017以上的环境。（trailingComma: &quot;&lt;es5|none|all&gt;&quot;）</span></span>
<span class="line"><span style="color:#E06C75;">	trailingComma</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;es5&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 9.object对象里面的key和value值和括号间的空格(bracketSpacing: &lt;bool&gt;)</span></span>
<span class="line"><span style="color:#E06C75;">	bracketSpacing</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 10.jsx标签多行属性写法时，尖括号是否另起一行(jsxBracketSameLine: &lt;bool&gt;)</span></span>
<span class="line"><span style="color:#E06C75;">	jsxBracketSameLine</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 11.箭头函数单个参数的情况是否省略括号，默认always是总是带括号（arrowParens: &quot;&lt;always|avoid&gt;&quot;）</span></span>
<span class="line"><span style="color:#E06C75;">	arrowParens</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;always&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 12.range是format执行的范围，可以选执行一个文件的一部分，默认的设置是整个文件（rangeStart: &lt;int&gt;  rangeEnd: &lt;int&gt;）</span></span>
<span class="line"><span style="color:#E06C75;">	rangeStart</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">	rangeEnd</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">Infinity</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 18. vue script和style标签中是否缩进,开启可能会破坏编辑器的代码折叠</span></span>
<span class="line"><span style="color:#E06C75;">	vueIndentScriptAndStyle</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 19.    endOfLine: &quot;&lt;lf|crlf|cr|auto&gt;&quot; 行尾换行符,默认是lf,</span></span>
<span class="line"><span style="color:#E06C75;">	endOfLine</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;lf&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 20.embeddedLanguageFormatting: &quot;off&quot;,默认是auto,控制被引号包裹的代码是否进行格式化</span></span>
<span class="line"><span style="color:#E06C75;">	embeddedLanguageFormatting</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;off&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 14. requirePragma: &lt;bool&gt;,格式化有特定开头编译指示的文件 比如下面两种</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/** * </span><span style="color:#C678DD;font-style:italic;">@prettier</span><span style="color:#7F848E;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// or</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/** * </span><span style="color:#C678DD;font-style:italic;">@format</span><span style="color:#7F848E;font-style:italic;"> */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 15.insertPragma: &lt;bool&gt; 自当插入pragma到已经完成的format的文件开头</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 16. proseWrap: &quot;&lt;always|never|preserve&gt;&quot; 文章换行,默认情况下会对你的markdown文件换行进行format会控制在printwidth以内</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 13. 指定parser,因为pretter会自动选择,所以一般不用指定(parser: &quot;&lt;string&gt;&quot;  parser: require(&quot;./my-parser&quot;))</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// &quot;babel&quot; (via @babel/parser) Named &quot;babylon&quot; until v1.16.0</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// &quot;babel-flow&quot; (same as &quot;babel&quot; but enables Flow parsing explicitly to avoid ambiguity) First available in v1.16.0</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// &quot;babel-ts&quot; (similar to &quot;typescript&quot; but uses Babel and its TypeScript plugin) First available in v2.0.0</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// &quot;flow&quot; (via flow-parser)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// &quot;typescript&quot; (via @typescript-eslint/typescript-estree) First available in v1.4.0</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// &quot;espree&quot; (via espree) First available in v2.2.0</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// &quot;meriyah&quot; (via meriyah) First available in v2.2.0</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// &quot;css&quot; (via postcss-scss and postcss-less, autodetects which to use) First available in v1.7.1</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// &quot;scss&quot; (same parsers as &quot;css&quot;, prefers postcss-scss) First available in v1.7.1</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// &quot;less&quot; (same parsers as &quot;css&quot;, prefers postcss-less) First available in v1.7.1</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// &quot;json&quot; (via @babel/parser parseExpression) First available in v1.5.0</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// &quot;json5&quot; (same parser as &quot;json&quot;, but outputs as json5) First available in v1.13.0</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// &quot;json-stringify&quot; (same parser as &quot;json&quot;, but outputs like JSON.stringify) First available in v1.13.0</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// &quot;graphql&quot; (via graphql/language) First available in v1.5.0</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// &quot;markdown&quot; (via remark-parse) First available in v1.8.0</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// &quot;mdx&quot; (via remark-parse and @mdx-js/mdx) First available in v1.15.0</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// &quot;html&quot; (via angular-html-parser) First available in 1.15.0</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// &quot;vue&quot; (same parser as &quot;html&quot;, but also formats vue-specific syntax) First available in 1.10.0</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// &quot;angular&quot; (same parser as &quot;html&quot;, but also formats angular-specific syntax via angular-estree-parser) First available in 1.15.0</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// &quot;lwc&quot; (same parser as &quot;html&quot;, but also formats LWC-specific syntax for unquoted template attributes) First available in 1.17.0</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// &quot;yaml&quot; (via yaml and yaml-unist-parser) First available in 1.14.0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 17. htmlWhitespaceSensitivity: &quot;&lt;css|strict|ignore&gt;&quot; html中的空格敏感性</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 针对不同文件或目录设置不同配置的方法,json格式例子</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//   &quot;semi&quot;: false,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//   &quot;overrides&quot;: [</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//     {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//       &quot;files&quot;: &quot;*.test.js&quot;,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//       &quot;options&quot;: {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//         &quot;semi&quot;: true</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//       }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//     },</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//     {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//       &quot;files&quot;: [&quot;*.html&quot;, &quot;legacy/**/*.js&quot;],</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//       &quot;options&quot;: {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//         &quot;tabWidth&quot;: 4</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//       }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//     }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//   ]</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br></div></div><p>下面是精简版本，默认配置在我这里需要修改的只有两个选项</p><ul><li><p>semi,行末是否加分号，有以下几个原因让我选择 false</p><ol><li>我主要使用的 vue 他的代码风格就是不加分号的，不加分号代码也能正常运行(因为编译器是自动给你加分号执行的)，只需要注意几个会出问题的点。</li><li>加分号会增加文件大小，写代码和删代码都需要多按麻烦</li><li>我常用的其他语言，比如 go，python 和 powershell 也可以不用分号</li></ol></li><li><p>使用单引号而不是双引号，同理，vue 的代码风格使用的是单引号，很多 js 代码风格都是使用单引号</p></li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">	semi</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">	singleQuote</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>关于 js 使用单引号的好处，为什么不用双引号</p><ol><li><p>首先，双引号其实是 c 语言（类 c++的 java，c#都是这样）带来的强迫症，c 语言用单引号表示单个字符，双引号表示字符串，c 语言区分这两个我猜是因为要斤斤计较内存的使用的缘故，编译的时候给单个字符内存分配和给字符串内存分配的占用是不同的。但是在 js，python 这些语言里面，单引号双引号都可以用字符串，就没必要一定遵循这个强迫症了。</p></li><li><p>shell 和 powershell 这两种语言里面用单引号表示纯字符串，双引号则是可以添加变量的字符串。因为这两种脚本也是比较常用的，为了统一，干脆所有字符串统一用单引号，双引号留着都不用，比如 powershell 脚本里面我也不用双引号，而是用 format 来格式化字符串。</p></li><li><p>用单引号可以少按一个 shift，方便一些</p></li><li><p>html 中用的是双引号，所以 js 区分一下，用单引号。</p></li></ol><p>其他默认的配置符合我使用习惯的也有可以讨论的：</p><p>关于 tab 用几个空格的讨论我选择用两个空格。</p><p>一般两个空格就是最小的缩进了，2 个空格和 4 个空格应该是主流的两种。在前端项目里面一般是两个空格。有以下的原因吧：</p><ol><li>js 语言回调函数之类嵌套的场景比较多，如果用 4 空格缩进会占用过多的空间，2 空格就比较紧凑。</li><li>2 空格输入和删除都更方便（虽然我都是用 tab 输出 2 空格），方便修改</li></ol><p>缺点也是比较紧凑，看着容易累。</p><h3 id="针对特定文件覆盖配置" tabindex="-1">针对特定文件覆盖配置 <a class="header-anchor" href="#针对特定文件覆盖配置" aria-label="Permalink to &quot;针对特定文件覆盖配置&quot;">​</a></h3><p>把官方的例子搬了过来。这样就能针对不同文件进行配置了。</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;semi&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">	&quot;overrides&quot;</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#ABB2BF;">		{</span></span>
<span class="line"><span style="color:#E06C75;">			&quot;files&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;*.test.js&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">			&quot;options&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">				&quot;semi&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span></span>
<span class="line"><span style="color:#ABB2BF;">			}</span></span>
<span class="line"><span style="color:#ABB2BF;">		},</span></span>
<span class="line"><span style="color:#ABB2BF;">		{</span></span>
<span class="line"><span style="color:#E06C75;">			&quot;files&quot;</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;*.html&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;legacy/**/*.js&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#E06C75;">			&quot;options&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">				&quot;tabWidth&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">4</span></span>
<span class="line"><span style="color:#ABB2BF;">			}</span></span>
<span class="line"><span style="color:#ABB2BF;">		}</span></span>
<span class="line"><span style="color:#ABB2BF;">	]</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div>`,116)]))}const B=n(p,[["render",t]]);export{b as __pageData,B as default};
