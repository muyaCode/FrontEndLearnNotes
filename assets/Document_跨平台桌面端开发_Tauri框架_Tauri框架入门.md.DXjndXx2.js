import{_ as o,c as r,o as t,ah as a,j as n,a as l,t as e}from"./chunks/framework.DqD713j2.js";const c="/FrontEndLearnNotes/assets/image-20240411183549266.FZ6SILkX.png",i="/FrontEndLearnNotes/assets/image-20240411183625855.C7O7QLhY.png",B="/FrontEndLearnNotes/assets/image-20240411183721563.R4XqbNpD.png",y="/FrontEndLearnNotes/assets/image-20240411183818619.D9YSHM_B.png",u="/FrontEndLearnNotes/assets/v2-64652dcc0907efa0a1c90080c5783711_b.CkDv9W6x.jpg",b="/FrontEndLearnNotes/assets/v2-6ab03e126f484f4c29977d38f47b6878_720w.CstfQR-0.webp",d="/FrontEndLearnNotes/assets/v2-36c6a3f8a8ab9ea8d5f757dde7a4fd5c_720w.D7BUiqLi.webp",m="/FrontEndLearnNotes/assets/v2-869ff1c22b71ac336d13c86c63de8d37_720w.B09-Yp0E.webp",F="/FrontEndLearnNotes/assets/image-20240415202544172.DCf0ZHfo.png",C="/FrontEndLearnNotes/assets/195824508-e4807ba5-2084-475a-aa11-9376af66a19a.CL6XBCrw.png",A="/FrontEndLearnNotes/assets/195824577-6ff7bb0e-8b60-4b36-881b-1e96296a075c.CDmShj0I.png",k=JSON.parse('{"title":"Tauri框架入门","description":"","frontmatter":{},"headers":[],"relativePath":"Document/跨平台桌面端开发/Tauri框架/Tauri框架入门.md","filePath":"Document/跨平台桌面端开发/Tauri框架/Tauri框架入门.md","lastUpdated":1750954157000}'),h={name:"Document/跨平台桌面端开发/Tauri框架/Tauri框架入门.md"};function E(p,s,g,f,v,w){return t(),r("div",null,[s[5]||(s[5]=a(`<h1 id="tauri框架入门" tabindex="-1">Tauri框架入门 <a class="header-anchor" href="#tauri框架入门" aria-label="Permalink to &quot;Tauri框架入门&quot;">​</a></h1><p>官网：<a href="https://tauri.app/zh-cn/" target="_blank" rel="noreferrer">https://tauri.app/zh-cn/</a></p><p>中文文档：<a href="https://www.w3cschool.cn/tauri/" target="_blank" rel="noreferrer">Tauri 教程_w3cschool</a></p><p>中文文档2：<a href="https://www.tauri.net.cn/guide" target="_blank" rel="noreferrer">指南-Tauri中文网</a></p><p>GitHub开源地址：<a href="https://github.com/tauri-apps/tauri" target="_blank" rel="noreferrer">https://github.com/tauri-apps/tauri</a></p><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p>和Electron相比</p><ul><li>打包更小</li><li>启动更快</li><li>性能更好</li><li>安全性好</li></ul><h2 id="tauri-系列教程" tabindex="-1">Tauri+系列教程 <a class="header-anchor" href="#tauri-系列教程" aria-label="Permalink to &quot;Tauri+系列教程&quot;">​</a></h2><p><strong>Tauri+系列教程</strong>：<a href="https://github.com/lencx/tauri-tutorial/discussions?discussions_q=label%3A%22Tauri+%E7%B3%BB%E5%88%97%22" target="_blank" rel="noreferrer">lencx/tauri-tutorial · Discussions · GitHub</a></p><p><a href="https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzIzNjE2NTI3NQ==&amp;action=getalbum&amp;album_id=2593843659863752704&amp;from_itemidx=1&amp;from_msgid=2247485485#wechat_redirect" target="_blank" rel="noreferrer">#Tauri 探索系列 (qq.com)</a></p><hr><p>一文读懂 Tauri：<a href="https://github.com/lencx/tauri-tutorial/discussions/23" target="_blank" rel="noreferrer">https://github.com/lencx/tauri-tutorial/discussions/23</a></p><h2 id="tauri-概览" tabindex="-1">Tauri 概览 <a class="header-anchor" href="#tauri-概览" aria-label="Permalink to &quot;Tauri 概览&quot;">​</a></h2><ul><li><p>利用操作系统提供的 WebView 来呈现界面，来避免打包体积过大。一般套壳空应用打包后的体积控制在 3M 左右。而 <a href="https://www.electronjs.org/" target="_blank" rel="noreferrer">Electron</a> 会将整个 <a href="https://www.chromium.org/" target="_blank" rel="noreferrer">Chromium</a> 打包进应用（安装包体积几十兆起步）。因为系统差异，所以使用自带 Webview 会存在兼容性问题，但是应该朝前看，IE 浏览器都被微软自家宣布死亡了。</p></li><li><p>相比 Electron 有更低的内存占用，更小的体积，更少的线程，系统调用等。了解更多 <a href="https://tauri.app/v1/references/benchmarks" target="_blank" rel="noreferrer">Tauri 基准测试</a>。</p></li><li><p>安装包是跨平台的，目前支持 Mac，Windows，Linux 等，未来也会支持 iOS/iPadOS 和 Android 等，跨平台打包可以使用官方提供的 <a href="https://github.com/tauri-apps/tauri-action" target="_blank" rel="noreferrer">Tauri GitHub Action</a>，虽然是跨端，但是一些特定于平台的代码还是需要借助于插件或者自行实现，并在真机上进行功能验证，否则可能出现行为和预期不一致。</p></li><li><p>提供内置签名以确保应用自动更新时可以安全安装，相关配置请查看 <a href="https://tauri.app/v1/guides/distribution/updater" target="_blank" rel="noreferrer">Tauri Updater</a>。</p></li><li><p>使用 <a href="https://tauri.app/v1/guides/features/icons" target="_blank" rel="noreferrer">tauri icons</a> 命令生成自定义应用图标（要求：格式为 PNG 的正方形图片）。</p></li><li><p>应用更安全，Tauri 在架构层做了很多安全处理（比如：通过配置来约束 Tauri 访问系统文件，网络请求，剪贴板等）。</p><ul><li>源代码更安全，Tauri 只提供二进制文件。而不是像 Electron 的 <a href="https://www.electronjs.org/docs/latest/tutorial/asar-archives" target="_blank" rel="noreferrer">ASAR</a> 文件。</li><li>数据更安全，隔离模式会对前后端（Webview 和 Tauri Core）通信数据进行加密传输。</li></ul></li><li><p>前端使用 HTML、CSS、JavaScript 来构建界面（也可以使用前端主流技术，如：<a href="https://vitejs.dev/" target="_blank" rel="noreferrer">vite</a>，<a href="https://reactjs.org/" target="_blank" rel="noreferrer">react</a>，<a href="https://vuejs.org/" target="_blank" rel="noreferrer">vue</a>，<a href="https://svelte.dev/" target="_blank" rel="noreferrer">svelte</a> 等）。后端目前使用 Rust，未来也可能会支持其他类型语言（如：Go、Nim、Python、Csharp 等）。</p></li><li><p>强大的系统交互能力，支持配置全局快捷键，系统菜单，系统托盘，文件读写，命令行，系统信息，剪贴板等。Rust 给 Tauri 带来了无限的想象力，Rust 可以做的事情，Tauri 理论上也可以做（欢迎自行尝试，可能也有做不了的）。</p></li><li><p>Tauri Window</p><p>支持多种配置。磨砂透明背景，无边框功能则需要借助的两个插件（支持 Windows 和 macOS，Linux 暂不支持）：</p><ul><li><a href="https://github.com/tauri-apps/window-shadows" target="_blank" rel="noreferrer">window-shadows</a> - 为窗口添加阴影。</li><li><a href="https://github.com/tauri-apps/window-vibrancy" target="_blank" rel="noreferrer">window-vibrancy</a> - 为窗口配置磨砂效果。</li></ul></li><li><p>支持创建多个窗口以及为新窗口脚本注入，但是脚本注入需要在 rust 端创建窗口，使用 <code>WindowBuilder::new</code> 中的 <code>initialization_script</code> 来加载脚本。</p></li><li><p>通过提供的 <a href="https://tauri.app/v1/guides/features/command" target="_blank" rel="noreferrer">Tauri Command</a>，可以从 Web 应用程序调用 Rust 函数。通过 <a href="https://tauri.app/v1/guides/features/events" target="_blank" rel="noreferrer">Tauri Events</a>（<code>emit</code> 和 <code>listen</code>）可以在前后端之间传递消息，它与 Tauri Command 有类似性。</p></li><li><p>...</p></li></ul><p>综合来看，<a href="https://tauri.app/v1/api/js/" target="_blank" rel="noreferrer">Tauri JS API</a> 确实提供了很多便捷 API 供前端使用，但是有些底层方法并未暴露，而 <a href="https://docs.rs/tauri/1.2.0/tauri/" target="_blank" rel="noreferrer">Tauri Rust API</a> 则要强大很多。</p><h2 id="开发问题" tabindex="-1">开发问题 <a class="header-anchor" href="#开发问题" aria-label="Permalink to &quot;开发问题&quot;">​</a></h2><h3 id="资源-文档" tabindex="-1">资源 &amp; 文档 <a class="header-anchor" href="#资源-文档" aria-label="Permalink to &quot;资源 &amp; 文档&quot;">​</a></h3><ul><li><a href="https://tauri.app/" target="_blank" rel="noreferrer">Tauri doc</a> - 官方文档，第一参考资料，建议熟读，源码及 issues 可以作为补充。</li><li><a href="https://github.com/tauri-apps/awesome-tauri" target="_blank" rel="noreferrer">Awesome Tauri</a> - 精选的 Tauri 生态系统和社区中最好的东西，包含插件和应用，可以借鉴和学习。</li><li><a href="https://github.com/tauri-apps/tauri/issues" target="_blank" rel="noreferrer">Tauri issues</a> - 质量很高的问题回答，可以解决开发中遇到的大量困惑或报错。如果未搜到，还可以自己上报，执行 <code>cargo tauri info</code> 或 <code>npm run tauri info</code> 可以查看平台和版本信息。</li><li><a href="https://github.com/tauri-apps/tauri/discussions" target="_blank" rel="noreferrer">Tauri discussions</a> - 讨论社区</li><li><a href="https://developer.mozilla.org/en-US/" target="_blank" rel="noreferrer">MDN doc</a> - 很权威的 Web 技术文档，包含 CSS，HTML，JavaScript。</li><li><a href="https://doc.rust-lang.org/book/" target="_blank" rel="noreferrer">Rust doc</a> - Rust 编程语言基本语法学习</li><li><a href="https://www.npmjs.com/" target="_blank" rel="noreferrer">npmjs</a> - 前端生态的包管理网站</li><li><a href="https://crates.io/" target="_blank" rel="noreferrer">crates.io</a> - Rust 生态的包管理网站</li></ul><h3 id="开发准备" tabindex="-1">开发准备 <a class="header-anchor" href="#开发准备" aria-label="Permalink to &quot;开发准备&quot;">​</a></h3><p>编辑器推荐使用 <a href="https://code.visualstudio.com/" target="_blank" rel="noreferrer">Visual Studio Code</a>，需要安装的插件：</p><ul><li><a href="https://marketplace.visualstudio.com/items?itemName=tauri-apps.tauri-vscode" target="_blank" rel="noreferrer">Tauri</a> - 对 Tauri 命令和 tauri.conf.json JSON 验证提供支持。</li><li><a href="https://marketplace.visualstudio.com/items?itemName=rust-lang.rust-analyzer" target="_blank" rel="noreferrer">rust-analyzer</a> - 插件提供了对 Rust 编程语言的支持。包含代码提示，类型定义，代码跳转等等。</li><li><a href="https://marketplace.visualstudio.com/items?itemName=serayuzgur.crates" target="_blank" rel="noreferrer">crates</a> - 是 <code>crates.io</code> 依赖项的插件。旨在帮助开发人员在使用 Cargo.toml 时管理依赖项（鼠标悬停 crate 名称可以显示可用版本列表）。</li></ul><h2 id="常见问题" tabindex="-1">常见问题 <a class="header-anchor" href="#常见问题" aria-label="Permalink to &quot;常见问题&quot;">​</a></h2><p>文档：<a href="https://tauri.app/zh-cn/v1/guides/faq" target="_blank" rel="noreferrer">常见问题 | Tauri Apps</a></p><h3 id="子窗口不能使用-tauri-api" tabindex="-1">子窗口不能使用 <code>__TAURI__</code> API <a class="header-anchor" href="#子窗口不能使用-tauri-api" aria-label="Permalink to &quot;子窗口不能使用 \`__TAURI__\` API&quot;">​</a></h3><p>新创建的远程 URL 子窗口无法使用 Tauri API，因为这与 Tauri 架构安全是违背的，以下有两条相关 issues：</p><ul><li>[<a href="https://github.com/tauri-apps/tauri/issues/4837" target="_blank" rel="noreferrer">bug] cant use window.<strong>TAURI</strong> with remote url</a></li><li>[<a href="https://github.com/tauri-apps/tauri/issues/5088" target="_blank" rel="noreferrer">feat] Inject window.<strong>TAURI</strong> in allowed remote URLs</a></li></ul><p>简单概括为：任何与 IPC 相关的问题都触及到了 Tauri 核心，并不能快速解决此类问题，但在 v2，v3 或未来更高的版本会有所改进。Tauri 不会在外部 URL 开的窗口上注入 Tauri API，如果项目没有本地资源，可以通过将 <code>distDir</code> 设置为<code>远程 URL</code> 来解决这个问题，或者在使用的运行时更改它。但这种情况下只有一个外部 URL 能够访问 Tauri API，其实就是修改 tauri.conf.json 中配置的 <code>build.devPath</code>（开发环境） 和 <code>build.distDir</code> （生产环境）字段。</p><h3 id="brownfield-vs-isolation-模式" tabindex="-1">Brownfield vs Isolation 模式 <a class="header-anchor" href="#brownfield-vs-isolation-模式" aria-label="Permalink to &quot;Brownfield vs Isolation 模式&quot;">​</a></h3><p><a href="https://tauri.app/v1/references/architecture/inter-process-communication/brownfield" target="_blank" rel="noreferrer">Brownfield 模式</a>是使用 Tauri 的最简单、最直接的模式，因为它尽可能地与现有的前端项目兼容。但也并非完全兼容（API 未被浏览器广泛支持，Tauri 正在实现中的），请参阅 <a href="https://tauri.app/v1/references/architecture/inter-process-communication/brownfield#incompatibilities" target="_blank" rel="noreferrer">不兼容部分</a>。</p><p><a href="https://tauri.app/v1/references/architecture/inter-process-communication/isolation" target="_blank" rel="noreferrer">Isolation 模式</a>下前端发送到 Tauri Core 之前会被注入的一个安全的应用程序拦截和修改传入的 IPC 消息（使用 <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe" target="_blank" rel="noreferrer">iframe</a> 沙盒隔离，使用浏览器的 <a href="https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto" target="_blank" rel="noreferrer">SubtleCrypto</a> 来对数据进行加密。为了确保安全，每次运行应用时都会生成新的密钥），来避免被前端恶意调用。</p><p>总结：所以老项目想使用 Tauri 进行套壳，想快速上线，可以考虑 Brownfield 模式。使用 Isolation 模式则更加安全，通信时消息加解密相比于 Brownfield 模式会存在额外的开销成本，除非高性能要求，否则 <code>AES-GCM</code> 身份验证算法的成本几乎可以忽略不计。</p><h2 id="评价-tauri" tabindex="-1">评价 Tauri <a class="header-anchor" href="#评价-tauri" aria-label="Permalink to &quot;评价 Tauri&quot;">​</a></h2><blockquote><p>在技术群，文章评论区也有一些朋友问过我：”如何看待 Tauri？“，我也只是业余折腾，写过几篇浅显的文章而已。</p></blockquote><p>以我目前的了解来看，觉得它很可能成为下一代跨端（桌面，移动端）方案，但前提是它真的实现了比较易用的移动端绑定（目前还在计划中）。Web 的生态奠定了今天的互联网基础，前端技术又是层出不穷，快速迭代。而 Tauri 想做的事情就是实现 Webview 和系统之间的桥接层（站在巨人的肩膀）。所以跨多少个端，提供什么样的能力是 Tauri 需要考虑的事情，开发应用功能是我们需要考虑的事情。Tauri 未提供的支持，我们也可以通过它的插件机制去扩展。</p><p>————————————————————————————————————————————</p><ul><li>参考教程：<a href="https://www.hellagur.com/2022/09/06/%E5%88%9D%E8%AF%86-Tauri-%E7%AF%87%E4%B8%80%E4%B9%8B%E5%88%9D%E7%AA%A5%E9%97%A8%E5%BE%84/" target="_blank" rel="noreferrer">https://www.hellagur.com/2022/09/06/初识-Tauri-篇一之初窥门径/</a></li><li><a href="https://www.cnblogs.com/xiaoyan2017/p/16812092.html" target="_blank" rel="noreferrer">基于tauri+vue3.x多开窗口|Tauri创建多窗体实践 - xiaoyan2017 - 博客园 (cnblogs.com)</a></li><li><a href="https://juejin.cn/post/7159783024995860494" target="_blank" rel="noreferrer">vue3.js+tauri整合聊天|tauri仿微信|vite3+tauri聊天室 - 掘金 (juejin.cn)</a></li><li>tauri打包桌面应用步骤及配置详解--windows完美打包&amp;mac完美打包：<a href="https://www.cnblogs.com/JokerA/p/15638087.html" target="_blank" rel="noreferrer">https://www.cnblogs.com/JokerA/p/15638087.html</a></li></ul><h2 id="集成-webassembly" tabindex="-1">集成 WebAssembly <a class="header-anchor" href="#集成-webassembly" aria-label="Permalink to &quot;集成 WebAssembly&quot;">​</a></h2><p>在 Tauri 中使用 Rust 和 WebAssembly (Wasm) 可以让你的应用程序具有高性能和低资源消耗的特点。以下是一个简单的步骤指南，帮助你开始在 Tauri 中集成 Rust 和 Wasm：</p><ol><li><strong>安装必要的工具</strong>: <ul><li>安装 <code>rustup</code> 来管理 Rust 版本。</li><li>安装 <code>wasm-pack</code>，它是一个帮助你构建和打包 Rust 代码为 Wasm 的工具。</li><li>安装 <code>cargo-generate</code>，它可以帮助你从预设模板创建项目。</li></ul></li><li><strong>创建一个新的 Tauri 项目</strong>: <ul><li>使用 <code>tauri init</code> 命令来初始化一个新的 Tauri 应用程序。</li></ul></li><li><strong>编写 Rust 代码</strong>: <ul><li>在 <code>src-tauri/src</code> 目录下创建 Rust 源文件。</li><li>使用 <code>wasm-bindgen</code> 宏来注释你的 Rust 函数，这样它们就可以被编译成 Wasm 并从 JavaScript 调用。</li></ul></li><li><strong>构建 Wasm 模块</strong>: <ul><li>运行 <code>wasm-pack build</code> 命令来编译 Rust 代码为 Wasm。</li><li>这将生成一个 <code>pkg</code> 目录，其中包含 Wasm 文件和一个自动生成的 JavaScript 包装器。</li></ul></li><li><strong>集成 Wasm 到前端</strong>: <ul><li>在你的前端代码中，使用 <code>import</code> 语句来加载 Wasm 模块。</li><li>确保在调用任何 Wasm 函数之前，先初始化 Wasm 模块。</li></ul></li><li><strong>在 Tauri 应用中使用 Wasm</strong>: <ul><li>在 Tauri 的 <code>tauri.conf.json</code> 配置文件中，确保启用了对 Wasm 的支持。</li><li>在 Tauri 应用的 JavaScript 部分，调用 Wasm 函数来执行 Rust 代码。</li></ul></li><li><strong>调试和优化</strong>: <ul><li>使用浏览器的开发者工具来调试 Wasm 模块。</li><li>根据需要优化你的 Rust 代码以提高性能。</li></ul></li></ol><h3 id="安装依赖" tabindex="-1">安装依赖 <a class="header-anchor" href="#安装依赖" aria-label="Permalink to &quot;安装依赖&quot;">​</a></h3><p><a href="https://github.com/rwasm/vite-plugin-rsw" target="_blank" rel="noreferrer">vite-plugin-rsw</a> - 基于 vite 实现的 webAssembly 插件，支持热更新，友好的报错提示</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">yarn</span><span style="color:#98C379;"> add</span><span style="color:#D19A66;"> -D</span><span style="color:#98C379;"> vite-plugin-rsw</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><a href="https://github.com/rwasm/rsw-rs" target="_blank" rel="noreferrer">rsw-rs</a> - 一个 CLI 工具，用于增强 <a href="https://github.com/rustwasm/wasm-pack" target="_blank" rel="noreferrer">wasm-pack</a> 的功能，如支持 watch 模式，多 crate 同时 build，watch，自动执行 <code>npm link</code> 等</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">cargo</span><span style="color:#98C379;"> install</span><span style="color:#98C379;"> rsw</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="使用说明" tabindex="-1">使用说明 <a class="header-anchor" href="#使用说明" aria-label="Permalink to &quot;使用说明&quot;">​</a></h3><h4 id="_1-编辑-vite-config-js" tabindex="-1">1. 编辑 vite.config.js <a class="header-anchor" href="#_1-编辑-vite-config-js" aria-label="Permalink to &quot;1. 编辑 vite.config.js&quot;">​</a></h4><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">defineConfig</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;vite&#39;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">ViteRsw</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;vite-plugin-rsw&#39;</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// ✅ 新增</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> default</span><span style="color:#61AFEF;"> defineConfig</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">  plugins</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#61AFEF;">    ViteRsw</span><span style="color:#ABB2BF;">(), </span><span style="color:#7F848E;font-style:italic;">// ✅ 新增</span></span>
<span class="line"><span style="color:#ABB2BF;">  ],</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h4 id="_2-编辑-package-json" tabindex="-1">2. 编辑 package.json <a class="header-anchor" href="#_2-编辑-package-json" aria-label="Permalink to &quot;2. 编辑 package.json&quot;">​</a></h4><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">  &quot;scripts&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">    &quot;dev&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;vite&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    &quot;build&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;rsw build &amp;&amp; tsc &amp;&amp; vite build&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    &quot;preview&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;vite preview&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    &quot;tauri&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;tauri&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    &quot;rsw&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;rsw&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h4 id="_3-运行-rsw" tabindex="-1">3. 运行 rsw <a class="header-anchor" href="#_3-运行-rsw" aria-label="Permalink to &quot;3. 运行 rsw&quot;">​</a></h4><h5 id="_1-初始化-rsw-配置" tabindex="-1">1). 初始化 rsw 配置 <a class="header-anchor" href="#_1-初始化-rsw-配置" aria-label="Permalink to &quot;1). 初始化 rsw 配置&quot;">​</a></h5><p>生成 <code>rsw.toml</code>，了解更多 <a href="https://github.com/rwasm/rsw-rs#rswtoml" target="_blank" rel="noreferrer">rsw.toml 配置信息</a></p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">yarn</span><span style="color:#98C379;"> rsw</span><span style="color:#98C379;"> init</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="`+c+'" alt="image-20240411183549266"></p><h5 id="_2-新建-wasm-项目" tabindex="-1">2). 新建 wasm 项目 <a class="header-anchor" href="#_2-新建-wasm-项目" aria-label="Permalink to &quot;2). 新建 wasm 项目&quot;">​</a></h5><p>内置三种模式，可以通过编辑 <code>rsw.toml</code> &gt; <code>[new]</code> &gt; <code>using</code> 来切换</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">yarn</span><span style="color:#98C379;"> rsw</span><span style="color:#98C379;"> new</span><span style="color:#98C379;"> @mywasm/foo</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+i+'" alt="image-20240411183625855"></p><p>在 <code>rsw.toml</code> &gt; <code>[[crates]]</code> 中新增 <code>@mywasm/foo</code></p><div class="language-yaml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">#! link 类型: `npm` | `yarn` | `pnpm`, 默认是 `npm`</span></span>\n<span class="line"><span style="color:#98C379;">cli = &quot;npm&quot;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ABB2BF;">[</span><span style="color:#98C379;">new</span><span style="color:#ABB2BF;">]</span></span>\n<span class="line"><span style="color:#7F848E;font-style:italic;">#! 使用: `wasm-pack` | `rsw` | `user`, 默认 `wasm-pack`</span></span>\n<span class="line"><span style="color:#7F848E;font-style:italic;">#! 1. wasm-pack: `rsw new &lt;name&gt; --template &lt;template&gt; --mode &lt;normal|noinstall|force&gt;`</span></span>\n<span class="line"><span style="color:#7F848E;font-style:italic;">#! 2. rsw: `rsw new &lt;name&gt;`, 内置模板</span></span>\n<span class="line"><span style="color:#7F848E;font-style:italic;">#! 3. user: `rsw new &lt;name&gt;`，如果 `dir`未配置, 则使用 `wasm-pack new &lt;name&gt;`初始化 wasm 项目</span></span>\n<span class="line"><span style="color:#98C379;">using = &quot;rsw&quot;</span></span>\n<span class="line"><span style="color:#7F848E;font-style:italic;">#! 当 `using = &quot;user&quot;` 时，`dir` 才会生效</span></span>\n<span class="line"><span style="color:#7F848E;font-style:italic;">#! 如果 `using = &quot;wasm-pack&quot;` 或 `using = &quot;rsw&quot;`，则忽略</span></span>\n<span class="line"><span style="color:#7F848E;font-style:italic;">#! 复制此目录下的所有文件到初始化的 wasm 项目中</span></span>\n<span class="line"><span style="color:#98C379;">dir = &quot;my-template&quot;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ABB2BF;">[[</span><span style="color:#98C379;">crates</span><span style="color:#ABB2BF;">]]</span></span>\n<span class="line"><span style="color:#7F848E;font-style:italic;">#! npm 包，@mywasm 为 npm 组织，foo 是该组织下的包名</span></span>\n<span class="line"><span style="color:#98C379;">name = &quot;@mywasm/foo&quot;</span></span>\n<span class="line"><span style="color:#7F848E;font-style:italic;">#! 是否执行 link， link 类型通过 `cli` 配置</span></span>\n<span class="line"><span style="color:#98C379;">link = true</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ABB2BF;">[[</span><span style="color:#98C379;">crates</span><span style="color:#ABB2BF;">]]</span></span>\n<span class="line"><span style="color:#7F848E;font-style:italic;">#! npm 包，@mywasm 为 npm 组织，bar 是该组织下的包名</span></span>\n<span class="line"><span style="color:#98C379;">name = &quot;@mywasm/bar&quot;</span></span>\n<span class="line"><span style="color:#7F848E;font-style:italic;">#! 是否执行 link， link 类型通过 `cli` 配置</span></span>\n<span class="line"><span style="color:#98C379;">link = true</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h3 id="开发模式" tabindex="-1">开发模式 <a class="header-anchor" href="#开发模式" aria-label="Permalink to &quot;开发模式&quot;">​</a></h3><blockquote><p>监听 rust 文件变更，自动执行构建，并通知到浏览器（热更新）</p></blockquote><ol><li>执行以下命令，不要退出：</li></ol><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">yarn</span><span style="color:#98C379;"> rsw</span><span style="color:#98C379;"> watch</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="2"><li>新开一个命令行窗口，执行 a 或 b：</li></ol><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># a. 在浏览器环境</span></span>\n<span class="line"><span style="color:#61AFEF;">yarn</span><span style="color:#98C379;"> dev</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#7F848E;font-style:italic;"># b. 在 tauri 环境</span></span>\n<span class="line"><span style="color:#61AFEF;">yarn</span><span style="color:#98C379;"> tauri</span><span style="color:#98C379;"> dev</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><img src="'+B+`" alt="image-20240411183721563"></p><h3 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h3><blockquote><p>在项目中使用 wasm</p></blockquote><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// App.jsx</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">useEffect</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;react&#39;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> init</span><span style="color:#ABB2BF;">, { </span><span style="color:#E06C75;">greet</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;@mywasm/foo&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> App</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#61AFEF;">  useEffect</span><span style="color:#ABB2BF;">(() </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // ✅ 初始化，加载 wasm 文件</span></span>
<span class="line"><span style="color:#61AFEF;">    init</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">  }, [])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">  return</span><span style="color:#ABB2BF;"> (</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E06C75;">div</span><span style="color:#D19A66;font-style:italic;"> className</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;App&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#C678DD;">        {</span><span style="color:#7F848E;font-style:italic;">/* ✅ 调用 greet 方法，必须保证 init 方法执行完成之后，才可以调用，否则会报错 */</span><span style="color:#C678DD;">}</span></span>
<span class="line"><span style="color:#ABB2BF;">        &lt;</span><span style="color:#E06C75;">button</span><span style="color:#D19A66;font-style:italic;"> onClick</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">{</span><span style="color:#ABB2BF;">() </span><span style="color:#C678DD;">=&gt;</span><span style="color:#61AFEF;"> greet</span><span style="color:#ABB2BF;">()</span><span style="color:#C678DD;">}</span><span style="color:#ABB2BF;">&gt;click me&lt;/</span><span style="color:#E06C75;">button</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  )</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> default</span><span style="color:#E06C75;"> App</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h3 id="构建" tabindex="-1">构建 <a class="header-anchor" href="#构建" aria-label="Permalink to &quot;构建&quot;">​</a></h3><blockquote><p>编译生产环境下的 wasm 文件（代码优化）</p></blockquote><ol><li>构建 wasm</li></ol><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">yarn</span><span style="color:#98C379;"> rsw</span><span style="color:#98C379;"> build</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="2"><li>构建项目</li></ol><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">yarn</span><span style="color:#98C379;"> build</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="`+y+`" alt="image-20240411183818619"></p><h3 id="项目结构" tabindex="-1">项目结构 <a class="header-anchor" href="#项目结构" aria-label="Permalink to &quot;项目结构&quot;">​</a></h3><p>rsw 对项目结构并无特别要求，但是为了保持统一及维护性，推荐以下结构。</p><ul><li><code>@mywasm</code>: wasm 包的组织名称（推荐使用，但非必需），rust 编译为 wasm，会以 npm 包的形式提供给前端使用。使用组织的好处就是方便管理，防止包名冲突</li><li><code>.rsw</code> - rsw 运行时生成的临时文件夹</li><li><code>rsw.toml</code> - rsw 配置文件</li><li><code>.watchignore</code> - rsw watch 监听文件变更时需要忽略的文件，忽略规则与 <a href="https://git-scm.com/docs/gitignore" target="_blank" rel="noreferrer">.gitignore</a> 类似</li></ul><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">[tauri-app] </span><span style="color:#7F848E;font-style:italic;"># 项目名称</span></span>
<span class="line"><span style="color:#61AFEF;">│</span><span style="color:#7F848E;font-style:italic;"> # 新增结构</span></span>
<span class="line"><span style="color:#61AFEF;">├─</span><span style="color:#ABB2BF;"> [@mywasm] </span><span style="color:#7F848E;font-style:italic;"># ✅ 组织名称（npm org）</span></span>
<span class="line"><span style="color:#61AFEF;">│</span><span style="color:#98C379;">    ├─</span><span style="color:#ABB2BF;"> [foo] </span><span style="color:#7F848E;font-style:italic;"># ✅ @mywasm/foo - wasm 包名</span></span>
<span class="line"><span style="color:#61AFEF;">│</span><span style="color:#98C379;">    └─</span><span style="color:#ABB2BF;"> [bar] </span><span style="color:#7F848E;font-style:italic;"># ✅ @mywasm/bar - wasm 包名</span></span>
<span class="line"><span style="color:#61AFEF;">├─</span><span style="color:#ABB2BF;"> [.rsw] </span><span style="color:#7F848E;font-style:italic;"># ✅ rsw 临时文件夹</span></span>
<span class="line"><span style="color:#61AFEF;">├─</span><span style="color:#98C379;"> rsw.toml</span><span style="color:#7F848E;font-style:italic;"> # ✅ rsw 配置文件</span></span>
<span class="line"><span style="color:#61AFEF;">├─</span><span style="color:#98C379;"> .watchignore</span><span style="color:#7F848E;font-style:italic;"> # ✅ rsw watch 忽略文件</span></span>
<span class="line"><span style="color:#61AFEF;">│┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈</span></span>
<span class="line"><span style="color:#61AFEF;">│</span><span style="color:#7F848E;font-style:italic;"> # 原结构</span></span>
<span class="line"><span style="color:#61AFEF;">├─</span><span style="color:#ABB2BF;"> [node_modules] </span><span style="color:#7F848E;font-style:italic;"># 前端依赖</span></span>
<span class="line"><span style="color:#61AFEF;">├─</span><span style="color:#ABB2BF;"> [src] </span><span style="color:#7F848E;font-style:italic;"># 前端程序源</span></span>
<span class="line"><span style="color:#61AFEF;">├─</span><span style="color:#ABB2BF;"> [src-tauri] </span><span style="color:#7F848E;font-style:italic;"># Tauri 程序源</span></span>
<span class="line"><span style="color:#61AFEF;">│</span><span style="color:#98C379;">    ├─</span><span style="color:#ABB2BF;"> [icons] </span><span style="color:#7F848E;font-style:italic;"># 应用程序图标</span></span>
<span class="line"><span style="color:#61AFEF;">│</span><span style="color:#98C379;">    ├─</span><span style="color:#ABB2BF;"> [src] </span><span style="color:#7F848E;font-style:italic;"># Tauri App 程序源，例如系统菜单，托盘，插件配置等</span></span>
<span class="line"><span style="color:#61AFEF;">│</span><span style="color:#98C379;">    ├─</span><span style="color:#ABB2BF;"> [target] </span><span style="color:#7F848E;font-style:italic;"># 构建的产物会被放入此文件夹中，target 目录的结构取决于是否使用 --target 标志为特定的平台构建</span></span>
<span class="line"><span style="color:#61AFEF;">│</span><span style="color:#98C379;">    ├─</span><span style="color:#98C379;"> build.rs</span><span style="color:#7F848E;font-style:italic;"> # Tauri 构建应用</span></span>
<span class="line"><span style="color:#61AFEF;">│</span><span style="color:#98C379;">    ├─</span><span style="color:#98C379;"> Cargo.lock</span><span style="color:#7F848E;font-style:italic;"> # 包含了依赖的精确描述信息，类似于 yarn.lock 或 package-lock.json</span></span>
<span class="line"><span style="color:#61AFEF;">│</span><span style="color:#98C379;">    ├─</span><span style="color:#98C379;"> Cargo.toml</span><span style="color:#7F848E;font-style:italic;"> # Tauri (Rust) 项目清单</span></span>
<span class="line"><span style="color:#61AFEF;">│</span><span style="color:#98C379;">    └─</span><span style="color:#98C379;"> tauri.conf.json</span><span style="color:#7F848E;font-style:italic;"> # 自定义 Tauri 应用程序的配置文件，例如应用程序窗口尺寸，应用名称，权限等</span></span>
<span class="line"><span style="color:#61AFEF;">├─</span><span style="color:#98C379;"> index.html</span><span style="color:#7F848E;font-style:italic;"> # 项目主界面</span></span>
<span class="line"><span style="color:#61AFEF;">├─</span><span style="color:#98C379;"> package.json</span><span style="color:#7F848E;font-style:italic;"> # 前端项目清单</span></span>
<span class="line"><span style="color:#61AFEF;">├─</span><span style="color:#98C379;"> tsconfig.json</span><span style="color:#7F848E;font-style:italic;"> # typescript 配置文件</span></span>
<span class="line"><span style="color:#61AFEF;">├─</span><span style="color:#98C379;"> vite.config.ts</span><span style="color:#7F848E;font-style:italic;"> # vite 配置文件</span></span>
<span class="line"><span style="color:#61AFEF;">├─</span><span style="color:#98C379;"> yarn.lock</span><span style="color:#7F848E;font-style:italic;"> # 前端依赖的精确描述信息</span></span>
<span class="line"><span style="color:#61AFEF;">└─</span><span style="color:#98C379;"> ...</span><span style="color:#7F848E;font-style:italic;"> # 其他</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h2 id="透明及磨砂背景" tabindex="-1">透明及磨砂背景 <a class="header-anchor" href="#透明及磨砂背景" aria-label="Permalink to &quot;透明及磨砂背景&quot;">​</a></h2><p>开源库：<a href="https://github.com/tauri-apps/window-vibrancy" target="_blank" rel="noreferrer">tauri-apps/window-vibrancy：让你的窗户充满活力。 (github.com)</a></p><h3 id="源码阅读" tabindex="-1">源码阅读 <a class="header-anchor" href="#源码阅读" aria-label="Permalink to &quot;源码阅读&quot;">​</a></h3><blockquote><p>官方文档是第一手学习资料，当文档不能满足需要时，了解其生态，或者阅读一些源码，可能会有意想不到的收获。</p></blockquote><p>通过阅读 <a href="https://github.com/tauri-apps/wry/blob/d7c9097256d76de7400032cf27acd7a1874da5cd/examples/transparent.rs" target="_blank" rel="noreferrer">wry 源码示例</a> 可知 Tauri 应用的背景分三层：</p><ul><li>第一层是 <code>window</code></li><li>第二层是 <code>webview</code></li><li>第三层是 <code>html</code></li></ul><div class="language-rust line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">fn</span><span style="color:#61AFEF;"> main</span><span style="color:#ABB2BF;">() -&gt; </span><span style="color:#E5C07B;">wry</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">Result</span><span style="color:#ABB2BF;">&lt;()&gt; {</span></span>
<span class="line"><span style="color:#C678DD;">  use</span><span style="color:#E5C07B;"> wry</span><span style="color:#ABB2BF;">::{</span></span>
<span class="line"><span style="color:#E5C07B;">    application</span><span style="color:#ABB2BF;">::{</span></span>
<span class="line"><span style="color:#E5C07B;">      event</span><span style="color:#ABB2BF;">::{</span><span style="color:#E5C07B;">Event</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">WindowEvent</span><span style="color:#ABB2BF;">},</span></span>
<span class="line"><span style="color:#E5C07B;">      event_loop</span><span style="color:#ABB2BF;">::{</span><span style="color:#E5C07B;">ControlFlow</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">EventLoop</span><span style="color:#ABB2BF;">},</span></span>
<span class="line"><span style="color:#E5C07B;">      window</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">WindowBuilder</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#E5C07B;">    webview</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">WebViewBuilder</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">  let</span><span style="color:#E06C75;"> event_loop</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> EventLoop</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">new</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#C678DD;">  let</span><span style="color:#E06C75;"> window</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> WindowBuilder</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">new</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">    .</span><span style="color:#61AFEF;">with_decorations</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // ✅ 第一层：</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // There are actually three layer of background color when creating webview window.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // The first is window background...</span></span>
<span class="line"><span style="color:#ABB2BF;">    .</span><span style="color:#61AFEF;">with_transparent</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    .</span><span style="color:#61AFEF;">build</span><span style="color:#ABB2BF;">(&amp;</span><span style="color:#E06C75;">event_loop</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    .</span><span style="color:#61AFEF;">unwrap</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">  let</span><span style="color:#E06C75;"> _webview</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> WebViewBuilder</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">new</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">window</span><span style="color:#ABB2BF;">)?</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // ✅ 第二层：</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // The second is on webview...</span></span>
<span class="line"><span style="color:#ABB2BF;">    .</span><span style="color:#61AFEF;">with_transparent</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // ✅ 第三层：</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // And the last is in html.</span></span>
<span class="line"><span style="color:#ABB2BF;">    .</span><span style="color:#61AFEF;">with_url</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#98C379;">      r#&quot;data:text/html,</span></span>
<span class="line"><span style="color:#98C379;">            &lt;!doctype html&gt;</span></span>
<span class="line"><span style="color:#98C379;">            &lt;html&gt;</span></span>
<span class="line"><span style="color:#98C379;">              &lt;body style=&quot;background-color:rgba(87,87,87,0.5);&quot;&gt;hello&lt;/body&gt;</span></span>
<span class="line"><span style="color:#98C379;">              &lt;script&gt;</span></span>
<span class="line"><span style="color:#98C379;">                window.onload = function() {</span></span>
<span class="line"><span style="color:#98C379;">                  document.body.innerText = \`hello, \${navigator.userAgent}\`;</span></span>
<span class="line"><span style="color:#98C379;">                };</span></span>
<span class="line"><span style="color:#98C379;">              &lt;/script&gt;</span></span>
<span class="line"><span style="color:#98C379;">            &lt;/html&gt;&quot;#</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    )?</span></span>
<span class="line"><span style="color:#ABB2BF;">    .</span><span style="color:#61AFEF;">build</span><span style="color:#ABB2BF;">()?;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">  event_loop</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">run</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">move</span><span style="color:#56B6C2;"> |</span><span style="color:#E06C75;">event</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">_</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">control_flow</span><span style="color:#56B6C2;">|</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">    *</span><span style="color:#E06C75;">control_flow</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> ControlFlow</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">Wait</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">    match</span><span style="color:#E06C75;"> event</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">      Event</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">WindowEvent</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">        event</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">WindowEvent</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">CloseRequested</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">        ..</span></span>
<span class="line"><span style="color:#ABB2BF;">      } =&gt; *</span><span style="color:#E06C75;">control_flow</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> ControlFlow</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">Exit</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">      _</span><span style="color:#ABB2BF;"> =&gt; {}</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">  });</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br></div></div><p>所以如果我们想要实现磨砂或半透明应用应该从这三方面的配置入手。</p><h3 id="透明背景" tabindex="-1">透明背景 <a class="header-anchor" href="#透明背景" aria-label="Permalink to &quot;透明背景&quot;">​</a></h3><h4 id="tauri-conf-json-配置" tabindex="-1">tauri.conf.json 配置 <a class="header-anchor" href="#tauri-conf-json-配置" aria-label="Permalink to &quot;tauri.conf.json 配置&quot;">​</a></h4><p>在官方文档 <code>tauri.conf.json 窗口配置中有 transparent 字段，设置为 true 启用透明度。（默认为 false，不启用）</code></p><p>注意：在 macOS 上，需要从 <code>tauri.conf.json &gt; tauri &gt; macOSPrivateApi</code> 启用 <code>macos-private-api</code> ，默认为 <code>false</code>，不启用。（警告：<a href="https://developer.apple.com/forums/thread/64443" target="_blank" rel="noreferrer">在 macOS 上使用私有 API 的应用程序会被 App Store 拒绝</a>）</p><p><code>macOSPrivateApi</code> 设置为 <code>true</code> 时：</p><ul><li><p>1.在 <strong>macOS</strong> 设置上，请参阅 <a href="https://github.com/tauri-apps/window-vibrancy/blob/dev/examples/tauri/src-tauri/tauri.conf.json#L49" target="_blank" rel="noreferrer">tauri.conf.json#L49</a><code>&quot;macOSPrivateApi&quot;: true</code></p></li><li><p>2.启用透明背景 API：设置见 <a href="https://github.com/tauri-apps/window-vibrancy/blob/dev/examples/tauri/public/index.html#L12" target="_blank" rel="noreferrer">index.html#L12</a><code>html, body { background: transparent }</code></p></li><li><p>3.设置见 <a href="https://github.com/tauri-apps/window-vibrancy/blob/dev/examples/tauri/src-tauri/tauri.conf.json#L57" target="_blank" rel="noreferrer">tauri.conf.json#L57</a>：<code>&quot;windows&quot;: [ { &quot;transparent&quot;: true } ]</code></p></li><li><p>4.将 <code>fullScreenEnabled</code> 首选项设置为 <code>true</code></p></li></ul><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">  &quot;tauri&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">    &quot;macOSPrivateApi&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    &quot;windows&quot;</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#ABB2BF;">      {</span></span>
<span class="line"><span style="color:#E06C75;">        &quot;width&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">800</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        &quot;height&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">600</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        &quot;resizable&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        &quot;fullscreen&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        &quot;title&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;Oh My Box&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        &quot;transparent&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span></span>
<span class="line"><span style="color:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#ABB2BF;">    ]</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h4 id="html-配置" tabindex="-1">html 配置 <a class="header-anchor" href="#html-配置" aria-label="Permalink to &quot;html 配置&quot;">​</a></h4><p>窗口配置中的 <code>transparent</code> 是开启第一层（window）和第二层（webview）的透明度。如果透明度未生效，请检查 html 是否设置了不透明背景色，将其修改为 <code>RGBA</code> 或 <code>transparent</code>。也可以通过 css 文件设置 body 样式。</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;!</span><span style="color:#E06C75;">DOCTYPE</span><span style="color:#D19A66;"> html</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">html</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">body</span><span style="color:#D19A66;"> style</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;background-color: rgba(87,87,87,0.5);&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E06C75;">div</span><span style="color:#D19A66;"> id</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;root&quot;</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;/</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">html</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><img src="`+u+'" alt="动图封面"></p><p>注意：在 macOS 中使用透明背景在页面跳转时会出现残影，暂未了解到相关解决方案</p><p><img src="'+b+`" alt="img"></p><h3 id="磨砂背景" tabindex="-1">磨砂背景 <a class="header-anchor" href="#磨砂背景" aria-label="Permalink to &quot;磨砂背景&quot;">​</a></h3><p>透明背景虽然很酷，但实用性低。因为在使用应用时很容易受到桌面背景的干扰，所以磨砂背景更符合使用场景。</p><p>官网并没有给出磨砂背景的相关配置，直接在第三层 html 中使用 css 属性实现模糊效果也会存在一些问题，具体原因可以查看 <a href="https://github.com/tauri-apps/tauri/issues/2827" target="_blank" rel="noreferrer">Blurry and translucent background on a transparent window</a>，issues 中作者提到可能会在 <code>tauri v2</code> 版本中支持此功能，过渡方案可以使用 <a href="https://github.com/tauri-apps/window-vibrancy" target="_blank" rel="noreferrer">tauri-apps/window-vibrancy</a> 插件。所以接下来的配置将围绕 <code>tauri-apps/window-vibrancy</code> 进行：</p><h4 id="step-1" tabindex="-1">Step 1 <a class="header-anchor" href="#step-1" aria-label="Permalink to &quot;Step 1&quot;">​</a></h4><p>安装 <code>window-vibrancy</code> 依赖，推荐使用 <a href="https://github.com/killercup/cargo-edit" target="_blank" rel="noreferrer">cargo edit</a>（该工具扩展了 Cargo，允许你通过从命令行修改 Cargo.toml 文件来添加、删除和升级依赖项） ：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 1. 命令进入 src-tauri 目录</span></span>
<span class="line"><span style="color:#56B6C2;">cd</span><span style="color:#98C379;"> src-tauri</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 2. 安装 window-vibrancy</span></span>
<span class="line"><span style="color:#61AFEF;">cargo</span><span style="color:#98C379;"> add</span><span style="color:#98C379;"> window-vibrancy</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>安装完成后会在 <code>Cargo.toml &gt; dependencies</code> 中看到该依赖。</p><p><img src="`+d+`" alt="img"></p><h4 id="step-2" tabindex="-1">Step 2 <a class="header-anchor" href="#step-2" aria-label="Permalink to &quot;Step 2&quot;">​</a></h4><p>在 <code>src-tauri/src</code> 下新建 <code>setup.rs</code> 文件：</p><div class="language-rust line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">use</span><span style="color:#E5C07B;"> tauri</span><span style="color:#ABB2BF;">::{</span><span style="color:#E5C07B;">App</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">Manager</span><span style="color:#ABB2BF;">};</span></span>
<span class="line"><span style="color:#C678DD;">use</span><span style="color:#E5C07B;"> window_vibrancy</span><span style="color:#ABB2BF;">::{</span><span style="color:#E5C07B;">self</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">NSVisualEffectMaterial</span><span style="color:#ABB2BF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/// setup</span></span>
<span class="line"><span style="color:#C678DD;">pub</span><span style="color:#C678DD;"> fn</span><span style="color:#61AFEF;"> init</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">app</span><span style="color:#ABB2BF;">: &amp;</span><span style="color:#C678DD;">mut</span><span style="color:#E5C07B;"> App</span><span style="color:#ABB2BF;">) -&gt; </span><span style="color:#E5C07B;">std</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">result</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">Result</span><span style="color:#ABB2BF;">&lt;(), </span><span style="color:#E5C07B;">Box</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#C678DD;">dyn</span><span style="color:#E06C75;"> std</span><span style="color:#ABB2BF;">::</span><span style="color:#E06C75;">error</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">Error</span><span style="color:#ABB2BF;">&gt;&gt; {</span></span>
<span class="line"><span style="color:#C678DD;">    let</span><span style="color:#E06C75;"> win</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">get_window</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;main&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">unwrap</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 仅在 macOS 下执行</span></span>
<span class="line"><span style="color:#ABB2BF;">    #[cfg(target_os </span><span style="color:#56B6C2;">=</span><span style="color:#98C379;"> &quot;macos&quot;</span><span style="color:#ABB2BF;">)]</span></span>
<span class="line"><span style="color:#E5C07B;">    window_vibrancy</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">apply_vibrancy</span><span style="color:#ABB2BF;">(&amp;</span><span style="color:#E06C75;">win</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">NSVisualEffectMaterial</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">FullScreenUI</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">        .</span><span style="color:#61AFEF;">expect</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;Unsupported platform! &#39;apply_vibrancy&#39; is only supported on macOS&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 仅在 windows 下执行</span></span>
<span class="line"><span style="color:#ABB2BF;">    #[cfg(target_os </span><span style="color:#56B6C2;">=</span><span style="color:#98C379;"> &quot;windows&quot;</span><span style="color:#ABB2BF;">)]</span></span>
<span class="line"><span style="color:#E5C07B;">    window_vibrancy</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">apply_blur</span><span style="color:#ABB2BF;">(&amp;</span><span style="color:#E06C75;">win</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">Some</span><span style="color:#ABB2BF;">((</span><span style="color:#D19A66;">18</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">18</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">18</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">125</span><span style="color:#ABB2BF;">)))</span></span>
<span class="line"><span style="color:#ABB2BF;">        .</span><span style="color:#61AFEF;">expect</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;Unsupported platform! &#39;apply_blur&#39; is only supported on Windows&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">    Ok</span><span style="color:#ABB2BF;">(())</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>代码中的 <code>#[cfg(target_os)]</code> 是指条件编译，仅在目标的操作系统中执行相关代码，可以查看 <a href="https://doc.rust-lang.org/reference/conditional-compilation.html#target_os" target="_blank" rel="noreferrer">conditional compilation - target_os</a> 了解更多。</p><h4 id="step-3" tabindex="-1">Step 3 <a class="header-anchor" href="#step-3" aria-label="Permalink to &quot;Step 3&quot;">​</a></h4><p>在 <code>src-tauri/src/main.rs</code> 中使用 <code>setup.rs</code>：</p><div class="language-rust line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">mod</span><span style="color:#ABB2BF;"> setup;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">fn</span><span style="color:#61AFEF;"> main</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">    let</span><span style="color:#E06C75;"> context</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> tauri</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">generate_context!</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">    tauri</span><span style="color:#ABB2BF;">::</span><span style="color:#E5C07B;">Builder</span><span style="color:#ABB2BF;">::</span><span style="color:#61AFEF;">default</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">        .</span><span style="color:#61AFEF;">setup</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">setup</span><span style="color:#ABB2BF;">::</span><span style="color:#E06C75;">init</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">        .</span><span style="color:#61AFEF;">run</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">context</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">        .</span><span style="color:#61AFEF;">expect</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;error while running OhMyBox application&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><code>setup</code> 是一个 Rust 模块，简单来讲就是按照逻辑单元或功能模块进行代码拆分。可以查看 <a href="https://doc.rust-lang.org/rust-by-example/mod.html" target="_blank" rel="noreferrer">rust-by-example - mod</a> 了解更多。</p><p><img src="`+m+`" alt="img"></p><h3 id="相关阅读" tabindex="-1">相关阅读 <a class="header-anchor" href="#相关阅读" aria-label="Permalink to &quot;相关阅读&quot;">​</a></h3><ul><li><a href="https://developer.apple.com/documentation/appkit/nsvisualeffectview" target="_blank" rel="noreferrer">NSVisualEffectView (apple developer)</a> - 为界面中的视图添加半透明和活力效果</li><li>相关库：<a href="https://github.com/tauri-apps/window-vibrancy" target="_blank" rel="noreferrer">tauri-apps/window-vibrancy: Make your windows vibrant. (github.com)</a></li></ul><h2 id="开发模式下忽略文件" tabindex="-1">开发模式下忽略文件 <a class="header-anchor" href="#开发模式下忽略文件" aria-label="Permalink to &quot;开发模式下忽略文件&quot;">​</a></h2><h3 id="背景" tabindex="-1">背景 <a class="header-anchor" href="#背景" aria-label="Permalink to &quot;背景&quot;">​</a></h3><p>在开发模式（<code>tauri dev</code>）下，位于 <code>src-tauri</code> 目录中的任意文件变更都会引发应用的重新构建，每次构建 Tauri 都会重新启动应用，影响开发体验。</p><h3 id="解决方案" tabindex="-1">解决方案 <a class="header-anchor" href="#解决方案" aria-label="Permalink to &quot;解决方案&quot;">​</a></h3><p>此类问题如果只看官方文档，并不能找到相关描述，所以查看 issues 及相关工具链版本升级的 <code>changelog</code> 就显得尤为重要（个人经验：新技术可参考资料稀少，所以对其探索更容易培养解决问题的能力）。</p><h4 id="升级-cli" tabindex="-1">升级 CLI <a class="header-anchor" href="#升级-cli" aria-label="Permalink to &quot;升级 CLI&quot;">​</a></h4><p>升级 <code>@tauri-apps/cli</code> 到 <code>v1.1.0+</code> 版本</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># npm</span></span>
<span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> i</span><span style="color:#98C379;"> @tauri-apps/cli@1.1.0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># yarn</span></span>
<span class="line"><span style="color:#61AFEF;">yarn</span><span style="color:#98C379;"> add</span><span style="color:#98C379;"> @tauri-apps/cli@1.1.0</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="使用-1" tabindex="-1">使用 <a class="header-anchor" href="#使用-1" aria-label="Permalink to &quot;使用&quot;">​</a></h4><p><code>@tauri-apps/cli v1.1.0</code> 版本新增了两种忽略方式（<code>.taurignore</code> 和 <code>--no-watch</code>）：</p><p><strong>1. 使用忽略文件</strong> <strong><code>.taurignore</code></strong>：</p><p>在 <code>src-tauri</code> 下创建 <code>.taurignore</code> 忽略文件，底层依赖 <a href="https://github.com/BurntSushi/ripgrep/tree/master/crates/ignore" target="_blank" rel="noreferrer">ignore</a> crate，忽略规则设置请查看 ignore 文档，与 <code>.gitignore</code> 规则类似。（注意：经验证，<code>@tauri-apps/cli v1.1.1</code> 版本在设置除 <code>*</code> 之外的任意路径规则并未生效，官方目前并未给出解决方案）</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 忽略 src-tauri 目录下的所有文件变更</span></span>
<span class="line"><span style="color:#ABB2BF;">*</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>2. 使用命令行参数</strong> <strong><code>--no-watch</code></strong>：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">tauri</span><span style="color:#98C379;"> dev</span><span style="color:#D19A66;"> --no-watch</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>结论： 使用任意一种方式在开发模式（<code>tauri dev</code>），</strong> <strong><code>src-tauri</code></strong> <strong>目录中任意文件变更都将不会引起应用构建及重启，请谨慎使用。</strong></p><h3 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-label="Permalink to &quot;参考资料&quot;">​</a></h3><ul><li><a href="https://github.com/tauri-apps/tauri/blob/dev/tooling/cli/CHANGELOG.md%23110" target="_blank" rel="noreferrer">tauri/tooling/cli/CHANGELOG v1.1.0</a></li><li>[<a href="https://github.com/tauri-apps/tauri/issues/4617" target="_blank" rel="noreferrer">feat] Add .taurignore and turn off the default behavior of watching all workspace members</a></li></ul><h2 id="rust-与-javascript-的双向通信" tabindex="-1">Rust 与 JavaScript 的双向通信 <a class="header-anchor" href="#rust-与-javascript-的双向通信" aria-label="Permalink to &quot;Rust 与 JavaScript 的双向通信&quot;">​</a></h2><p><img src="`+F+`" alt="image-20240415202544172"></p><p>Tauri 为 Rust 和 JavaScript 间的通信提供了两种机制：事件（Event）和命令（Command）。Tauri 的 <a href="https://tauri.app/zh-cn/v1/guides/features/command/" target="_blank" rel="noreferrer">command从前端调用 Rust</a>和 <a href="https://tauri.app/zh-cn/v1/guides/features/events/" target="_blank" rel="noreferrer">Events事件</a>很好地涵盖了这些内容。</p><h2 id="tauri-插件" tabindex="-1">Tauri 插件 <a class="header-anchor" href="#tauri-插件" aria-label="Permalink to &quot;Tauri 插件&quot;">​</a></h2><p>官方文档：<a href="https://tauri.app/zh-cn/v1/guides/features/plugin" target="_blank" rel="noreferrer">Tauri 插件 | Tauri Apps</a></p><h2 id="tauri-debug调试" tabindex="-1">Tauri Debug调试 <a class="header-anchor" href="#tauri-debug调试" aria-label="Permalink to &quot;Tauri Debug调试&quot;">​</a></h2><p>tauri2调试：<a href="https://beta.tauri.app/zh-cn/guides/debug" target="_blank" rel="noreferrer">https://beta.tauri.app/zh-cn/guides/debug</a></p><p>tauri1调试：<a href="https://tauri.app/zh-cn/v1/guides/debugging/application" target="_blank" rel="noreferrer">应用程序调试 | Tauri Apps</a></p><h1 id="自动通知应用升级-发布应用" tabindex="-1">自动通知应用升级+发布应用 <a class="header-anchor" href="#自动通知应用升级-发布应用" aria-label="Permalink to &quot;自动通知应用升级+发布应用&quot;">​</a></h1><p>官方文档（更新需要的配置和说明）：<a href="https://tauri.app/zh-cn/v1/guides/distribution/updater" target="_blank" rel="noreferrer">Updater | Tauri Apps</a></p><p>官方的JavaScript/typescript的update API文档：<a href="https://tauri.app/zh-cn/v1/api/js/updater" target="_blank" rel="noreferrer">updater | Tauri Apps</a></p><h2 id="签名" tabindex="-1">签名 <a class="header-anchor" href="#签名" aria-label="Permalink to &quot;签名&quot;">​</a></h2><p>Tauri 通过签名来保证安全更新应用。 签名更新应用需要做两件事：</p><ol><li>私钥 (privkey) 用于签署应用的更新，必须严密保存。此外，如果丢失了此密钥，将无法向当前用户群发布新的更新，将其保存在安全的地方至关重要。</li><li>在 <code>tauri.conf.json</code> 中添加公钥 (pubkey)，以在安装前验证更新存档。</li></ol><h3 id="生成签名" tabindex="-1">生成签名 <a class="header-anchor" href="#生成签名" aria-label="Permalink to &quot;生成签名&quot;">​</a></h3><p>使用 Tauri CLI 提供的命令可以生成密钥（<code>.pub</code> 后缀的文件为公钥）：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">tauri</span><span style="color:#98C379;"> signer</span><span style="color:#98C379;"> generate</span><span style="color:#D19A66;"> -w</span><span style="color:#98C379;"> ~/.tauri/omb.key</span><span style="color:#ABB2BF;">           </span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">$</span><span style="color:#98C379;"> tauri</span><span style="color:#98C379;"> signer</span><span style="color:#98C379;"> generate</span><span style="color:#D19A66;"> -w</span><span style="color:#98C379;"> /Users/lencx/.tauri/omb.key</span></span>
<span class="line"><span style="color:#61AFEF;">Generating</span><span style="color:#98C379;"> new</span><span style="color:#98C379;"> private</span><span style="color:#98C379;"> key</span><span style="color:#98C379;"> without</span><span style="color:#98C379;"> password.</span></span>
<span class="line"><span style="color:#61AFEF;">Please</span><span style="color:#98C379;"> enter</span><span style="color:#98C379;"> a</span><span style="color:#98C379;"> password</span><span style="color:#98C379;"> to</span><span style="color:#98C379;"> protect</span><span style="color:#98C379;"> the</span><span style="color:#98C379;"> secret</span><span style="color:#98C379;"> key.</span></span>
<span class="line"><span style="color:#61AFEF;">Password:</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#61AFEF;">Password</span><span style="color:#ABB2BF;"> (one </span><span style="color:#98C379;">more</span><span style="color:#98C379;"> time</span><span style="color:#ABB2BF;">): </span></span>
<span class="line"><span style="color:#61AFEF;">Deriving</span><span style="color:#98C379;"> a</span><span style="color:#98C379;"> key</span><span style="color:#98C379;"> from</span><span style="color:#98C379;"> the</span><span style="color:#98C379;"> password</span><span style="color:#98C379;"> in</span><span style="color:#98C379;"> order</span><span style="color:#98C379;"> to</span><span style="color:#98C379;"> encrypt</span><span style="color:#98C379;"> the</span><span style="color:#98C379;"> secret</span><span style="color:#98C379;"> key...</span><span style="color:#98C379;"> done</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">Your</span><span style="color:#98C379;"> keypair</span><span style="color:#98C379;"> was</span><span style="color:#98C379;"> generated</span><span style="color:#98C379;"> successfully</span></span>
<span class="line"><span style="color:#61AFEF;">Private:</span><span style="color:#98C379;"> /Users/lencx/.tauri/omb.key</span><span style="color:#ABB2BF;"> (Keep </span><span style="color:#98C379;">it</span><span style="color:#98C379;"> secret!</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#61AFEF;">Public:</span><span style="color:#98C379;"> /Users/lencx/.tauri/omb.key.pub</span></span>
<span class="line"><span style="color:#61AFEF;">---------------------------</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">Environment</span><span style="color:#98C379;"> variabled</span><span style="color:#98C379;"> used</span><span style="color:#98C379;"> to</span><span style="color:#98C379;"> sign:</span></span>
<span class="line"><span style="color:#98C379;">\`</span><span style="color:#61AFEF;">TAURI_PRIVATE_KEY</span><span style="color:#98C379;">\`</span><span style="color:#61AFEF;">  Path</span><span style="color:#98C379;"> or</span><span style="color:#98C379;"> String</span><span style="color:#98C379;"> of</span><span style="color:#98C379;"> your</span><span style="color:#98C379;"> private</span><span style="color:#98C379;"> key</span></span>
<span class="line"><span style="color:#98C379;">\`</span><span style="color:#61AFEF;">TAURI_KEY_PASSWORD</span><span style="color:#98C379;">\`</span><span style="color:#61AFEF;">  Your</span><span style="color:#98C379;"> private</span><span style="color:#98C379;"> key</span><span style="color:#98C379;"> password</span><span style="color:#ABB2BF;"> (optional)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">ATTENTION:</span><span style="color:#98C379;"> If</span><span style="color:#98C379;"> you</span><span style="color:#98C379;"> lose</span><span style="color:#98C379;"> your</span><span style="color:#98C379;"> private</span><span style="color:#98C379;"> key</span><span style="color:#98C379;"> OR</span><span style="color:#98C379;"> password,</span><span style="color:#98C379;"> you&#39;ll not be able to sign your update package and updates will not works.</span></span>
<span class="line"><span style="color:#98C379;">---------------------------</span></span>
<span class="line"></span>
<span class="line"><span style="color:#98C379;">✨  Done in 39.09s.</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p><strong>⚠️ 注意：如果丢失了私钥或密码，将无法签署更新包并且更新将无法正常工作（请妥善保管）。</strong></p><h3 id="tauri-conf-json-配置-1" tabindex="-1">tauri.conf.json 配置 <a class="header-anchor" href="#tauri-conf-json-配置-1" aria-label="Permalink to &quot;tauri.conf.json 配置&quot;">​</a></h3><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">  &quot;updater&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">    &quot;active&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    &quot;dialog&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    &quot;endpoints&quot;</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;https://releases.myapp.com/{{target}}/{{current_version}}&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#E06C75;">    &quot;pubkey&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;YOUR_UPDATER_PUBKEY&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>`,160)),n("ul",null,[s[2]||(s[2]=n("li",null,[n("p",null,[n("strong",null,"active"),l(" - 布尔值，是否启用，默认值为 false")])],-1)),s[3]||(s[3]=n("li",null,[n("p",null,[n("strong",null,"dialog"),l(" - 布尔值，是否启用内置新版本提示框，如果不启用，则需要在 JS 中自行监听事件并进行提醒")])],-1)),n("li",null,[s[0]||(s[0]=n("p",null,"endpoints",-1)),n("p",null,"- 数组，通过地址列表来确定服务器端是否有可用更新，字符串 "+e(p.target)+" 和 "+e(p.current_version)+" 会在 URL 中自动替换。如果指定了多个地址，服务器在预期时间内未响应，更新程序将依次尝试。endpoints 支持两种格式：",1),s[1]||(s[1]=a('<ul><li><a href="https://tauri.app/v1/guides/distribution/updater#server-support" target="_blank" rel="noreferrer"><strong>动态接口</strong></a> - 服务器根据客户端的更新请求确定是否需要更新。 如果需要更新，服务器应以状态代码 <code>200 OK</code> 进行响应，并在正文中包含更新 JSON。 如果不需要更新，服务器必须响应状态代码 <code>204 No Content</code>。</li><li><a href="https://tauri.app/v1/guides/distribution/updater#update-file-json-format" target="_blank" rel="noreferrer"><strong>静态文件</strong></a> - 备用更新技术使用纯 JSON 文件，将更新元数据存储在 <a href="https://gist.github.com/" target="_blank" rel="noreferrer">gist</a>，<a href="https://pages.github.com/" target="_blank" rel="noreferrer">github-pages</a> 或其他静态文件存储中。</li></ul>',1))]),s[4]||(s[4]=n("li",null,[n("p",null,[n("strong",null,"pubkey"),l(" - 签名的公钥")])],-1))]),s[6]||(s[6]=a(`<h2 id="实现步骤" tabindex="-1">实现步骤 <a class="header-anchor" href="#实现步骤" aria-label="Permalink to &quot;实现步骤&quot;">​</a></h2><h3 id="拆解问题" tabindex="-1">拆解问题 <a class="header-anchor" href="#拆解问题" aria-label="Permalink to &quot;拆解问题&quot;">​</a></h3><p>要实现自动升级应用主要分为以下几个步骤：</p><ol><li>生成签名（公私钥）： <ul><li>私钥用于设置打包（<code>tauri build</code>）的环境变量</li><li>公钥用于配置 <code>tauri.conf.json -&gt; updater.pubkey</code></li></ul></li><li>向客户端推送包含签名及下载链接的更新请求，有两种形式： <ul><li>动态接口返回 json 数据</li><li>静态资源返回 json 文件</li></ul></li><li>将 2 中的更新请求地址配置在 <code>tauri.conf.json -&gt; updater.endpoints</code></li><li>通过将 <code>tauri.conf.json -&gt; updater.dialog</code> 配置为 <code>true</code>，启用内置通知更新应用的弹窗。设置为 false 则需要自行通过 js 事件来处理（暂不推荐，喜欢折腾的朋友可以自行尝试）</li></ol><p>因为应用的跨平台打包借助了 <code>github action</code> 的工作流来实现，具体可以参考<a href="https://github.com/lencx/OhMyBox/discussions/8" target="_blank" rel="noreferrer">【Tauri 入门篇 - 跨平台编译】</a>，所以更新也同样使用 <code>github action</code> 来实现，充分发挥 github 的能力（简单来说，就是不需要借助其他第三方平台或服务就可以实现整个应用的自动化发布更新）。</p><h3 id="梳理流程" tabindex="-1">梳理流程 <a class="header-anchor" href="#梳理流程" aria-label="Permalink to &quot;梳理流程&quot;">​</a></h3><ul><li>在本地生成公私钥</li><li>加签名构建跨平台应用（通过 github action 设置签名环境变量）</li><li>对构建出的安装包解析，生成静态资源文件（通过脚本实现安装包信息获取）</li><li>推送更新请求采用静态资源的方式（可以将 json 文件存储在 github pages）</li><li>将 github pages 的资源地址配置到 <code>tauri.conf.json -&gt; updater.endpoints</code></li></ul><h3 id="代码实现" tabindex="-1">代码实现 <a class="header-anchor" href="#代码实现" aria-label="Permalink to &quot;代码实现&quot;">​</a></h3><h4 id="step1" tabindex="-1">Step1 <a class="header-anchor" href="#step1" aria-label="Permalink to &quot;Step1&quot;">​</a></h4><p>生成公私钥</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">tauri</span><span style="color:#98C379;"> signer</span><span style="color:#98C379;"> generate</span><span style="color:#D19A66;"> -w</span><span style="color:#98C379;"> ~/.tauri/omb.key</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>配置公钥 <code>pubkey</code>（<code>~/.tauri/omb.key.pub</code>）及资源地址 <code>endpoints</code>（github pages 地址）：</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">  &quot;package&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">    &quot;productName&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;OhMyBox&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    &quot;version&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;../package.json&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span>
<span class="line"><span style="color:#E06C75;">  &quot;tauri&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">    &quot;updater&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">      &quot;active&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">      &quot;dialog&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">      &quot;endpoints&quot;</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;https://lencx.github.io/OhMyBox/install.json&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#E06C75;">      &quot;pubkey&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;dW50cnVzdGVkIGNvbW1lbnQ6IG1pbmlzaWduIHB1YmxpYyBrZXk6IEU5MEIwREEzNDlBNzdDN0MKUldSOGZLZEpvdzBMNmFOZ2cyY2NPeTdwK2hsV3gwcWxoZHdUWXRZWFBpQTh1dWhqWXhBdkl0cW8K&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h4 id="step2" tabindex="-1">Step2 <a class="header-anchor" href="#step2" aria-label="Permalink to &quot;Step2&quot;">​</a></h4><p>在项目根路径下创建 <code>scripts</code> 目录，然后在 <code>scripts</code> 下依次创建 <code>release.mjs</code>，<code>updatelog.mjs</code>，<code>updater.mjs</code> 三个 <a href="https://docs.fileformat.com/web/mjs/" target="_blank" rel="noreferrer">.mjs</a> 文件：</p><ul><li><code>scripts/release.mjs</code> - 版本发布，因发布需涉及多处改动（如版本，版本日志，打 tag 标签等等），故将其写成脚本，减少记忆成本</li><li><code>scripts/updatelog.mjs</code> - 版本更新日志处理，供 <code>scripts/updater.mjs</code> 脚本使用</li><li><code>scripts/updater.mjs</code> - 生成应用更新需要的静态文件</li></ul><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 安装开发依赖</span></span>
<span class="line"><span style="color:#61AFEF;">yarn</span><span style="color:#98C379;"> add</span><span style="color:#D19A66;"> -D</span><span style="color:#98C379;"> node-fetch</span><span style="color:#98C379;"> @actions/github</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>版本相关</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// scripts/release.mjs</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">createRequire</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;module&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">execSync</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;child_process&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> fs</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &#39;fs&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> updatelog</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &#39;./updatelog.mjs&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> require</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> createRequire</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">meta</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">url</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">async</span><span style="color:#C678DD;"> function</span><span style="color:#61AFEF;"> release</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">  const</span><span style="color:#E5C07B;"> flag</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> process</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">argv</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">??</span><span style="color:#98C379;"> &#39;patch&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">  const</span><span style="color:#E5C07B;"> packageJson</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;../package.json&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">  let</span><span style="color:#ABB2BF;"> [</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">c</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> packageJson</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">version</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">split</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;.&#39;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">map</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">Number</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">  if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">flag</span><span style="color:#56B6C2;"> ===</span><span style="color:#98C379;"> &#39;major&#39;</span><span style="color:#ABB2BF;">) {  </span><span style="color:#7F848E;font-style:italic;">// 主版本</span></span>
<span class="line"><span style="color:#E06C75;">    a</span><span style="color:#56B6C2;"> +=</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">    b</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">    c</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  } </span><span style="color:#C678DD;">else</span><span style="color:#C678DD;"> if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">flag</span><span style="color:#56B6C2;"> ===</span><span style="color:#98C379;"> &#39;minor&#39;</span><span style="color:#ABB2BF;">) {  </span><span style="color:#7F848E;font-style:italic;">// 次版本</span></span>
<span class="line"><span style="color:#E06C75;">    b</span><span style="color:#56B6C2;"> +=</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">    c</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  } </span><span style="color:#C678DD;">else</span><span style="color:#C678DD;"> if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">flag</span><span style="color:#56B6C2;"> ===</span><span style="color:#98C379;"> &#39;patch&#39;</span><span style="color:#ABB2BF;">) {  </span><span style="color:#7F848E;font-style:italic;">// 补丁版本</span></span>
<span class="line"><span style="color:#E06C75;">    c</span><span style="color:#56B6C2;"> +=</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  } </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">    console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">\`Invalid flag &quot;</span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">flag</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">&quot;\`</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">    process</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">exit</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">  const</span><span style="color:#E5C07B;"> nextVersion</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> \`</span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">a</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">.</span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">b</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">.</span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">c</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">\`</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">  packageJson</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">version</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> nextVersion</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">  const</span><span style="color:#E5C07B;"> nextTag</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> \`v</span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">nextVersion</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">\`</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">  await</span><span style="color:#61AFEF;"> updatelog</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">nextTag</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;release&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // 将新版本写入 package.json 文件</span></span>
<span class="line"><span style="color:#E5C07B;">  fs</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">writeFileSync</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;./package.json&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">JSON</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">stringify</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">packageJson</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">null</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // 提交修改的文件，打 tag 标签（tag 标签是为了触发 github action 工作流）并推送到远程</span></span>
<span class="line"><span style="color:#61AFEF;">  execSync</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;git add ./package.json ./UPDATE_LOG.md&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#61AFEF;">  execSync</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">\`git commit -m &quot;v</span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">nextVersion</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">&quot;\`</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#61AFEF;">  execSync</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">\`git tag -a v</span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">nextVersion</span><span style="color:#C678DD;">}</span><span style="color:#98C379;"> -m &quot;v</span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">nextVersion</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">&quot;\`</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#61AFEF;">  execSync</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">\`git push\`</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#61AFEF;">  execSync</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">\`git push origin v</span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">nextVersion</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">\`</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">  console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">\`Publish Successfully...\`</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">release</span><span style="color:#ABB2BF;">().</span><span style="color:#61AFEF;">catch</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">error</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br></div></div><p>更新日志</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// scripts/updatelog.mjs</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> fs</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &#39;fs&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> path</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &#39;path&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> UPDATE_LOG</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &#39;UPDATE_LOG.md&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> default</span><span style="color:#C678DD;"> function</span><span style="color:#61AFEF;"> updatelog</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">tag</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">type</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &#39;updater&#39;</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">  const</span><span style="color:#E5C07B;"> reTag</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /## v</span><span style="color:#D19A66;">[</span><span style="color:#E06C75;">\\d</span><span style="color:#56B6C2;">\\.</span><span style="color:#D19A66;">]+</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">  const</span><span style="color:#E5C07B;"> file</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">join</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">cwd</span><span style="color:#ABB2BF;">(), </span><span style="color:#E5C07B;">UPDATE_LOG</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">  if</span><span style="color:#ABB2BF;"> (</span><span style="color:#56B6C2;">!</span><span style="color:#E5C07B;">fs</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">existsSync</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">file</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#E5C07B;">    console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;Could not found UPDATE_LOG.md&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">    process</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">exit</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">  let</span><span style="color:#E06C75;"> _tag</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">  const</span><span style="color:#E5C07B;"> tagMap</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {};</span></span>
<span class="line"><span style="color:#C678DD;">  const</span><span style="color:#E5C07B;"> content</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> fs</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">readFileSync</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">file</span><span style="color:#ABB2BF;">, { </span><span style="color:#E06C75;">encoding</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;utf8&#39;</span><span style="color:#ABB2BF;"> }).</span><span style="color:#61AFEF;">split</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;</span><span style="color:#56B6C2;">\\n</span><span style="color:#98C379;">&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">  content</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">forEach</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">line</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">index</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">    if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">reTag</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">test</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">line</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#E06C75;">      _tag</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> line</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">slice</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">trim</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#C678DD;">      if</span><span style="color:#ABB2BF;"> (</span><span style="color:#56B6C2;">!</span><span style="color:#E06C75;">tagMap</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">_tag</span><span style="color:#ABB2BF;">]) {</span></span>
<span class="line"><span style="color:#E06C75;">        tagMap</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">_tag</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> [];</span></span>
<span class="line"><span style="color:#C678DD;">        return</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#C678DD;">    if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">_tag</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E06C75;">      tagMap</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">_tag</span><span style="color:#ABB2BF;">].</span><span style="color:#61AFEF;">push</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">line</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#C678DD;">    if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">reTag</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">test</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">content</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">index</span><span style="color:#56B6C2;"> +</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">])) {</span></span>
<span class="line"><span style="color:#E06C75;">      _tag</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> null</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">  });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">  if</span><span style="color:#ABB2BF;"> (</span><span style="color:#56B6C2;">!</span><span style="color:#E06C75;">tagMap</span><span style="color:#ABB2BF;">?.[</span><span style="color:#E06C75;">tag</span><span style="color:#ABB2BF;">]) {</span></span>
<span class="line"><span style="color:#E5C07B;">    console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#98C379;">      \`</span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">type</span><span style="color:#56B6C2;"> ===</span><span style="color:#98C379;"> &#39;release&#39;</span><span style="color:#C678DD;"> ?</span><span style="color:#98C379;"> &#39;[UPDATE_LOG.md] &#39;</span><span style="color:#C678DD;"> :</span><span style="color:#98C379;"> &#39;&#39;</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">Tag </span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">tag</span><span style="color:#C678DD;">}</span><span style="color:#98C379;"> does not exist\`</span></span>
<span class="line"><span style="color:#ABB2BF;">    );</span></span>
<span class="line"><span style="color:#E5C07B;">    process</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">exit</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">  return</span><span style="color:#E06C75;"> tagMap</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">tag</span><span style="color:#ABB2BF;">].</span><span style="color:#61AFEF;">join</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;</span><span style="color:#56B6C2;">\\n</span><span style="color:#98C379;">&#39;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">trim</span><span style="color:#ABB2BF;">() </span><span style="color:#56B6C2;">||</span><span style="color:#98C379;"> &#39;&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br></div></div><p>更新操作</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// scripts/updater.mjs</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> fetch</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &#39;node-fetch&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">getOctokit</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">context</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;@actions/github&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> fs</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &#39;fs&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> updatelog</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &#39;./updatelog.mjs&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> token</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> process</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">env</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">GITHUB_TOKEN</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">async</span><span style="color:#C678DD;"> function</span><span style="color:#61AFEF;"> updater</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">  if</span><span style="color:#ABB2BF;"> (</span><span style="color:#56B6C2;">!</span><span style="color:#E06C75;">token</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">    console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;GITHUB_TOKEN is required&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">    process</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">exit</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // 用户名，仓库名</span></span>
<span class="line"><span style="color:#C678DD;">  const</span><span style="color:#E5C07B;"> options</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">owner</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">context</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">repo</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">owner</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">repo</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">context</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">repo</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">repo</span><span style="color:#ABB2BF;"> };</span></span>
<span class="line"><span style="color:#C678DD;">  const</span><span style="color:#E5C07B;"> github</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> getOctokit</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">token</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // 获取 tag</span></span>
<span class="line"><span style="color:#C678DD;">  const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">data</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">tags</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> await</span><span style="color:#E5C07B;"> github</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">rest</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">repos</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">listTags</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#ABB2BF;">    ...</span><span style="color:#E06C75;">options</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    per_page</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    page</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // 过滤包含 \`v\` 版本信息的 tag</span></span>
<span class="line"><span style="color:#C678DD;">  const</span><span style="color:#E5C07B;"> tag</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> tags</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">find</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">t</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#E5C07B;"> t</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">name</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">startsWith</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;v&#39;</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // console.log(\`\${JSON.stringify(tag, null, 2)}\`);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">  if</span><span style="color:#ABB2BF;"> (</span><span style="color:#56B6C2;">!</span><span style="color:#E06C75;">tag</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // 获取此 tag 的详细信息</span></span>
<span class="line"><span style="color:#C678DD;">  const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">data</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">latestRelease</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> await</span><span style="color:#E5C07B;"> github</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">rest</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">repos</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getReleaseByTag</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#ABB2BF;">    ...</span><span style="color:#E06C75;">options</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    tag</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">tag</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // 需要生成的静态 json 文件数据，根据自己的需要进行调整</span></span>
<span class="line"><span style="color:#C678DD;">  const</span><span style="color:#E5C07B;"> updateData</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">    version</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">tag</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 使用 UPDATE_LOG.md，如果不需要版本更新日志，则将此字段置空</span></span>
<span class="line"><span style="color:#E06C75;">    notes</span><span style="color:#ABB2BF;">: </span><span style="color:#61AFEF;">updatelog</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">tag</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#E06C75;">    pub_date</span><span style="color:#ABB2BF;">: </span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> Date</span><span style="color:#ABB2BF;">().</span><span style="color:#61AFEF;">toISOString</span><span style="color:#ABB2BF;">(),</span></span>
<span class="line"><span style="color:#E06C75;">    platforms</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">      win64</span><span style="color:#ABB2BF;">: { </span><span style="color:#E06C75;">signature</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">url</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;&#39;</span><span style="color:#ABB2BF;"> }, </span><span style="color:#7F848E;font-style:italic;">// compatible with older formats</span></span>
<span class="line"><span style="color:#E06C75;">      linux</span><span style="color:#ABB2BF;">: { </span><span style="color:#E06C75;">signature</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">url</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;&#39;</span><span style="color:#ABB2BF;"> }, </span><span style="color:#7F848E;font-style:italic;">// compatible with older formats</span></span>
<span class="line"><span style="color:#E06C75;">      darwin</span><span style="color:#ABB2BF;">: { </span><span style="color:#E06C75;">signature</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">url</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;&#39;</span><span style="color:#ABB2BF;"> }, </span><span style="color:#7F848E;font-style:italic;">// compatible with older formats</span></span>
<span class="line"><span style="color:#98C379;">      &#39;darwin-aarch64&#39;</span><span style="color:#ABB2BF;">: { </span><span style="color:#E06C75;">signature</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">url</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;&#39;</span><span style="color:#ABB2BF;"> },</span></span>
<span class="line"><span style="color:#98C379;">      &#39;darwin-x86_64&#39;</span><span style="color:#ABB2BF;">: { </span><span style="color:#E06C75;">signature</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">url</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;&#39;</span><span style="color:#ABB2BF;"> },</span></span>
<span class="line"><span style="color:#98C379;">      &#39;linux-x86_64&#39;</span><span style="color:#ABB2BF;">: { </span><span style="color:#E06C75;">signature</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">url</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;&#39;</span><span style="color:#ABB2BF;"> },</span></span>
<span class="line"><span style="color:#98C379;">      &#39;windows-x86_64&#39;</span><span style="color:#ABB2BF;">: { </span><span style="color:#E06C75;">signature</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">url</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;&#39;</span><span style="color:#ABB2BF;"> },</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      // &#39;windows-i686&#39;: { signature: &#39;&#39;, url: &#39;&#39; },</span><span style="color:#7F848E;font-style:italic;"> // no supported</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#ABB2BF;">  };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">  const</span><span style="color:#61AFEF;"> setAsset</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> async</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">asset</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">reg</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">platforms</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">    let</span><span style="color:#E06C75;"> sig</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &#39;&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">    if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">/.sig</span><span style="color:#C678DD;">$</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">test</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">asset</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#E06C75;">      sig</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> await</span><span style="color:#61AFEF;"> getSignature</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">asset</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">browser_download_url</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#E5C07B;">    platforms</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">forEach</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">platform</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">      if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">reg</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">test</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">asset</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 设置平台签名，检测应用更新需要验证签名</span></span>
<span class="line"><span style="color:#C678DD;">        if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">sig</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">          updateData</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">platforms</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">platform</span><span style="color:#ABB2BF;">].</span><span style="color:#E06C75;">signature</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> sig</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">          return</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 设置下载链接</span></span>
<span class="line"><span style="color:#E5C07B;">        updateData</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">platforms</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">platform</span><span style="color:#ABB2BF;">].</span><span style="color:#E06C75;">url</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> asset</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">browser_download_url</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#ABB2BF;">    });</span></span>
<span class="line"><span style="color:#ABB2BF;">  };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">  const</span><span style="color:#E5C07B;"> promises</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> latestRelease</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">assets</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">map</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">async</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">asset</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // windows</span></span>
<span class="line"><span style="color:#C678DD;">    await</span><span style="color:#61AFEF;"> setAsset</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">asset</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> /.msi.zip/</span><span style="color:#ABB2BF;">, [</span><span style="color:#98C379;">&#39;win64&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;windows-x86_64&#39;</span><span style="color:#ABB2BF;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // darwin</span></span>
<span class="line"><span style="color:#C678DD;">    await</span><span style="color:#61AFEF;"> setAsset</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">asset</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> /.app.tar.gz/</span><span style="color:#ABB2BF;">, [</span></span>
<span class="line"><span style="color:#98C379;">      &#39;darwin&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">      &#39;darwin-x86_64&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">      &#39;darwin-aarch64&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    ]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // linux</span></span>
<span class="line"><span style="color:#C678DD;">    await</span><span style="color:#61AFEF;"> setAsset</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">asset</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> /.AppImage.tar.gz/</span><span style="color:#ABB2BF;">, [</span><span style="color:#98C379;">&#39;linux&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;linux-x86_64&#39;</span><span style="color:#ABB2BF;">]);</span></span>
<span class="line"><span style="color:#ABB2BF;">  });</span></span>
<span class="line"><span style="color:#C678DD;">  await</span><span style="color:#E5C07B;"> Promise</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">allSettled</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">promises</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">  if</span><span style="color:#ABB2BF;"> (</span><span style="color:#56B6C2;">!</span><span style="color:#E5C07B;">fs</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">existsSync</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;updater&#39;</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#E5C07B;">    fs</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">mkdirSync</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;updater&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // 将数据写入文件</span></span>
<span class="line"><span style="color:#E5C07B;">  fs</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">writeFileSync</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#98C379;">    &#39;./updater/install.json&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E5C07B;">    JSON</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">stringify</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">updateData</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">null</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">  );</span></span>
<span class="line"><span style="color:#E5C07B;">  console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;Generate updater/install.json&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">updater</span><span style="color:#ABB2BF;">().</span><span style="color:#61AFEF;">catch</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">error</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 获取签名内容</span></span>
<span class="line"><span style="color:#C678DD;">async</span><span style="color:#C678DD;"> function</span><span style="color:#61AFEF;"> getSignature</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">url</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">  try</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">    const</span><span style="color:#E5C07B;"> response</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> await</span><span style="color:#61AFEF;"> fetch</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">url</span><span style="color:#ABB2BF;">, {</span></span>
<span class="line"><span style="color:#E06C75;">      method</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;GET&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">      headers</span><span style="color:#ABB2BF;">: { </span><span style="color:#98C379;">&#39;Content-Type&#39;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;application/octet-stream&#39;</span><span style="color:#ABB2BF;"> },</span></span>
<span class="line"><span style="color:#ABB2BF;">    });</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E5C07B;"> response</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">text</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">  } </span><span style="color:#C678DD;">catch</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">_</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#98C379;"> &#39;&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br></div></div><p>在根路径下创建 <code>UPDATE_LOG.md</code> 文件，通知用户更新注意事项，格式如下（使用版本号作为标题，具体请查看 <code>scripts/updatelog.mjs</code>）：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># Updater Log</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">## v0.1.7</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">-</span><span style="color:#98C379;"> feat:</span><span style="color:#98C379;"> xxx</span></span>
<span class="line"><span style="color:#61AFEF;">-</span><span style="color:#98C379;"> fix:</span><span style="color:#98C379;"> xxx</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">## v0.1.6</span></span>
<span class="line"></span>
<span class="line"><span style="color:#56B6C2;">test</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>修改 <code>package.json</code>，在 &quot;scripts&quot; 中加入 <code>updater</code> 和 <code>release</code> 命令：</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#98C379;">  &quot;scripts&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">    &quot;dev&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;vite --port=4096&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    &quot;build&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;rsw build &amp;&amp; tsc &amp;&amp; vite build&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    &quot;preview&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;vite preview&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    &quot;tauri&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;tauri&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    &quot;rsw&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;rsw&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    &quot;updater&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;node scripts/updater.mjs&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// ✅ 新增</span></span>
<span class="line"><span style="color:#E06C75;">    &quot;release&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;node scripts/release.mjs&quot;</span><span style="color:#7F848E;font-style:italic;"> // ✅ 新增</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h4 id="step3" tabindex="-1">Step3 <a class="header-anchor" href="#step3" aria-label="Permalink to &quot;Step3&quot;">​</a></h4><p>Action 配置请参考之前的文章【Tauri 入门篇 - 跨平台编译】，此处新增环境设置签名和静态资源推送。</p><h5 id="设置-secret" tabindex="-1">设置 Secret <a class="header-anchor" href="#设置-secret" aria-label="Permalink to &quot;设置 Secret&quot;">​</a></h5><p>配置变量 <code>Repo -&gt; Settings -&gt; Secrets -&gt; Actions -&gt; New repository secret</code>：</p><ul><li><p>TAURI_PRIVATE_KEY - 私钥，value 为</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">~/.tauri/omb.key.pub</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>内容</p><ul><li>Name: <code>TAURI_PRIVATE_KEY</code></li><li>Value: <code>******</code></li></ul></li><li><p>TAURI_KEY_PASSWORD - 密码，value 为生成签名时的密码</p><ul><li>Name: <code>TAURI_KEY_PASSWORD</code></li><li>Value: <code>******</code></li></ul></li></ul><h5 id="设置-github-workflows-release-yml" tabindex="-1">设置 <code>.github/workflows/release.yml</code> <a class="header-anchor" href="#设置-github-workflows-release-yml" aria-label="Permalink to &quot;设置 \`.github/workflows/release.yml\`&quot;">​</a></h5><div class="language-yaml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">Release CI</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D19A66;">on</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;">  push</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    # Sequence of patterns matched against refs/tags</span></span>
<span class="line"><span style="color:#E06C75;">    tags</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">&#39;v*&#39;</span><span style="color:#7F848E;font-style:italic;"> # Push events to matching v*, i.e. v1.0, v20.15.10</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">jobs</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;">  create-release</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;">    runs-on</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">ubuntu-latest</span></span>
<span class="line"><span style="color:#E06C75;">    outputs</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;">      RELEASE_UPLOAD_ID</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">\${{ steps.create_release.outputs.id }}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">    steps</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#E06C75;">uses</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">actions/checkout@v2</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">Query version number</span></span>
<span class="line"><span style="color:#E06C75;">        id</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">get_version</span></span>
<span class="line"><span style="color:#E06C75;">        shell</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">bash</span></span>
<span class="line"><span style="color:#E06C75;">        run</span><span style="color:#ABB2BF;">: </span><span style="color:#C678DD;">|</span></span>
<span class="line"><span style="color:#98C379;">          echo &quot;using version tag \${GITHUB_REF:10}&quot;</span></span>
<span class="line"><span style="color:#98C379;">          echo ::set-output name=version::&quot;\${GITHUB_REF:10}&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">Create Release</span></span>
<span class="line"><span style="color:#E06C75;">        id</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">create_release</span></span>
<span class="line"><span style="color:#E06C75;">        uses</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">actions/create-release@v1</span></span>
<span class="line"><span style="color:#E06C75;">        env</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;">          GITHUB_TOKEN</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">\${{ secrets.GITHUB_TOKEN }}</span></span>
<span class="line"><span style="color:#E06C75;">        with</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;">          tag_name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;\${{ steps.get_version.outputs.VERSION }}&#39;</span></span>
<span class="line"><span style="color:#E06C75;">          release_name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;OhMyBox \${{ steps.get_version.outputs.VERSION }}&#39;</span></span>
<span class="line"><span style="color:#E06C75;">          body</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;See the assets to download this version and install.&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">  build-tauri</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;">    needs</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">create-release</span></span>
<span class="line"><span style="color:#E06C75;">    strategy</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;">      fail-fast</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span></span>
<span class="line"><span style="color:#E06C75;">      matrix</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;">        platform</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">macos-latest</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">ubuntu-latest</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">windows-latest</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">    runs-on</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">\${{ matrix.platform }}</span></span>
<span class="line"><span style="color:#E06C75;">    steps</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#E06C75;">uses</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">actions/checkout@v2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">Setup node</span></span>
<span class="line"><span style="color:#E06C75;">        uses</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">actions/setup-node@v1</span></span>
<span class="line"><span style="color:#E06C75;">        with</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;">          node-version</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">16</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">Install Rust stable</span></span>
<span class="line"><span style="color:#E06C75;">        uses</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">actions-rs/toolchain@v1</span></span>
<span class="line"><span style="color:#E06C75;">        with</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;">          toolchain</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">stable</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      # Rust cache</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#E06C75;">uses</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">Swatinem/rust-cache@v1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">install dependencies (ubuntu only)</span></span>
<span class="line"><span style="color:#E06C75;">        if</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">matrix.platform == &#39;ubuntu-latest&#39;</span></span>
<span class="line"><span style="color:#E06C75;">        run</span><span style="color:#ABB2BF;">: </span><span style="color:#C678DD;">|</span></span>
<span class="line"><span style="color:#98C379;">          sudo apt-get update</span></span>
<span class="line"><span style="color:#98C379;">          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      # Install wasm-pack</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#E06C75;">uses</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">jetli/wasm-pack-action@v0.3.0</span></span>
<span class="line"><span style="color:#E06C75;">        with</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">          # Optional version of wasm-pack to install(eg. &#39;v0.9.1&#39;, &#39;latest&#39;)</span></span>
<span class="line"><span style="color:#E06C75;">          version</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">v0.9.1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">Install rsw</span></span>
<span class="line"><span style="color:#E06C75;">        run</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">cargo install rsw</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">Get yarn cache directory path</span></span>
<span class="line"><span style="color:#E06C75;">        id</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">yarn-cache-dir-path</span></span>
<span class="line"><span style="color:#E06C75;">        run</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">echo &quot;::set-output name=dir::$(yarn config get cacheFolder)&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">Yarn cache</span></span>
<span class="line"><span style="color:#E06C75;">        uses</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">actions/cache@v2</span></span>
<span class="line"><span style="color:#E06C75;">        id</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">yarn-cache</span><span style="color:#7F848E;font-style:italic;"> # use this to check for \`cache-hit\` (\`steps.yarn-cache.outputs.cache-hit != &#39;true&#39;\`)</span></span>
<span class="line"><span style="color:#E06C75;">        with</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;">          path</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">\${{ steps.yarn-cache-dir-path.outputs.dir }}</span></span>
<span class="line"><span style="color:#E06C75;">          key</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">\${{ runner.os }}-yarn-\${{ hashFiles(&#39;**/yarn.lock&#39;) }}</span></span>
<span class="line"><span style="color:#E06C75;">          restore-keys</span><span style="color:#ABB2BF;">: </span><span style="color:#C678DD;">|</span></span>
<span class="line"><span style="color:#98C379;">            \${{ runner.os }}-yarn-</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">Install app dependencies and build it</span></span>
<span class="line"><span style="color:#E06C75;">        run</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">yarn &amp;&amp; yarn build</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#E06C75;">uses</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">tauri-apps/tauri-action@v0</span></span>
<span class="line"><span style="color:#E06C75;">        env</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;">          GITHUB_TOKEN</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">\${{ secrets.GITHUB_TOKEN }}</span></span>
<span class="line"><span style="color:#E06C75;">          TAURI_PRIVATE_KEY</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">\${{ secrets.TAURI_PRIVATE_KEY }}</span></span>
<span class="line"><span style="color:#E06C75;">          TAURI_KEY_PASSWORD</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">\${{ secrets.TAURI_KEY_PASSWORD }}</span></span>
<span class="line"><span style="color:#E06C75;">        with</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;">          releaseId</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">\${{ needs.create-release.outputs.RELEASE_UPLOAD_ID }}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  # 生成静态资源并将其推送到 github pages</span></span>
<span class="line"><span style="color:#E06C75;">  updater</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;">    runs-on</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">ubuntu-latest</span></span>
<span class="line"><span style="color:#E06C75;">    needs</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">create-release</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">build-tauri</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">    steps</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#E06C75;">uses</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">actions/checkout@v2</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#E06C75;">run</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">yarn</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#E06C75;">run</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">yarn updater</span></span>
<span class="line"><span style="color:#E06C75;">        env</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;">          GITHUB_TOKEN</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">\${{ secrets.GITHUB_TOKEN }}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">Deploy install.json</span></span>
<span class="line"><span style="color:#E06C75;">        uses</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">peaceiris/actions-gh-pages@v3</span></span>
<span class="line"><span style="color:#E06C75;">        with</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;">          github_token</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">\${{ secrets.GITHUB_TOKEN }}</span></span>
<span class="line"><span style="color:#E06C75;">          publish_dir</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">./updater</span></span>
<span class="line"><span style="color:#E06C75;">          force_orphan</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br></div></div><h2 id="发布应用" tabindex="-1">发布应用 <a class="header-anchor" href="#发布应用" aria-label="Permalink to &quot;发布应用&quot;">​</a></h2><p>功能开发完成，提交代码后，只需执行 <code>yarn release</code> 命令就可以自动进行应用发布了。如果不想借助 github 打包和静态资源存放，也可以参考上面的步骤，自行部署。</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 发布主版本，v1.x.x -&gt; v2.x.x</span></span>
<span class="line"><span style="color:#61AFEF;">yarn</span><span style="color:#98C379;"> release</span><span style="color:#98C379;"> major</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 发布次版本，v1.0.x -&gt; v1.1.x</span></span>
<span class="line"><span style="color:#61AFEF;">yarn</span><span style="color:#98C379;"> release</span><span style="color:#98C379;"> minor</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 发布补丁版本，patch 参数可省略，v1.0.0 -&gt; v1.0.1</span></span>
<span class="line"><span style="color:#61AFEF;">yarn</span><span style="color:#98C379;"> release</span><span style="color:#ABB2BF;"> [patch]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><strong>注意：每次执行 <code>yarn release</code> 发布版本，<code>主版本</code>，<code>次版本</code>，<code>补丁版本</code> 都是自增 1。</strong></p><p><a href="https://user-images.githubusercontent.com/16164244/195824508-e4807ba5-2084-475a-aa11-9376af66a19a.png" target="_blank" rel="noreferrer"><img src="`+C+'" alt="013-tauri-updater-1"></a></p><p><a href="https://user-images.githubusercontent.com/16164244/195824577-6ff7bb0e-8b60-4b36-881b-1e96296a075c.png" target="_blank" rel="noreferrer"><img src="'+A+`" alt="013-tauri-updater-2"></a></p><h2 id="常见问题-1" tabindex="-1">常见问题 <a class="header-anchor" href="#常见问题-1" aria-label="Permalink to &quot;常见问题&quot;">​</a></h2><h3 id="error-a-public-key-has-been-found-but-no-private-key" tabindex="-1">Error A public key has been found, but no private key <a class="header-anchor" href="#error-a-public-key-has-been-found-but-no-private-key" aria-label="Permalink to &quot;Error A public key has been found, but no private key&quot;">​</a></h3><p>如果在 <code>tauri.conf.json</code> 中配置了 <code>pubkey</code>，但未设置环境变量会出现以下错误：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">tauri</span><span style="color:#98C379;"> build</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># ...</span></span>
<span class="line"><span style="color:#61AFEF;">   Compiling</span><span style="color:#98C379;"> omb</span><span style="color:#98C379;"> v0.1.0</span><span style="color:#ABB2BF;"> (/Users/lencx/github/lencx/OhMyBox/src-tauri)</span></span>
<span class="line"><span style="color:#61AFEF;">    Finished</span><span style="color:#98C379;"> release</span><span style="color:#ABB2BF;"> [optimized] target(</span><span style="color:#61AFEF;">s</span><span style="color:#ABB2BF;">) in 21.27s</span></span>
<span class="line"><span style="color:#61AFEF;">    Bundling</span><span style="color:#98C379;"> OhMyBox.app</span><span style="color:#ABB2BF;"> (/Users/lencx/github/lencx/OhMyBox/src-tauri/target/release/bundle/macos/OhMyBox.app)</span></span>
<span class="line"><span style="color:#61AFEF;">    Bundling</span><span style="color:#98C379;"> OhMyBox_0.1.1_x64.dmg</span><span style="color:#ABB2BF;"> (/Users/lencx/github/lencx/OhMyBox/src-tauri/target/release/bundle/dmg/OhMyBox_0.1.1_x64.dmg)</span></span>
<span class="line"><span style="color:#61AFEF;">     Running</span><span style="color:#98C379;"> bundle_dmg.sh</span></span>
<span class="line"><span style="color:#61AFEF;">    Bundling</span><span style="color:#98C379;"> /Users/lencx/github/lencx/OhMyBox/src-tauri/target/release/bundle/macos/OhMyBox.app.tar.gz</span><span style="color:#ABB2BF;"> (/Users/lencx/github/lencx/OhMyBox/src-tauri/target/release/bundle/macos/OhMyBox.app.tar.gz)</span></span>
<span class="line"><span style="color:#61AFEF;">    Finished</span><span style="color:#D19A66;"> 3</span><span style="color:#98C379;"> bundles</span><span style="color:#98C379;"> at:</span></span>
<span class="line"><span style="color:#61AFEF;">        /Users/lencx/github/lencx/OhMyBox/src-tauri/target/release/bundle/macos/OhMyBox.app</span></span>
<span class="line"><span style="color:#61AFEF;">        /Users/lencx/github/lencx/OhMyBox/src-tauri/target/release/bundle/dmg/OhMyBox_0.1.1_x64.dmg</span></span>
<span class="line"><span style="color:#61AFEF;">        /Users/lencx/github/lencx/OhMyBox/src-tauri/target/release/bundle/macos/OhMyBox.app.tar.gz</span><span style="color:#ABB2BF;"> (updater)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">       Error</span><span style="color:#98C379;"> A</span><span style="color:#98C379;"> public</span><span style="color:#98C379;"> key</span><span style="color:#98C379;"> has</span><span style="color:#98C379;"> been</span><span style="color:#98C379;"> found,</span><span style="color:#98C379;"> but</span><span style="color:#98C379;"> no</span><span style="color:#98C379;"> private</span><span style="color:#98C379;"> key.</span><span style="color:#98C379;"> Make</span><span style="color:#98C379;"> sure</span><span style="color:#98C379;"> to</span><span style="color:#98C379;"> set</span><span style="color:#98C379;"> \`</span><span style="color:#61AFEF;">TAURI_PRIVATE_KEY</span><span style="color:#98C379;">\`</span><span style="color:#61AFEF;"> environment</span><span style="color:#98C379;"> variable.</span></span>
<span class="line"><span style="color:#61AFEF;">error</span><span style="color:#98C379;"> Command</span><span style="color:#98C379;"> failed</span><span style="color:#98C379;"> with</span><span style="color:#98C379;"> exit</span><span style="color:#98C379;"> code</span><span style="color:#98C379;"> 1.</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p><strong>解决方案：</strong></p><ul><li><a href="https://support.apple.com/guide/terminal/use-environment-variables-apd382cc5fa-4f58-4449-b20a-41c53c006f8f/2.12/mac/11.0" target="_blank" rel="noreferrer">Use environment variables in Terminal on Mac</a></li><li><a href="https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/set_1" target="_blank" rel="noreferrer">Set Environment Variable in Windows</a></li></ul><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># macOS 设置环境变量：</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#E06C75;"> TAURI_PRIVATE_KEY</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;********&quot;</span><span style="color:#7F848E;font-style:italic;"> # omb.key</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#E06C75;"> TAURI_KEY_PASSWORD</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;********&quot;</span><span style="color:#7F848E;font-style:italic;"> # 生成公私钥时在终端输入的密码，如果未设置密码则无需设置此变量</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># Windows 设置环境变量：</span></span>
<span class="line"><span style="color:#56B6C2;">set</span><span style="color:#98C379;"> TAURI_PRIVATE_KEY=&quot;********&quot;</span></span>
<span class="line"><span style="color:#56B6C2;">set</span><span style="color:#98C379;"> TAURI_KEY_PASSWORD=&quot;********&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 如果签名打包成功会看到以下信息（以 macOS 为例）</span></span>
<span class="line"><span style="color:#61AFEF;">        Info</span><span style="color:#D19A66;"> 1</span><span style="color:#98C379;"> updater</span><span style="color:#98C379;"> archive</span><span style="color:#98C379;"> at:</span></span>
<span class="line"><span style="color:#61AFEF;">        Info</span><span style="color:#98C379;">         /Users/lencx/github/lencx/OhMyBox/src-tauri/target/release/bundle/macos/OhMyBox.app.tar.gz.sig</span></span>
<span class="line"><span style="color:#61AFEF;">✨</span><span style="color:#98C379;">  Done</span><span style="color:#98C379;"> in</span><span style="color:#98C379;"> 58.55s.</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="版本信息错误" tabindex="-1">版本信息错误 <a class="header-anchor" href="#版本信息错误" aria-label="Permalink to &quot;版本信息错误&quot;">​</a></h3><p>发布的应用版本以 <code>tauri.conf.json</code> 中的 <code>package.version</code> 为准，在发布新版本时注意更新 <code>version</code>。</p><h3 id="可能造成更新失败的原因" tabindex="-1">可能造成更新失败的原因 <a class="header-anchor" href="#可能造成更新失败的原因" aria-label="Permalink to &quot;可能造成更新失败的原因&quot;">​</a></h3><ul><li>使用 github pages 作为更新文件静态资源存储在国内会因网络限制导致更新失败，无法看到更新弹窗提示，或者下载不响应等问题，可以通过配置多个 <code>endpoints</code> 地址来解决，安装包也可以放在自建服务器来提高下载的稳定性</li><li>静态 json 文件中的平台签名（<code>platforms[platform].signature</code>）是否完整，签名内容可以在<code>tauri build</code> 产生的 <code>target/release/bundle/&lt;platform&gt;/*.sig</code> 文件中查看</li></ul><p>参考文章：</p><p>主要参考这个：<a href="https://github.com/lencx/tauri-tutorial/discussions/21" target="_blank" rel="noreferrer">【13】Tauri 应用篇 - 自动通知应用升级 · lencx/tauri-tutorial · Discussion #21 (github.com)</a></p><p>下面的文章还未参考</p><p><a href="https://blog.csdn.net/weixin_44786530/article/details/131963524" target="_blank" rel="noreferrer">tauri在github上进行自动更新打包并发版过程，实战操作避坑_tauri自动更新-CSDN博客</a></p><p><a href="https://www.pipipi.net/36452.html" target="_blank" rel="noreferrer">Tauri 应用自动更新 | Updater - 码农之家 (pipipi.net)</a></p><p><a href="https://blog.csdn.net/YWwXxx/article/details/134424518" target="_blank" rel="noreferrer">一个关于 Tauri 自动更新的 demo-CSDN博客</a></p><pre><code>https://www.modb.pro/db/572260
https://blog.csdn.net/weixin_44786530/article/details/129617866
https://juejin.cn/post/7128568878732410887
https://github.com/lencx/tauri-tutorial/discussions/21
https://zhuanlan.zhihu.com/p/573735645
https://zhuanlan.zhihu.com/p/573735645
</code></pre>`,59))])}const q=o(h,[["render",E]]);export{k as __pageData,q as default};
